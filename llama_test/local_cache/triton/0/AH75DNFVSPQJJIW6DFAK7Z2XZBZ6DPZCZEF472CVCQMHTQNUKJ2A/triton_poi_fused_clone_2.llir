; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_clone_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 7, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = shl i32 %10, 1, !dbg !11
  %12 = and i32 %11, 126, !dbg !11
  %13 = or disjoint i32 %12, %9, !dbg !12
  %14 = or disjoint i32 %13, 1, !dbg !12
  %15 = sdiv i32 %13, 128, !dbg !13
  %16 = mul i32 %15, 128, !dbg !14
  %.decomposed = sub i32 %13, %16, !dbg !14
  %17 = srem i32 %14, 128, !dbg !14
  %18 = srem i32 %15, %3, !dbg !15
  %19 = sdiv i32 %13, %4, !dbg !16
  %20 = shl i32 %19, 7, !dbg !17
  %21 = shl i32 %18, 10, !dbg !18
  %22 = add i32 %21, %.decomposed, !dbg !19
  %23 = add i32 %22, %20, !dbg !20
  %24 = sext i32 %23 to i64, !dbg !21
  %25 = getelementptr half, ptr addrspace(1) %0, i64 %24, !dbg !21
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %25) #4, !dbg !22
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !23
  %27 = srem i8 %.lhs.trunc, 64, !dbg !23
  %.sext = sext i8 %27 to i32, !dbg !23
  %.lhs.trunc164 = trunc nsw i32 %17 to i8, !dbg !23
  %28 = srem i8 %.lhs.trunc164, 64, !dbg !23
  %.sext165 = sext i8 %28 to i32, !dbg !23
  %29 = mul i32 %3, %.sext, !dbg !24
  %30 = mul i32 %3, %.sext165, !dbg !24
  %31 = add i32 %18, %29, !dbg !25
  %32 = add i32 %18, %30, !dbg !25
  %33 = sext i32 %31 to i64, !dbg !26
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !26
  %35 = sext i32 %32 to i64, !dbg !26
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !26
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %34) #4, !dbg !27
  %38 = bitcast i32 %37 to float, !dbg !27
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %36) #4, !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !28
  %41 = fmul float %38, 0x3FE45F3060000000, !dbg !28
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i57 = icmp eq i32 %42, 0, !dbg !28
  %43 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %41) #4, !dbg !28
  %44 = tail call i32 @llvm.nvvm.f2i.rn(float %41) #4, !dbg !28
  %.01.i58 = select i1 %.not.i57, i32 %44, i32 %43, !dbg !28
  %45 = sitofp i32 %.01.i58 to float, !dbg !28
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i59 = icmp eq i32 %46, 0, !dbg !28
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0xBFF921FB40000000, float %38) #4, !dbg !28
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0xBFF921FB40000000, float %38) #4, !dbg !28
  %.02.i60 = select i1 %.not15.i59, float %48, float %47, !dbg !28
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i61 = icmp eq i32 %49, 0, !dbg !28
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !28
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !28
  %.03.i62 = select i1 %.not16.i61, float %51, float %50, !dbg !28
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i63 = icmp eq i32 %52, 0, !dbg !28
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !28
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !28
  %.04.i64 = select i1 %.not17.i63, float %54, float %53, !dbg !28
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i65 = icmp eq i32 %55, 0, !dbg !28
  %56 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #4, !dbg !28
  %57 = tail call float @llvm.nvvm.fabs.f(float %38) #4, !dbg !28
  %.06.i66 = select i1 %.not18.i65, float %57, float %56, !dbg !28
  %58 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !28
  br i1 %58, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !28

__nv_isinff.exit.i.i.i67:                         ; preds = %7
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i68 = icmp eq i32 %59, 0, !dbg !28
  %.07.i69 = select i1 %.not19.i68, float %57, float %56, !dbg !28
  %60 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !28
  br i1 %60, label %__nv_fmul_rn.exit.i.i.i106, label %64, !dbg !28

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i107 = icmp eq i32 %61, 0, !dbg !28
  %62 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %38, float 0.000000e+00) #4, !dbg !28
  %63 = tail call float @llvm.nvvm.mul.rn.f(float %38, float 0.000000e+00) #4, !dbg !28
  %.08.i108 = select i1 %.not27.i107, float %63, float %62, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !28

64:                                               ; preds = %__nv_isinff.exit.i.i.i67
  %65 = lshr i32 %37, 23, !dbg !28
  %66 = and i32 %65, 224, !dbg !28
  %67 = add nsw i32 %66, -128, !dbg !28
  %68 = shl i32 %37, 8, !dbg !28
  %69 = or i32 %68, -2147483648, !dbg !28
  %70 = lshr exact i32 %67, 5, !dbg !28
  br label %71, !dbg !28

71:                                               ; preds = %64, %71
  %indvars.iv = phi i64 [ 0, %64 ], [ %indvars.iv.next, %71 ]
  %hi.i.i.i.0.i70166 = phi i32 [ 0, %64 ], [ %76, %71 ]
  %72 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !28
  %73 = load i32, ptr addrspace(1) %72, align 4, !dbg !28
  %74 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %73, i32 %69, i32 %hi.i.i.i.0.i70166) #5, !dbg !28, !srcloc !29
  %75 = extractvalue { i32, i32 } %74, 0, !dbg !28
  %76 = extractvalue { i32, i32 } %74, 1, !dbg !28
  %77 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv, !dbg !28
  store i32 %75, ptr %77, align 4, !dbg !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !28
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !28
  br i1 %exitcond.not, label %78, label %71, !dbg !28, !llvm.loop !30

78:                                               ; preds = %71
  %79 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !28
  store i32 %76, ptr %79, align 4, !dbg !28
  %80 = sub nsw i32 6, %70, !dbg !28
  %81 = sext i32 %80 to i64, !dbg !28
  %82 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %81, !dbg !28
  %83 = load i32, ptr %82, align 4, !dbg !28
  %84 = sub nsw i32 5, %70, !dbg !28
  %85 = sext i32 %84 to i64, !dbg !28
  %86 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %85, !dbg !28
  %87 = load i32, ptr %86, align 4, !dbg !28
  %88 = freeze i32 %87, !dbg !28
  %89 = and i32 %37, 260046848, !dbg !28
  %.not20.i72 = icmp eq i32 %89, 0, !dbg !28
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %90, !dbg !28

90:                                               ; preds = %78
  %91 = sub nsw i32 4, %70, !dbg !28
  %92 = sext i32 %91 to i64, !dbg !28
  %93 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %92, !dbg !28
  %94 = load i32, ptr %93, align 4, !dbg !28
  %95 = tail call i32 @llvm.fshl.i32(i32 %88, i32 %94, i32 %65), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %90, %78
  %lo.i.i.i.0.i75 = phi i32 [ %95, %90 ], [ %88, %78 ], !dbg !28
  %96 = tail call i32 @llvm.fshl.i32(i32 %83, i32 %88, i32 %65), !dbg !28
  %97 = lshr i32 %96, 30, !dbg !28
  %98 = tail call i32 @llvm.fshl.i32(i32 %96, i32 %lo.i.i.i.0.i75, i32 2), !dbg !28
  %99 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !28
  %100 = lshr i32 %98, 31, !dbg !28
  %101 = add nuw nsw i32 %100, %97, !dbg !28
  %102 = sub nsw i32 0, %101, !dbg !28
  %.not2123.i76 = icmp slt i32 %37, 0, !dbg !28
  %spec.select.i77 = select i1 %.not2123.i76, i32 %102, i32 %101, !dbg !28
  %103 = xor i32 %98, %37, !dbg !28
  %.lobit.i78 = ashr i32 %98, 31, !dbg !28
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %98, !dbg !28
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %99, !dbg !28
  %104 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !28
  %105 = shl nuw i64 %104, 32, !dbg !28
  %106 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !28
  %107 = or disjoint i64 %105, %106, !dbg !28
  %108 = sitofp i64 %107 to double, !dbg !28
  %109 = fmul double %108, 0x3BF921FB54442D19, !dbg !28
  %110 = fptrunc double %109 to float, !dbg !28
  %111 = fneg float %110, !dbg !28
  %.not2526.i82 = icmp slt i32 %103, 0, !dbg !28
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %111, float %110, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !28

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %7
  %i.i.1.i85 = phi i32 [ %.01.i58, %7 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !28
  %t.i.i.1.i86 = phi float [ %.04.i64, %7 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !28
  %112 = add i32 %i.i.1.i85, 1, !dbg !28
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i87 = icmp eq i32 %113, 0, !dbg !28
  %114 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !28
  %115 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !28
  %.011.i88 = select i1 %.not28.i87, float %115, float %114, !dbg !28
  %116 = and i32 %i.i.1.i85, 1, !dbg !28
  %.not29.not.i = icmp eq i32 %116, 0, !dbg !28
  %117 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !28
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i89 = icmp eq i32 %118, 0, !dbg !28
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %117, float 0.000000e+00) #4, !dbg !28
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %117, float 0.000000e+00) #4, !dbg !28
  %.012.i90 = select i1 %.not30.i89, float %120, float %119, !dbg !28
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !28

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i104 = icmp eq i32 %121, 0, !dbg !28
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i105 = select i1 %.not31.i104, float %123, float %122, !dbg !28
  br label %__internal_fmad.exit2.i.i.i91, !dbg !28

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %124 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !28
  %125 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !28
  %126 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !28
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i92 = icmp eq i32 %127, 0, !dbg !28
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %126, float %.011.i88, float %125) #4, !dbg !28
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %126, float %.011.i88, float %125) #4, !dbg !28
  %.010.i93 = select i1 %.not32.i92, float %129, float %128, !dbg !28
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i94 = icmp eq i32 %130, 0, !dbg !28
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %124) #4, !dbg !28
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %124) #4, !dbg !28
  %.09.i95 = select i1 %.not33.i94, float %132, float %131, !dbg !28
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i96 = icmp eq i32 %133, 0, !dbg !28
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %117) #4, !dbg !28
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %117) #4, !dbg !28
  %.05.i97 = select i1 %.not34.i96, float %135, float %134, !dbg !28
  %136 = and i32 %112, 2, !dbg !28
  %.not35.i98 = icmp eq i32 %136, 0, !dbg !28
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !28

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i100 = icmp eq i32 %137, 0, !dbg !28
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i101 = select i1 %.not36.i100, float %139, float %138, !dbg !28
  br label %__nv_cosf.exit, !dbg !28

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !28
  %140 = fmul float %40, 0x3FE45F3060000000, !dbg !28
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i110 = icmp eq i32 %141, 0, !dbg !28
  %142 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %140) #4, !dbg !28
  %143 = tail call i32 @llvm.nvvm.f2i.rn(float %140) #4, !dbg !28
  %.01.i111 = select i1 %.not.i110, i32 %143, i32 %142, !dbg !28
  %144 = sitofp i32 %.01.i111 to float, !dbg !28
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i112 = icmp eq i32 %145, 0, !dbg !28
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float 0xBFF921FB40000000, float %40) #4, !dbg !28
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %144, float 0xBFF921FB40000000, float %40) #4, !dbg !28
  %.02.i113 = select i1 %.not15.i112, float %147, float %146, !dbg !28
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i114 = icmp eq i32 %148, 0, !dbg !28
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !28
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %144, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !28
  %.03.i115 = select i1 %.not16.i114, float %150, float %149, !dbg !28
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i116 = icmp eq i32 %151, 0, !dbg !28
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !28
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %144, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !28
  %.04.i117 = select i1 %.not17.i116, float %153, float %152, !dbg !28
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i118 = icmp eq i32 %154, 0, !dbg !28
  %155 = tail call float @llvm.nvvm.fabs.ftz.f(float %40) #4, !dbg !28
  %156 = tail call float @llvm.nvvm.fabs.f(float %40) #4, !dbg !28
  %.06.i119 = select i1 %.not18.i118, float %156, float %155, !dbg !28
  %157 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !28
  br i1 %157, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !28

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i121 = icmp eq i32 %158, 0, !dbg !28
  %.07.i122 = select i1 %.not19.i121, float %156, float %155, !dbg !28
  %159 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !28
  br i1 %159, label %__nv_fmul_rn.exit.i.i.i160, label %163, !dbg !28

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i161 = icmp eq i32 %160, 0, !dbg !28
  %161 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %40, float 0.000000e+00) #4, !dbg !28
  %162 = tail call float @llvm.nvvm.mul.rn.f(float %40, float 0.000000e+00) #4, !dbg !28
  %.08.i162 = select i1 %.not27.i161, float %162, float %161, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !28

163:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %164 = lshr i32 %39, 23, !dbg !28
  %165 = and i32 %164, 224, !dbg !28
  %166 = add nsw i32 %165, -128, !dbg !28
  %167 = shl i32 %39, 8, !dbg !28
  %168 = or i32 %167, -2147483648, !dbg !28
  %169 = lshr exact i32 %166, 5, !dbg !28
  br label %170, !dbg !28

170:                                              ; preds = %163, %170
  %indvars.iv181 = phi i64 [ 0, %163 ], [ %indvars.iv.next182, %170 ]
  %hi.i.i.i.0.i123168 = phi i32 [ 0, %163 ], [ %175, %170 ]
  %171 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv181, !dbg !28
  %172 = load i32, ptr addrspace(1) %171, align 4, !dbg !28
  %173 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %172, i32 %168, i32 %hi.i.i.i.0.i123168) #5, !dbg !28, !srcloc !29
  %174 = extractvalue { i32, i32 } %173, 0, !dbg !28
  %175 = extractvalue { i32, i32 } %173, 1, !dbg !28
  %176 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv181, !dbg !28
  store i32 %174, ptr %176, align 4, !dbg !28
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !28
  %exitcond183.not = icmp eq i64 %indvars.iv.next182, 6, !dbg !28
  br i1 %exitcond183.not, label %177, label %170, !dbg !28, !llvm.loop !32

177:                                              ; preds = %170
  %178 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i109, i64 24, !dbg !28
  store i32 %175, ptr %178, align 4, !dbg !28
  %179 = sub nsw i32 6, %169, !dbg !28
  %180 = sext i32 %179 to i64, !dbg !28
  %181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %180, !dbg !28
  %182 = load i32, ptr %181, align 4, !dbg !28
  %183 = sub nsw i32 5, %169, !dbg !28
  %184 = sext i32 %183 to i64, !dbg !28
  %185 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %184, !dbg !28
  %186 = load i32, ptr %185, align 4, !dbg !28
  %187 = freeze i32 %186, !dbg !28
  %188 = and i32 %39, 260046848, !dbg !28
  %.not20.i125 = icmp eq i32 %188, 0, !dbg !28
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %189, !dbg !28

189:                                              ; preds = %177
  %190 = sub nsw i32 4, %169, !dbg !28
  %191 = sext i32 %190 to i64, !dbg !28
  %192 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %191, !dbg !28
  %193 = load i32, ptr %192, align 4, !dbg !28
  %194 = tail call i32 @llvm.fshl.i32(i32 %187, i32 %193, i32 %164), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %189, %177
  %lo.i.i.i.0.i128 = phi i32 [ %194, %189 ], [ %187, %177 ], !dbg !28
  %195 = tail call i32 @llvm.fshl.i32(i32 %182, i32 %187, i32 %164), !dbg !28
  %196 = lshr i32 %195, 30, !dbg !28
  %197 = tail call i32 @llvm.fshl.i32(i32 %195, i32 %lo.i.i.i.0.i128, i32 2), !dbg !28
  %198 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !28
  %199 = lshr i32 %197, 31, !dbg !28
  %200 = add nuw nsw i32 %199, %196, !dbg !28
  %201 = sub nsw i32 0, %200, !dbg !28
  %.not2123.i129 = icmp slt i32 %39, 0, !dbg !28
  %spec.select.i130 = select i1 %.not2123.i129, i32 %201, i32 %200, !dbg !28
  %202 = xor i32 %197, %39, !dbg !28
  %.lobit.i131 = ashr i32 %197, 31, !dbg !28
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %197, !dbg !28
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %198, !dbg !28
  %203 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !28
  %204 = shl nuw i64 %203, 32, !dbg !28
  %205 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !28
  %206 = or disjoint i64 %204, %205, !dbg !28
  %207 = sitofp i64 %206 to double, !dbg !28
  %208 = fmul double %207, 0x3BF921FB54442D19, !dbg !28
  %209 = fptrunc double %208 to float, !dbg !28
  %210 = fneg float %209, !dbg !28
  %.not2526.i135 = icmp slt i32 %202, 0, !dbg !28
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %210, float %209, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !28

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !28
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !28
  %211 = add i32 %i.i.1.i138, 1, !dbg !28
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i140 = icmp eq i32 %212, 0, !dbg !28
  %213 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !28
  %214 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !28
  %.011.i141 = select i1 %.not28.i140, float %214, float %213, !dbg !28
  %215 = and i32 %i.i.1.i138, 1, !dbg !28
  %.not29.not.i142 = icmp eq i32 %215, 0, !dbg !28
  %216 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !28
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i143 = icmp eq i32 %217, 0, !dbg !28
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %216, float 0.000000e+00) #4, !dbg !28
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %216, float 0.000000e+00) #4, !dbg !28
  %.012.i144 = select i1 %.not30.i143, float %219, float %218, !dbg !28
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !28

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i158 = icmp eq i32 %220, 0, !dbg !28
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !28
  %222 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i159 = select i1 %.not31.i158, float %222, float %221, !dbg !28
  br label %__internal_fmad.exit2.i.i.i145, !dbg !28

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %223 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !28
  %224 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !28
  %225 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !28
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i146 = icmp eq i32 %226, 0, !dbg !28
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %225, float %.011.i141, float %224) #4, !dbg !28
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %225, float %.011.i141, float %224) #4, !dbg !28
  %.010.i147 = select i1 %.not32.i146, float %228, float %227, !dbg !28
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i148 = icmp eq i32 %229, 0, !dbg !28
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %223) #4, !dbg !28
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %223) #4, !dbg !28
  %.09.i149 = select i1 %.not33.i148, float %231, float %230, !dbg !28
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i150 = icmp eq i32 %232, 0, !dbg !28
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %216) #4, !dbg !28
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %216) #4, !dbg !28
  %.05.i151 = select i1 %.not34.i150, float %234, float %233, !dbg !28
  %235 = and i32 %211, 2, !dbg !28
  %.not35.i152 = icmp eq i32 %235, 0, !dbg !28
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !28

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i154 = icmp eq i32 %236, 0, !dbg !28
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i155 = select i1 %.not36.i154, float %238, float %237, !dbg !28
  br label %__nv_cosf.exit163, !dbg !28

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !28
  %239 = icmp slt i32 %.decomposed, 64, !dbg !33
  %240 = add i32 %22, 64, !dbg !34
  %241 = add i32 %240, %20, !dbg !35
  %242 = sext i32 %241 to i64, !dbg !36
  %243 = getelementptr half, ptr addrspace(1) %0, i64 %242, !dbg !36
  %244 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %243, i1 %239) #4, !dbg !37
  %245 = icmp sgt i32 %.decomposed, 63, !dbg !38
  %246 = add i32 %22, -64, !dbg !39
  %247 = add i32 %246, %20, !dbg !40
  %248 = sext i32 %247 to i64, !dbg !41
  %249 = getelementptr half, ptr addrspace(1) %0, i64 %248, !dbg !41
  %250 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %249, i1 %245) #4, !dbg !42
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !43
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i = icmp eq i32 %251, 0, !dbg !43
  %.01.i = select i1 %.not.i, i32 %44, i32 %43, !dbg !43
  %252 = sitofp i32 %.01.i to float, !dbg !43
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not15.i = icmp eq i32 %253, 0, !dbg !43
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %252, float 0xBFF921FB40000000, float %38) #4, !dbg !43
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %252, float 0xBFF921FB40000000, float %38) #4, !dbg !43
  %.02.i = select i1 %.not15.i, float %255, float %254, !dbg !43
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not16.i = icmp eq i32 %256, 0, !dbg !43
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %252, float 0xBE74442D00000000, float %.02.i) #4, !dbg !43
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %252, float 0xBE74442D00000000, float %.02.i) #4, !dbg !43
  %.03.i = select i1 %.not16.i, float %258, float %257, !dbg !43
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not17.i = icmp eq i32 %259, 0, !dbg !43
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %252, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !43
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %252, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !43
  %.04.i = select i1 %.not17.i, float %261, float %260, !dbg !43
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not18.i = icmp eq i32 %262, 0, !dbg !43
  %.06.i = select i1 %.not18.i, float %57, float %56, !dbg !43
  %263 = fcmp ult float %.06.i, 1.056150e+05, !dbg !43
  br i1 %263, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !43

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit163
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not19.i = icmp eq i32 %264, 0, !dbg !43
  %.07.i = select i1 %.not19.i, float %57, float %56, !dbg !43
  %265 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !43
  br i1 %265, label %__nv_fmul_rn.exit.i.i.i, label %269, !dbg !43

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not27.i = icmp eq i32 %266, 0, !dbg !43
  %267 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %38, float 0.000000e+00) #4, !dbg !43
  %268 = tail call float @llvm.nvvm.mul.rn.f(float %38, float 0.000000e+00) #4, !dbg !43
  %.08.i = select i1 %.not27.i, float %268, float %267, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !43

269:                                              ; preds = %__nv_isinff.exit.i.i.i
  %270 = lshr i32 %37, 23, !dbg !43
  %271 = and i32 %270, 224, !dbg !43
  %272 = add nsw i32 %271, -128, !dbg !43
  %273 = shl i32 %37, 8, !dbg !43
  %274 = or i32 %273, -2147483648, !dbg !43
  %275 = lshr exact i32 %272, 5, !dbg !43
  br label %276, !dbg !43

276:                                              ; preds = %269, %276
  %indvars.iv184 = phi i64 [ 0, %269 ], [ %indvars.iv.next185, %276 ]
  %hi.i.i.i.0.i170 = phi i32 [ 0, %269 ], [ %281, %276 ]
  %277 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv184, !dbg !43
  %278 = load i32, ptr addrspace(1) %277, align 4, !dbg !43
  %279 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %278, i32 %274, i32 %hi.i.i.i.0.i170) #5, !dbg !43, !srcloc !29
  %280 = extractvalue { i32, i32 } %279, 0, !dbg !43
  %281 = extractvalue { i32, i32 } %279, 1, !dbg !43
  %282 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv184, !dbg !43
  store i32 %280, ptr %282, align 4, !dbg !43
  %indvars.iv.next185 = add nuw nsw i64 %indvars.iv184, 1, !dbg !43
  %exitcond186.not = icmp eq i64 %indvars.iv.next185, 6, !dbg !43
  br i1 %exitcond186.not, label %283, label %276, !dbg !43, !llvm.loop !44

283:                                              ; preds = %276
  %284 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !43
  store i32 %281, ptr %284, align 4, !dbg !43
  %285 = sub nsw i32 6, %275, !dbg !43
  %286 = sext i32 %285 to i64, !dbg !43
  %287 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %286, !dbg !43
  %288 = load i32, ptr %287, align 4, !dbg !43
  %289 = sub nsw i32 5, %275, !dbg !43
  %290 = sext i32 %289 to i64, !dbg !43
  %291 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %290, !dbg !43
  %292 = load i32, ptr %291, align 4, !dbg !43
  %293 = freeze i32 %292, !dbg !43
  %294 = and i32 %37, 260046848, !dbg !43
  %.not20.i = icmp eq i32 %294, 0, !dbg !43
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %295, !dbg !43

295:                                              ; preds = %283
  %296 = sub nsw i32 4, %275, !dbg !43
  %297 = sext i32 %296 to i64, !dbg !43
  %298 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %297, !dbg !43
  %299 = load i32, ptr %298, align 4, !dbg !43
  %300 = tail call i32 @llvm.fshl.i32(i32 %293, i32 %299, i32 %270), !dbg !43
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !43

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %295, %283
  %lo.i.i.i.0.i = phi i32 [ %300, %295 ], [ %293, %283 ], !dbg !43
  %301 = tail call i32 @llvm.fshl.i32(i32 %288, i32 %293, i32 %270), !dbg !43
  %302 = lshr i32 %301, 30, !dbg !43
  %303 = tail call i32 @llvm.fshl.i32(i32 %301, i32 %lo.i.i.i.0.i, i32 2), !dbg !43
  %304 = shl i32 %lo.i.i.i.0.i, 2, !dbg !43
  %305 = lshr i32 %303, 31, !dbg !43
  %306 = add nuw nsw i32 %305, %302, !dbg !43
  %307 = sub nsw i32 0, %306, !dbg !43
  %.not2123.i = icmp slt i32 %37, 0, !dbg !43
  %spec.select.i = select i1 %.not2123.i, i32 %307, i32 %306, !dbg !43
  %308 = xor i32 %303, %37, !dbg !43
  %.lobit.i = ashr i32 %303, 31, !dbg !43
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %303, !dbg !43
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %304, !dbg !43
  %309 = zext i32 %hi.i.i.i.2.i to i64, !dbg !43
  %310 = shl nuw i64 %309, 32, !dbg !43
  %311 = zext i32 %lo.i.i.i.1.i to i64, !dbg !43
  %312 = or disjoint i64 %310, %311, !dbg !43
  %313 = sitofp i64 %312 to double, !dbg !43
  %314 = fmul double %313, 0x3BF921FB54442D19, !dbg !43
  %315 = fptrunc double %314 to float, !dbg !43
  %316 = fneg float %315, !dbg !43
  %.not2526.i = icmp slt i32 %308, 0, !dbg !43
  %r.i.i.i.0.i = select i1 %.not2526.i, float %316, float %315, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !43

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit163
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit163 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !43
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit163 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !43
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not28.i = icmp eq i32 %317, 0, !dbg !43
  %318 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !43
  %319 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !43
  %.011.i = select i1 %.not28.i, float %319, float %318, !dbg !43
  %320 = and i32 %i.i.1.i, 1, !dbg !43
  %.not29.i = icmp eq i32 %320, 0, !dbg !43
  %321 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !43
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not30.i = icmp eq i32 %322, 0, !dbg !43
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %321, float 0.000000e+00) #4, !dbg !43
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %321, float 0.000000e+00) #4, !dbg !43
  %.012.i = select i1 %.not30.i, float %324, float %323, !dbg !43
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !43

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not31.i = icmp eq i32 %325, 0, !dbg !43
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !43
  %327 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !43
  %.013.i = select i1 %.not31.i, float %327, float %326, !dbg !43
  br label %__internal_fmad.exit2.i.i.i, !dbg !43

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %328 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !43
  %329 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !43
  %330 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !43
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not32.i = icmp eq i32 %331, 0, !dbg !43
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %330, float %.011.i, float %329) #4, !dbg !43
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %330, float %.011.i, float %329) #4, !dbg !43
  %.010.i = select i1 %.not32.i, float %333, float %332, !dbg !43
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not33.i = icmp eq i32 %334, 0, !dbg !43
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %328) #4, !dbg !43
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %328) #4, !dbg !43
  %.09.i = select i1 %.not33.i, float %336, float %335, !dbg !43
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not34.i = icmp eq i32 %337, 0, !dbg !43
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %321) #4, !dbg !43
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %321) #4, !dbg !43
  %.05.i = select i1 %.not34.i, float %339, float %338, !dbg !43
  %340 = and i32 %i.i.1.i, 2, !dbg !43
  %.not35.i = icmp eq i32 %340, 0, !dbg !43
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !43

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not36.i = icmp eq i32 %341, 0, !dbg !43
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !43
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !43
  %.0.i = select i1 %.not36.i, float %343, float %342, !dbg !43
  br label %__nv_sinf.exit, !dbg !43

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !43
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !43
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !43
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i2 = icmp eq i32 %344, 0, !dbg !43
  %.01.i3 = select i1 %.not.i2, i32 %143, i32 %142, !dbg !43
  %345 = sitofp i32 %.01.i3 to float, !dbg !43
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not15.i4 = icmp eq i32 %346, 0, !dbg !43
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %345, float 0xBFF921FB40000000, float %40) #4, !dbg !43
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %345, float 0xBFF921FB40000000, float %40) #4, !dbg !43
  %.02.i5 = select i1 %.not15.i4, float %348, float %347, !dbg !43
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not16.i6 = icmp eq i32 %349, 0, !dbg !43
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %345, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !43
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %345, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !43
  %.03.i7 = select i1 %.not16.i6, float %351, float %350, !dbg !43
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not17.i8 = icmp eq i32 %352, 0, !dbg !43
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %345, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !43
  %354 = tail call float @llvm.nvvm.fma.rn.f(float %345, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !43
  %.04.i9 = select i1 %.not17.i8, float %354, float %353, !dbg !43
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not18.i10 = icmp eq i32 %355, 0, !dbg !43
  %.06.i11 = select i1 %.not18.i10, float %156, float %155, !dbg !43
  %356 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !43
  br i1 %356, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !43

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not19.i13 = icmp eq i32 %357, 0, !dbg !43
  %.07.i14 = select i1 %.not19.i13, float %156, float %155, !dbg !43
  %358 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !43
  br i1 %358, label %__nv_fmul_rn.exit.i.i.i52, label %362, !dbg !43

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not27.i53 = icmp eq i32 %359, 0, !dbg !43
  %360 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %40, float 0.000000e+00) #4, !dbg !43
  %361 = tail call float @llvm.nvvm.mul.rn.f(float %40, float 0.000000e+00) #4, !dbg !43
  %.08.i54 = select i1 %.not27.i53, float %361, float %360, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !43

362:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %363 = lshr i32 %39, 23, !dbg !43
  %364 = and i32 %363, 224, !dbg !43
  %365 = add nsw i32 %364, -128, !dbg !43
  %366 = shl i32 %39, 8, !dbg !43
  %367 = or i32 %366, -2147483648, !dbg !43
  %368 = lshr exact i32 %365, 5, !dbg !43
  br label %369, !dbg !43

369:                                              ; preds = %362, %369
  %indvars.iv187 = phi i64 [ 0, %362 ], [ %indvars.iv.next188, %369 ]
  %hi.i.i.i.0.i15172 = phi i32 [ 0, %362 ], [ %374, %369 ]
  %370 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv187, !dbg !43
  %371 = load i32, ptr addrspace(1) %370, align 4, !dbg !43
  %372 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %371, i32 %367, i32 %hi.i.i.i.0.i15172) #5, !dbg !43, !srcloc !29
  %373 = extractvalue { i32, i32 } %372, 0, !dbg !43
  %374 = extractvalue { i32, i32 } %372, 1, !dbg !43
  %375 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv187, !dbg !43
  store i32 %373, ptr %375, align 4, !dbg !43
  %indvars.iv.next188 = add nuw nsw i64 %indvars.iv187, 1, !dbg !43
  %exitcond189.not = icmp eq i64 %indvars.iv.next188, 6, !dbg !43
  br i1 %exitcond189.not, label %376, label %369, !dbg !43, !llvm.loop !45

376:                                              ; preds = %369
  %377 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !43
  store i32 %374, ptr %377, align 4, !dbg !43
  %378 = sub nsw i32 6, %368, !dbg !43
  %379 = sext i32 %378 to i64, !dbg !43
  %380 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %379, !dbg !43
  %381 = load i32, ptr %380, align 4, !dbg !43
  %382 = sub nsw i32 5, %368, !dbg !43
  %383 = sext i32 %382 to i64, !dbg !43
  %384 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %383, !dbg !43
  %385 = load i32, ptr %384, align 4, !dbg !43
  %386 = freeze i32 %385, !dbg !43
  %387 = and i32 %39, 260046848, !dbg !43
  %.not20.i17 = icmp eq i32 %387, 0, !dbg !43
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %388, !dbg !43

388:                                              ; preds = %376
  %389 = sub nsw i32 4, %368, !dbg !43
  %390 = sext i32 %389 to i64, !dbg !43
  %391 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %390, !dbg !43
  %392 = load i32, ptr %391, align 4, !dbg !43
  %393 = tail call i32 @llvm.fshl.i32(i32 %386, i32 %392, i32 %363), !dbg !43
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !43

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %388, %376
  %lo.i.i.i.0.i20 = phi i32 [ %393, %388 ], [ %386, %376 ], !dbg !43
  %394 = tail call i32 @llvm.fshl.i32(i32 %381, i32 %386, i32 %363), !dbg !43
  %395 = lshr i32 %394, 30, !dbg !43
  %396 = tail call i32 @llvm.fshl.i32(i32 %394, i32 %lo.i.i.i.0.i20, i32 2), !dbg !43
  %397 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !43
  %398 = lshr i32 %396, 31, !dbg !43
  %399 = add nuw nsw i32 %398, %395, !dbg !43
  %400 = sub nsw i32 0, %399, !dbg !43
  %.not2123.i21 = icmp slt i32 %39, 0, !dbg !43
  %spec.select.i22 = select i1 %.not2123.i21, i32 %400, i32 %399, !dbg !43
  %401 = xor i32 %396, %39, !dbg !43
  %.lobit.i23 = ashr i32 %396, 31, !dbg !43
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %396, !dbg !43
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %397, !dbg !43
  %402 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !43
  %403 = shl nuw i64 %402, 32, !dbg !43
  %404 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !43
  %405 = or disjoint i64 %403, %404, !dbg !43
  %406 = sitofp i64 %405 to double, !dbg !43
  %407 = fmul double %406, 0x3BF921FB54442D19, !dbg !43
  %408 = fptrunc double %407 to float, !dbg !43
  %409 = fneg float %408, !dbg !43
  %.not2526.i27 = icmp slt i32 %401, 0, !dbg !43
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %409, float %408, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !43

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !43
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !43
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not28.i32 = icmp eq i32 %410, 0, !dbg !43
  %411 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !43
  %412 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !43
  %.011.i33 = select i1 %.not28.i32, float %412, float %411, !dbg !43
  %413 = and i32 %i.i.1.i30, 1, !dbg !43
  %.not29.i34 = icmp eq i32 %413, 0, !dbg !43
  %414 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !43
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not30.i35 = icmp eq i32 %415, 0, !dbg !43
  %416 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %414, float 0.000000e+00) #4, !dbg !43
  %417 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %414, float 0.000000e+00) #4, !dbg !43
  %.012.i36 = select i1 %.not30.i35, float %417, float %416, !dbg !43
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !43

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not31.i38 = icmp eq i32 %418, 0, !dbg !43
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !43
  %420 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !43
  %.013.i39 = select i1 %.not31.i38, float %420, float %419, !dbg !43
  br label %__internal_fmad.exit2.i.i.i40, !dbg !43

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %421 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !43
  %422 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !43
  %423 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !43
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not32.i41 = icmp eq i32 %424, 0, !dbg !43
  %425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %423, float %.011.i33, float %422) #4, !dbg !43
  %426 = tail call float @llvm.nvvm.fma.rn.f(float %423, float %.011.i33, float %422) #4, !dbg !43
  %.010.i42 = select i1 %.not32.i41, float %426, float %425, !dbg !43
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not33.i43 = icmp eq i32 %427, 0, !dbg !43
  %428 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %421) #4, !dbg !43
  %429 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %421) #4, !dbg !43
  %.09.i44 = select i1 %.not33.i43, float %429, float %428, !dbg !43
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not34.i45 = icmp eq i32 %430, 0, !dbg !43
  %431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %414) #4, !dbg !43
  %432 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %414) #4, !dbg !43
  %.05.i46 = select i1 %.not34.i45, float %432, float %431, !dbg !43
  %433 = and i32 %i.i.1.i30, 2, !dbg !43
  %.not35.i47 = icmp eq i32 %433, 0, !dbg !43
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !43

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not36.i49 = icmp eq i32 %434, 0, !dbg !43
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !43
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !43
  %.0.i50 = select i1 %.not36.i49, float %436, float %435, !dbg !43
  br label %__nv_sinf.exit55, !dbg !43

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !43
  %437 = bitcast i32 %244 to <2 x half>, !dbg !37
  %438 = bitcast i32 %250 to <2 x half>, !dbg !42
  %439 = bitcast i32 %26 to <2 x half>, !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !43
  %440 = sext i32 %13 to i64, !dbg !46
  %441 = getelementptr half, ptr addrspace(1) %2, i64 %440, !dbg !46
  %442 = fpext <2 x half> %437 to <2 x float>, !dbg !47
  %443 = fsub <2 x float> zeroinitializer, %442, !dbg !48
  %444 = fpext <2 x half> %438 to <2 x float>, !dbg !49
  %445 = insertelement <2 x i1> poison, i1 %239, i64 0, !dbg !50
  %446 = shufflevector <2 x i1> %445, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !50
  %447 = select <2 x i1> %446, <2 x float> %443, <2 x float> %444, !dbg !50
  %448 = fpext <2 x half> %439 to <2 x float>, !dbg !51
  %449 = insertelement <2 x float> poison, float %z.i.i.0.i102, i64 0, !dbg !52
  %450 = insertelement <2 x float> %449, float %z.i.i.0.i156, i64 1, !dbg !52
  %451 = fmul <2 x float> %450, %448, !dbg !52
  %452 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !53
  %453 = insertelement <2 x float> %452, float %z.i.i.0.i51, i64 1, !dbg !53
  %454 = fmul <2 x float> %447, %453, !dbg !53
  %455 = fadd <2 x float> %451, %454, !dbg !54
  %456 = fptrunc <2 x float> %455 to <2 x half>, !dbg !55
  %457 = bitcast <2 x half> %456 to i32, !dbg !55
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %457, ptr addrspace(1) %441) #4, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cersrk2nyko3iqe53ublhxzd7kvjnpyiclim4njr3ujp6rdd2k2p.py", directory: "./local_cache/er")
!4 = !{ptr @triton_poi_fused_clone_2, !"reqntidx", i32 64}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_clone_2", linkageName: "triton_poi_fused_clone_2", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 21, scope: !6)
!14 = !DILocation(line: 22, column: 19, scope: !6)
!15 = !DILocation(line: 23, column: 28, scope: !6)
!16 = !DILocation(line: 24, column: 19, scope: !6)
!17 = !DILocation(line: 26, column: 39, scope: !6)
!18 = !DILocation(line: 26, column: 49, scope: !6)
!19 = !DILocation(line: 26, column: 35, scope: !6)
!20 = !DILocation(line: 26, column: 44, scope: !6)
!21 = !DILocation(line: 26, column: 30, scope: !6)
!22 = !DILocation(line: 26, column: 54, scope: !6)
!23 = !DILocation(line: 27, column: 46, scope: !6)
!24 = !DILocation(line: 27, column: 41, scope: !6)
!25 = !DILocation(line: 27, column: 35, scope: !6)
!26 = !DILocation(line: 27, column: 30, scope: !6)
!27 = !DILocation(line: 27, column: 53, scope: !6)
!28 = !DILocation(line: 28, column: 23, scope: !6)
!29 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.count", i32 1}
!32 = distinct !{!32, !31}
!33 = !DILocation(line: 37, column: 19, scope: !6)
!34 = !DILocation(line: 38, column: 45, scope: !6)
!35 = !DILocation(line: 38, column: 56, scope: !6)
!36 = !DILocation(line: 38, column: 31, scope: !6)
!37 = !DILocation(line: 38, column: 62, scope: !6)
!38 = !DILocation(line: 42, column: 20, scope: !6)
!39 = !DILocation(line: 45, column: 59, scope: !6)
!40 = !DILocation(line: 45, column: 51, scope: !6)
!41 = !DILocation(line: 45, column: 31, scope: !6)
!42 = !DILocation(line: 45, column: 65, scope: !6)
!43 = !DILocation(line: 47, column: 24, scope: !6)
!44 = distinct !{!44, !31}
!45 = distinct !{!45, !31}
!46 = !DILocation(line: 52, column: 25, scope: !6)
!47 = !DILocation(line: 38, column: 113, scope: !6)
!48 = !DILocation(line: 39, column: 13, scope: !6)
!49 = !DILocation(line: 45, column: 116, scope: !6)
!50 = !DILocation(line: 0, scope: !6)
!51 = !DILocation(line: 26, column: 93, scope: !6)
!52 = !DILocation(line: 32, column: 18, scope: !6)
!53 = !DILocation(line: 50, column: 20, scope: !6)
!54 = !DILocation(line: 51, column: 19, scope: !6)
!55 = !DILocation(line: 52, column: 37, scope: !6)
!56 = !DILocation(line: 52, column: 4, scope: !6)
