//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_5 // -- Begin function triton_red_fused__to_copy_add_mul_sum_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_5
.visible .entry triton_red_fused__to_copy_add_mul_sum_5(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_4,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_5_param_5,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_5_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<8>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<15>;
	.loc	1 18 0                          // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_add_mul_sum_5_param_6];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_5_param_4];
$L__tmp0:
	.loc	1 22 28                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:22:33
	shl.b32 	%r1, %r11, 3;
	.loc	1 23 44                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 1;
	and.b32  	%r3, %r12, 6;
	.loc	1 29 40                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:29:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f40, 0f00000000;
	mov.f32 	%f41, %f40;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:0:40
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_5_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_5_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_5_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_5_param_0];
	bfe.u32 	%r4, %r2, 2, 4;
	.loc	1 29 40                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:29:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r66, %r15, %r3;
	mov.b32 	%r17, 0;
	mov.f32 	%f40, 0f00000000;
	mov.f32 	%f41, %f40;
	mov.u32 	%r67, %r17;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 31 29                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:31:29
	add.s32 	%r26, %r4, %r67;
	setp.lt.s32 	%p2, %r26, %r10;
	.loc	1 35 34                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:35:34
	mul.wide.s32 	%rd11, %r66, 2;
	add.s64 	%rd6, %rd1, %rd11;
	.loc	1 35 51                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:35:51
	// begin inline asm
	mov.u32 %r16, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r16;
	.loc	1 35 105                        // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:35:105
	cvt.f32.f16 	%f9, %rs1;
	cvt.f32.f16 	%f10, %rs2;
	.loc	1 36 34                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:36:34
	add.s64 	%rd7, %rd2, %rd11;
	.loc	1 36 51                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:36:51
	// begin inline asm
	mov.u32 %r18, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r18 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r18;
	.loc	1 36 105                        // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:36:105
	cvt.f32.f16 	%f11, %rs3;
	cvt.f32.f16 	%f12, %rs4;
	.loc	1 37 34                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:37:34
	add.s64 	%rd8, %rd3, %rd11;
	.loc	1 37 51                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:37:51
	// begin inline asm
	mov.u32 %r20, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r20 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r20;
	.loc	1 37 105                        // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:37:105
	cvt.f32.f16 	%f13, %rs5;
	cvt.f32.f16 	%f14, %rs6;
	.loc	1 38 34                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:38:34
	mul.wide.s32 	%rd12, %r26, 4;
	add.s64 	%rd9, %rd4, %rd12;
	.loc	1 38 41                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:38:41
	// begin inline asm
	mov.u32 %r22, %r17;
	@%p2 ld.global.L1::evict_last.b32 { %r22 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, %r17;
	@%p2 ld.global.L1::evict_last.b32 { %r24 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r24;
	.loc	1 39 22                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:39:22
	add.f32 	%f16, %f9, %f11;
	add.f32 	%f17, %f10, %f12;
	.loc	1 41 22                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:41:22
	mul.f32 	%f18, %f13, %f15;
	mul.f32 	%f19, %f14, %f15;
	.loc	1 45 25                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:45:25
	fma.rn.f32 	%f20, %f16, %f18, %f40;
	fma.rn.f32 	%f21, %f17, %f19, %f41;
	.loc	1 46 42                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:46:42
	selp.f32 	%f40, %f20, %f40, %p2;
	selp.f32 	%f41, %f21, %f41, %p2;
	.loc	1 29 40                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:29:40
	add.s32 	%r67, %r67, 16;
	add.s32 	%r66, %r66, 65536;
	setp.lt.s32 	%p7, %r67, %r10;
	@%p7 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:23:44
	and.b32  	%r38, %r2, 28;
	and.b32  	%r39, %r2, 7;
	.loc	1 23 23                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:23:23
	or.b32  	%r40, %r1, %r39;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f40;
	shfl.sync.bfly.b32	%r42, %r41, 16, 31, -1;
	mov.b32 	%f22, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f40, %f22;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f23;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f24, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r45, %f25;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f26, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f41;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f28, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f41, %f28;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f29;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f30, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f31;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f32, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p8, %r38, 0;
	shr.u32 	%r53, %r2, 3;
	and.b32  	%r54, %r53, 4;
	shl.b32 	%r55, %r3, 3;
	or.b32  	%r56, %r55, %r54;
	mov.u32 	%r57, global_smem;
	add.s32 	%r27, %r57, %r56;
	mov.b32 	%r28, %f27;
	// begin inline asm
	@%p8 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r27, 8;
	mov.b32 	%r30, %f33;
	// begin inline asm
	@%p8 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r2, 16;
	shl.b32 	%r58, %r2, 2;
	add.s32 	%r32, %r57, %r58;
	// begin inline asm
	@%p10 ld.shared.b32 %r31, [ %r32 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r31;
	shfl.sync.bfly.b32	%r59, %r31, 1, 31, -1;
	mov.b32 	%f35, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r60, %r2, 1;
	setp.eq.b32 	%p14, %r60, 1;
	not.pred 	%p15, %p14;
	and.pred  	%p11, %p10, %p15;
	mov.b32 	%r34, %f36;
	// begin inline asm
	@%p11 st.shared.b32 [ %r32 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r61, %r57, %r55;
	ld.shared.u32 	%r36, [%r61];
	ld.shared.u32 	%r37, [%r61+8];
$L__tmp2:
	.loc	1 48 37                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:48:37
	bar.sync 	0;
	shl.b32 	%r62, %r3, 2;
	sub.s32 	%r35, %r61, %r62;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.v2.b32 [ %r35 + 0 ], { %r36, %r37 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r63, %r39, 2;
	add.s32 	%r64, %r57, %r63;
	ld.shared.f32 	%f37, [%r64];
	.loc	1 48 25                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:48:25
	mul.wide.s32 	%rd14, %r40, 2;
	add.s64 	%rd13, %rd5, %rd14;
	.loc	1 48 37                         // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:48:37
	cvt.rn.f16.f32 	%rs7, %f37;
	and.b32  	%r65, %r2, 56;
	setp.eq.s32 	%p13, %r65, 0;
	// begin inline asm
	@%p13 st.global.b16 [ %rd13 + 0 ], { %rs7 };
	// end inline asm
	.loc	1 48 4                          // cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py:48:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/b6/cb6vgngmgusaq42w5g3gqwky4pfaktesyo3iqr644b5byz4ctmzl.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 183                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 54
.b8 118
.b8 103
.b8 110
.b8 103
.b8 109
.b8 103
.b8 117
.b8 115
.b8 97
.b8 113
.b8 52
.b8 50
.b8 119
.b8 53
.b8 103
.b8 51
.b8 103
.b8 113
.b8 119
.b8 107
.b8 121
.b8 52
.b8 112
.b8 102
.b8 97
.b8 107
.b8 116
.b8 101
.b8 115
.b8 121
.b8 111
.b8 51
.b8 105
.b8 113
.b8 114
.b8 54
.b8 52
.b8 52
.b8 98
.b8 53
.b8 98
.b8 121
.b8 122
.b8 52
.b8 99
.b8 116
.b8 109
.b8 122
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa1:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
