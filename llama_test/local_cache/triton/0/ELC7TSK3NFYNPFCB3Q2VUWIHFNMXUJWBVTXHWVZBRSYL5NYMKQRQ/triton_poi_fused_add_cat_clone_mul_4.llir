; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_add_cat_clone_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 7, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = and i32 %9, 127, !dbg !11
  %11 = or disjoint i32 %8, %10, !dbg !12
  %12 = sdiv i32 %11, 128, !dbg !13
  %13 = mul i32 %12, 128, !dbg !14
  %.decomposed = sub i32 %11, %13, !dbg !14
  %14 = sdiv i32 %11, 4096, !dbg !15
  %15 = sext i32 %11 to i64, !dbg !16
  %16 = getelementptr half, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %16) #4, !dbg !17
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !18
  %18 = srem i8 %.lhs.trunc, 64, !dbg !18
  %.sext = sext i8 %18 to i32, !dbg !18
  %19 = mul i32 %3, %.sext, !dbg !19
  %20 = add i32 %19, %14, !dbg !20
  %21 = sext i32 %20 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !21
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %22) #4, !dbg !22
  %24 = bitcast i32 %23 to float, !dbg !22
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !23
  %25 = fmul float %24, 0x3FE45F3060000000, !dbg !23
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i2 = icmp eq i32 %26, 0, !dbg !23
  %27 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %25) #4, !dbg !23
  %28 = tail call i32 @llvm.nvvm.f2i.rn(float %25) #4, !dbg !23
  %.01.i3 = select i1 %.not.i2, i32 %28, i32 %27, !dbg !23
  %29 = sitofp i32 %.01.i3 to float, !dbg !23
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i4 = icmp eq i32 %30, 0, !dbg !23
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0xBFF921FB40000000, float %24) #4, !dbg !23
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0xBFF921FB40000000, float %24) #4, !dbg !23
  %.02.i5 = select i1 %.not15.i4, float %32, float %31, !dbg !23
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i6 = icmp eq i32 %33, 0, !dbg !23
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !23
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !23
  %.03.i7 = select i1 %.not16.i6, float %35, float %34, !dbg !23
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i8 = icmp eq i32 %36, 0, !dbg !23
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !23
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !23
  %.04.i9 = select i1 %.not17.i8, float %38, float %37, !dbg !23
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i10 = icmp eq i32 %39, 0, !dbg !23
  %40 = tail call float @llvm.nvvm.fabs.ftz.f(float %24) #4, !dbg !23
  %41 = tail call float @llvm.nvvm.fabs.f(float %24) #4, !dbg !23
  %.06.i11 = select i1 %.not18.i10, float %41, float %40, !dbg !23
  %42 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !23
  br i1 %42, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !23

__nv_isinff.exit.i.i.i12:                         ; preds = %6
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i13 = icmp eq i32 %43, 0, !dbg !23
  %.07.i14 = select i1 %.not19.i13, float %41, float %40, !dbg !23
  %44 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !23
  br i1 %44, label %__nv_fmul_rn.exit.i.i.i51, label %48, !dbg !23

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i52 = icmp eq i32 %45, 0, !dbg !23
  %46 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %24, float 0.000000e+00) #4, !dbg !23
  %47 = tail call float @llvm.nvvm.mul.rn.f(float %24, float 0.000000e+00) #4, !dbg !23
  %.08.i53 = select i1 %.not27.i52, float %47, float %46, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !23

48:                                               ; preds = %__nv_isinff.exit.i.i.i12
  %49 = lshr i32 %23, 23, !dbg !23
  %50 = and i32 %49, 224, !dbg !23
  %51 = add nsw i32 %50, -128, !dbg !23
  %52 = shl i32 %23, 8, !dbg !23
  %53 = or i32 %52, -2147483648, !dbg !23
  %54 = lshr exact i32 %51, 5, !dbg !23
  br label %55, !dbg !23

55:                                               ; preds = %48, %55
  %indvars.iv = phi i64 [ 0, %48 ], [ %indvars.iv.next, %55 ]
  %hi.i.i.i.0.i1554 = phi i32 [ 0, %48 ], [ %60, %55 ]
  %56 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !23
  %57 = load i32, ptr addrspace(1) %56, align 4, !dbg !23
  %58 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %57, i32 %53, i32 %hi.i.i.i.0.i1554) #5, !dbg !23, !srcloc !24
  %59 = extractvalue { i32, i32 } %58, 0, !dbg !23
  %60 = extractvalue { i32, i32 } %58, 1, !dbg !23
  %61 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv, !dbg !23
  store i32 %59, ptr %61, align 4, !dbg !23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !23
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !23
  br i1 %exitcond.not, label %62, label %55, !dbg !23, !llvm.loop !25

62:                                               ; preds = %55
  %63 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !23
  store i32 %60, ptr %63, align 4, !dbg !23
  %64 = sub nsw i32 6, %54, !dbg !23
  %65 = sext i32 %64 to i64, !dbg !23
  %66 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %65, !dbg !23
  %67 = load i32, ptr %66, align 4, !dbg !23
  %68 = sub nsw i32 5, %54, !dbg !23
  %69 = sext i32 %68 to i64, !dbg !23
  %70 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %69, !dbg !23
  %71 = load i32, ptr %70, align 4, !dbg !23
  %72 = freeze i32 %71, !dbg !23
  %73 = and i32 %23, 260046848, !dbg !23
  %.not20.i17 = icmp eq i32 %73, 0, !dbg !23
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %74, !dbg !23

74:                                               ; preds = %62
  %75 = sub nsw i32 4, %54, !dbg !23
  %76 = sext i32 %75 to i64, !dbg !23
  %77 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %76, !dbg !23
  %78 = load i32, ptr %77, align 4, !dbg !23
  %79 = tail call i32 @llvm.fshl.i32(i32 %72, i32 %78, i32 %49), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %74, %62
  %lo.i.i.i.0.i20 = phi i32 [ %79, %74 ], [ %72, %62 ], !dbg !23
  %80 = tail call i32 @llvm.fshl.i32(i32 %67, i32 %72, i32 %49), !dbg !23
  %81 = lshr i32 %80, 30, !dbg !23
  %82 = tail call i32 @llvm.fshl.i32(i32 %80, i32 %lo.i.i.i.0.i20, i32 2), !dbg !23
  %83 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !23
  %84 = lshr i32 %82, 31, !dbg !23
  %85 = add nuw nsw i32 %84, %81, !dbg !23
  %86 = sub nsw i32 0, %85, !dbg !23
  %.not2123.i21 = icmp slt i32 %23, 0, !dbg !23
  %spec.select.i22 = select i1 %.not2123.i21, i32 %86, i32 %85, !dbg !23
  %87 = xor i32 %82, %23, !dbg !23
  %.lobit.i23 = ashr i32 %82, 31, !dbg !23
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %82, !dbg !23
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %83, !dbg !23
  %88 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !23
  %89 = shl nuw i64 %88, 32, !dbg !23
  %90 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !23
  %91 = or disjoint i64 %89, %90, !dbg !23
  %92 = sitofp i64 %91 to double, !dbg !23
  %93 = fmul double %92, 0x3BF921FB54442D19, !dbg !23
  %94 = fptrunc double %93 to float, !dbg !23
  %95 = fneg float %94, !dbg !23
  %.not2526.i27 = icmp slt i32 %87, 0, !dbg !23
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %95, float %94, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !23

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %6
  %i.i.1.i30 = phi i32 [ %.01.i3, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !23
  %t.i.i.1.i31 = phi float [ %.04.i9, %6 ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !23
  %96 = add i32 %i.i.1.i30, 1, !dbg !23
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i32 = icmp eq i32 %97, 0, !dbg !23
  %98 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !23
  %99 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !23
  %.011.i33 = select i1 %.not28.i32, float %99, float %98, !dbg !23
  %100 = and i32 %i.i.1.i30, 1, !dbg !23
  %.not29.not.i = icmp eq i32 %100, 0, !dbg !23
  %101 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !23
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i34 = icmp eq i32 %102, 0, !dbg !23
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %101, float 0.000000e+00) #4, !dbg !23
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %101, float 0.000000e+00) #4, !dbg !23
  %.012.i35 = select i1 %.not30.i34, float %104, float %103, !dbg !23
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !23

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i49 = icmp eq i32 %105, 0, !dbg !23
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !23
  %107 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i50 = select i1 %.not31.i49, float %107, float %106, !dbg !23
  br label %__internal_fmad.exit2.i.i.i36, !dbg !23

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %108 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !23
  %109 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !23
  %110 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !23
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i37 = icmp eq i32 %111, 0, !dbg !23
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %110, float %.011.i33, float %109) #4, !dbg !23
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %110, float %.011.i33, float %109) #4, !dbg !23
  %.010.i38 = select i1 %.not32.i37, float %113, float %112, !dbg !23
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i39 = icmp eq i32 %114, 0, !dbg !23
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %108) #4, !dbg !23
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %108) #4, !dbg !23
  %.09.i40 = select i1 %.not33.i39, float %116, float %115, !dbg !23
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i41 = icmp eq i32 %117, 0, !dbg !23
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %101) #4, !dbg !23
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %101) #4, !dbg !23
  %.05.i42 = select i1 %.not34.i41, float %119, float %118, !dbg !23
  %120 = and i32 %96, 2, !dbg !23
  %.not35.i43 = icmp eq i32 %120, 0, !dbg !23
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !23

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i45 = icmp eq i32 %121, 0, !dbg !23
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i46 = select i1 %.not36.i45, float %123, float %122, !dbg !23
  br label %__nv_cosf.exit, !dbg !23

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !23
  %124 = icmp slt i32 %.decomposed, 64, !dbg !27
  %125 = shl nsw i32 %12, 7, !dbg !28
  %126 = add nsw i32 %.decomposed, 64, !dbg !29
  %127 = add i32 %126, %125, !dbg !30
  %128 = sext i32 %127 to i64, !dbg !31
  %129 = getelementptr half, ptr addrspace(1) %0, i64 %128, !dbg !31
  %130 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %129, i1 %124) #4, !dbg !32
  %131 = icmp sgt i32 %.decomposed, 63, !dbg !33
  %132 = add nsw i32 %.decomposed, -64, !dbg !34
  %133 = add i32 %132, %125, !dbg !35
  %134 = sext i32 %133 to i64, !dbg !36
  %135 = getelementptr half, ptr addrspace(1) %0, i64 %134, !dbg !36
  %136 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %135, i1 %131) #4, !dbg !37
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !38
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i = icmp eq i32 %137, 0, !dbg !38
  %.01.i = select i1 %.not.i, i32 %28, i32 %27, !dbg !38
  %138 = sitofp i32 %.01.i to float, !dbg !38
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not15.i = icmp eq i32 %139, 0, !dbg !38
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0xBFF921FB40000000, float %24) #4, !dbg !38
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0xBFF921FB40000000, float %24) #4, !dbg !38
  %.02.i = select i1 %.not15.i, float %141, float %140, !dbg !38
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not16.i = icmp eq i32 %142, 0, !dbg !38
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0xBE74442D00000000, float %.02.i) #4, !dbg !38
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0xBE74442D00000000, float %.02.i) #4, !dbg !38
  %.03.i = select i1 %.not16.i, float %144, float %143, !dbg !38
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not17.i = icmp eq i32 %145, 0, !dbg !38
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !38
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !38
  %.04.i = select i1 %.not17.i, float %147, float %146, !dbg !38
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not18.i = icmp eq i32 %148, 0, !dbg !38
  %.06.i = select i1 %.not18.i, float %41, float %40, !dbg !38
  %149 = fcmp ult float %.06.i, 1.056150e+05, !dbg !38
  br i1 %149, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !38

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not19.i = icmp eq i32 %150, 0, !dbg !38
  %.07.i = select i1 %.not19.i, float %41, float %40, !dbg !38
  %151 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !38
  br i1 %151, label %__nv_fmul_rn.exit.i.i.i, label %155, !dbg !38

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not27.i = icmp eq i32 %152, 0, !dbg !38
  %153 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %24, float 0.000000e+00) #4, !dbg !38
  %154 = tail call float @llvm.nvvm.mul.rn.f(float %24, float 0.000000e+00) #4, !dbg !38
  %.08.i = select i1 %.not27.i, float %154, float %153, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !38

155:                                              ; preds = %__nv_isinff.exit.i.i.i
  %156 = lshr i32 %23, 23, !dbg !38
  %157 = and i32 %156, 224, !dbg !38
  %158 = add nsw i32 %157, -128, !dbg !38
  %159 = shl i32 %23, 8, !dbg !38
  %160 = or i32 %159, -2147483648, !dbg !38
  %161 = lshr exact i32 %158, 5, !dbg !38
  br label %162, !dbg !38

162:                                              ; preds = %155, %162
  %indvars.iv61 = phi i64 [ 0, %155 ], [ %indvars.iv.next62, %162 ]
  %hi.i.i.i.0.i56 = phi i32 [ 0, %155 ], [ %167, %162 ]
  %163 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv61, !dbg !38
  %164 = load i32, ptr addrspace(1) %163, align 4, !dbg !38
  %165 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %164, i32 %160, i32 %hi.i.i.i.0.i56) #5, !dbg !38, !srcloc !24
  %166 = extractvalue { i32, i32 } %165, 0, !dbg !38
  %167 = extractvalue { i32, i32 } %165, 1, !dbg !38
  %168 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv61, !dbg !38
  store i32 %166, ptr %168, align 4, !dbg !38
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !38
  %exitcond63.not = icmp eq i64 %indvars.iv.next62, 6, !dbg !38
  br i1 %exitcond63.not, label %169, label %162, !dbg !38, !llvm.loop !39

169:                                              ; preds = %162
  %170 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !38
  store i32 %167, ptr %170, align 4, !dbg !38
  %171 = sub nsw i32 6, %161, !dbg !38
  %172 = sext i32 %171 to i64, !dbg !38
  %173 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %172, !dbg !38
  %174 = load i32, ptr %173, align 4, !dbg !38
  %175 = sub nsw i32 5, %161, !dbg !38
  %176 = sext i32 %175 to i64, !dbg !38
  %177 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %176, !dbg !38
  %178 = load i32, ptr %177, align 4, !dbg !38
  %179 = freeze i32 %178, !dbg !38
  %180 = and i32 %23, 260046848, !dbg !38
  %.not20.i = icmp eq i32 %180, 0, !dbg !38
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %181, !dbg !38

181:                                              ; preds = %169
  %182 = sub nsw i32 4, %161, !dbg !38
  %183 = sext i32 %182 to i64, !dbg !38
  %184 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %183, !dbg !38
  %185 = load i32, ptr %184, align 4, !dbg !38
  %186 = tail call i32 @llvm.fshl.i32(i32 %179, i32 %185, i32 %156), !dbg !38
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !38

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %181, %169
  %lo.i.i.i.0.i = phi i32 [ %186, %181 ], [ %179, %169 ], !dbg !38
  %187 = tail call i32 @llvm.fshl.i32(i32 %174, i32 %179, i32 %156), !dbg !38
  %188 = lshr i32 %187, 30, !dbg !38
  %189 = tail call i32 @llvm.fshl.i32(i32 %187, i32 %lo.i.i.i.0.i, i32 2), !dbg !38
  %190 = shl i32 %lo.i.i.i.0.i, 2, !dbg !38
  %191 = lshr i32 %189, 31, !dbg !38
  %192 = add nuw nsw i32 %191, %188, !dbg !38
  %193 = sub nsw i32 0, %192, !dbg !38
  %.not2123.i = icmp slt i32 %23, 0, !dbg !38
  %spec.select.i = select i1 %.not2123.i, i32 %193, i32 %192, !dbg !38
  %194 = xor i32 %189, %23, !dbg !38
  %.lobit.i = ashr i32 %189, 31, !dbg !38
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %189, !dbg !38
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %190, !dbg !38
  %195 = zext i32 %hi.i.i.i.2.i to i64, !dbg !38
  %196 = shl nuw i64 %195, 32, !dbg !38
  %197 = zext i32 %lo.i.i.i.1.i to i64, !dbg !38
  %198 = or disjoint i64 %196, %197, !dbg !38
  %199 = sitofp i64 %198 to double, !dbg !38
  %200 = fmul double %199, 0x3BF921FB54442D19, !dbg !38
  %201 = fptrunc double %200 to float, !dbg !38
  %202 = fneg float %201, !dbg !38
  %.not2526.i = icmp slt i32 %194, 0, !dbg !38
  %r.i.i.i.0.i = select i1 %.not2526.i, float %202, float %201, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !38

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !38
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !38
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not28.i = icmp eq i32 %203, 0, !dbg !38
  %204 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !38
  %205 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !38
  %.011.i = select i1 %.not28.i, float %205, float %204, !dbg !38
  %206 = and i32 %i.i.1.i, 1, !dbg !38
  %.not29.i = icmp eq i32 %206, 0, !dbg !38
  %207 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !38
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not30.i = icmp eq i32 %208, 0, !dbg !38
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %207, float 0.000000e+00) #4, !dbg !38
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %207, float 0.000000e+00) #4, !dbg !38
  %.012.i = select i1 %.not30.i, float %210, float %209, !dbg !38
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !38

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not31.i = icmp eq i32 %211, 0, !dbg !38
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !38
  %213 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !38
  %.013.i = select i1 %.not31.i, float %213, float %212, !dbg !38
  br label %__internal_fmad.exit2.i.i.i, !dbg !38

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %214 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !38
  %215 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !38
  %216 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !38
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not32.i = icmp eq i32 %217, 0, !dbg !38
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %.011.i, float %215) #4, !dbg !38
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %.011.i, float %215) #4, !dbg !38
  %.010.i = select i1 %.not32.i, float %219, float %218, !dbg !38
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not33.i = icmp eq i32 %220, 0, !dbg !38
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %214) #4, !dbg !38
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %214) #4, !dbg !38
  %.09.i = select i1 %.not33.i, float %222, float %221, !dbg !38
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not34.i = icmp eq i32 %223, 0, !dbg !38
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %207) #4, !dbg !38
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %207) #4, !dbg !38
  %.05.i = select i1 %.not34.i, float %225, float %224, !dbg !38
  %226 = and i32 %i.i.1.i, 2, !dbg !38
  %.not35.i = icmp eq i32 %226, 0, !dbg !38
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !38

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not36.i = icmp eq i32 %227, 0, !dbg !38
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %.0.i = select i1 %.not36.i, float %229, float %228, !dbg !38
  br label %__nv_sinf.exit, !dbg !38

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !38
  %230 = bitcast i16 %130 to half, !dbg !32
  %231 = fpext half %230 to float, !dbg !40
  %232 = fsub float 0.000000e+00, %231, !dbg !41
  %233 = bitcast i16 %136 to half, !dbg !37
  %234 = fpext half %233 to float, !dbg !42
  %235 = select i1 %124, float %232, float %234, !dbg !43
  %236 = bitcast i16 %17 to half, !dbg !17
  %237 = fpext half %236 to float, !dbg !44
  %238 = fmul float %z.i.i.0.i47, %237, !dbg !45
  %239 = srem i32 %12, 32, !dbg !46
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !38
  %240 = fmul float %235, %z.i.i.0.i, !dbg !47
  %241 = fadd float %238, %240, !dbg !48
  %242 = mul i32 %3, %239, !dbg !49
  %reass.add = add i32 %242, %14
  %reass.mul = shl i32 %reass.add, 7
  %243 = add i32 %reass.mul, %.decomposed, !dbg !50
  %244 = sext i32 %243 to i64, !dbg !51
  %245 = getelementptr half, ptr addrspace(1) %2, i64 %244, !dbg !51
  %246 = fptrunc float %241 to half, !dbg !52
  %247 = and i32 %9, 128, !dbg !52
  %248 = icmp eq i32 %247, 0, !dbg !52
  %249 = bitcast half %246 to i16, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %249, ptr addrspace(1) %245, i1 %248) #4, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c74cu5piannu2kyts54gyevikcp25xbtpxgzzz6hmumgpkx3ahdw.py", directory: "./local_cache/74")
!4 = !{ptr @triton_poi_fused_add_cat_clone_mul_4, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_clone_mul_4", linkageName: "triton_poi_fused_add_cat_clone_mul_4", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 19, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 24, column: 19, scope: !6)
!16 = !DILocation(line: 27, column: 30, scope: !6)
!17 = !DILocation(line: 27, column: 35, scope: !6)
!18 = !DILocation(line: 28, column: 46, scope: !6)
!19 = !DILocation(line: 28, column: 41, scope: !6)
!20 = !DILocation(line: 28, column: 35, scope: !6)
!21 = !DILocation(line: 28, column: 30, scope: !6)
!22 = !DILocation(line: 28, column: 53, scope: !6)
!23 = !DILocation(line: 29, column: 23, scope: !6)
!24 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.count", i32 1}
!27 = !DILocation(line: 38, column: 19, scope: !6)
!28 = !DILocation(line: 39, column: 40, scope: !6)
!29 = !DILocation(line: 39, column: 36, scope: !6)
!30 = !DILocation(line: 39, column: 46, scope: !6)
!31 = !DILocation(line: 39, column: 31, scope: !6)
!32 = !DILocation(line: 39, column: 52, scope: !6)
!33 = !DILocation(line: 43, column: 20, scope: !6)
!34 = !DILocation(line: 46, column: 49, scope: !6)
!35 = !DILocation(line: 46, column: 41, scope: !6)
!36 = !DILocation(line: 46, column: 31, scope: !6)
!37 = !DILocation(line: 46, column: 55, scope: !6)
!38 = !DILocation(line: 48, column: 24, scope: !6)
!39 = distinct !{!39, !26}
!40 = !DILocation(line: 39, column: 103, scope: !6)
!41 = !DILocation(line: 40, column: 13, scope: !6)
!42 = !DILocation(line: 46, column: 106, scope: !6)
!43 = !DILocation(line: 0, scope: !6)
!44 = !DILocation(line: 27, column: 44, scope: !6)
!45 = !DILocation(line: 33, column: 18, scope: !6)
!46 = !DILocation(line: 26, column: 28, scope: !6)
!47 = !DILocation(line: 51, column: 20, scope: !6)
!48 = !DILocation(line: 52, column: 19, scope: !6)
!49 = !DILocation(line: 53, column: 47, scope: !6)
!50 = !DILocation(line: 53, column: 39, scope: !6)
!51 = !DILocation(line: 53, column: 25, scope: !6)
!52 = !DILocation(line: 53, column: 59, scope: !6)
!53 = !DILocation(line: 53, column: 4, scope: !6)
