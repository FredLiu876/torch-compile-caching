; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_add_cat_clone_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i329 = alloca [7 x i32], align 4
  %result.i.i.i.i274 = alloca [7 x i32], align 4
  %result.i.i.i.i219 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 2, !dbg !11
  %11 = and i32 %10, 508, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = or disjoint i32 %12, 1, !dbg !12
  %14 = or disjoint i32 %12, 2, !dbg !12
  %15 = or disjoint i32 %12, 3, !dbg !12
  %16 = sdiv i32 %12, 128, !dbg !13
  %17 = mul i32 %16, 128, !dbg !14
  %.decomposed = sub i32 %12, %17, !dbg !14
  %18 = srem i32 %13, 128, !dbg !14
  %19 = srem i32 %14, 128, !dbg !14
  %20 = srem i32 %15, 128, !dbg !14
  %21 = sdiv i32 %12, 4096, !dbg !15
  %22 = sext i32 %12 to i64, !dbg !16
  %23 = getelementptr half, ptr addrspace(1) %0, i64 %22, !dbg !16
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %23) #4, !dbg !17
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !18
  %25 = srem i8 %.lhs.trunc, 64, !dbg !18
  %.sext = sext i8 %25 to i32, !dbg !18
  %.lhs.trunc384 = trunc nsw i32 %18 to i8, !dbg !18
  %26 = srem i8 %.lhs.trunc384, 64, !dbg !18
  %.sext385 = sext i8 %26 to i32, !dbg !18
  %.lhs.trunc386 = trunc nsw i32 %19 to i8, !dbg !18
  %27 = srem i8 %.lhs.trunc386, 64, !dbg !18
  %.sext387 = sext i8 %27 to i32, !dbg !18
  %.lhs.trunc388 = trunc nsw i32 %20 to i8, !dbg !18
  %28 = srem i8 %.lhs.trunc388, 64, !dbg !18
  %.sext389 = sext i8 %28 to i32, !dbg !18
  %29 = mul i32 %3, %.sext, !dbg !19
  %30 = mul i32 %3, %.sext385, !dbg !19
  %31 = mul i32 %3, %.sext387, !dbg !19
  %32 = mul i32 %3, %.sext389, !dbg !19
  %33 = add i32 %29, %21, !dbg !20
  %34 = add i32 %30, %21, !dbg !20
  %35 = add i32 %31, %21, !dbg !20
  %36 = add i32 %32, %21, !dbg !20
  %37 = sext i32 %33 to i64, !dbg !21
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !21
  %39 = sext i32 %34 to i64, !dbg !21
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !21
  %41 = sext i32 %35 to i64, !dbg !21
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !21
  %43 = sext i32 %36 to i64, !dbg !21
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !21
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %38) #4, !dbg !22
  %46 = bitcast i32 %45 to float, !dbg !22
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %40) #4, !dbg !22
  %48 = bitcast i32 %47 to float, !dbg !22
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %42) #4, !dbg !22
  %50 = bitcast i32 %49 to float, !dbg !22
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %44) #4, !dbg !22
  %52 = bitcast i32 %51 to float, !dbg !22
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !23
  %53 = fmul float %46, 0x3FE45F3060000000, !dbg !23
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i167 = icmp eq i32 %54, 0, !dbg !23
  %55 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %53) #4, !dbg !23
  %56 = tail call i32 @llvm.nvvm.f2i.rn(float %53) #4, !dbg !23
  %.01.i168 = select i1 %.not.i167, i32 %56, i32 %55, !dbg !23
  %57 = sitofp i32 %.01.i168 to float, !dbg !23
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i169 = icmp eq i32 %58, 0, !dbg !23
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0xBFF921FB40000000, float %46) #4, !dbg !23
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0xBFF921FB40000000, float %46) #4, !dbg !23
  %.02.i170 = select i1 %.not15.i169, float %60, float %59, !dbg !23
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i171 = icmp eq i32 %61, 0, !dbg !23
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !23
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !23
  %.03.i172 = select i1 %.not16.i171, float %63, float %62, !dbg !23
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i173 = icmp eq i32 %64, 0, !dbg !23
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !23
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !23
  %.04.i174 = select i1 %.not17.i173, float %66, float %65, !dbg !23
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i175 = icmp eq i32 %67, 0, !dbg !23
  %68 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #4, !dbg !23
  %69 = tail call float @llvm.nvvm.fabs.f(float %46) #4, !dbg !23
  %.06.i176 = select i1 %.not18.i175, float %69, float %68, !dbg !23
  %70 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !23
  br i1 %70, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !23

__nv_isinff.exit.i.i.i177:                        ; preds = %6
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i178 = icmp eq i32 %71, 0, !dbg !23
  %.07.i179 = select i1 %.not19.i178, float %69, float %68, !dbg !23
  %72 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !23
  br i1 %72, label %__nv_fmul_rn.exit.i.i.i216, label %76, !dbg !23

__nv_fmul_rn.exit.i.i.i216:                       ; preds = %__nv_isinff.exit.i.i.i177
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i217 = icmp eq i32 %73, 0, !dbg !23
  %74 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %46, float 0.000000e+00) #4, !dbg !23
  %75 = tail call float @llvm.nvvm.mul.rn.f(float %46, float 0.000000e+00) #4, !dbg !23
  %.08.i218 = select i1 %.not27.i217, float %75, float %74, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !23

76:                                               ; preds = %__nv_isinff.exit.i.i.i177
  %77 = lshr i32 %45, 23, !dbg !23
  %78 = and i32 %77, 224, !dbg !23
  %79 = add nsw i32 %78, -128, !dbg !23
  %80 = shl i32 %45, 8, !dbg !23
  %81 = or i32 %80, -2147483648, !dbg !23
  %82 = lshr exact i32 %79, 5, !dbg !23
  br label %83, !dbg !23

83:                                               ; preds = %76, %83
  %indvars.iv = phi i64 [ 0, %76 ], [ %indvars.iv.next, %83 ]
  %hi.i.i.i.0.i180390 = phi i32 [ 0, %76 ], [ %88, %83 ]
  %84 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !23
  %85 = load i32, ptr addrspace(1) %84, align 4, !dbg !23
  %86 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %85, i32 %81, i32 %hi.i.i.i.0.i180390) #5, !dbg !23, !srcloc !24
  %87 = extractvalue { i32, i32 } %86, 0, !dbg !23
  %88 = extractvalue { i32, i32 } %86, 1, !dbg !23
  %89 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv, !dbg !23
  store i32 %87, ptr %89, align 4, !dbg !23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !23
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !23
  br i1 %exitcond.not, label %90, label %83, !dbg !23, !llvm.loop !25

90:                                               ; preds = %83
  %91 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i166, i64 24, !dbg !23
  store i32 %88, ptr %91, align 4, !dbg !23
  %92 = sub nsw i32 6, %82, !dbg !23
  %93 = sext i32 %92 to i64, !dbg !23
  %94 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %93, !dbg !23
  %95 = load i32, ptr %94, align 4, !dbg !23
  %96 = sub nsw i32 5, %82, !dbg !23
  %97 = sext i32 %96 to i64, !dbg !23
  %98 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %97, !dbg !23
  %99 = load i32, ptr %98, align 4, !dbg !23
  %100 = freeze i32 %99, !dbg !23
  %101 = and i32 %45, 260046848, !dbg !23
  %.not20.i182 = icmp eq i32 %101, 0, !dbg !23
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %102, !dbg !23

102:                                              ; preds = %90
  %103 = sub nsw i32 4, %82, !dbg !23
  %104 = sext i32 %103 to i64, !dbg !23
  %105 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %104, !dbg !23
  %106 = load i32, ptr %105, align 4, !dbg !23
  %107 = tail call i32 @llvm.fshl.i32(i32 %100, i32 %106, i32 %77), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %102, %90
  %lo.i.i.i.0.i185 = phi i32 [ %107, %102 ], [ %100, %90 ], !dbg !23
  %108 = tail call i32 @llvm.fshl.i32(i32 %95, i32 %100, i32 %77), !dbg !23
  %109 = lshr i32 %108, 30, !dbg !23
  %110 = tail call i32 @llvm.fshl.i32(i32 %108, i32 %lo.i.i.i.0.i185, i32 2), !dbg !23
  %111 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !23
  %112 = lshr i32 %110, 31, !dbg !23
  %113 = add nuw nsw i32 %112, %109, !dbg !23
  %114 = sub nsw i32 0, %113, !dbg !23
  %.not2123.i186 = icmp slt i32 %45, 0, !dbg !23
  %spec.select.i187 = select i1 %.not2123.i186, i32 %114, i32 %113, !dbg !23
  %115 = xor i32 %110, %45, !dbg !23
  %.lobit.i188 = ashr i32 %110, 31, !dbg !23
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %110, !dbg !23
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %111, !dbg !23
  %116 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !23
  %117 = shl nuw i64 %116, 32, !dbg !23
  %118 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !23
  %119 = or disjoint i64 %117, %118, !dbg !23
  %120 = sitofp i64 %119 to double, !dbg !23
  %121 = fmul double %120, 0x3BF921FB54442D19, !dbg !23
  %122 = fptrunc double %121 to float, !dbg !23
  %123 = fneg float %122, !dbg !23
  %.not2526.i192 = icmp slt i32 %115, 0, !dbg !23
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %123, float %122, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !23

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i216, %6
  %i.i.1.i195 = phi i32 [ %.01.i168, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i216 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !23
  %t.i.i.1.i196 = phi float [ %.04.i174, %6 ], [ %.08.i218, %__nv_fmul_rn.exit.i.i.i216 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !23
  %124 = add i32 %i.i.1.i195, 1, !dbg !23
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i197 = icmp eq i32 %125, 0, !dbg !23
  %126 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !23
  %127 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !23
  %.011.i198 = select i1 %.not28.i197, float %127, float %126, !dbg !23
  %128 = and i32 %i.i.1.i195, 1, !dbg !23
  %.not29.not.i = icmp eq i32 %128, 0, !dbg !23
  %129 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i196, !dbg !23
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i199 = icmp eq i32 %130, 0, !dbg !23
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %129, float 0.000000e+00) #4, !dbg !23
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %129, float 0.000000e+00) #4, !dbg !23
  %.012.i200 = select i1 %.not30.i199, float %132, float %131, !dbg !23
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i213, label %__internal_fmad.exit2.i.i.i201, !dbg !23

__internal_fmad.exit1.i.i.i213:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i214 = icmp eq i32 %133, 0, !dbg !23
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !23
  %135 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i215 = select i1 %.not31.i214, float %135, float %134, !dbg !23
  br label %__internal_fmad.exit2.i.i.i201, !dbg !23

__internal_fmad.exit2.i.i.i201:                   ; preds = %__internal_fmad.exit1.i.i.i213, %__internal_trig_reduction_kernel.exit.i.i194
  %136 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i213 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !23
  %137 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i213 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !23
  %138 = phi float [ %.013.i215, %__internal_fmad.exit1.i.i.i213 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !23
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i202 = icmp eq i32 %139, 0, !dbg !23
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float %.011.i198, float %137) #4, !dbg !23
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %138, float %.011.i198, float %137) #4, !dbg !23
  %.010.i203 = select i1 %.not32.i202, float %141, float %140, !dbg !23
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i204 = icmp eq i32 %142, 0, !dbg !23
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i203, float %.011.i198, float %136) #4, !dbg !23
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i203, float %.011.i198, float %136) #4, !dbg !23
  %.09.i205 = select i1 %.not33.i204, float %144, float %143, !dbg !23
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i206 = icmp eq i32 %145, 0, !dbg !23
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i205, float %.012.i200, float %129) #4, !dbg !23
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i205, float %.012.i200, float %129) #4, !dbg !23
  %.05.i207 = select i1 %.not34.i206, float %147, float %146, !dbg !23
  %148 = and i32 %124, 2, !dbg !23
  %.not35.i208 = icmp eq i32 %148, 0, !dbg !23
  br i1 %.not35.i208, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i209, !dbg !23

__internal_fmad.exit5.i.i.i209:                   ; preds = %__internal_fmad.exit2.i.i.i201
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i210 = icmp eq i32 %149, 0, !dbg !23
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i207, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i207, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i211 = select i1 %.not36.i210, float %151, float %150, !dbg !23
  br label %__nv_cosf.exit, !dbg !23

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i201, %__internal_fmad.exit5.i.i.i209
  %z.i.i.0.i212 = phi float [ %.0.i211, %__internal_fmad.exit5.i.i.i209 ], [ %.05.i207, %__internal_fmad.exit2.i.i.i201 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i219), !dbg !23
  %152 = fmul float %48, 0x3FE45F3060000000, !dbg !23
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i220 = icmp eq i32 %153, 0, !dbg !23
  %154 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %152) #4, !dbg !23
  %155 = tail call i32 @llvm.nvvm.f2i.rn(float %152) #4, !dbg !23
  %.01.i221 = select i1 %.not.i220, i32 %155, i32 %154, !dbg !23
  %156 = sitofp i32 %.01.i221 to float, !dbg !23
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i222 = icmp eq i32 %157, 0, !dbg !23
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %156, float 0xBFF921FB40000000, float %48) #4, !dbg !23
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %156, float 0xBFF921FB40000000, float %48) #4, !dbg !23
  %.02.i223 = select i1 %.not15.i222, float %159, float %158, !dbg !23
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i224 = icmp eq i32 %160, 0, !dbg !23
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %156, float 0xBE74442D00000000, float %.02.i223) #4, !dbg !23
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %156, float 0xBE74442D00000000, float %.02.i223) #4, !dbg !23
  %.03.i225 = select i1 %.not16.i224, float %162, float %161, !dbg !23
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i226 = icmp eq i32 %163, 0, !dbg !23
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %156, float 0xBCF84698A0000000, float %.03.i225) #4, !dbg !23
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %156, float 0xBCF84698A0000000, float %.03.i225) #4, !dbg !23
  %.04.i227 = select i1 %.not17.i226, float %165, float %164, !dbg !23
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i228 = icmp eq i32 %166, 0, !dbg !23
  %167 = tail call float @llvm.nvvm.fabs.ftz.f(float %48) #4, !dbg !23
  %168 = tail call float @llvm.nvvm.fabs.f(float %48) #4, !dbg !23
  %.06.i229 = select i1 %.not18.i228, float %168, float %167, !dbg !23
  %169 = fcmp ult float %.06.i229, 1.056150e+05, !dbg !23
  br i1 %169, label %__internal_trig_reduction_kernel.exit.i.i247, label %__nv_isinff.exit.i.i.i230, !dbg !23

__nv_isinff.exit.i.i.i230:                        ; preds = %__nv_cosf.exit
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i231 = icmp eq i32 %170, 0, !dbg !23
  %.07.i232 = select i1 %.not19.i231, float %168, float %167, !dbg !23
  %171 = fcmp oeq float %.07.i232, 0x7FF0000000000000, !dbg !23
  br i1 %171, label %__nv_fmul_rn.exit.i.i.i270, label %175, !dbg !23

__nv_fmul_rn.exit.i.i.i270:                       ; preds = %__nv_isinff.exit.i.i.i230
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i271 = icmp eq i32 %172, 0, !dbg !23
  %173 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %48, float 0.000000e+00) #4, !dbg !23
  %174 = tail call float @llvm.nvvm.mul.rn.f(float %48, float 0.000000e+00) #4, !dbg !23
  %.08.i272 = select i1 %.not27.i271, float %174, float %173, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i247, !dbg !23

175:                                              ; preds = %__nv_isinff.exit.i.i.i230
  %176 = lshr i32 %47, 23, !dbg !23
  %177 = and i32 %176, 224, !dbg !23
  %178 = add nsw i32 %177, -128, !dbg !23
  %179 = shl i32 %47, 8, !dbg !23
  %180 = or i32 %179, -2147483648, !dbg !23
  %181 = lshr exact i32 %178, 5, !dbg !23
  br label %182, !dbg !23

182:                                              ; preds = %175, %182
  %indvars.iv421 = phi i64 [ 0, %175 ], [ %indvars.iv.next422, %182 ]
  %hi.i.i.i.0.i233392 = phi i32 [ 0, %175 ], [ %187, %182 ]
  %183 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv421, !dbg !23
  %184 = load i32, ptr addrspace(1) %183, align 4, !dbg !23
  %185 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %184, i32 %180, i32 %hi.i.i.i.0.i233392) #5, !dbg !23, !srcloc !24
  %186 = extractvalue { i32, i32 } %185, 0, !dbg !23
  %187 = extractvalue { i32, i32 } %185, 1, !dbg !23
  %188 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %indvars.iv421, !dbg !23
  store i32 %186, ptr %188, align 4, !dbg !23
  %indvars.iv.next422 = add nuw nsw i64 %indvars.iv421, 1, !dbg !23
  %exitcond423.not = icmp eq i64 %indvars.iv.next422, 6, !dbg !23
  br i1 %exitcond423.not, label %189, label %182, !dbg !23, !llvm.loop !27

189:                                              ; preds = %182
  %190 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i219, i64 24, !dbg !23
  store i32 %187, ptr %190, align 4, !dbg !23
  %191 = sub nsw i32 6, %181, !dbg !23
  %192 = sext i32 %191 to i64, !dbg !23
  %193 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %192, !dbg !23
  %194 = load i32, ptr %193, align 4, !dbg !23
  %195 = sub nsw i32 5, %181, !dbg !23
  %196 = sext i32 %195 to i64, !dbg !23
  %197 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %196, !dbg !23
  %198 = load i32, ptr %197, align 4, !dbg !23
  %199 = freeze i32 %198, !dbg !23
  %200 = and i32 %47, 260046848, !dbg !23
  %.not20.i235 = icmp eq i32 %200, 0, !dbg !23
  br i1 %.not20.i235, label %__internal_trig_reduction_slowpath.exit.i.i.i236, label %201, !dbg !23

201:                                              ; preds = %189
  %202 = sub nsw i32 4, %181, !dbg !23
  %203 = sext i32 %202 to i64, !dbg !23
  %204 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %203, !dbg !23
  %205 = load i32, ptr %204, align 4, !dbg !23
  %206 = tail call i32 @llvm.fshl.i32(i32 %199, i32 %205, i32 %176), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i236, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i236: ; preds = %201, %189
  %lo.i.i.i.0.i238 = phi i32 [ %206, %201 ], [ %199, %189 ], !dbg !23
  %207 = tail call i32 @llvm.fshl.i32(i32 %194, i32 %199, i32 %176), !dbg !23
  %208 = lshr i32 %207, 30, !dbg !23
  %209 = tail call i32 @llvm.fshl.i32(i32 %207, i32 %lo.i.i.i.0.i238, i32 2), !dbg !23
  %210 = shl i32 %lo.i.i.i.0.i238, 2, !dbg !23
  %211 = lshr i32 %209, 31, !dbg !23
  %212 = add nuw nsw i32 %211, %208, !dbg !23
  %213 = sub nsw i32 0, %212, !dbg !23
  %.not2123.i239 = icmp slt i32 %47, 0, !dbg !23
  %spec.select.i240 = select i1 %.not2123.i239, i32 %213, i32 %212, !dbg !23
  %214 = xor i32 %209, %47, !dbg !23
  %.lobit.i241 = ashr i32 %209, 31, !dbg !23
  %hi.i.i.i.2.i242 = xor i32 %.lobit.i241, %209, !dbg !23
  %lo.i.i.i.1.i244 = xor i32 %.lobit.i241, %210, !dbg !23
  %215 = zext i32 %hi.i.i.i.2.i242 to i64, !dbg !23
  %216 = shl nuw i64 %215, 32, !dbg !23
  %217 = zext i32 %lo.i.i.i.1.i244 to i64, !dbg !23
  %218 = or disjoint i64 %216, %217, !dbg !23
  %219 = sitofp i64 %218 to double, !dbg !23
  %220 = fmul double %219, 0x3BF921FB54442D19, !dbg !23
  %221 = fptrunc double %220 to float, !dbg !23
  %222 = fneg float %221, !dbg !23
  %.not2526.i245 = icmp slt i32 %214, 0, !dbg !23
  %r.i.i.i.0.i246 = select i1 %.not2526.i245, float %222, float %221, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i247, !dbg !23

__internal_trig_reduction_kernel.exit.i.i247:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i236, %__nv_fmul_rn.exit.i.i.i270, %__nv_cosf.exit
  %i.i.1.i248 = phi i32 [ %.01.i221, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i270 ], [ %spec.select.i240, %__internal_trig_reduction_slowpath.exit.i.i.i236 ], !dbg !23
  %t.i.i.1.i249 = phi float [ %.04.i227, %__nv_cosf.exit ], [ %.08.i272, %__nv_fmul_rn.exit.i.i.i270 ], [ %r.i.i.i.0.i246, %__internal_trig_reduction_slowpath.exit.i.i.i236 ], !dbg !23
  %223 = add i32 %i.i.1.i248, 1, !dbg !23
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i250 = icmp eq i32 %224, 0, !dbg !23
  %225 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i249, float %t.i.i.1.i249) #4, !dbg !23
  %226 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i249, float %t.i.i.1.i249) #4, !dbg !23
  %.011.i251 = select i1 %.not28.i250, float %226, float %225, !dbg !23
  %227 = and i32 %i.i.1.i248, 1, !dbg !23
  %.not29.not.i252 = icmp eq i32 %227, 0, !dbg !23
  %228 = select i1 %.not29.not.i252, float 1.000000e+00, float %t.i.i.1.i249, !dbg !23
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i253 = icmp eq i32 %229, 0, !dbg !23
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i251, float %228, float 0.000000e+00) #4, !dbg !23
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i251, float %228, float 0.000000e+00) #4, !dbg !23
  %.012.i254 = select i1 %.not30.i253, float %231, float %230, !dbg !23
  br i1 %.not29.not.i252, label %__internal_fmad.exit1.i.i.i267, label %__internal_fmad.exit2.i.i.i255, !dbg !23

__internal_fmad.exit1.i.i.i267:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i247
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i268 = icmp eq i32 %232, 0, !dbg !23
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i251, float 0xBF56C0FDA0000000) #4, !dbg !23
  %234 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i251, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i269 = select i1 %.not31.i268, float %234, float %233, !dbg !23
  br label %__internal_fmad.exit2.i.i.i255, !dbg !23

__internal_fmad.exit2.i.i.i255:                   ; preds = %__internal_fmad.exit1.i.i.i267, %__internal_trig_reduction_kernel.exit.i.i247
  %235 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i267 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !23
  %236 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i267 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !23
  %237 = phi float [ %.013.i269, %__internal_fmad.exit1.i.i.i267 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !23
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i256 = icmp eq i32 %238, 0, !dbg !23
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %.011.i251, float %236) #4, !dbg !23
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %.011.i251, float %236) #4, !dbg !23
  %.010.i257 = select i1 %.not32.i256, float %240, float %239, !dbg !23
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i258 = icmp eq i32 %241, 0, !dbg !23
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i257, float %.011.i251, float %235) #4, !dbg !23
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i257, float %.011.i251, float %235) #4, !dbg !23
  %.09.i259 = select i1 %.not33.i258, float %243, float %242, !dbg !23
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i260 = icmp eq i32 %244, 0, !dbg !23
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i259, float %.012.i254, float %228) #4, !dbg !23
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i259, float %.012.i254, float %228) #4, !dbg !23
  %.05.i261 = select i1 %.not34.i260, float %246, float %245, !dbg !23
  %247 = and i32 %223, 2, !dbg !23
  %.not35.i262 = icmp eq i32 %247, 0, !dbg !23
  br i1 %.not35.i262, label %__nv_cosf.exit273, label %__internal_fmad.exit5.i.i.i263, !dbg !23

__internal_fmad.exit5.i.i.i263:                   ; preds = %__internal_fmad.exit2.i.i.i255
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i264 = icmp eq i32 %248, 0, !dbg !23
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i265 = select i1 %.not36.i264, float %250, float %249, !dbg !23
  br label %__nv_cosf.exit273, !dbg !23

__nv_cosf.exit273:                                ; preds = %__internal_fmad.exit2.i.i.i255, %__internal_fmad.exit5.i.i.i263
  %z.i.i.0.i266 = phi float [ %.0.i265, %__internal_fmad.exit5.i.i.i263 ], [ %.05.i261, %__internal_fmad.exit2.i.i.i255 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i219), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i274), !dbg !23
  %251 = fmul float %50, 0x3FE45F3060000000, !dbg !23
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i275 = icmp eq i32 %252, 0, !dbg !23
  %253 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %251) #4, !dbg !23
  %254 = tail call i32 @llvm.nvvm.f2i.rn(float %251) #4, !dbg !23
  %.01.i276 = select i1 %.not.i275, i32 %254, i32 %253, !dbg !23
  %255 = sitofp i32 %.01.i276 to float, !dbg !23
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i277 = icmp eq i32 %256, 0, !dbg !23
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBFF921FB40000000, float %50) #4, !dbg !23
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBFF921FB40000000, float %50) #4, !dbg !23
  %.02.i278 = select i1 %.not15.i277, float %258, float %257, !dbg !23
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i279 = icmp eq i32 %259, 0, !dbg !23
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBE74442D00000000, float %.02.i278) #4, !dbg !23
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBE74442D00000000, float %.02.i278) #4, !dbg !23
  %.03.i280 = select i1 %.not16.i279, float %261, float %260, !dbg !23
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i281 = icmp eq i32 %262, 0, !dbg !23
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBCF84698A0000000, float %.03.i280) #4, !dbg !23
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBCF84698A0000000, float %.03.i280) #4, !dbg !23
  %.04.i282 = select i1 %.not17.i281, float %264, float %263, !dbg !23
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i283 = icmp eq i32 %265, 0, !dbg !23
  %266 = tail call float @llvm.nvvm.fabs.ftz.f(float %50) #4, !dbg !23
  %267 = tail call float @llvm.nvvm.fabs.f(float %50) #4, !dbg !23
  %.06.i284 = select i1 %.not18.i283, float %267, float %266, !dbg !23
  %268 = fcmp ult float %.06.i284, 1.056150e+05, !dbg !23
  br i1 %268, label %__internal_trig_reduction_kernel.exit.i.i302, label %__nv_isinff.exit.i.i.i285, !dbg !23

__nv_isinff.exit.i.i.i285:                        ; preds = %__nv_cosf.exit273
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i286 = icmp eq i32 %269, 0, !dbg !23
  %.07.i287 = select i1 %.not19.i286, float %267, float %266, !dbg !23
  %270 = fcmp oeq float %.07.i287, 0x7FF0000000000000, !dbg !23
  br i1 %270, label %__nv_fmul_rn.exit.i.i.i325, label %274, !dbg !23

__nv_fmul_rn.exit.i.i.i325:                       ; preds = %__nv_isinff.exit.i.i.i285
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i326 = icmp eq i32 %271, 0, !dbg !23
  %272 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %50, float 0.000000e+00) #4, !dbg !23
  %273 = tail call float @llvm.nvvm.mul.rn.f(float %50, float 0.000000e+00) #4, !dbg !23
  %.08.i327 = select i1 %.not27.i326, float %273, float %272, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i302, !dbg !23

274:                                              ; preds = %__nv_isinff.exit.i.i.i285
  %275 = lshr i32 %49, 23, !dbg !23
  %276 = and i32 %275, 224, !dbg !23
  %277 = add nsw i32 %276, -128, !dbg !23
  %278 = shl i32 %49, 8, !dbg !23
  %279 = or i32 %278, -2147483648, !dbg !23
  %280 = lshr exact i32 %277, 5, !dbg !23
  br label %281, !dbg !23

281:                                              ; preds = %274, %281
  %indvars.iv424 = phi i64 [ 0, %274 ], [ %indvars.iv.next425, %281 ]
  %hi.i.i.i.0.i288394 = phi i32 [ 0, %274 ], [ %286, %281 ]
  %282 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv424, !dbg !23
  %283 = load i32, ptr addrspace(1) %282, align 4, !dbg !23
  %284 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %283, i32 %279, i32 %hi.i.i.i.0.i288394) #5, !dbg !23, !srcloc !24
  %285 = extractvalue { i32, i32 } %284, 0, !dbg !23
  %286 = extractvalue { i32, i32 } %284, 1, !dbg !23
  %287 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %indvars.iv424, !dbg !23
  store i32 %285, ptr %287, align 4, !dbg !23
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1, !dbg !23
  %exitcond426.not = icmp eq i64 %indvars.iv.next425, 6, !dbg !23
  br i1 %exitcond426.not, label %288, label %281, !dbg !23, !llvm.loop !28

288:                                              ; preds = %281
  %289 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i274, i64 24, !dbg !23
  store i32 %286, ptr %289, align 4, !dbg !23
  %290 = sub nsw i32 6, %280, !dbg !23
  %291 = sext i32 %290 to i64, !dbg !23
  %292 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %291, !dbg !23
  %293 = load i32, ptr %292, align 4, !dbg !23
  %294 = sub nsw i32 5, %280, !dbg !23
  %295 = sext i32 %294 to i64, !dbg !23
  %296 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %295, !dbg !23
  %297 = load i32, ptr %296, align 4, !dbg !23
  %298 = freeze i32 %297, !dbg !23
  %299 = and i32 %49, 260046848, !dbg !23
  %.not20.i290 = icmp eq i32 %299, 0, !dbg !23
  br i1 %.not20.i290, label %__internal_trig_reduction_slowpath.exit.i.i.i291, label %300, !dbg !23

300:                                              ; preds = %288
  %301 = sub nsw i32 4, %280, !dbg !23
  %302 = sext i32 %301 to i64, !dbg !23
  %303 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %302, !dbg !23
  %304 = load i32, ptr %303, align 4, !dbg !23
  %305 = tail call i32 @llvm.fshl.i32(i32 %298, i32 %304, i32 %275), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i291, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i291: ; preds = %300, %288
  %lo.i.i.i.0.i293 = phi i32 [ %305, %300 ], [ %298, %288 ], !dbg !23
  %306 = tail call i32 @llvm.fshl.i32(i32 %293, i32 %298, i32 %275), !dbg !23
  %307 = lshr i32 %306, 30, !dbg !23
  %308 = tail call i32 @llvm.fshl.i32(i32 %306, i32 %lo.i.i.i.0.i293, i32 2), !dbg !23
  %309 = shl i32 %lo.i.i.i.0.i293, 2, !dbg !23
  %310 = lshr i32 %308, 31, !dbg !23
  %311 = add nuw nsw i32 %310, %307, !dbg !23
  %312 = sub nsw i32 0, %311, !dbg !23
  %.not2123.i294 = icmp slt i32 %49, 0, !dbg !23
  %spec.select.i295 = select i1 %.not2123.i294, i32 %312, i32 %311, !dbg !23
  %313 = xor i32 %308, %49, !dbg !23
  %.lobit.i296 = ashr i32 %308, 31, !dbg !23
  %hi.i.i.i.2.i297 = xor i32 %.lobit.i296, %308, !dbg !23
  %lo.i.i.i.1.i299 = xor i32 %.lobit.i296, %309, !dbg !23
  %314 = zext i32 %hi.i.i.i.2.i297 to i64, !dbg !23
  %315 = shl nuw i64 %314, 32, !dbg !23
  %316 = zext i32 %lo.i.i.i.1.i299 to i64, !dbg !23
  %317 = or disjoint i64 %315, %316, !dbg !23
  %318 = sitofp i64 %317 to double, !dbg !23
  %319 = fmul double %318, 0x3BF921FB54442D19, !dbg !23
  %320 = fptrunc double %319 to float, !dbg !23
  %321 = fneg float %320, !dbg !23
  %.not2526.i300 = icmp slt i32 %313, 0, !dbg !23
  %r.i.i.i.0.i301 = select i1 %.not2526.i300, float %321, float %320, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i302, !dbg !23

__internal_trig_reduction_kernel.exit.i.i302:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i291, %__nv_fmul_rn.exit.i.i.i325, %__nv_cosf.exit273
  %i.i.1.i303 = phi i32 [ %.01.i276, %__nv_cosf.exit273 ], [ 0, %__nv_fmul_rn.exit.i.i.i325 ], [ %spec.select.i295, %__internal_trig_reduction_slowpath.exit.i.i.i291 ], !dbg !23
  %t.i.i.1.i304 = phi float [ %.04.i282, %__nv_cosf.exit273 ], [ %.08.i327, %__nv_fmul_rn.exit.i.i.i325 ], [ %r.i.i.i.0.i301, %__internal_trig_reduction_slowpath.exit.i.i.i291 ], !dbg !23
  %322 = add i32 %i.i.1.i303, 1, !dbg !23
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i305 = icmp eq i32 %323, 0, !dbg !23
  %324 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i304, float %t.i.i.1.i304) #4, !dbg !23
  %325 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i304, float %t.i.i.1.i304) #4, !dbg !23
  %.011.i306 = select i1 %.not28.i305, float %325, float %324, !dbg !23
  %326 = and i32 %i.i.1.i303, 1, !dbg !23
  %.not29.not.i307 = icmp eq i32 %326, 0, !dbg !23
  %327 = select i1 %.not29.not.i307, float 1.000000e+00, float %t.i.i.1.i304, !dbg !23
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i308 = icmp eq i32 %328, 0, !dbg !23
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i306, float %327, float 0.000000e+00) #4, !dbg !23
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i306, float %327, float 0.000000e+00) #4, !dbg !23
  %.012.i309 = select i1 %.not30.i308, float %330, float %329, !dbg !23
  br i1 %.not29.not.i307, label %__internal_fmad.exit1.i.i.i322, label %__internal_fmad.exit2.i.i.i310, !dbg !23

__internal_fmad.exit1.i.i.i322:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i302
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i323 = icmp eq i32 %331, 0, !dbg !23
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i306, float 0xBF56C0FDA0000000) #4, !dbg !23
  %333 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i306, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i324 = select i1 %.not31.i323, float %333, float %332, !dbg !23
  br label %__internal_fmad.exit2.i.i.i310, !dbg !23

__internal_fmad.exit2.i.i.i310:                   ; preds = %__internal_fmad.exit1.i.i.i322, %__internal_trig_reduction_kernel.exit.i.i302
  %334 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i322 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !23
  %335 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i322 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !23
  %336 = phi float [ %.013.i324, %__internal_fmad.exit1.i.i.i322 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !23
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i311 = icmp eq i32 %337, 0, !dbg !23
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %336, float %.011.i306, float %335) #4, !dbg !23
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %336, float %.011.i306, float %335) #4, !dbg !23
  %.010.i312 = select i1 %.not32.i311, float %339, float %338, !dbg !23
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i313 = icmp eq i32 %340, 0, !dbg !23
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i312, float %.011.i306, float %334) #4, !dbg !23
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i312, float %.011.i306, float %334) #4, !dbg !23
  %.09.i314 = select i1 %.not33.i313, float %342, float %341, !dbg !23
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i315 = icmp eq i32 %343, 0, !dbg !23
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i314, float %.012.i309, float %327) #4, !dbg !23
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i314, float %.012.i309, float %327) #4, !dbg !23
  %.05.i316 = select i1 %.not34.i315, float %345, float %344, !dbg !23
  %346 = and i32 %322, 2, !dbg !23
  %.not35.i317 = icmp eq i32 %346, 0, !dbg !23
  br i1 %.not35.i317, label %__nv_cosf.exit328, label %__internal_fmad.exit5.i.i.i318, !dbg !23

__internal_fmad.exit5.i.i.i318:                   ; preds = %__internal_fmad.exit2.i.i.i310
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i319 = icmp eq i32 %347, 0, !dbg !23
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i316, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i316, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i320 = select i1 %.not36.i319, float %349, float %348, !dbg !23
  br label %__nv_cosf.exit328, !dbg !23

__nv_cosf.exit328:                                ; preds = %__internal_fmad.exit2.i.i.i310, %__internal_fmad.exit5.i.i.i318
  %z.i.i.0.i321 = phi float [ %.0.i320, %__internal_fmad.exit5.i.i.i318 ], [ %.05.i316, %__internal_fmad.exit2.i.i.i310 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i274), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i329), !dbg !23
  %350 = fmul float %52, 0x3FE45F3060000000, !dbg !23
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i330 = icmp eq i32 %351, 0, !dbg !23
  %352 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %350) #4, !dbg !23
  %353 = tail call i32 @llvm.nvvm.f2i.rn(float %350) #4, !dbg !23
  %.01.i331 = select i1 %.not.i330, i32 %353, i32 %352, !dbg !23
  %354 = sitofp i32 %.01.i331 to float, !dbg !23
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i332 = icmp eq i32 %355, 0, !dbg !23
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float 0xBFF921FB40000000, float %52) #4, !dbg !23
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %354, float 0xBFF921FB40000000, float %52) #4, !dbg !23
  %.02.i333 = select i1 %.not15.i332, float %357, float %356, !dbg !23
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i334 = icmp eq i32 %358, 0, !dbg !23
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float 0xBE74442D00000000, float %.02.i333) #4, !dbg !23
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %354, float 0xBE74442D00000000, float %.02.i333) #4, !dbg !23
  %.03.i335 = select i1 %.not16.i334, float %360, float %359, !dbg !23
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i336 = icmp eq i32 %361, 0, !dbg !23
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float 0xBCF84698A0000000, float %.03.i335) #4, !dbg !23
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %354, float 0xBCF84698A0000000, float %.03.i335) #4, !dbg !23
  %.04.i337 = select i1 %.not17.i336, float %363, float %362, !dbg !23
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i338 = icmp eq i32 %364, 0, !dbg !23
  %365 = tail call float @llvm.nvvm.fabs.ftz.f(float %52) #4, !dbg !23
  %366 = tail call float @llvm.nvvm.fabs.f(float %52) #4, !dbg !23
  %.06.i339 = select i1 %.not18.i338, float %366, float %365, !dbg !23
  %367 = fcmp ult float %.06.i339, 1.056150e+05, !dbg !23
  br i1 %367, label %__internal_trig_reduction_kernel.exit.i.i357, label %__nv_isinff.exit.i.i.i340, !dbg !23

__nv_isinff.exit.i.i.i340:                        ; preds = %__nv_cosf.exit328
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i341 = icmp eq i32 %368, 0, !dbg !23
  %.07.i342 = select i1 %.not19.i341, float %366, float %365, !dbg !23
  %369 = fcmp oeq float %.07.i342, 0x7FF0000000000000, !dbg !23
  br i1 %369, label %__nv_fmul_rn.exit.i.i.i380, label %373, !dbg !23

__nv_fmul_rn.exit.i.i.i380:                       ; preds = %__nv_isinff.exit.i.i.i340
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i381 = icmp eq i32 %370, 0, !dbg !23
  %371 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %52, float 0.000000e+00) #4, !dbg !23
  %372 = tail call float @llvm.nvvm.mul.rn.f(float %52, float 0.000000e+00) #4, !dbg !23
  %.08.i382 = select i1 %.not27.i381, float %372, float %371, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i357, !dbg !23

373:                                              ; preds = %__nv_isinff.exit.i.i.i340
  %374 = lshr i32 %51, 23, !dbg !23
  %375 = and i32 %374, 224, !dbg !23
  %376 = add nsw i32 %375, -128, !dbg !23
  %377 = shl i32 %51, 8, !dbg !23
  %378 = or i32 %377, -2147483648, !dbg !23
  %379 = lshr exact i32 %376, 5, !dbg !23
  br label %380, !dbg !23

380:                                              ; preds = %373, %380
  %indvars.iv427 = phi i64 [ 0, %373 ], [ %indvars.iv.next428, %380 ]
  %hi.i.i.i.0.i343396 = phi i32 [ 0, %373 ], [ %385, %380 ]
  %381 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv427, !dbg !23
  %382 = load i32, ptr addrspace(1) %381, align 4, !dbg !23
  %383 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %382, i32 %378, i32 %hi.i.i.i.0.i343396) #5, !dbg !23, !srcloc !24
  %384 = extractvalue { i32, i32 } %383, 0, !dbg !23
  %385 = extractvalue { i32, i32 } %383, 1, !dbg !23
  %386 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %indvars.iv427, !dbg !23
  store i32 %384, ptr %386, align 4, !dbg !23
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1, !dbg !23
  %exitcond429.not = icmp eq i64 %indvars.iv.next428, 6, !dbg !23
  br i1 %exitcond429.not, label %387, label %380, !dbg !23, !llvm.loop !29

387:                                              ; preds = %380
  %388 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i329, i64 24, !dbg !23
  store i32 %385, ptr %388, align 4, !dbg !23
  %389 = sub nsw i32 6, %379, !dbg !23
  %390 = sext i32 %389 to i64, !dbg !23
  %391 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %390, !dbg !23
  %392 = load i32, ptr %391, align 4, !dbg !23
  %393 = sub nsw i32 5, %379, !dbg !23
  %394 = sext i32 %393 to i64, !dbg !23
  %395 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %394, !dbg !23
  %396 = load i32, ptr %395, align 4, !dbg !23
  %397 = freeze i32 %396, !dbg !23
  %398 = and i32 %51, 260046848, !dbg !23
  %.not20.i345 = icmp eq i32 %398, 0, !dbg !23
  br i1 %.not20.i345, label %__internal_trig_reduction_slowpath.exit.i.i.i346, label %399, !dbg !23

399:                                              ; preds = %387
  %400 = sub nsw i32 4, %379, !dbg !23
  %401 = sext i32 %400 to i64, !dbg !23
  %402 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %401, !dbg !23
  %403 = load i32, ptr %402, align 4, !dbg !23
  %404 = tail call i32 @llvm.fshl.i32(i32 %397, i32 %403, i32 %374), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i346, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i346: ; preds = %399, %387
  %lo.i.i.i.0.i348 = phi i32 [ %404, %399 ], [ %397, %387 ], !dbg !23
  %405 = tail call i32 @llvm.fshl.i32(i32 %392, i32 %397, i32 %374), !dbg !23
  %406 = lshr i32 %405, 30, !dbg !23
  %407 = tail call i32 @llvm.fshl.i32(i32 %405, i32 %lo.i.i.i.0.i348, i32 2), !dbg !23
  %408 = shl i32 %lo.i.i.i.0.i348, 2, !dbg !23
  %409 = lshr i32 %407, 31, !dbg !23
  %410 = add nuw nsw i32 %409, %406, !dbg !23
  %411 = sub nsw i32 0, %410, !dbg !23
  %.not2123.i349 = icmp slt i32 %51, 0, !dbg !23
  %spec.select.i350 = select i1 %.not2123.i349, i32 %411, i32 %410, !dbg !23
  %412 = xor i32 %407, %51, !dbg !23
  %.lobit.i351 = ashr i32 %407, 31, !dbg !23
  %hi.i.i.i.2.i352 = xor i32 %.lobit.i351, %407, !dbg !23
  %lo.i.i.i.1.i354 = xor i32 %.lobit.i351, %408, !dbg !23
  %413 = zext i32 %hi.i.i.i.2.i352 to i64, !dbg !23
  %414 = shl nuw i64 %413, 32, !dbg !23
  %415 = zext i32 %lo.i.i.i.1.i354 to i64, !dbg !23
  %416 = or disjoint i64 %414, %415, !dbg !23
  %417 = sitofp i64 %416 to double, !dbg !23
  %418 = fmul double %417, 0x3BF921FB54442D19, !dbg !23
  %419 = fptrunc double %418 to float, !dbg !23
  %420 = fneg float %419, !dbg !23
  %.not2526.i355 = icmp slt i32 %412, 0, !dbg !23
  %r.i.i.i.0.i356 = select i1 %.not2526.i355, float %420, float %419, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i357, !dbg !23

__internal_trig_reduction_kernel.exit.i.i357:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i346, %__nv_fmul_rn.exit.i.i.i380, %__nv_cosf.exit328
  %i.i.1.i358 = phi i32 [ %.01.i331, %__nv_cosf.exit328 ], [ 0, %__nv_fmul_rn.exit.i.i.i380 ], [ %spec.select.i350, %__internal_trig_reduction_slowpath.exit.i.i.i346 ], !dbg !23
  %t.i.i.1.i359 = phi float [ %.04.i337, %__nv_cosf.exit328 ], [ %.08.i382, %__nv_fmul_rn.exit.i.i.i380 ], [ %r.i.i.i.0.i356, %__internal_trig_reduction_slowpath.exit.i.i.i346 ], !dbg !23
  %421 = add i32 %i.i.1.i358, 1, !dbg !23
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i360 = icmp eq i32 %422, 0, !dbg !23
  %423 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i359, float %t.i.i.1.i359) #4, !dbg !23
  %424 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i359, float %t.i.i.1.i359) #4, !dbg !23
  %.011.i361 = select i1 %.not28.i360, float %424, float %423, !dbg !23
  %425 = and i32 %i.i.1.i358, 1, !dbg !23
  %.not29.not.i362 = icmp eq i32 %425, 0, !dbg !23
  %426 = select i1 %.not29.not.i362, float 1.000000e+00, float %t.i.i.1.i359, !dbg !23
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i363 = icmp eq i32 %427, 0, !dbg !23
  %428 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i361, float %426, float 0.000000e+00) #4, !dbg !23
  %429 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i361, float %426, float 0.000000e+00) #4, !dbg !23
  %.012.i364 = select i1 %.not30.i363, float %429, float %428, !dbg !23
  br i1 %.not29.not.i362, label %__internal_fmad.exit1.i.i.i377, label %__internal_fmad.exit2.i.i.i365, !dbg !23

__internal_fmad.exit1.i.i.i377:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i357
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i378 = icmp eq i32 %430, 0, !dbg !23
  %431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i361, float 0xBF56C0FDA0000000) #4, !dbg !23
  %432 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i361, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i379 = select i1 %.not31.i378, float %432, float %431, !dbg !23
  br label %__internal_fmad.exit2.i.i.i365, !dbg !23

__internal_fmad.exit2.i.i.i365:                   ; preds = %__internal_fmad.exit1.i.i.i377, %__internal_trig_reduction_kernel.exit.i.i357
  %433 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i377 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !23
  %434 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i377 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !23
  %435 = phi float [ %.013.i379, %__internal_fmad.exit1.i.i.i377 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !23
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i366 = icmp eq i32 %436, 0, !dbg !23
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float %.011.i361, float %434) #4, !dbg !23
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %435, float %.011.i361, float %434) #4, !dbg !23
  %.010.i367 = select i1 %.not32.i366, float %438, float %437, !dbg !23
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i368 = icmp eq i32 %439, 0, !dbg !23
  %440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i367, float %.011.i361, float %433) #4, !dbg !23
  %441 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i367, float %.011.i361, float %433) #4, !dbg !23
  %.09.i369 = select i1 %.not33.i368, float %441, float %440, !dbg !23
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i370 = icmp eq i32 %442, 0, !dbg !23
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i369, float %.012.i364, float %426) #4, !dbg !23
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i369, float %.012.i364, float %426) #4, !dbg !23
  %.05.i371 = select i1 %.not34.i370, float %444, float %443, !dbg !23
  %445 = and i32 %421, 2, !dbg !23
  %.not35.i372 = icmp eq i32 %445, 0, !dbg !23
  br i1 %.not35.i372, label %__nv_cosf.exit383, label %__internal_fmad.exit5.i.i.i373, !dbg !23

__internal_fmad.exit5.i.i.i373:                   ; preds = %__internal_fmad.exit2.i.i.i365
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i374 = icmp eq i32 %446, 0, !dbg !23
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i371, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i371, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i375 = select i1 %.not36.i374, float %448, float %447, !dbg !23
  br label %__nv_cosf.exit383, !dbg !23

__nv_cosf.exit383:                                ; preds = %__internal_fmad.exit2.i.i.i365, %__internal_fmad.exit5.i.i.i373
  %z.i.i.0.i376 = phi float [ %.0.i375, %__internal_fmad.exit5.i.i.i373 ], [ %.05.i371, %__internal_fmad.exit2.i.i.i365 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i329), !dbg !23
  %449 = icmp slt i32 %.decomposed, 64, !dbg !30
  %450 = shl nsw i32 %16, 7, !dbg !31
  %451 = add nsw i32 %.decomposed, 64, !dbg !32
  %452 = add i32 %451, %450, !dbg !33
  %453 = sext i32 %452 to i64, !dbg !34
  %454 = getelementptr half, ptr addrspace(1) %0, i64 %453, !dbg !34
  %455 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %454, i1 %449) #4, !dbg !35
  %456 = icmp sgt i32 %.decomposed, 63, !dbg !36
  %457 = add nsw i32 %.decomposed, -64, !dbg !37
  %458 = add i32 %457, %450, !dbg !38
  %459 = sext i32 %458 to i64, !dbg !39
  %460 = getelementptr half, ptr addrspace(1) %0, i64 %459, !dbg !39
  %461 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %460, i1 %456) #4, !dbg !40
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !41
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not.i = icmp eq i32 %462, 0, !dbg !41
  %.01.i = select i1 %.not.i, i32 %56, i32 %55, !dbg !41
  %463 = sitofp i32 %.01.i to float, !dbg !41
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not15.i = icmp eq i32 %464, 0, !dbg !41
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %463, float 0xBFF921FB40000000, float %46) #4, !dbg !41
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %463, float 0xBFF921FB40000000, float %46) #4, !dbg !41
  %.02.i = select i1 %.not15.i, float %466, float %465, !dbg !41
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not16.i = icmp eq i32 %467, 0, !dbg !41
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %463, float 0xBE74442D00000000, float %.02.i) #4, !dbg !41
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %463, float 0xBE74442D00000000, float %.02.i) #4, !dbg !41
  %.03.i = select i1 %.not16.i, float %469, float %468, !dbg !41
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not17.i = icmp eq i32 %470, 0, !dbg !41
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %463, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !41
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %463, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !41
  %.04.i = select i1 %.not17.i, float %472, float %471, !dbg !41
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not18.i = icmp eq i32 %473, 0, !dbg !41
  %.06.i = select i1 %.not18.i, float %69, float %68, !dbg !41
  %474 = fcmp ult float %.06.i, 1.056150e+05, !dbg !41
  br i1 %474, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !41

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit383
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not19.i = icmp eq i32 %475, 0, !dbg !41
  %.07.i = select i1 %.not19.i, float %69, float %68, !dbg !41
  %476 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !41
  br i1 %476, label %__nv_fmul_rn.exit.i.i.i, label %480, !dbg !41

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not27.i = icmp eq i32 %477, 0, !dbg !41
  %478 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %46, float 0.000000e+00) #4, !dbg !41
  %479 = tail call float @llvm.nvvm.mul.rn.f(float %46, float 0.000000e+00) #4, !dbg !41
  %.08.i = select i1 %.not27.i, float %479, float %478, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !41

480:                                              ; preds = %__nv_isinff.exit.i.i.i
  %481 = lshr i32 %45, 23, !dbg !41
  %482 = and i32 %481, 224, !dbg !41
  %483 = add nsw i32 %482, -128, !dbg !41
  %484 = shl i32 %45, 8, !dbg !41
  %485 = or i32 %484, -2147483648, !dbg !41
  %486 = lshr exact i32 %483, 5, !dbg !41
  br label %487, !dbg !41

487:                                              ; preds = %480, %487
  %indvars.iv430 = phi i64 [ 0, %480 ], [ %indvars.iv.next431, %487 ]
  %hi.i.i.i.0.i398 = phi i32 [ 0, %480 ], [ %492, %487 ]
  %488 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv430, !dbg !41
  %489 = load i32, ptr addrspace(1) %488, align 4, !dbg !41
  %490 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %489, i32 %485, i32 %hi.i.i.i.0.i398) #5, !dbg !41, !srcloc !24
  %491 = extractvalue { i32, i32 } %490, 0, !dbg !41
  %492 = extractvalue { i32, i32 } %490, 1, !dbg !41
  %493 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv430, !dbg !41
  store i32 %491, ptr %493, align 4, !dbg !41
  %indvars.iv.next431 = add nuw nsw i64 %indvars.iv430, 1, !dbg !41
  %exitcond432.not = icmp eq i64 %indvars.iv.next431, 6, !dbg !41
  br i1 %exitcond432.not, label %494, label %487, !dbg !41, !llvm.loop !42

494:                                              ; preds = %487
  %495 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !41
  store i32 %492, ptr %495, align 4, !dbg !41
  %496 = sub nsw i32 6, %486, !dbg !41
  %497 = sext i32 %496 to i64, !dbg !41
  %498 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %497, !dbg !41
  %499 = load i32, ptr %498, align 4, !dbg !41
  %500 = sub nsw i32 5, %486, !dbg !41
  %501 = sext i32 %500 to i64, !dbg !41
  %502 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %501, !dbg !41
  %503 = load i32, ptr %502, align 4, !dbg !41
  %504 = freeze i32 %503, !dbg !41
  %505 = and i32 %45, 260046848, !dbg !41
  %.not20.i = icmp eq i32 %505, 0, !dbg !41
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %506, !dbg !41

506:                                              ; preds = %494
  %507 = sub nsw i32 4, %486, !dbg !41
  %508 = sext i32 %507 to i64, !dbg !41
  %509 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %508, !dbg !41
  %510 = load i32, ptr %509, align 4, !dbg !41
  %511 = tail call i32 @llvm.fshl.i32(i32 %504, i32 %510, i32 %481), !dbg !41
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !41

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %506, %494
  %lo.i.i.i.0.i = phi i32 [ %511, %506 ], [ %504, %494 ], !dbg !41
  %512 = tail call i32 @llvm.fshl.i32(i32 %499, i32 %504, i32 %481), !dbg !41
  %513 = lshr i32 %512, 30, !dbg !41
  %514 = tail call i32 @llvm.fshl.i32(i32 %512, i32 %lo.i.i.i.0.i, i32 2), !dbg !41
  %515 = shl i32 %lo.i.i.i.0.i, 2, !dbg !41
  %516 = lshr i32 %514, 31, !dbg !41
  %517 = add nuw nsw i32 %516, %513, !dbg !41
  %518 = sub nsw i32 0, %517, !dbg !41
  %.not2123.i = icmp slt i32 %45, 0, !dbg !41
  %spec.select.i = select i1 %.not2123.i, i32 %518, i32 %517, !dbg !41
  %519 = xor i32 %514, %45, !dbg !41
  %.lobit.i = ashr i32 %514, 31, !dbg !41
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %514, !dbg !41
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %515, !dbg !41
  %520 = zext i32 %hi.i.i.i.2.i to i64, !dbg !41
  %521 = shl nuw i64 %520, 32, !dbg !41
  %522 = zext i32 %lo.i.i.i.1.i to i64, !dbg !41
  %523 = or disjoint i64 %521, %522, !dbg !41
  %524 = sitofp i64 %523 to double, !dbg !41
  %525 = fmul double %524, 0x3BF921FB54442D19, !dbg !41
  %526 = fptrunc double %525 to float, !dbg !41
  %527 = fneg float %526, !dbg !41
  %.not2526.i = icmp slt i32 %519, 0, !dbg !41
  %r.i.i.i.0.i = select i1 %.not2526.i, float %527, float %526, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !41

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit383
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit383 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !41
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit383 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !41
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not28.i = icmp eq i32 %528, 0, !dbg !41
  %529 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !41
  %530 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !41
  %.011.i = select i1 %.not28.i, float %530, float %529, !dbg !41
  %531 = and i32 %i.i.1.i, 1, !dbg !41
  %.not29.i = icmp eq i32 %531, 0, !dbg !41
  %532 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !41
  %533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not30.i = icmp eq i32 %533, 0, !dbg !41
  %534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %532, float 0.000000e+00) #4, !dbg !41
  %535 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %532, float 0.000000e+00) #4, !dbg !41
  %.012.i = select i1 %.not30.i, float %535, float %534, !dbg !41
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !41

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not31.i = icmp eq i32 %536, 0, !dbg !41
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !41
  %538 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !41
  %.013.i = select i1 %.not31.i, float %538, float %537, !dbg !41
  br label %__internal_fmad.exit2.i.i.i, !dbg !41

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %539 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !41
  %540 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !41
  %541 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !41
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not32.i = icmp eq i32 %542, 0, !dbg !41
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %541, float %.011.i, float %540) #4, !dbg !41
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %541, float %.011.i, float %540) #4, !dbg !41
  %.010.i = select i1 %.not32.i, float %544, float %543, !dbg !41
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not33.i = icmp eq i32 %545, 0, !dbg !41
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %539) #4, !dbg !41
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %539) #4, !dbg !41
  %.09.i = select i1 %.not33.i, float %547, float %546, !dbg !41
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not34.i = icmp eq i32 %548, 0, !dbg !41
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %532) #4, !dbg !41
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %532) #4, !dbg !41
  %.05.i = select i1 %.not34.i, float %550, float %549, !dbg !41
  %551 = and i32 %i.i.1.i, 2, !dbg !41
  %.not35.i = icmp eq i32 %551, 0, !dbg !41
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !41

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not36.i = icmp eq i32 %552, 0, !dbg !41
  %553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %554 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %.0.i = select i1 %.not36.i, float %554, float %553, !dbg !41
  br label %__nv_sinf.exit, !dbg !41

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !41
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !41
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !41
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not.i2 = icmp eq i32 %555, 0, !dbg !41
  %.01.i3 = select i1 %.not.i2, i32 %155, i32 %154, !dbg !41
  %556 = sitofp i32 %.01.i3 to float, !dbg !41
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not15.i4 = icmp eq i32 %557, 0, !dbg !41
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %556, float 0xBFF921FB40000000, float %48) #4, !dbg !41
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %556, float 0xBFF921FB40000000, float %48) #4, !dbg !41
  %.02.i5 = select i1 %.not15.i4, float %559, float %558, !dbg !41
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not16.i6 = icmp eq i32 %560, 0, !dbg !41
  %561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %556, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !41
  %562 = tail call float @llvm.nvvm.fma.rn.f(float %556, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !41
  %.03.i7 = select i1 %.not16.i6, float %562, float %561, !dbg !41
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not17.i8 = icmp eq i32 %563, 0, !dbg !41
  %564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %556, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !41
  %565 = tail call float @llvm.nvvm.fma.rn.f(float %556, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !41
  %.04.i9 = select i1 %.not17.i8, float %565, float %564, !dbg !41
  %566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not18.i10 = icmp eq i32 %566, 0, !dbg !41
  %.06.i11 = select i1 %.not18.i10, float %168, float %167, !dbg !41
  %567 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !41
  br i1 %567, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !41

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not19.i13 = icmp eq i32 %568, 0, !dbg !41
  %.07.i14 = select i1 %.not19.i13, float %168, float %167, !dbg !41
  %569 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !41
  br i1 %569, label %__nv_fmul_rn.exit.i.i.i52, label %573, !dbg !41

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %570 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not27.i53 = icmp eq i32 %570, 0, !dbg !41
  %571 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %48, float 0.000000e+00) #4, !dbg !41
  %572 = tail call float @llvm.nvvm.mul.rn.f(float %48, float 0.000000e+00) #4, !dbg !41
  %.08.i54 = select i1 %.not27.i53, float %572, float %571, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !41

573:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %574 = lshr i32 %47, 23, !dbg !41
  %575 = and i32 %574, 224, !dbg !41
  %576 = add nsw i32 %575, -128, !dbg !41
  %577 = shl i32 %47, 8, !dbg !41
  %578 = or i32 %577, -2147483648, !dbg !41
  %579 = lshr exact i32 %576, 5, !dbg !41
  br label %580, !dbg !41

580:                                              ; preds = %573, %580
  %indvars.iv433 = phi i64 [ 0, %573 ], [ %indvars.iv.next434, %580 ]
  %hi.i.i.i.0.i15400 = phi i32 [ 0, %573 ], [ %585, %580 ]
  %581 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv433, !dbg !41
  %582 = load i32, ptr addrspace(1) %581, align 4, !dbg !41
  %583 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %582, i32 %578, i32 %hi.i.i.i.0.i15400) #5, !dbg !41, !srcloc !24
  %584 = extractvalue { i32, i32 } %583, 0, !dbg !41
  %585 = extractvalue { i32, i32 } %583, 1, !dbg !41
  %586 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv433, !dbg !41
  store i32 %584, ptr %586, align 4, !dbg !41
  %indvars.iv.next434 = add nuw nsw i64 %indvars.iv433, 1, !dbg !41
  %exitcond435.not = icmp eq i64 %indvars.iv.next434, 6, !dbg !41
  br i1 %exitcond435.not, label %587, label %580, !dbg !41, !llvm.loop !43

587:                                              ; preds = %580
  %588 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !41
  store i32 %585, ptr %588, align 4, !dbg !41
  %589 = sub nsw i32 6, %579, !dbg !41
  %590 = sext i32 %589 to i64, !dbg !41
  %591 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %590, !dbg !41
  %592 = load i32, ptr %591, align 4, !dbg !41
  %593 = sub nsw i32 5, %579, !dbg !41
  %594 = sext i32 %593 to i64, !dbg !41
  %595 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %594, !dbg !41
  %596 = load i32, ptr %595, align 4, !dbg !41
  %597 = freeze i32 %596, !dbg !41
  %598 = and i32 %47, 260046848, !dbg !41
  %.not20.i17 = icmp eq i32 %598, 0, !dbg !41
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %599, !dbg !41

599:                                              ; preds = %587
  %600 = sub nsw i32 4, %579, !dbg !41
  %601 = sext i32 %600 to i64, !dbg !41
  %602 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %601, !dbg !41
  %603 = load i32, ptr %602, align 4, !dbg !41
  %604 = tail call i32 @llvm.fshl.i32(i32 %597, i32 %603, i32 %574), !dbg !41
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !41

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %599, %587
  %lo.i.i.i.0.i20 = phi i32 [ %604, %599 ], [ %597, %587 ], !dbg !41
  %605 = tail call i32 @llvm.fshl.i32(i32 %592, i32 %597, i32 %574), !dbg !41
  %606 = lshr i32 %605, 30, !dbg !41
  %607 = tail call i32 @llvm.fshl.i32(i32 %605, i32 %lo.i.i.i.0.i20, i32 2), !dbg !41
  %608 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !41
  %609 = lshr i32 %607, 31, !dbg !41
  %610 = add nuw nsw i32 %609, %606, !dbg !41
  %611 = sub nsw i32 0, %610, !dbg !41
  %.not2123.i21 = icmp slt i32 %47, 0, !dbg !41
  %spec.select.i22 = select i1 %.not2123.i21, i32 %611, i32 %610, !dbg !41
  %612 = xor i32 %607, %47, !dbg !41
  %.lobit.i23 = ashr i32 %607, 31, !dbg !41
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %607, !dbg !41
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %608, !dbg !41
  %613 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !41
  %614 = shl nuw i64 %613, 32, !dbg !41
  %615 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !41
  %616 = or disjoint i64 %614, %615, !dbg !41
  %617 = sitofp i64 %616 to double, !dbg !41
  %618 = fmul double %617, 0x3BF921FB54442D19, !dbg !41
  %619 = fptrunc double %618 to float, !dbg !41
  %620 = fneg float %619, !dbg !41
  %.not2526.i27 = icmp slt i32 %612, 0, !dbg !41
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %620, float %619, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !41

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !41
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !41
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not28.i32 = icmp eq i32 %621, 0, !dbg !41
  %622 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !41
  %623 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !41
  %.011.i33 = select i1 %.not28.i32, float %623, float %622, !dbg !41
  %624 = and i32 %i.i.1.i30, 1, !dbg !41
  %.not29.i34 = icmp eq i32 %624, 0, !dbg !41
  %625 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !41
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not30.i35 = icmp eq i32 %626, 0, !dbg !41
  %627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %625, float 0.000000e+00) #4, !dbg !41
  %628 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %625, float 0.000000e+00) #4, !dbg !41
  %.012.i36 = select i1 %.not30.i35, float %628, float %627, !dbg !41
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !41

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not31.i38 = icmp eq i32 %629, 0, !dbg !41
  %630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !41
  %631 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !41
  %.013.i39 = select i1 %.not31.i38, float %631, float %630, !dbg !41
  br label %__internal_fmad.exit2.i.i.i40, !dbg !41

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %632 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !41
  %633 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !41
  %634 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !41
  %635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not32.i41 = icmp eq i32 %635, 0, !dbg !41
  %636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %634, float %.011.i33, float %633) #4, !dbg !41
  %637 = tail call float @llvm.nvvm.fma.rn.f(float %634, float %.011.i33, float %633) #4, !dbg !41
  %.010.i42 = select i1 %.not32.i41, float %637, float %636, !dbg !41
  %638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not33.i43 = icmp eq i32 %638, 0, !dbg !41
  %639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %632) #4, !dbg !41
  %640 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %632) #4, !dbg !41
  %.09.i44 = select i1 %.not33.i43, float %640, float %639, !dbg !41
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not34.i45 = icmp eq i32 %641, 0, !dbg !41
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %625) #4, !dbg !41
  %643 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %625) #4, !dbg !41
  %.05.i46 = select i1 %.not34.i45, float %643, float %642, !dbg !41
  %644 = and i32 %i.i.1.i30, 2, !dbg !41
  %.not35.i47 = icmp eq i32 %644, 0, !dbg !41
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !41

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not36.i49 = icmp eq i32 %645, 0, !dbg !41
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %647 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %.0.i50 = select i1 %.not36.i49, float %647, float %646, !dbg !41
  br label %__nv_sinf.exit55, !dbg !41

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !41
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !41
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !41
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not.i57 = icmp eq i32 %648, 0, !dbg !41
  %.01.i58 = select i1 %.not.i57, i32 %254, i32 %253, !dbg !41
  %649 = sitofp i32 %.01.i58 to float, !dbg !41
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not15.i59 = icmp eq i32 %650, 0, !dbg !41
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float 0xBFF921FB40000000, float %50) #4, !dbg !41
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %649, float 0xBFF921FB40000000, float %50) #4, !dbg !41
  %.02.i60 = select i1 %.not15.i59, float %652, float %651, !dbg !41
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not16.i61 = icmp eq i32 %653, 0, !dbg !41
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !41
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %649, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !41
  %.03.i62 = select i1 %.not16.i61, float %655, float %654, !dbg !41
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not17.i63 = icmp eq i32 %656, 0, !dbg !41
  %657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !41
  %658 = tail call float @llvm.nvvm.fma.rn.f(float %649, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !41
  %.04.i64 = select i1 %.not17.i63, float %658, float %657, !dbg !41
  %659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not18.i65 = icmp eq i32 %659, 0, !dbg !41
  %.06.i66 = select i1 %.not18.i65, float %267, float %266, !dbg !41
  %660 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !41
  br i1 %660, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !41

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not19.i68 = icmp eq i32 %661, 0, !dbg !41
  %.07.i69 = select i1 %.not19.i68, float %267, float %266, !dbg !41
  %662 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !41
  br i1 %662, label %__nv_fmul_rn.exit.i.i.i107, label %666, !dbg !41

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not27.i108 = icmp eq i32 %663, 0, !dbg !41
  %664 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %50, float 0.000000e+00) #4, !dbg !41
  %665 = tail call float @llvm.nvvm.mul.rn.f(float %50, float 0.000000e+00) #4, !dbg !41
  %.08.i109 = select i1 %.not27.i108, float %665, float %664, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !41

666:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %667 = lshr i32 %49, 23, !dbg !41
  %668 = and i32 %667, 224, !dbg !41
  %669 = add nsw i32 %668, -128, !dbg !41
  %670 = shl i32 %49, 8, !dbg !41
  %671 = or i32 %670, -2147483648, !dbg !41
  %672 = lshr exact i32 %669, 5, !dbg !41
  br label %673, !dbg !41

673:                                              ; preds = %666, %673
  %indvars.iv436 = phi i64 [ 0, %666 ], [ %indvars.iv.next437, %673 ]
  %hi.i.i.i.0.i70402 = phi i32 [ 0, %666 ], [ %678, %673 ]
  %674 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv436, !dbg !41
  %675 = load i32, ptr addrspace(1) %674, align 4, !dbg !41
  %676 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %675, i32 %671, i32 %hi.i.i.i.0.i70402) #5, !dbg !41, !srcloc !24
  %677 = extractvalue { i32, i32 } %676, 0, !dbg !41
  %678 = extractvalue { i32, i32 } %676, 1, !dbg !41
  %679 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv436, !dbg !41
  store i32 %677, ptr %679, align 4, !dbg !41
  %indvars.iv.next437 = add nuw nsw i64 %indvars.iv436, 1, !dbg !41
  %exitcond438.not = icmp eq i64 %indvars.iv.next437, 6, !dbg !41
  br i1 %exitcond438.not, label %680, label %673, !dbg !41, !llvm.loop !44

680:                                              ; preds = %673
  %681 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !41
  store i32 %678, ptr %681, align 4, !dbg !41
  %682 = sub nsw i32 6, %672, !dbg !41
  %683 = sext i32 %682 to i64, !dbg !41
  %684 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %683, !dbg !41
  %685 = load i32, ptr %684, align 4, !dbg !41
  %686 = sub nsw i32 5, %672, !dbg !41
  %687 = sext i32 %686 to i64, !dbg !41
  %688 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %687, !dbg !41
  %689 = load i32, ptr %688, align 4, !dbg !41
  %690 = freeze i32 %689, !dbg !41
  %691 = and i32 %49, 260046848, !dbg !41
  %.not20.i72 = icmp eq i32 %691, 0, !dbg !41
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %692, !dbg !41

692:                                              ; preds = %680
  %693 = sub nsw i32 4, %672, !dbg !41
  %694 = sext i32 %693 to i64, !dbg !41
  %695 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %694, !dbg !41
  %696 = load i32, ptr %695, align 4, !dbg !41
  %697 = tail call i32 @llvm.fshl.i32(i32 %690, i32 %696, i32 %667), !dbg !41
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !41

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %692, %680
  %lo.i.i.i.0.i75 = phi i32 [ %697, %692 ], [ %690, %680 ], !dbg !41
  %698 = tail call i32 @llvm.fshl.i32(i32 %685, i32 %690, i32 %667), !dbg !41
  %699 = lshr i32 %698, 30, !dbg !41
  %700 = tail call i32 @llvm.fshl.i32(i32 %698, i32 %lo.i.i.i.0.i75, i32 2), !dbg !41
  %701 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !41
  %702 = lshr i32 %700, 31, !dbg !41
  %703 = add nuw nsw i32 %702, %699, !dbg !41
  %704 = sub nsw i32 0, %703, !dbg !41
  %.not2123.i76 = icmp slt i32 %49, 0, !dbg !41
  %spec.select.i77 = select i1 %.not2123.i76, i32 %704, i32 %703, !dbg !41
  %705 = xor i32 %700, %49, !dbg !41
  %.lobit.i78 = ashr i32 %700, 31, !dbg !41
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %700, !dbg !41
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %701, !dbg !41
  %706 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !41
  %707 = shl nuw i64 %706, 32, !dbg !41
  %708 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !41
  %709 = or disjoint i64 %707, %708, !dbg !41
  %710 = sitofp i64 %709 to double, !dbg !41
  %711 = fmul double %710, 0x3BF921FB54442D19, !dbg !41
  %712 = fptrunc double %711 to float, !dbg !41
  %713 = fneg float %712, !dbg !41
  %.not2526.i82 = icmp slt i32 %705, 0, !dbg !41
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %713, float %712, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !41

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !41
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !41
  %714 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not28.i87 = icmp eq i32 %714, 0, !dbg !41
  %715 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !41
  %716 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !41
  %.011.i88 = select i1 %.not28.i87, float %716, float %715, !dbg !41
  %717 = and i32 %i.i.1.i85, 1, !dbg !41
  %.not29.i89 = icmp eq i32 %717, 0, !dbg !41
  %718 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !41
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not30.i90 = icmp eq i32 %719, 0, !dbg !41
  %720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %718, float 0.000000e+00) #4, !dbg !41
  %721 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %718, float 0.000000e+00) #4, !dbg !41
  %.012.i91 = select i1 %.not30.i90, float %721, float %720, !dbg !41
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !41

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not31.i93 = icmp eq i32 %722, 0, !dbg !41
  %723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !41
  %724 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !41
  %.013.i94 = select i1 %.not31.i93, float %724, float %723, !dbg !41
  br label %__internal_fmad.exit2.i.i.i95, !dbg !41

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %725 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !41
  %726 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !41
  %727 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !41
  %728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not32.i96 = icmp eq i32 %728, 0, !dbg !41
  %729 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %727, float %.011.i88, float %726) #4, !dbg !41
  %730 = tail call float @llvm.nvvm.fma.rn.f(float %727, float %.011.i88, float %726) #4, !dbg !41
  %.010.i97 = select i1 %.not32.i96, float %730, float %729, !dbg !41
  %731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not33.i98 = icmp eq i32 %731, 0, !dbg !41
  %732 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %725) #4, !dbg !41
  %733 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %725) #4, !dbg !41
  %.09.i99 = select i1 %.not33.i98, float %733, float %732, !dbg !41
  %734 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not34.i100 = icmp eq i32 %734, 0, !dbg !41
  %735 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %718) #4, !dbg !41
  %736 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %718) #4, !dbg !41
  %.05.i101 = select i1 %.not34.i100, float %736, float %735, !dbg !41
  %737 = and i32 %i.i.1.i85, 2, !dbg !41
  %.not35.i102 = icmp eq i32 %737, 0, !dbg !41
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !41

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not36.i104 = icmp eq i32 %738, 0, !dbg !41
  %739 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %740 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %.0.i105 = select i1 %.not36.i104, float %740, float %739, !dbg !41
  br label %__nv_sinf.exit110, !dbg !41

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !41
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !41
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !41
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not.i112 = icmp eq i32 %741, 0, !dbg !41
  %.01.i113 = select i1 %.not.i112, i32 %353, i32 %352, !dbg !41
  %742 = sitofp i32 %.01.i113 to float, !dbg !41
  %743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not15.i114 = icmp eq i32 %743, 0, !dbg !41
  %744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %742, float 0xBFF921FB40000000, float %52) #4, !dbg !41
  %745 = tail call float @llvm.nvvm.fma.rn.f(float %742, float 0xBFF921FB40000000, float %52) #4, !dbg !41
  %.02.i115 = select i1 %.not15.i114, float %745, float %744, !dbg !41
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not16.i116 = icmp eq i32 %746, 0, !dbg !41
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %742, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !41
  %748 = tail call float @llvm.nvvm.fma.rn.f(float %742, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !41
  %.03.i117 = select i1 %.not16.i116, float %748, float %747, !dbg !41
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not17.i118 = icmp eq i32 %749, 0, !dbg !41
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %742, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !41
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %742, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !41
  %.04.i119 = select i1 %.not17.i118, float %751, float %750, !dbg !41
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not18.i120 = icmp eq i32 %752, 0, !dbg !41
  %.06.i121 = select i1 %.not18.i120, float %366, float %365, !dbg !41
  %753 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !41
  br i1 %753, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !41

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not19.i123 = icmp eq i32 %754, 0, !dbg !41
  %.07.i124 = select i1 %.not19.i123, float %366, float %365, !dbg !41
  %755 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !41
  br i1 %755, label %__nv_fmul_rn.exit.i.i.i162, label %759, !dbg !41

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not27.i163 = icmp eq i32 %756, 0, !dbg !41
  %757 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %52, float 0.000000e+00) #4, !dbg !41
  %758 = tail call float @llvm.nvvm.mul.rn.f(float %52, float 0.000000e+00) #4, !dbg !41
  %.08.i164 = select i1 %.not27.i163, float %758, float %757, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !41

759:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %760 = lshr i32 %51, 23, !dbg !41
  %761 = and i32 %760, 224, !dbg !41
  %762 = add nsw i32 %761, -128, !dbg !41
  %763 = shl i32 %51, 8, !dbg !41
  %764 = or i32 %763, -2147483648, !dbg !41
  %765 = lshr exact i32 %762, 5, !dbg !41
  br label %766, !dbg !41

766:                                              ; preds = %759, %766
  %indvars.iv439 = phi i64 [ 0, %759 ], [ %indvars.iv.next440, %766 ]
  %hi.i.i.i.0.i125404 = phi i32 [ 0, %759 ], [ %771, %766 ]
  %767 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv439, !dbg !41
  %768 = load i32, ptr addrspace(1) %767, align 4, !dbg !41
  %769 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %768, i32 %764, i32 %hi.i.i.i.0.i125404) #5, !dbg !41, !srcloc !24
  %770 = extractvalue { i32, i32 } %769, 0, !dbg !41
  %771 = extractvalue { i32, i32 } %769, 1, !dbg !41
  %772 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv439, !dbg !41
  store i32 %770, ptr %772, align 4, !dbg !41
  %indvars.iv.next440 = add nuw nsw i64 %indvars.iv439, 1, !dbg !41
  %exitcond441.not = icmp eq i64 %indvars.iv.next440, 6, !dbg !41
  br i1 %exitcond441.not, label %773, label %766, !dbg !41, !llvm.loop !45

773:                                              ; preds = %766
  %774 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i111, i64 24, !dbg !41
  store i32 %771, ptr %774, align 4, !dbg !41
  %775 = sub nsw i32 6, %765, !dbg !41
  %776 = sext i32 %775 to i64, !dbg !41
  %777 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %776, !dbg !41
  %778 = load i32, ptr %777, align 4, !dbg !41
  %779 = sub nsw i32 5, %765, !dbg !41
  %780 = sext i32 %779 to i64, !dbg !41
  %781 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %780, !dbg !41
  %782 = load i32, ptr %781, align 4, !dbg !41
  %783 = freeze i32 %782, !dbg !41
  %784 = and i32 %51, 260046848, !dbg !41
  %.not20.i127 = icmp eq i32 %784, 0, !dbg !41
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %785, !dbg !41

785:                                              ; preds = %773
  %786 = sub nsw i32 4, %765, !dbg !41
  %787 = sext i32 %786 to i64, !dbg !41
  %788 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %787, !dbg !41
  %789 = load i32, ptr %788, align 4, !dbg !41
  %790 = tail call i32 @llvm.fshl.i32(i32 %783, i32 %789, i32 %760), !dbg !41
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !41

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %785, %773
  %lo.i.i.i.0.i130 = phi i32 [ %790, %785 ], [ %783, %773 ], !dbg !41
  %791 = tail call i32 @llvm.fshl.i32(i32 %778, i32 %783, i32 %760), !dbg !41
  %792 = lshr i32 %791, 30, !dbg !41
  %793 = tail call i32 @llvm.fshl.i32(i32 %791, i32 %lo.i.i.i.0.i130, i32 2), !dbg !41
  %794 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !41
  %795 = lshr i32 %793, 31, !dbg !41
  %796 = add nuw nsw i32 %795, %792, !dbg !41
  %797 = sub nsw i32 0, %796, !dbg !41
  %.not2123.i131 = icmp slt i32 %51, 0, !dbg !41
  %spec.select.i132 = select i1 %.not2123.i131, i32 %797, i32 %796, !dbg !41
  %798 = xor i32 %793, %51, !dbg !41
  %.lobit.i133 = ashr i32 %793, 31, !dbg !41
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %793, !dbg !41
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %794, !dbg !41
  %799 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !41
  %800 = shl nuw i64 %799, 32, !dbg !41
  %801 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !41
  %802 = or disjoint i64 %800, %801, !dbg !41
  %803 = sitofp i64 %802 to double, !dbg !41
  %804 = fmul double %803, 0x3BF921FB54442D19, !dbg !41
  %805 = fptrunc double %804 to float, !dbg !41
  %806 = fneg float %805, !dbg !41
  %.not2526.i137 = icmp slt i32 %798, 0, !dbg !41
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %806, float %805, !dbg !41
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !41

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !41
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !41
  %807 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not28.i142 = icmp eq i32 %807, 0, !dbg !41
  %808 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !41
  %809 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !41
  %.011.i143 = select i1 %.not28.i142, float %809, float %808, !dbg !41
  %810 = and i32 %i.i.1.i140, 1, !dbg !41
  %.not29.i144 = icmp eq i32 %810, 0, !dbg !41
  %811 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !41
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not30.i145 = icmp eq i32 %812, 0, !dbg !41
  %813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %811, float 0.000000e+00) #4, !dbg !41
  %814 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %811, float 0.000000e+00) #4, !dbg !41
  %.012.i146 = select i1 %.not30.i145, float %814, float %813, !dbg !41
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !41

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not31.i148 = icmp eq i32 %815, 0, !dbg !41
  %816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !41
  %817 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !41
  %.013.i149 = select i1 %.not31.i148, float %817, float %816, !dbg !41
  br label %__internal_fmad.exit2.i.i.i150, !dbg !41

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %818 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !41
  %819 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !41
  %820 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !41
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not32.i151 = icmp eq i32 %821, 0, !dbg !41
  %822 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %820, float %.011.i143, float %819) #4, !dbg !41
  %823 = tail call float @llvm.nvvm.fma.rn.f(float %820, float %.011.i143, float %819) #4, !dbg !41
  %.010.i152 = select i1 %.not32.i151, float %823, float %822, !dbg !41
  %824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not33.i153 = icmp eq i32 %824, 0, !dbg !41
  %825 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %818) #4, !dbg !41
  %826 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %818) #4, !dbg !41
  %.09.i154 = select i1 %.not33.i153, float %826, float %825, !dbg !41
  %827 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not34.i155 = icmp eq i32 %827, 0, !dbg !41
  %828 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %811) #4, !dbg !41
  %829 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %811) #4, !dbg !41
  %.05.i156 = select i1 %.not34.i155, float %829, float %828, !dbg !41
  %830 = and i32 %i.i.1.i140, 2, !dbg !41
  %.not35.i157 = icmp eq i32 %830, 0, !dbg !41
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !41

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %831 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not36.i159 = icmp eq i32 %831, 0, !dbg !41
  %832 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %833 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !41
  %.0.i160 = select i1 %.not36.i159, float %833, float %832, !dbg !41
  br label %__nv_sinf.exit165, !dbg !41

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !41
  %834 = extractvalue { i32, i32 } %455, 1, !dbg !35
  %835 = bitcast i32 %834 to <2 x half>, !dbg !35
  %836 = extractvalue { i32, i32 } %461, 1, !dbg !40
  %837 = bitcast i32 %836 to <2 x half>, !dbg !40
  %838 = extractvalue { i32, i32 } %455, 0, !dbg !35
  %839 = bitcast i32 %838 to <2 x half>, !dbg !35
  %840 = extractvalue { i32, i32 } %461, 0, !dbg !40
  %841 = bitcast i32 %840 to <2 x half>, !dbg !40
  %842 = extractvalue { i32, i32 } %24, 1, !dbg !17
  %843 = bitcast i32 %842 to <2 x half>, !dbg !17
  %844 = extractvalue { i32, i32 } %24, 0, !dbg !17
  %845 = bitcast i32 %844 to <2 x half>, !dbg !17
  %846 = srem i32 %16, 32, !dbg !46
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !41
  %847 = mul i32 %846, %3, !dbg !47
  %reass.add = add i32 %847, %21
  %reass.mul = shl i32 %reass.add, 7
  %848 = add i32 %reass.mul, %.decomposed, !dbg !48
  %849 = sext i32 %848 to i64, !dbg !49
  %850 = getelementptr half, ptr addrspace(1) %2, i64 %849, !dbg !49
  %851 = fpext <2 x half> %839 to <2 x float>, !dbg !50
  %852 = fsub <2 x float> zeroinitializer, %851, !dbg !51
  %853 = fpext <2 x half> %841 to <2 x float>, !dbg !52
  %854 = insertelement <2 x i1> poison, i1 %449, i64 0, !dbg !53
  %855 = shufflevector <2 x i1> %854, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !53
  %856 = select <2 x i1> %855, <2 x float> %852, <2 x float> %853, !dbg !53
  %857 = fpext <2 x half> %845 to <2 x float>, !dbg !54
  %858 = insertelement <2 x float> poison, float %z.i.i.0.i212, i64 0, !dbg !55
  %859 = insertelement <2 x float> %858, float %z.i.i.0.i266, i64 1, !dbg !55
  %860 = fmul <2 x float> %859, %857, !dbg !55
  %861 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !56
  %862 = insertelement <2 x float> %861, float %z.i.i.0.i51, i64 1, !dbg !56
  %863 = fmul <2 x float> %856, %862, !dbg !56
  %864 = fadd <2 x float> %860, %863, !dbg !57
  %865 = fptrunc <2 x float> %864 to <2 x half>, !dbg !58
  %866 = fpext <2 x half> %835 to <2 x float>, !dbg !50
  %867 = fsub <2 x float> zeroinitializer, %866, !dbg !51
  %868 = fpext <2 x half> %837 to <2 x float>, !dbg !52
  %869 = select <2 x i1> %855, <2 x float> %867, <2 x float> %868, !dbg !53
  %870 = fpext <2 x half> %843 to <2 x float>, !dbg !54
  %871 = insertelement <2 x float> poison, float %z.i.i.0.i321, i64 0, !dbg !55
  %872 = insertelement <2 x float> %871, float %z.i.i.0.i376, i64 1, !dbg !55
  %873 = fmul <2 x float> %872, %870, !dbg !55
  %874 = insertelement <2 x float> poison, float %z.i.i.0.i106, i64 0, !dbg !56
  %875 = insertelement <2 x float> %874, float %z.i.i.0.i161, i64 1, !dbg !56
  %876 = fmul <2 x float> %869, %875, !dbg !56
  %877 = fadd <2 x float> %873, %876, !dbg !57
  %878 = fptrunc <2 x float> %877 to <2 x half>, !dbg !58
  %879 = bitcast <2 x half> %865 to i32, !dbg !58
  %880 = bitcast <2 x half> %878 to i32, !dbg !58
  tail call void asm sideeffect "st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l"(i32 %879, i32 %880, ptr addrspace(1) %850) #4, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6ei2bl53v7ktkdwoeyac7wqnyjeifztupi5kngexaylzuyahjp2.py", directory: "./local_cache/6e")
!4 = !{ptr @triton_poi_fused_add_cat_clone_mul_4, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_clone_mul_4", linkageName: "triton_poi_fused_add_cat_clone_mul_4", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 19, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 24, column: 19, scope: !6)
!16 = !DILocation(line: 27, column: 30, scope: !6)
!17 = !DILocation(line: 27, column: 35, scope: !6)
!18 = !DILocation(line: 28, column: 46, scope: !6)
!19 = !DILocation(line: 28, column: 41, scope: !6)
!20 = !DILocation(line: 28, column: 35, scope: !6)
!21 = !DILocation(line: 28, column: 30, scope: !6)
!22 = !DILocation(line: 28, column: 53, scope: !6)
!23 = !DILocation(line: 29, column: 23, scope: !6)
!24 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.count", i32 1}
!27 = distinct !{!27, !26}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !26}
!30 = !DILocation(line: 38, column: 19, scope: !6)
!31 = !DILocation(line: 39, column: 40, scope: !6)
!32 = !DILocation(line: 39, column: 36, scope: !6)
!33 = !DILocation(line: 39, column: 46, scope: !6)
!34 = !DILocation(line: 39, column: 31, scope: !6)
!35 = !DILocation(line: 39, column: 52, scope: !6)
!36 = !DILocation(line: 43, column: 20, scope: !6)
!37 = !DILocation(line: 46, column: 49, scope: !6)
!38 = !DILocation(line: 46, column: 41, scope: !6)
!39 = !DILocation(line: 46, column: 31, scope: !6)
!40 = !DILocation(line: 46, column: 55, scope: !6)
!41 = !DILocation(line: 48, column: 24, scope: !6)
!42 = distinct !{!42, !26}
!43 = distinct !{!43, !26}
!44 = distinct !{!44, !26}
!45 = distinct !{!45, !26}
!46 = !DILocation(line: 26, column: 28, scope: !6)
!47 = !DILocation(line: 53, column: 47, scope: !6)
!48 = !DILocation(line: 53, column: 39, scope: !6)
!49 = !DILocation(line: 53, column: 25, scope: !6)
!50 = !DILocation(line: 39, column: 103, scope: !6)
!51 = !DILocation(line: 40, column: 13, scope: !6)
!52 = !DILocation(line: 46, column: 106, scope: !6)
!53 = !DILocation(line: 0, scope: !6)
!54 = !DILocation(line: 27, column: 44, scope: !6)
!55 = !DILocation(line: 33, column: 18, scope: !6)
!56 = !DILocation(line: 51, column: 20, scope: !6)
!57 = !DILocation(line: 52, column: 19, scope: !6)
!58 = !DILocation(line: 53, column: 59, scope: !6)
!59 = !DILocation(line: 53, column: 4, scope: !6)
