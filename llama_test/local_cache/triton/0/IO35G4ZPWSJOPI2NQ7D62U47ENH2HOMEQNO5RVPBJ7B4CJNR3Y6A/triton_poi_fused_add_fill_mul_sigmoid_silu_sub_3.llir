; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_add_fill_mul_sigmoid_silu_sub_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 2, !dbg !11
  %11 = and i32 %10, 508, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = icmp slt i32 %12, %4, !dbg !13
  %14 = sext i32 %12 to i64, !dbg !14
  %15 = getelementptr half, ptr addrspace(1) %1, i64 %14, !dbg !14
  %16 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %15, i1 %13) #2, !dbg !15
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !15
  %18 = bitcast i32 %17 to <2 x half>, !dbg !15
  %19 = extractvalue { i32, i32 } %16, 1, !dbg !15
  %20 = bitcast i32 %19 to <2 x half>, !dbg !15
  %21 = getelementptr half, ptr addrspace(1) %2, i64 %14, !dbg !16
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %13) #2, !dbg !17
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !17
  %24 = bitcast i32 %23 to <2 x half>, !dbg !17
  %25 = extractvalue { i32, i32 } %22, 1, !dbg !17
  %26 = bitcast i32 %25 to <2 x half>, !dbg !17
  %27 = getelementptr half, ptr addrspace(1) %0, i64 %14, !dbg !18
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 %13) #2, !dbg !19
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !19
  %30 = bitcast i32 %29 to <2 x half>, !dbg !19
  %31 = extractvalue { i32, i32 } %28, 1, !dbg !19
  %32 = bitcast i32 %31 to <2 x half>, !dbg !19
  %33 = getelementptr half, ptr addrspace(1) %3, i64 %14, !dbg !20
  %34 = fpext <2 x half> %18 to <2 x float>, !dbg !21
  %35 = fpext <2 x half> %24 to <2 x float>, !dbg !22
  %36 = extractelement <2 x float> %35, i64 0, !dbg !23
  %37 = fsub float 0.000000e+00, %36, !dbg !23
  %38 = extractelement <2 x float> %35, i64 1, !dbg !23
  %39 = fsub float 0.000000e+00, %38, !dbg !23
  %40 = fmul float %37, 0x3FF7154760000000, !dbg !27
  %41 = tail call float @llvm.nvvm.ex2.approx.f(float %40), !dbg !27
  %42 = fmul float %39, 0x3FF7154760000000, !dbg !27
  %43 = tail call float @llvm.nvvm.ex2.approx.f(float %42), !dbg !27
  %44 = fadd float %41, 1.000000e+00, !dbg !28
  %45 = fadd float %43, 1.000000e+00, !dbg !28
  %46 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %44), !dbg !29
  %47 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %45), !dbg !29
  %48 = insertelement <2 x float> poison, float %46, i64 0, !dbg !30
  %49 = insertelement <2 x float> %48, float %47, i64 1, !dbg !30
  %50 = fmul <2 x float> %49, %35, !dbg !30
  %51 = fmul <2 x float> %50, %34, !dbg !31
  %52 = fptrunc <2 x float> %51 to <2 x half>, !dbg !32
  %53 = fpext <2 x half> %20 to <2 x float>, !dbg !21
  %54 = fpext <2 x half> %26 to <2 x float>, !dbg !22
  %55 = extractelement <2 x float> %54, i64 0, !dbg !23
  %56 = fsub float 0.000000e+00, %55, !dbg !23
  %57 = extractelement <2 x float> %54, i64 1, !dbg !23
  %58 = fsub float 0.000000e+00, %57, !dbg !23
  %59 = fmul float %56, 0x3FF7154760000000, !dbg !27
  %60 = tail call float @llvm.nvvm.ex2.approx.f(float %59), !dbg !27
  %61 = fmul float %58, 0x3FF7154760000000, !dbg !27
  %62 = tail call float @llvm.nvvm.ex2.approx.f(float %61), !dbg !27
  %63 = fadd float %60, 1.000000e+00, !dbg !28
  %64 = fadd float %62, 1.000000e+00, !dbg !28
  %65 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %63), !dbg !29
  %66 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %64), !dbg !29
  %67 = insertelement <2 x float> poison, float %65, i64 0, !dbg !30
  %68 = insertelement <2 x float> %67, float %66, i64 1, !dbg !30
  %69 = fmul <2 x float> %68, %54, !dbg !30
  %70 = fmul <2 x float> %69, %53, !dbg !31
  %71 = fptrunc <2 x float> %70 to <2 x half>, !dbg !32
  %72 = bitcast <2 x half> %52 to i32, !dbg !32
  %73 = bitcast <2 x half> %71 to i32, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %72, i32 %73, ptr addrspace(1) %33, i1 %13) #2, !dbg !32
  %74 = fpext <2 x half> %30 to <2 x float>, !dbg !33
  %75 = fmul <2 x float> %34, %74, !dbg !34
  %76 = fsub <2 x float> splat (float 1.000000e+00), %49, !dbg !35
  %77 = fmul <2 x float> %76, %35, !dbg !36
  %78 = fadd <2 x float> %77, splat (float 1.000000e+00), !dbg !37
  %79 = fmul <2 x float> %49, %78, !dbg !38
  %80 = fmul <2 x float> %75, %79, !dbg !39
  %81 = fptrunc <2 x float> %80 to <2 x half>, !dbg !40
  %82 = fpext <2 x half> %32 to <2 x float>, !dbg !33
  %83 = fmul <2 x float> %53, %82, !dbg !34
  %84 = fsub <2 x float> splat (float 1.000000e+00), %68, !dbg !35
  %85 = fmul <2 x float> %84, %54, !dbg !36
  %86 = fadd <2 x float> %85, splat (float 1.000000e+00), !dbg !37
  %87 = fmul <2 x float> %68, %86, !dbg !38
  %88 = fmul <2 x float> %83, %87, !dbg !39
  %89 = fptrunc <2 x float> %88 to <2 x half>, !dbg !40
  %90 = bitcast <2 x half> %81 to i32, !dbg !40
  %91 = bitcast <2 x half> %89 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %90, i32 %91, ptr addrspace(1) %27, i1 %13) #2, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpi4fensflvxgbw7pvt5avrpbbatdpbpovn3lahcllivh5a6ucqz.py", directory: "./local_cache/pi")
!4 = !{ptr @triton_poi_fused_add_fill_mul_sigmoid_silu_sub_3, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_fill_mul_sigmoid_silu_sub_3", linkageName: "triton_poi_fused_add_fill_mul_sigmoid_silu_sub_3", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 21, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 30, scope: !6)
!15 = !DILocation(line: 23, column: 35, scope: !6)
!16 = !DILocation(line: 24, column: 30, scope: !6)
!17 = !DILocation(line: 24, column: 35, scope: !6)
!18 = !DILocation(line: 25, column: 34, scope: !6)
!19 = !DILocation(line: 25, column: 39, scope: !6)
!20 = !DILocation(line: 39, column: 25, scope: !6)
!21 = !DILocation(line: 23, column: 45, scope: !6)
!22 = !DILocation(line: 24, column: 45, scope: !6)
!23 = !DILocation(line: 47, column: 30, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !6, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language")
!26 = !DILocation(line: 27, column: 22, scope: !6)
!27 = !DILocation(line: 47, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 47, column: 20, scope: !24, inlinedAt: !26)
!29 = !DILocation(line: 47, column: 16, scope: !24, inlinedAt: !26)
!30 = !DILocation(line: 28, column: 18, scope: !6)
!31 = !DILocation(line: 30, column: 18, scope: !6)
!32 = !DILocation(line: 39, column: 36, scope: !6)
!33 = !DILocation(line: 25, column: 49, scope: !6)
!34 = !DILocation(line: 31, column: 18, scope: !6)
!35 = !DILocation(line: 34, column: 20, scope: !6)
!36 = !DILocation(line: 35, column: 19, scope: !6)
!37 = !DILocation(line: 36, column: 20, scope: !6)
!38 = !DILocation(line: 37, column: 19, scope: !6)
!39 = !DILocation(line: 38, column: 19, scope: !6)
!40 = !DILocation(line: 40, column: 40, scope: !6)
!41 = !DILocation(line: 40, column: 4, scope: !6)
