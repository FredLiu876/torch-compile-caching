//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<78>;
	.reg .f32 	%f<93>;
	.reg .b64 	%rd<22>;
	.loc	1 18 0                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:18:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0];
	ld.param.u64 	%rd15, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:22:28
	mov.u32 	%r48, %ctaid.x;
	ld.param.u32 	%r49, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5];
	.loc	1 24 21                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:24:21
	setp.lt.s32 	%p1, %r48, %r49;
	ld.param.u64 	%rd16, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2];
	ld.param.u64 	%rd17, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3];
	.loc	1 25 37                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:25:37
	mov.u32 	%r50, %tid.x;
	and.b32  	%r51, %r50, 31;
	ld.param.u64 	%rd18, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4];
	shl.b32 	%r52, %r50, 2;
	and.b32  	%r53, %r52, 2044;
	.loc	1 35 46                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:46
	shl.b32 	%r54, %r48, 12;
	or.b32  	%r55, %r53, %r54;
	.loc	1 35 34                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:34
	mul.wide.s32 	%rd19, %r55, 2;
	add.s64 	%rd1, %rd16, %rd19;
	mov.b32 	%r3, 0;
	.loc	1 35 51                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:51
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 38                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:38
	add.s64 	%rd2, %rd14, %rd19;
	.loc	1 36 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:55
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	mov.b32 	{%rs1, %rs2}, %r1;
	cvt.f32.f16 	%f1, %rs2;
	cvt.f32.f16 	%f2, %rs1;
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	mov.b32 	{%rs3, %rs4}, %r5;
	cvt.f32.f16 	%f3, %rs4;
	cvt.f32.f16 	%f4, %rs3;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f5, %f2, %f4;
	add.f32 	%f6, %f1, %f3;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16x2.f32 	%r9, %f6, %f5;
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	mov.b32 	{%rs5, %rs6}, %r2;
	cvt.f32.f16 	%f7, %rs6;
	cvt.f32.f16 	%f8, %rs5;
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	mov.b32 	{%rs7, %rs8}, %r6;
	cvt.f32.f16 	%f9, %rs8;
	cvt.f32.f16 	%f10, %rs7;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16x2.f32 	%r10, %f12, %f11;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r9, %r10 };
	// end inline asm
	.loc	1 35 34                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:34
	add.s64 	%rd4, %rd1, 4096;
	.loc	1 35 51                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:51
	// begin inline asm
	mov.u32 %r11, %r3;
	mov.u32 %r12, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r11, %r12 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 38                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:38
	add.s64 	%rd5, %rd2, 4096;
	.loc	1 36 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:55
	// begin inline asm
	mov.u32 %r15, %r3;
	mov.u32 %r16, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r15, %r16 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	mov.b32 	{%rs9, %rs10}, %r11;
	cvt.f32.f16 	%f13, %rs9;
	cvt.f32.f16 	%f14, %rs10;
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	mov.b32 	{%rs11, %rs12}, %r15;
	cvt.f32.f16 	%f15, %rs11;
	cvt.f32.f16 	%f16, %rs12;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f17, %f14, %f16;
	add.f32 	%f18, %f13, %f15;
	.loc	1 39 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:39:22
	mul.f32 	%f19, %f18, %f18;
	mul.f32 	%f20, %f17, %f17;
	.loc	1 41 23                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:41:23
	fma.rn.f32 	%f21, %f6, %f6, %f20;
	fma.rn.f32 	%f22, %f5, %f5, %f19;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16x2.f32 	%r19, %f17, %f18;
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	mov.b32 	{%rs13, %rs14}, %r12;
	cvt.f32.f16 	%f23, %rs13;
	cvt.f32.f16 	%f24, %rs14;
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	mov.b32 	{%rs15, %rs16}, %r16;
	cvt.f32.f16 	%f25, %rs15;
	cvt.f32.f16 	%f26, %rs16;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f27, %f24, %f26;
	add.f32 	%f28, %f23, %f25;
	.loc	1 39 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:39:22
	mul.f32 	%f29, %f28, %f28;
	mul.f32 	%f30, %f27, %f27;
	.loc	1 41 23                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:41:23
	fma.rn.f32 	%f31, %f12, %f12, %f30;
	fma.rn.f32 	%f32, %f11, %f11, %f29;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16x2.f32 	%r20, %f27, %f28;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r19, %r20 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f22, %f21;
	add.f32 	%f34, %f32, %f33;
	add.f32 	%f35, %f31, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r56, %f36;
	shfl.sync.bfly.b32	%r57, %r56, 16, 31, -1;
	mov.b32 	%f37, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r58, %f38;
	shfl.sync.bfly.b32	%r59, %r58, 8, 31, -1;
	mov.b32 	%f39, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r60, %f40;
	shfl.sync.bfly.b32	%r61, %r60, 4, 31, -1;
	mov.b32 	%f41, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r62, %f42;
	shfl.sync.bfly.b32	%r63, %r62, 2, 31, -1;
	mov.b32 	%f43, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f44;
	shfl.sync.bfly.b32	%r65, %r64, 1, 31, -1;
	mov.b32 	%f45, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p7, %r51, 0;
	shr.u32 	%r66, %r50, 3;
	and.b32  	%r67, %r66, 60;
	mov.u32 	%r68, global_smem;
	add.s32 	%r21, %r68, %r67;
	mov.b32 	%r22, %f46;
	// begin inline asm
	@%p7 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r50, 16;
	add.s32 	%r24, %r68, %r52;
	// begin inline asm
	@%p8 ld.shared.b32 %r23, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r23;
	shfl.sync.bfly.b32	%r69, %r23, 8, 31, -1;
	mov.b32 	%f48, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r70, %f49;
	shfl.sync.bfly.b32	%r71, %r70, 4, 31, -1;
	mov.b32 	%f50, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r72, %f51;
	shfl.sync.bfly.b32	%r73, %r72, 2, 31, -1;
	mov.b32 	%f52, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r74, %f53;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f54, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r76, %r50, 15;
	setp.eq.s32 	%p17, %r76, 0;
	and.pred  	%p9, %p8, %p17;
	mov.b32 	%r26, %f55;
	// begin inline asm
	@%p9 st.shared.b32 [ %r24 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f56, [global_smem];
	mov.f32 	%f57, 0f45800000;
$L__tmp2:
	.loc	1 46 19                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:46:19
	div.full.f32 	%f58, %f56, %f57;
	.loc	1 48 19                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:48:19
	add.f32 	%f59, %f58, 0f3727C5AC;
	.loc	1 49 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:49:28
	rsqrt.approx.ftz.f32 	%f60, %f59;
	.loc	1 50 4                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:51:28
	mul.wide.s32 	%rd20, %r48, 4;
	add.s64 	%rd7, %rd15, %rd20;
	.loc	1 51 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:51:40
	and.b32  	%r77, %r50, 511;
	setp.eq.s32 	%p18, %r77, 0;
	mov.b32 	%r27, %f60;
	and.pred  	%p10, %p18, %p1;
	// begin inline asm
	@%p10 st.global.b32 [ %rd7 + 0 ], { %r27 };
	// end inline asm
	.loc	1 58 35                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:35
	mul.wide.u32 	%rd21, %r53, 2;
	add.s64 	%rd8, %rd17, %rd21;
	mov.pred 	%p11, -1;
	.loc	1 58 42                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:42
	// begin inline asm
	mov.u32 %r28, %r3;
	mov.u32 %r29, %r3;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r28, %r29 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 59 56                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:56
	// begin inline asm
	mov.u32 %r32, %r3;
	mov.u32 %r33, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r32, %r33 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 64 29                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:29
	add.s64 	%rd10, %rd18, %rd19;
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	mov.b32 	{%rs17, %rs18}, %r28;
	cvt.f32.f16 	%f61, %rs18;
	cvt.f32.f16 	%f62, %rs17;
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	mov.b32 	{%rs19, %rs20}, %r32;
	cvt.f32.f16 	%f63, %rs19;
	cvt.f32.f16 	%f64, %rs20;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f65, %f60, %f64;
	mul.f32 	%f66, %f60, %f63;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f67, %f66, %f62;
	mul.f32 	%f68, %f65, %f61;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16x2.f32 	%r36, %f68, %f67;
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	mov.b32 	{%rs21, %rs22}, %r29;
	cvt.f32.f16 	%f69, %rs22;
	cvt.f32.f16 	%f70, %rs21;
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	mov.b32 	{%rs23, %rs24}, %r33;
	cvt.f32.f16 	%f71, %rs23;
	cvt.f32.f16 	%f72, %rs24;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f73, %f60, %f72;
	mul.f32 	%f74, %f60, %f71;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f75, %f74, %f70;
	mul.f32 	%f76, %f73, %f69;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16x2.f32 	%r37, %f76, %f75;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 58 35                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:35
	add.s64 	%rd11, %rd8, 4096;
	.loc	1 58 42                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:42
	// begin inline asm
	mov.u32 %r38, %r3;
	mov.u32 %r39, %r3;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r38, %r39 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 59 56                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:56
	// begin inline asm
	mov.u32 %r42, %r3;
	mov.u32 %r43, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r42, %r43 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 64 29                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:29
	add.s64 	%rd13, %rd10, 4096;
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	mov.b32 	{%rs25, %rs26}, %r38;
	cvt.f32.f16 	%f77, %rs26;
	cvt.f32.f16 	%f78, %rs25;
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	mov.b32 	{%rs27, %rs28}, %r42;
	cvt.f32.f16 	%f79, %rs27;
	cvt.f32.f16 	%f80, %rs28;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f81, %f60, %f80;
	mul.f32 	%f82, %f60, %f79;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f83, %f82, %f78;
	mul.f32 	%f84, %f81, %f77;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16x2.f32 	%r46, %f84, %f83;
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	mov.b32 	{%rs29, %rs30}, %r39;
	cvt.f32.f16 	%f85, %rs30;
	cvt.f32.f16 	%f86, %rs29;
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	mov.b32 	{%rs31, %rs32}, %r43;
	cvt.f32.f16 	%f87, %rs31;
	cvt.f32.f16 	%f88, %rs32;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f89, %f60, %f88;
	mul.f32 	%f90, %f60, %f87;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f91, %f90, %f86;
	mul.f32 	%f92, %f89, %f85;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16x2.f32 	%r47, %f92, %f91;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 52 4                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/cp/ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 112
.b8 109
.b8 118
.b8 102
.b8 54
.b8 108
.b8 103
.b8 109
.b8 110
.b8 112
.b8 102
.b8 111
.b8 114
.b8 97
.b8 118
.b8 118
.b8 98
.b8 114
.b8 118
.b8 119
.b8 105
.b8 52
.b8 116
.b8 53
.b8 122
.b8 111
.b8 105
.b8 111
.b8 115
.b8 102
.b8 121
.b8 54
.b8 50
.b8 106
.b8 106
.b8 50
.b8 117
.b8 51
.b8 55
.b8 98
.b8 52
.b8 103
.b8 53
.b8 108
.b8 115
.b8 109
.b8 53
.b8 121
.b8 105
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
