//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_6,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_8
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<37>;
	.reg .b32 	%r<107>;
	.reg .f32 	%f<114>;
	.reg .b64 	%rd<18>;
	.loc	1 18 0                          // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:18:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_0];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:22:28
	mov.u32 	%r59, %ctaid.x;
	.loc	1 22 33                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:22:33
	shl.b32 	%r60, %r59, 1;
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_2];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_3];
	.loc	1 23 44                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:23:44
	mov.u32 	%r61, %tid.x;
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_4];
	and.b32  	%r62, %r61, 512;
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_5];
	bfe.u32 	%r63, %r61, 9, 1;
	ld.param.u32 	%r64, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_6];
	and.b32  	%r65, %r61, 31;
	and.b32  	%r66, %r61, 1;
	.loc	1 23 23                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:23:23
	or.b32  	%r67, %r63, %r60;
	.loc	1 24 21                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:24:21
	setp.lt.s32 	%p1, %r67, %r64;
	.loc	1 25 37                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:25:37
	shl.b32 	%r68, %r61, 3;
	and.b32  	%r69, %r68, 4088;
	.loc	1 35 46                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:46
	shl.b32 	%r70, %r67, 12;
	.loc	1 35 41                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:41
	or.b32  	%r71, %r70, %r69;
	.loc	1 35 34                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:34
	mul.wide.s32 	%rd15, %r71, 2;
	add.s64 	%rd1, %rd11, %rd15;
	mov.b32 	%r5, 0;
	.loc	1 35 51                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:51
	// begin inline asm
	mov.u32 %r1, %r5;
	mov.u32 %r2, %r5;
	mov.u32 %r3, %r5;
	mov.u32 %r4, %r5;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 34                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:36:34
	add.s64 	%rd2, %rd12, %rd15;
	.loc	1 36 51                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:36:51
	// begin inline asm
	mov.u32 %r9, %r5;
	mov.u32 %r10, %r5;
	mov.u32 %r11, %r5;
	mov.u32 %r12, %r5;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 37 38                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:37:38
	add.s64 	%rd3, %rd9, %rd15;
	.loc	1 37 55                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:37:55
	// begin inline asm
	mov.u32 %r17, %r5;
	mov.u32 %r18, %r5;
	mov.u32 %r19, %r5;
	mov.u32 %r20, %r5;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:113
	mov.b32 	{%rs1, %rs2}, %r1;
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	.loc	1 36 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:36:113
	mov.b32 	{%rs3, %rs4}, %r9;
	cvt.f32.f16 	%f3, %rs3;
	cvt.f32.f16 	%f4, %rs4;
	.loc	1 37 117                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:37:117
	mov.b32 	{%rs5, %rs6}, %r17;
	cvt.f32.f16 	%f5, %rs6;
	cvt.f32.f16 	%f6, %rs5;
	.loc	1 38 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:38:22
	add.f32 	%f7, %f2, %f4;
	add.f32 	%f8, %f1, %f3;
	.loc	1 39 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:39:22
	add.f32 	%f9, %f8, %f6;
	add.f32 	%f10, %f7, %f5;
	.loc	1 41 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:41:22
	mul.f32 	%f11, %f10, %f10;
	.loc	1 45 55                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:45:55
	cvt.rn.f16x2.f32 	%r25, %f10, %f9;
	.loc	1 35 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:113
	mov.b32 	{%rs7, %rs8}, %r2;
	cvt.f32.f16 	%f12, %rs7;
	cvt.f32.f16 	%f13, %rs8;
	.loc	1 36 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:36:113
	mov.b32 	{%rs9, %rs10}, %r10;
	cvt.f32.f16 	%f14, %rs9;
	cvt.f32.f16 	%f15, %rs10;
	.loc	1 37 117                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:37:117
	mov.b32 	{%rs11, %rs12}, %r18;
	cvt.f32.f16 	%f16, %rs12;
	cvt.f32.f16 	%f17, %rs11;
	.loc	1 38 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:38:22
	add.f32 	%f18, %f13, %f15;
	add.f32 	%f19, %f12, %f14;
	.loc	1 39 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:39:22
	add.f32 	%f20, %f19, %f17;
	add.f32 	%f21, %f18, %f16;
	.loc	1 45 55                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:45:55
	cvt.rn.f16x2.f32 	%r26, %f21, %f20;
	.loc	1 35 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:113
	mov.b32 	{%rs13, %rs14}, %r3;
	cvt.f32.f16 	%f22, %rs13;
	cvt.f32.f16 	%f23, %rs14;
	.loc	1 36 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:36:113
	mov.b32 	{%rs15, %rs16}, %r11;
	cvt.f32.f16 	%f24, %rs15;
	cvt.f32.f16 	%f25, %rs16;
	.loc	1 37 117                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:37:117
	mov.b32 	{%rs17, %rs18}, %r19;
	cvt.f32.f16 	%f26, %rs18;
	cvt.f32.f16 	%f27, %rs17;
	.loc	1 38 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:38:22
	add.f32 	%f28, %f23, %f25;
	add.f32 	%f29, %f22, %f24;
	.loc	1 39 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:39:22
	add.f32 	%f30, %f29, %f27;
	add.f32 	%f31, %f28, %f26;
	.loc	1 45 55                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:45:55
	cvt.rn.f16x2.f32 	%r27, %f31, %f30;
	.loc	1 35 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:35:113
	mov.b32 	{%rs19, %rs20}, %r4;
	cvt.f32.f16 	%f32, %rs19;
	cvt.f32.f16 	%f33, %rs20;
	.loc	1 36 113                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:36:113
	mov.b32 	{%rs21, %rs22}, %r12;
	cvt.f32.f16 	%f34, %rs21;
	cvt.f32.f16 	%f35, %rs22;
	.loc	1 37 117                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:37:117
	mov.b32 	{%rs23, %rs24}, %r20;
	cvt.f32.f16 	%f36, %rs24;
	cvt.f32.f16 	%f37, %rs23;
	.loc	1 38 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:38:22
	add.f32 	%f38, %f33, %f35;
	add.f32 	%f39, %f32, %f34;
	.loc	1 39 22                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:39:22
	add.f32 	%f40, %f39, %f37;
	add.f32 	%f41, %f38, %f36;
	.loc	1 45 55                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:45:55
	cvt.rn.f16x2.f32 	%r28, %f41, %f40;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f42, %f9, %f9, %f11;
	fma.rn.f32 	%f43, %f20, %f20, %f42;
	fma.rn.f32 	%f44, %f21, %f21, %f43;
	fma.rn.f32 	%f45, %f30, %f30, %f44;
	fma.rn.f32 	%f46, %f31, %f31, %f45;
	fma.rn.f32 	%f47, %f40, %f40, %f46;
	fma.rn.f32 	%f48, %f41, %f41, %f47;
	selp.f32 	%f49, %f48, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r72, %f49;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f50, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r74, %f51;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f52, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r76, %f53;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f54, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r78, %f55;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f56, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f57;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f58, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 286 36                        // standard.py:286:36
	bfe.u32 	%r82, %r61, 5, 4;
	setp.eq.s32 	%p5, %r65, 0;
	shr.u32 	%r83, %r62, 5;
	or.b32  	%r84, %r83, %r82;
	shl.b32 	%r85, %r84, 2;
	mov.u32 	%r86, global_smem;
	add.s32 	%r29, %r86, %r85;
	mov.b32 	%r30, %f59;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r61, 32;
	shl.b32 	%r87, %r61, 2;
	add.s32 	%r32, %r86, %r87;
	// begin inline asm
	@%p6 ld.shared.b32 %r31, [ %r32 + 0 ];
	// end inline asm
	mov.b32 	%f60, %r31;
	shfl.sync.bfly.b32	%r88, %r31, 8, 31, -1;
	mov.b32 	%f61, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f62;
	shfl.sync.bfly.b32	%r90, %r89, 4, 31, -1;
	mov.b32 	%f63, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f64;
	shfl.sync.bfly.b32	%r92, %r91, 2, 31, -1;
	mov.b32 	%f65, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r93, %f66;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	mov.b32 	%f67, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r95, %r61, 15;
	setp.eq.s32 	%p14, %r95, 0;
	and.pred  	%p7, %p6, %p14;
	mov.b32 	%r34, %f68;
	// begin inline asm
	@%p7 st.shared.b32 [ %r32 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r96, %r62, 3;
	add.s32 	%r97, %r86, %r96;
	ld.shared.f32 	%f69, [%r97];
$L__tmp2:
	.loc	1 51 28                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:51:28
	bar.sync 	0;
	shr.u32 	%r98, %r62, 7;
	add.s32 	%r35, %r86, %r98;
	mov.b32 	%r36, %f69;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r99, %r66, 2;
	add.s32 	%r100, %r86, %r99;
	ld.shared.f32 	%f70, [%r100];
	mov.f32 	%f71, 0f45800000;
	.loc	1 48 20                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:48:20
	div.full.f32 	%f72, %f70, %f71;
	div.full.f32 	%f73, %f69, %f71;
	.loc	1 50 20                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:50:20
	add.f32 	%f74, %f72, 0f3727C5AC;
	add.f32 	%f75, %f73, 0f3727C5AC;
	.loc	1 51 28                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:51:28
	rsqrt.approx.ftz.f32 	%f76, %f74;
	rsqrt.approx.ftz.f32 	%f77, %f75;
	.loc	1 25 37                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:25:37
	and.b32  	%r101, %r87, 4092;
	.loc	1 23 23                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:23:23
	or.b32  	%r102, %r60, %r66;
	.loc	1 24 21                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:24:21
	setp.lt.s32 	%p15, %r102, %r64;
	.loc	1 52 4                          // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:52:4
	bar.sync 	0;
	.loc	1 53 28                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:53:28
	mul.wide.s32 	%rd16, %r102, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 53 40                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:53:40
	and.b32  	%r103, %r61, 1022;
	setp.eq.s32 	%p16, %r103, 0;
	mov.b32 	%r37, %f76;
	and.pred  	%p9, %p16, %p15;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r37 };
	// end inline asm
	.loc	1 60 35                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:60:35
	mul.wide.u32 	%rd17, %r101, 2;
	add.s64 	%rd6, %rd13, %rd17;
	.loc	1 60 42                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:60:42
	// begin inline asm
	mov.u32 %r38, %r5;
	mov.u32 %r39, %r5;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r38, %r39 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r38;
	mov.b32 	{%rs27, %rs28}, %r39;
	.loc	1 60 95                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:60:95
	cvt.f32.f16 	%f78, %rs25;
	cvt.f32.f16 	%f79, %rs26;
	cvt.f32.f16 	%f80, %rs27;
	cvt.f32.f16 	%f81, %rs28;
	.loc	1 61 56                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:61:56
	// begin inline asm
	mov.u32 %r42, %r5;
	mov.u32 %r43, %r5;
	mov.u32 %r44, %r5;
	mov.u32 %r45, %r5;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 65 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:65:24
	shl.b32 	%r104, %r101, 2;
	add.s32 	%r50, %r86, %r104;
	mov.b32 	%r51, %f78;
	mov.b32 	%r52, %f79;
	mov.b32 	%r53, %f80;
	mov.b32 	%r54, %f81;
	// begin inline asm
	@%p8 st.shared.v4.b32 [ %r50 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r105, %r69, 2;
	add.s32 	%r106, %r86, %r105;
	.loc	1 66 29                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:66:29
	add.s64 	%rd8, %rd14, %rd15;
	.loc	1 61 118                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:61:118
	mov.b32 	{%rs29, %rs30}, %r42;
	cvt.f32.f16 	%f82, %rs29;
	cvt.f32.f16 	%f83, %rs30;
	.loc	1 63 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:63:24
	mul.f32 	%f84, %f77, %f83;
	mul.f32 	%f85, %f77, %f82;
	.loc	1 65 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:65:24
	ld.shared.v4.f32 	{%f86, %f87, %f88, %f89}, [%r106];
	mul.f32 	%f90, %f86, %f85;
	mul.f32 	%f91, %f87, %f84;
	.loc	1 66 53                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:66:53
	cvt.rn.f16x2.f32 	%r55, %f91, %f90;
	.loc	1 61 118                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:61:118
	mov.b32 	{%rs31, %rs32}, %r43;
	cvt.f32.f16 	%f92, %rs31;
	cvt.f32.f16 	%f93, %rs32;
	.loc	1 63 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:63:24
	mul.f32 	%f94, %f77, %f93;
	mul.f32 	%f95, %f77, %f92;
	.loc	1 65 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:65:24
	mul.f32 	%f96, %f88, %f95;
	mul.f32 	%f97, %f89, %f94;
	.loc	1 66 53                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:66:53
	cvt.rn.f16x2.f32 	%r56, %f97, %f96;
	.loc	1 61 118                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:61:118
	mov.b32 	{%rs33, %rs34}, %r44;
	cvt.f32.f16 	%f98, %rs33;
	cvt.f32.f16 	%f99, %rs34;
	.loc	1 63 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:63:24
	mul.f32 	%f100, %f77, %f99;
	mul.f32 	%f101, %f77, %f98;
	.loc	1 65 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:65:24
	ld.shared.v4.f32 	{%f102, %f103, %f104, %f105}, [%r106+16];
	mul.f32 	%f106, %f102, %f101;
	mul.f32 	%f107, %f103, %f100;
	.loc	1 66 53                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:66:53
	cvt.rn.f16x2.f32 	%r57, %f107, %f106;
	.loc	1 61 118                        // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:61:118
	mov.b32 	{%rs35, %rs36}, %r45;
	cvt.f32.f16 	%f108, %rs35;
	cvt.f32.f16 	%f109, %rs36;
	.loc	1 63 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:63:24
	mul.f32 	%f110, %f77, %f109;
	mul.f32 	%f111, %f77, %f108;
	.loc	1 65 24                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:65:24
	mul.f32 	%f112, %f104, %f111;
	mul.f32 	%f113, %f105, %f110;
	.loc	1 66 53                         // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:66:53
	cvt.rn.f16x2.f32 	%r58, %f113, %f112;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	.loc	1 54 4                          // cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py:54:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/ir/cirveghol7wjrq7zwkkgu3sphruzjhq4ru5zcvmudgaexdo5niag.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 114
.b8 118
.b8 101
.b8 103
.b8 104
.b8 111
.b8 108
.b8 55
.b8 119
.b8 106
.b8 114
.b8 113
.b8 55
.b8 122
.b8 119
.b8 107
.b8 107
.b8 103
.b8 117
.b8 51
.b8 115
.b8 112
.b8 104
.b8 114
.b8 117
.b8 122
.b8 106
.b8 104
.b8 113
.b8 52
.b8 114
.b8 117
.b8 53
.b8 122
.b8 99
.b8 118
.b8 109
.b8 117
.b8 100
.b8 103
.b8 97
.b8 101
.b8 120
.b8 100
.b8 111
.b8 53
.b8 110
.b8 105
.b8 97
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
