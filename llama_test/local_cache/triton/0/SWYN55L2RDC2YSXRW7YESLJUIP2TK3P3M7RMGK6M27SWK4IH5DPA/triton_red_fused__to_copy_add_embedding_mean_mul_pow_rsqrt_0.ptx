//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 97, 115, 47, 99, 97, 115, 122, 51, 101, 112, 53, 100, 120, 114, 111, 100, 120, 110, 105, 54, 51, 102, 54, 102, 110, 115, 116, 106, 114, 110, 117, 114, 54, 108, 109, 54, 117, 101, 120, 98, 103, 103, 121, 108, 114, 101, 114, 111, 97, 51, 109, 110, 102, 103, 102, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<56>;
	.reg .b16 	%rs<81>;
	.reg .b32 	%r<171>;
	.reg .f32 	%f<219>;
	.reg .b64 	%rd<100>;
	.loc	1 18 0                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:18:0

// %bb.0:
	ld.param.u32 	%r4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
$L__tmp0:
	.loc	1 22 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:22:28
	mov.u32 	%r1, %ctaid.x;
	ld.param.u64 	%rd44, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
	.loc	1 22 33                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:22:33
	shl.b32 	%r2, %r1, 1;
	.loc	1 23 23                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:23:23
	or.b32  	%r3, %r2, 1;
	.loc	1 24 21                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:24:21
	setp.lt.s32 	%p17, %r2, %r4;
	setp.lt.s32 	%p18, %r3, %r4;
	.loc	1 28 30                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:28:30
	mul.wide.s32 	%rd45, %r2, 8;
	add.s64 	%rd9, %rd44, %rd45;
	add.s64 	%rd25, %rd9, 8;
	.loc	1 28 35                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:28:35
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd30 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd32 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd34, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd34 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd36 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd38, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd38 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd40, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd40 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd42, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd42 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 37 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:37:22
	add.s64 	%rd46, %rd42, 128256;
	add.s64 	%rd47, %rd40, 128256;
	.loc	1 38 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:38:22
	setp.lt.s64 	%p19, %rd42, 0;
	setp.lt.s64 	%p20, %rd40, 0;
	.loc	1 39 36                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:39:36
	selp.b64 	%rd48, %rd47, %rd40, %p20;
	selp.b64 	%rd49, %rd46, %rd42, %p19;
	.loc	1 40 41                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:41
	setp.gt.u64 	%p21, %rd49, 128255;
	setp.gt.u64 	%p22, %rd48, 128255;
	.loc	1 40 59                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:59
	and.pred  	%p23, %p17, %p22;
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	and.pred  	%p24, %p18, %p21;
	or.pred  	%p25, %p23, %p24;
	not.pred 	%p26, %p25;
	@%p26 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_rsqrtf.exit
	.loc	1 0 69                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:0:69
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	.loc	1 38 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:38:22
	setp.lt.s64 	%p51, %rd38, 0;
	setp.lt.s64 	%p52, %rd22, 0;
	.loc	1 23 44                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:23:44
	mov.u32 	%r129, %tid.x;
	.loc	1 25 37                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:25:37
	shl.b32 	%r130, %r129, 3;
	and.b32  	%r131, %r130, 2040;
	.loc	1 23 44                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:23:44
	and.b32  	%r132, %r129, 31;
	and.b32  	%r133, %r129, 1;
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	bar.sync 	0;
	.loc	1 41 46                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:46
	shl.b64 	%rd69, %rd22, 12;
	add.s64 	%rd70, %rd69, 525336576;
	selp.b64 	%rd71, %rd70, %rd69, %p52;
	shl.b64 	%rd72, %rd38, 12;
	add.s64 	%rd73, %rd72, 525336576;
	selp.b64 	%rd74, %rd73, %rd72, %p51;
	.loc	1 41 41                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:41
	cvt.u64.u32 	%rd75, %r131;
	.loc	1 41 34                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:34
	shl.b64 	%rd76, %rd71, 1;
	add.s64 	%rd77, %rd4, %rd76;
	mul.wide.u32 	%rd78, %r131, 2;
	add.s64 	%rd50, %rd77, %rd78;
	add.s64 	%rd51, %rd50, 4096;
	shl.b64 	%rd79, %rd74, 1;
	add.s64 	%rd80, %rd4, %rd79;
	add.s64 	%rd52, %rd80, %rd78;
	add.s64 	%rd53, %rd52, 4096;
	mov.b32 	%r9, 0;
	.loc	1 41 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:53
	// begin inline asm
	mov.u32 %r37, %r9;
	mov.u32 %r38, %r9;
	mov.u32 %r39, %r9;
	mov.u32 %r40, %r9;
	@%p17 ld.global.L1::evict_first.v4.b32 { %r37, %r38, %r39, %r40 }, [ %rd50 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r37;
	mov.b32 	{%rs3, %rs4}, %r38;
	mov.b32 	{%rs5, %rs6}, %r39;
	mov.b32 	{%rs7, %rs8}, %r40;
	// begin inline asm
	mov.u32 %r41, %r9;
	mov.u32 %r42, %r9;
	mov.u32 %r43, %r9;
	mov.u32 %r44, %r9;
	@%p17 ld.global.L1::evict_first.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd51 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r41;
	mov.b32 	{%rs11, %rs12}, %r42;
	mov.b32 	{%rs13, %rs14}, %r43;
	mov.b32 	{%rs15, %rs16}, %r44;
	// begin inline asm
	mov.u32 %r45, %r9;
	mov.u32 %r46, %r9;
	mov.u32 %r47, %r9;
	mov.u32 %r48, %r9;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r45, %r46, %r47, %r48 }, [ %rd52 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r45;
	mov.b32 	{%rs19, %rs20}, %r46;
	mov.b32 	{%rs21, %rs22}, %r47;
	mov.b32 	{%rs23, %rs24}, %r48;
	// begin inline asm
	mov.u32 %r49, %r9;
	mov.u32 %r50, %r9;
	mov.u32 %r51, %r9;
	mov.u32 %r52, %r9;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r49, %r50, %r51, %r52 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r49;
	mov.b32 	{%rs27, %rs28}, %r50;
	mov.b32 	{%rs29, %rs30}, %r51;
	mov.b32 	{%rs31, %rs32}, %r52;
	.loc	1 41 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:115
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	cvt.f32.f16 	%f3, %rs3;
	cvt.f32.f16 	%f4, %rs4;
	cvt.f32.f16 	%f5, %rs5;
	cvt.f32.f16 	%f6, %rs6;
	cvt.f32.f16 	%f7, %rs7;
	cvt.f32.f16 	%f8, %rs8;
	cvt.f32.f16 	%f9, %rs9;
	cvt.f32.f16 	%f10, %rs10;
	cvt.f32.f16 	%f11, %rs11;
	cvt.f32.f16 	%f12, %rs12;
	cvt.f32.f16 	%f13, %rs13;
	cvt.f32.f16 	%f14, %rs14;
	cvt.f32.f16 	%f15, %rs15;
	cvt.f32.f16 	%f16, %rs16;
	cvt.f32.f16 	%f17, %rs17;
	cvt.f32.f16 	%f18, %rs18;
	cvt.f32.f16 	%f19, %rs19;
	cvt.f32.f16 	%f20, %rs20;
	cvt.f32.f16 	%f21, %rs21;
	cvt.f32.f16 	%f22, %rs22;
	cvt.f32.f16 	%f23, %rs23;
	cvt.f32.f16 	%f24, %rs24;
	cvt.f32.f16 	%f25, %rs25;
	cvt.f32.f16 	%f26, %rs26;
	cvt.f32.f16 	%f27, %rs27;
	cvt.f32.f16 	%f28, %rs28;
	cvt.f32.f16 	%f29, %rs29;
	cvt.f32.f16 	%f30, %rs30;
	cvt.f32.f16 	%f31, %rs31;
	cvt.f32.f16 	%f32, %rs32;
	.loc	1 43 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:43:22
	mul.f32 	%f33, %f2, %f2;
	mul.f32 	%f34, %f18, %f18;
	.loc	1 47 41                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:41
	shl.b32 	%r134, %r1, 13;
	shl.b32 	%r135, %r3, 12;
	.loc	1 47 36                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:36
	or.b32  	%r136, %r131, %r134;
	or.b32  	%r137, %r135, %r131;
	.loc	1 47 29                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:29
	mul.wide.s32 	%rd81, %r136, 2;
	add.s64 	%rd54, %rd6, %rd81;
	cvt.s64.s32 	%rd82, %r134;
	or.b64  	%rd83, %rd75, %rd82;
	shl.b64 	%rd84, %rd83, 1;
	add.s64 	%rd85, %rd6, %rd84;
	add.s64 	%rd55, %rd85, 4096;
	mul.wide.s32 	%rd86, %r137, 2;
	add.s64 	%rd56, %rd6, %rd86;
	cvt.s64.s32 	%rd87, %r135;
	or.b64  	%rd88, %rd75, %rd87;
	shl.b64 	%rd89, %rd88, 1;
	add.s64 	%rd90, %rd6, %rd89;
	add.s64 	%rd57, %rd90, 4096;
	.loc	1 47 52                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:52
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd54 + 0 ], { %r37, %r38, %r39, %r40 };
	// end inline asm
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd55 + 0 ], { %r41, %r42, %r43, %r44 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd56 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd57 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f35, %f1, %f1, %f33;
	fma.rn.f32 	%f36, %f3, %f3, %f35;
	fma.rn.f32 	%f37, %f4, %f4, %f36;
	fma.rn.f32 	%f38, %f5, %f5, %f37;
	fma.rn.f32 	%f39, %f6, %f6, %f38;
	fma.rn.f32 	%f40, %f7, %f7, %f39;
	fma.rn.f32 	%f41, %f8, %f8, %f40;
	fma.rn.f32 	%f42, %f9, %f9, %f41;
	fma.rn.f32 	%f43, %f10, %f10, %f42;
	fma.rn.f32 	%f44, %f11, %f11, %f43;
	fma.rn.f32 	%f45, %f12, %f12, %f44;
	fma.rn.f32 	%f46, %f13, %f13, %f45;
	fma.rn.f32 	%f47, %f14, %f14, %f46;
	fma.rn.f32 	%f48, %f15, %f15, %f47;
	fma.rn.f32 	%f49, %f16, %f16, %f48;
	selp.f32 	%f50, %f49, 0f00000000, %p17;
	fma.rn.f32 	%f51, %f17, %f17, %f34;
	fma.rn.f32 	%f52, %f19, %f19, %f51;
	fma.rn.f32 	%f53, %f20, %f20, %f52;
	fma.rn.f32 	%f54, %f21, %f21, %f53;
	fma.rn.f32 	%f55, %f22, %f22, %f54;
	fma.rn.f32 	%f56, %f23, %f23, %f55;
	fma.rn.f32 	%f57, %f24, %f24, %f56;
	fma.rn.f32 	%f58, %f25, %f25, %f57;
	fma.rn.f32 	%f59, %f26, %f26, %f58;
	fma.rn.f32 	%f60, %f27, %f27, %f59;
	fma.rn.f32 	%f61, %f28, %f28, %f60;
	fma.rn.f32 	%f62, %f29, %f29, %f61;
	fma.rn.f32 	%f63, %f30, %f30, %f62;
	fma.rn.f32 	%f64, %f31, %f31, %f63;
	fma.rn.f32 	%f65, %f32, %f32, %f64;
	selp.f32 	%f66, %f65, 0f00000000, %p18;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r138, %f50;
	shfl.sync.bfly.b32	%r139, %r138, 16, 31, -1;
	mov.b32 	%f67, %r139;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f50, %f67;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r140, %f68;
	shfl.sync.bfly.b32	%r141, %r140, 8, 31, -1;
	mov.b32 	%f69, %r141;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r142, %f70;
	shfl.sync.bfly.b32	%r143, %r142, 4, 31, -1;
	mov.b32 	%f71, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r144, %f72;
	shfl.sync.bfly.b32	%r145, %r144, 2, 31, -1;
	mov.b32 	%f73, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r146, %f74;
	shfl.sync.bfly.b32	%r147, %r146, 1, 31, -1;
	mov.b32 	%f75, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r148, %f66;
	shfl.sync.bfly.b32	%r149, %r148, 16, 31, -1;
	mov.b32 	%f77, %r149;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f66, %f77;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r150, %f78;
	shfl.sync.bfly.b32	%r151, %r150, 8, 31, -1;
	mov.b32 	%f79, %r151;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r152, %f80;
	shfl.sync.bfly.b32	%r153, %r152, 4, 31, -1;
	mov.b32 	%f81, %r153;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r154, %f82;
	shfl.sync.bfly.b32	%r155, %r154, 2, 31, -1;
	mov.b32 	%f83, %r155;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r156, %f84;
	shfl.sync.bfly.b32	%r157, %r156, 1, 31, -1;
	mov.b32 	%f85, %r157;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p35, %r132, 0;
	shr.u32 	%r158, %r129, 3;
	and.b32  	%r159, %r158, 28;
	mov.u32 	%r61, global_smem;
	add.s32 	%r53, %r61, %r159;
	mov.b32 	%r54, %f76;
	// begin inline asm
	@%p35 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r53, 32;
	mov.b32 	%r56, %f86;
	// begin inline asm
	@%p35 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p37, %r129, 16;
	shl.b32 	%r160, %r129, 2;
	add.s32 	%r58, %r61, %r160;
	// begin inline asm
	@%p37 ld.shared.b32 %r57, [ %r58 + 0 ];
	// end inline asm
	mov.b32 	%f87, %r57;
	shfl.sync.bfly.b32	%r161, %r57, 4, 31, -1;
	mov.b32 	%f88, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r162, %f89;
	shfl.sync.bfly.b32	%r163, %r162, 2, 31, -1;
	mov.b32 	%f90, %r163;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r164, %f91;
	shfl.sync.bfly.b32	%r165, %r164, 1, 31, -1;
	mov.b32 	%f92, %r165;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r166, %r129, 7;
	setp.eq.s32 	%p53, %r166, 0;
	and.pred  	%p38, %p37, %p53;
	mov.b32 	%r60, %f93;
	// begin inline asm
	@%p38 st.shared.b32 [ %r58 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f94, [global_smem];
	ld.shared.f32 	%f95, [global_smem+32];
$L__tmp2:
	.loc	1 53 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:53:28
	bar.sync 	0;
	mov.b32 	%r62, %f94;
	mov.b32 	%r63, %f95;
	mov.pred 	%p39, -1;
	// begin inline asm
	@%p39 st.shared.v2.b32 [ %r61 + 0 ], { %r62, %r63 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r167, %r133, 2;
	add.s32 	%r168, %r61, %r167;
	ld.shared.f32 	%f96, [%r168];
	mov.f32 	%f97, 0f45800000;
	.loc	1 50 21                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:50:21
	div.full.f32 	%f98, %f96, %f97;
	div.full.f32 	%f99, %f94, %f97;
	div.full.f32 	%f100, %f95, %f97;
	.loc	1 52 20                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:52:20
	add.f32 	%f101, %f98, 0f3727C5AC;
	add.f32 	%f102, %f99, 0f3727C5AC;
	add.f32 	%f103, %f100, 0f3727C5AC;
	.loc	1 53 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:53:28
	rsqrt.approx.ftz.f32 	%f104, %f101;
	rsqrt.approx.ftz.f32 	%f105, %f102;
	rsqrt.approx.ftz.f32 	%f106, %f103;
	.loc	1 23 23                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:23:23
	or.b32  	%r169, %r2, %r133;
	.loc	1 24 21                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:24:21
	setp.lt.s32 	%p54, %r169, %r4;
	.loc	1 54 4                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:55:28
	mul.wide.s32 	%rd91, %r169, 4;
	add.s64 	%rd58, %rd3, %rd91;
	.loc	1 55 40                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:55:40
	and.b32  	%r170, %r129, 254;
	setp.eq.s32 	%p55, %r170, 0;
	mov.b32 	%r64, %f104;
	and.pred  	%p40, %p55, %p54;
	// begin inline asm
	@%p40 st.global.b32 [ %rd58 + 0 ], { %r64 };
	// end inline asm
	.loc	1 62 35                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:35
	add.s64 	%rd59, %rd5, %rd78;
	add.s64 	%rd60, %rd59, 4096;
	.loc	1 62 42                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:42
	// begin inline asm
	mov.u32 %r65, %r9;
	mov.u32 %r66, %r9;
	mov.u32 %r67, %r9;
	mov.u32 %r68, %r9;
	@%p39 ld.global.L1::evict_last.v4.b32 { %r65, %r66, %r67, %r68 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r73, %r9;
	mov.u32 %r74, %r9;
	mov.u32 %r75, %r9;
	mov.u32 %r76, %r9;
	@%p39 ld.global.L1::evict_last.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd60 + 0 ];
	// end inline asm
	.loc	1 63 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:53
	// begin inline asm
	mov.u32 %r81, %r9;
	mov.u32 %r82, %r9;
	mov.u32 %r83, %r9;
	mov.u32 %r84, %r9;
	@%p17 ld.global.L1::evict_first.v4.b32 { %r81, %r82, %r83, %r84 }, [ %rd54 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r89, %r9;
	mov.u32 %r90, %r9;
	mov.u32 %r91, %r9;
	mov.u32 %r92, %r9;
	@%p17 ld.global.L1::evict_first.v4.b32 { %r89, %r90, %r91, %r92 }, [ %rd55 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r97, %r9;
	mov.u32 %r98, %r9;
	mov.u32 %r99, %r9;
	mov.u32 %r100, %r9;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r97, %r98, %r99, %r100 }, [ %rd56 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r105, %r9;
	mov.u32 %r106, %r9;
	mov.u32 %r107, %r9;
	mov.u32 %r108, %r9;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r105, %r106, %r107, %r108 }, [ %rd57 + 0 ];
	// end inline asm
	.loc	1 68 29                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:29
	add.s64 	%rd65, %rd7, %rd81;
	add.s64 	%rd92, %rd7, %rd84;
	add.s64 	%rd66, %rd92, 4096;
	add.s64 	%rd67, %rd7, %rd86;
	add.s64 	%rd93, %rd7, %rd89;
	add.s64 	%rd68, %rd93, 4096;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs33, %rs34}, %r65;
	cvt.f32.f16 	%f107, %rs34;
	cvt.f32.f16 	%f108, %rs33;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs35, %rs36}, %r81;
	cvt.f32.f16 	%f109, %rs35;
	cvt.f32.f16 	%f110, %rs36;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f111, %f105, %f110;
	mul.f32 	%f112, %f105, %f109;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f113, %f112, %f108;
	mul.f32 	%f114, %f111, %f107;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r113, %f114, %f113;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs37, %rs38}, %r66;
	cvt.f32.f16 	%f115, %rs38;
	cvt.f32.f16 	%f116, %rs37;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs39, %rs40}, %r82;
	cvt.f32.f16 	%f117, %rs39;
	cvt.f32.f16 	%f118, %rs40;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f119, %f105, %f118;
	mul.f32 	%f120, %f105, %f117;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f121, %f120, %f116;
	mul.f32 	%f122, %f119, %f115;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r114, %f122, %f121;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs41, %rs42}, %r67;
	cvt.f32.f16 	%f123, %rs42;
	cvt.f32.f16 	%f124, %rs41;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs43, %rs44}, %r83;
	cvt.f32.f16 	%f125, %rs43;
	cvt.f32.f16 	%f126, %rs44;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f127, %f105, %f126;
	mul.f32 	%f128, %f105, %f125;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f129, %f128, %f124;
	mul.f32 	%f130, %f127, %f123;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r115, %f130, %f129;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs45, %rs46}, %r68;
	cvt.f32.f16 	%f131, %rs46;
	cvt.f32.f16 	%f132, %rs45;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs47, %rs48}, %r84;
	cvt.f32.f16 	%f133, %rs47;
	cvt.f32.f16 	%f134, %rs48;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f135, %f105, %f134;
	mul.f32 	%f136, %f105, %f133;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f137, %f136, %f132;
	mul.f32 	%f138, %f135, %f131;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r116, %f138, %f137;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs49, %rs50}, %r73;
	cvt.f32.f16 	%f139, %rs50;
	cvt.f32.f16 	%f140, %rs49;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs51, %rs52}, %r89;
	cvt.f32.f16 	%f141, %rs51;
	cvt.f32.f16 	%f142, %rs52;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f143, %f105, %f142;
	mul.f32 	%f144, %f105, %f141;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f145, %f144, %f140;
	mul.f32 	%f146, %f143, %f139;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r117, %f146, %f145;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs53, %rs54}, %r74;
	cvt.f32.f16 	%f147, %rs54;
	cvt.f32.f16 	%f148, %rs53;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs55, %rs56}, %r90;
	cvt.f32.f16 	%f149, %rs55;
	cvt.f32.f16 	%f150, %rs56;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f151, %f105, %f150;
	mul.f32 	%f152, %f105, %f149;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f153, %f152, %f148;
	mul.f32 	%f154, %f151, %f147;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r118, %f154, %f153;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs57, %rs58}, %r75;
	cvt.f32.f16 	%f155, %rs58;
	cvt.f32.f16 	%f156, %rs57;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs59, %rs60}, %r91;
	cvt.f32.f16 	%f157, %rs59;
	cvt.f32.f16 	%f158, %rs60;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f159, %f105, %f158;
	mul.f32 	%f160, %f105, %f157;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f161, %f160, %f156;
	mul.f32 	%f162, %f159, %f155;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r119, %f162, %f161;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs61, %rs62}, %r76;
	cvt.f32.f16 	%f163, %rs62;
	cvt.f32.f16 	%f164, %rs61;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs63, %rs64}, %r92;
	cvt.f32.f16 	%f165, %rs63;
	cvt.f32.f16 	%f166, %rs64;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f167, %f105, %f166;
	mul.f32 	%f168, %f105, %f165;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f169, %f168, %f164;
	mul.f32 	%f170, %f167, %f163;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r120, %f170, %f169;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs65, %rs66}, %r97;
	cvt.f32.f16 	%f171, %rs65;
	cvt.f32.f16 	%f172, %rs66;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f173, %f106, %f172;
	mul.f32 	%f174, %f106, %f171;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f175, %f174, %f108;
	mul.f32 	%f176, %f173, %f107;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r121, %f176, %f175;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs67, %rs68}, %r98;
	cvt.f32.f16 	%f177, %rs67;
	cvt.f32.f16 	%f178, %rs68;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f179, %f106, %f178;
	mul.f32 	%f180, %f106, %f177;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f181, %f180, %f116;
	mul.f32 	%f182, %f179, %f115;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r122, %f182, %f181;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs69, %rs70}, %r99;
	cvt.f32.f16 	%f183, %rs69;
	cvt.f32.f16 	%f184, %rs70;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f185, %f106, %f184;
	mul.f32 	%f186, %f106, %f183;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f187, %f186, %f124;
	mul.f32 	%f188, %f185, %f123;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r123, %f188, %f187;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs71, %rs72}, %r100;
	cvt.f32.f16 	%f189, %rs71;
	cvt.f32.f16 	%f190, %rs72;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f191, %f106, %f190;
	mul.f32 	%f192, %f106, %f189;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f193, %f192, %f132;
	mul.f32 	%f194, %f191, %f131;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r124, %f194, %f193;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs73, %rs74}, %r105;
	cvt.f32.f16 	%f195, %rs73;
	cvt.f32.f16 	%f196, %rs74;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f197, %f106, %f196;
	mul.f32 	%f198, %f106, %f195;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f199, %f198, %f140;
	mul.f32 	%f200, %f197, %f139;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r125, %f200, %f199;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs75, %rs76}, %r106;
	cvt.f32.f16 	%f201, %rs75;
	cvt.f32.f16 	%f202, %rs76;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f203, %f106, %f202;
	mul.f32 	%f204, %f106, %f201;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f205, %f204, %f148;
	mul.f32 	%f206, %f203, %f147;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r126, %f206, %f205;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs77, %rs78}, %r107;
	cvt.f32.f16 	%f207, %rs77;
	cvt.f32.f16 	%f208, %rs78;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f209, %f106, %f208;
	mul.f32 	%f210, %f106, %f207;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f211, %f210, %f156;
	mul.f32 	%f212, %f209, %f155;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r127, %f212, %f211;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs79, %rs80}, %r108;
	cvt.f32.f16 	%f213, %rs79;
	cvt.f32.f16 	%f214, %rs80;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f215, %f106, %f214;
	mul.f32 	%f216, %f106, %f213;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f217, %f216, %f164;
	mul.f32 	%f218, %f215, %f163;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r128, %f218, %f217;
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd65 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd66 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd67 + 0 ], { %r121, %r122, %r123, %r124 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd68 + 0 ], { %r125, %r126, %r127, %r128 };
	// end inline asm
	.loc	1 56 4                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:56:4
	ret;
$L__BB0_1:
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	mov.u64 	%rd94, assertMessage_0;
	cvta.global.u64 	%rd95, %rd94;
	mov.u64 	%rd96, assertFile_0;
	cvta.global.u64 	%rd97, %rd96;
	mov.u64 	%rd98, assertFunc_0;
	cvta.global.u64 	%rd99, %rd98;
	{ // callseq 6, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd95;
	.param .b64 param1;
	st.param.b64 	[param1], %rd97;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd99;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 6
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/as/casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 115
.b8 122
.b8 51
.b8 101
.b8 112
.b8 53
.b8 100
.b8 120
.b8 114
.b8 111
.b8 100
.b8 120
.b8 110
.b8 105
.b8 54
.b8 51
.b8 102
.b8 54
.b8 102
.b8 110
.b8 115
.b8 116
.b8 106
.b8 114
.b8 110
.b8 117
.b8 114
.b8 54
.b8 108
.b8 109
.b8 54
.b8 117
.b8 101
.b8 120
.b8 98
.b8 103
.b8 103
.b8 121
.b8 108
.b8 114
.b8 101
.b8 114
.b8 111
.b8 97
.b8 51
.b8 109
.b8 110
.b8 102
.b8 103
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
