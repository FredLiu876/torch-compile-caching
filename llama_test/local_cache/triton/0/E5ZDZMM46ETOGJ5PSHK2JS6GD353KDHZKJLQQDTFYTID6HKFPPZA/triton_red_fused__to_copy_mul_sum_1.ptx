//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_mul_sum_1 // -- Begin function triton_red_fused__to_copy_mul_sum_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_mul_sum_1
.visible .entry triton_red_fused__to_copy_mul_sum_1(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_3,
	.param .u32 triton_red_fused__to_copy_mul_sum_1_param_4,
	.param .u32 triton_red_fused__to_copy_mul_sum_1_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<100>;
	.reg .f32 	%f<52>;
	.reg .b64 	%rd<15>;
	.loc	1 18 0                          // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:18:0

// %bb.0:
	ld.param.u32 	%r18, [triton_red_fused__to_copy_mul_sum_1_param_5];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_mul_sum_1_param_3];
$L__tmp0:
	.loc	1 22 28                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:22:28
	mov.u32 	%r20, %ctaid.x;
	.loc	1 22 33                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:22:33
	shl.b32 	%r1, %r20, 7;
	.loc	1 23 44                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r21, %r2, 2;
	and.b32  	%r3, %r21, 124;
	.loc	1 25 37                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:25:37
	bfe.u32 	%r4, %r2, 5, 2;
	.loc	1 29 40                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:29:40
	setp.lt.s32 	%p1, %r18, 1;
	mov.b32 	%r96, 0;
	mov.u32 	%r97, %r96;
	mov.u32 	%r98, %r96;
	mov.u32 	%r99, %r96;
	@%p1 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:0:40
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_mul_sum_1_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_mul_sum_1_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_mul_sum_1_param_0];
	.loc	1 29 40                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:29:40
	shl.b32 	%r23, %r4, 12;
	add.s32 	%r24, %r23, %r1;
	add.s32 	%r94, %r24, %r3;
	mov.b32 	%r27, 0;
	mov.f32 	%f48, 0f00000000;
	mov.f32 	%f49, %f48;
	mov.f32 	%f50, %f48;
	mov.f32 	%f51, %f48;
	mov.u32 	%r95, %r27;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 31 29                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:31:29
	add.s32 	%r41, %r4, %r95;
	setp.lt.s32 	%p2, %r41, %r18;
	.loc	1 35 34                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:35:34
	mul.wide.s32 	%rd11, %r94, 2;
	add.s64 	%rd5, %rd1, %rd11;
	.loc	1 35 51                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:35:51
	// begin inline asm
	mov.u32 %r25, %r27;
	mov.u32 %r26, %r27;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r25, %r26 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r25;
	mov.b32 	{%rs3, %rs4}, %r26;
	.loc	1 35 105                        // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:35:105
	cvt.f32.f16 	%f10, %rs1;
	cvt.f32.f16 	%f11, %rs2;
	cvt.f32.f16 	%f12, %rs3;
	cvt.f32.f16 	%f13, %rs4;
	.loc	1 36 34                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:36:34
	add.s64 	%rd6, %rd2, %rd11;
	.loc	1 36 51                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:36:51
	// begin inline asm
	mov.u32 %r29, %r27;
	mov.u32 %r30, %r27;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r29, %r30 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r29;
	mov.b32 	{%rs7, %rs8}, %r30;
	.loc	1 36 105                        // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:36:105
	cvt.f32.f16 	%f14, %rs5;
	cvt.f32.f16 	%f15, %rs6;
	cvt.f32.f16 	%f16, %rs7;
	cvt.f32.f16 	%f17, %rs8;
	.loc	1 37 34                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:37:34
	mul.wide.s32 	%rd12, %r41, 4;
	add.s64 	%rd7, %rd3, %rd12;
	.loc	1 37 41                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:37:41
	// begin inline asm
	mov.u32 %r33, %r27;
	@%p2 ld.global.L1::evict_last.b32 { %r33 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, %r27;
	@%p2 ld.global.L1::evict_last.b32 { %r35 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, %r27;
	@%p2 ld.global.L1::evict_last.b32 { %r37 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, %r27;
	@%p2 ld.global.L1::evict_last.b32 { %r39 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r39;
	.loc	1 39 22                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:39:22
	mul.f32 	%f19, %f14, %f18;
	mul.f32 	%f20, %f15, %f18;
	mul.f32 	%f21, %f16, %f18;
	mul.f32 	%f22, %f17, %f18;
	.loc	1 43 23                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:43:23
	fma.rn.f32 	%f23, %f19, %f10, %f48;
	fma.rn.f32 	%f24, %f20, %f11, %f49;
	fma.rn.f32 	%f25, %f21, %f12, %f50;
	fma.rn.f32 	%f26, %f22, %f13, %f51;
	.loc	1 44 40                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:44:40
	selp.f32 	%f48, %f23, %f48, %p2;
	selp.f32 	%f49, %f24, %f49, %p2;
	selp.f32 	%f50, %f25, %f50, %p2;
	selp.f32 	%f51, %f26, %f51, %p2;
	.loc	1 29 40                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:29:40
	add.s32 	%r95, %r95, 4;
	add.s32 	%r94, %r94, 16384;
	setp.lt.s32 	%p8, %r95, %r18;
	@%p8 bra 	$L__BB0_2;
// %bb.3:                               // %._crit_edge.loopexit
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r96, %f48;
	mov.b32 	%r97, %f49;
	mov.b32 	%r98, %f50;
	mov.b32 	%r99, %f51;
$L__tmp2:
$L__BB0_4:                              // %._crit_edge
	.loc	1 23 44                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:23:44
	and.b32  	%r71, %r2, 127;
	.loc	1 23 23                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:23:23
	or.b32  	%r72, %r1, %r71;
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	shl.b32 	%r73, %r4, 2;
	shl.b32 	%r74, %r3, 4;
	or.b32  	%r75, %r74, %r73;
	mov.u32 	%r76, global_smem;
	add.s32 	%r42, %r76, %r75;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r42 + 0 ], %r96;
	// end inline asm
	add.s32 	%r44, %r42, 16;
	// begin inline asm
	@%p9 st.shared.b32 [ %r44 + 0 ], %r97;
	// end inline asm
	add.s32 	%r46, %r42, 32;
	// begin inline asm
	@%p9 st.shared.b32 [ %r46 + 0 ], %r98;
	// end inline asm
	add.s32 	%r48, %r42, 48;
	// begin inline asm
	@%p9 st.shared.b32 [ %r48 + 0 ], %r99;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r2, 512;
	add.s32 	%r51, %r76, %r21;
	// begin inline asm
	@%p13 ld.shared.b32 %r50, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r50;
	shfl.sync.bfly.b32	%r78, %r50, 2, 31, -1;
	mov.b32 	%f28, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r79, %f29;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f30, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r81, %r2, 3;
	setp.eq.s32 	%p22, %r81, 0;
	and.pred  	%p14, %p13, %p22;
	mov.b32 	%r53, %f31;
	// begin inline asm
	@%p14 st.shared.b32 [ %r51 + 0 ], %r53;
	// end inline asm
	add.s32 	%r55, %r51, 512;
	// begin inline asm
	@%p13 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r54;
	shfl.sync.bfly.b32	%r82, %r54, 2, 31, -1;
	mov.b32 	%f33, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r83, %f34;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f35, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f36;
	// begin inline asm
	@%p14 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	add.s32 	%r59, %r51, 1024;
	// begin inline asm
	@%p13 ld.shared.b32 %r58, [ %r59 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r58;
	shfl.sync.bfly.b32	%r85, %r58, 2, 31, -1;
	mov.b32 	%f38, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r86, %f39;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f40, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f41;
	// begin inline asm
	@%p14 st.shared.b32 [ %r59 + 0 ], %r61;
	// end inline asm
	add.s32 	%r63, %r51, 1536;
	// begin inline asm
	@%p13 ld.shared.b32 %r62, [ %r63 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r62;
	shfl.sync.bfly.b32	%r88, %r62, 2, 31, -1;
	mov.b32 	%f43, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f44;
	shfl.sync.bfly.b32	%r90, %r89, 1, 31, -1;
	mov.b32 	%f45, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r65, %f46;
	// begin inline asm
	@%p14 st.shared.b32 [ %r63 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r91, %r76, %r74;
	ld.shared.u32 	%r67, [%r91];
	ld.shared.u32 	%r68, [%r91+16];
	ld.shared.u32 	%r69, [%r91+32];
	ld.shared.u32 	%r70, [%r91+48];
$L__tmp4:
	.loc	1 46 36                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:46:36
	bar.sync 	0;
	mad.lo.s32 	%r66, %r3, -12, %r91;
	// begin inline asm
	@%p9 st.shared.v4.b32 [ %r66 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r92, %r71, 2;
	add.s32 	%r93, %r76, %r92;
	ld.shared.f32 	%f47, [%r93];
	.loc	1 46 25                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:46:25
	mul.wide.s32 	%rd14, %r72, 2;
	add.s64 	%rd13, %rd4, %rd14;
	.loc	1 46 36                         // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:46:36
	cvt.rn.f16.f32 	%rs9, %f47;
	// begin inline asm
	st.global.b16 [ %rd13 + 0 ], { %rs9 };
	// end inline asm
	.loc	1 46 4                          // cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py:46:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 179                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xac DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 112
.b8 109
.b8 100
.b8 106
.b8 120
.b8 116
.b8 110
.b8 55
.b8 54
.b8 101
.b8 111
.b8 105
.b8 108
.b8 122
.b8 122
.b8 110
.b8 51
.b8 97
.b8 117
.b8 113
.b8 117
.b8 120
.b8 98
.b8 108
.b8 98
.b8 112
.b8 104
.b8 107
.b8 98
.b8 116
.b8 106
.b8 102
.b8 108
.b8 55
.b8 107
.b8 97
.b8 119
.b8 107
.b8 50
.b8 53
.b8 113
.b8 115
.b8 118
.b8 103
.b8 118
.b8 114
.b8 52
.b8 53
.b8 98
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
