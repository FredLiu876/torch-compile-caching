; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_red_fused__to_copy_mul_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 6, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = and i32 %10, 63, !dbg !11
  %12 = or disjoint i32 %9, %11, !dbg !12
  %13 = lshr i32 %10, 6, !dbg !13
  %14 = and i32 %13, 3, !dbg !13
  %15 = icmp sgt i32 %5, 0, !dbg !14
  br i1 %15, label %.lr.ph, label %._crit_edge, !dbg !14

.lr.ph:                                           ; preds = %7, %.lr.ph
  %16 = phi float [ %38, %.lr.ph ], [ 0.000000e+00, %7 ]
  %17 = phi i32 [ %39, %.lr.ph ], [ 0, %7 ]
  %18 = or disjoint i32 %17, %14, !dbg !15
  %19 = icmp slt i32 %18, %5, !dbg !16
  %20 = shl i32 %18, 12, !dbg !17
  %21 = add i32 %20, %12, !dbg !18
  %22 = sext i32 %21 to i64, !dbg !19
  %23 = getelementptr half, ptr addrspace(1) %0, i64 %22, !dbg !19
  %24 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %23, i1 %19) #3, !dbg !20
  %25 = bitcast i16 %24 to half, !dbg !20
  %26 = fpext half %25 to float, !dbg !21
  %27 = getelementptr half, ptr addrspace(1) %1, i64 %22, !dbg !22
  %28 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %27, i1 %19) #3, !dbg !23
  %29 = bitcast i16 %28 to half, !dbg !23
  %30 = fpext half %29 to float, !dbg !24
  %31 = sext i32 %18 to i64, !dbg !25
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %32, i1 %19) #3, !dbg !26
  %34 = bitcast i32 %33 to float, !dbg !26
  %35 = fmul float %30, %34, !dbg !27
  %36 = fmul float %35, %26, !dbg !28
  %37 = fadd float %16, %36, !dbg !29
  %38 = select i1 %19, float %37, float %16, !dbg !30
  %39 = add i32 %17, 4, !dbg !14
  %40 = icmp slt i32 %39, %5, !dbg !14
  br i1 %40, label %.lr.ph, label %._crit_edge.loopexit, !dbg !14

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %41 = bitcast float %38 to <1 x i32>, !dbg !31
  br label %._crit_edge, !dbg !31

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %7
  %.lcssa = phi <1 x i32> [ zeroinitializer, %7 ], [ %41, %._crit_edge.loopexit ]
  %42 = shl nuw nsw i32 %11, 2, !dbg !31
  %43 = or disjoint i32 %42, %14, !dbg !31
  %44 = getelementptr float, ptr addrspace(3) @global_smem, i32 %43, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %44, <1 x i32> %.lcssa, i1 true) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %45 = icmp slt i32 %10, 256, !dbg !31
  %46 = getelementptr float, ptr addrspace(3) @global_smem, i32 %10, !dbg !31
  %47 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %46, i1 %45) #3, !dbg !31
  %48 = bitcast i32 %47 to float, !dbg !31
  %49 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 2, i32 31), !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = fadd float %48, %50, !dbg !35
  %52 = bitcast float %51 to i32, !dbg !31
  %53 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %52, i32 1, i32 31), !dbg !31
  %54 = bitcast i32 %53 to float, !dbg !31
  %55 = fadd float %51, %54, !dbg !35
  %56 = and i32 %10, 3, !dbg !31
  %57 = icmp eq i32 %56, 0, !dbg !31
  %58 = and i1 %45, %57, !dbg !31
  %59 = bitcast float %55 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %46, <1 x i32> %59, i1 %58) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %60 = getelementptr float, ptr addrspace(3) @global_smem, i32 %42, !dbg !31
  %61 = load float, ptr addrspace(3) %60, align 16, !dbg !31
  %62 = sext i32 %12 to i64, !dbg !37
  %63 = getelementptr half, ptr addrspace(1) %3, i64 %62, !dbg !37
  %64 = fptrunc float %61 to half, !dbg !38
  %65 = and i32 %10, 192, !dbg !38
  %66 = icmp eq i32 %65, 0, !dbg !38
  %67 = bitcast half %64 to i16, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %67, ptr addrspace(1) %63, i1 %66) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py", directory: "./local_cache/dp")
!4 = !{ptr @triton_red_fused__to_copy_mul_sum_1, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_mul_sum_1", linkageName: "triton_red_fused__to_copy_mul_sum_1", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 22, column: 28, scope: !6)
!10 = !DILocation(line: 22, column: 33, scope: !6)
!11 = !DILocation(line: 23, column: 44, scope: !6)
!12 = !DILocation(line: 23, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 37, scope: !6)
!14 = !DILocation(line: 29, column: 40, scope: !6)
!15 = !DILocation(line: 30, column: 31, scope: !6)
!16 = !DILocation(line: 31, column: 29, scope: !6)
!17 = !DILocation(line: 35, column: 44, scope: !6)
!18 = !DILocation(line: 35, column: 39, scope: !6)
!19 = !DILocation(line: 35, column: 34, scope: !6)
!20 = !DILocation(line: 35, column: 51, scope: !6)
!21 = !DILocation(line: 35, column: 105, scope: !6)
!22 = !DILocation(line: 36, column: 34, scope: !6)
!23 = !DILocation(line: 36, column: 51, scope: !6)
!24 = !DILocation(line: 36, column: 105, scope: !6)
!25 = !DILocation(line: 37, column: 34, scope: !6)
!26 = !DILocation(line: 37, column: 41, scope: !6)
!27 = !DILocation(line: 39, column: 22, scope: !6)
!28 = !DILocation(line: 41, column: 22, scope: !6)
!29 = !DILocation(line: 43, column: 23, scope: !6)
!30 = !DILocation(line: 44, column: 40, scope: !6)
!31 = !DILocation(line: 286, column: 36, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !6, file: !33, discriminator: 0)
!33 = !DIFile(filename: "standard.py", directory: "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language")
!34 = !DILocation(line: 45, column: 25, scope: !6)
!35 = !DILocation(line: 256, column: 15, scope: !36, inlinedAt: !34)
!36 = distinct !DILexicalBlockFile(scope: !32, file: !33, discriminator: 0)
!37 = !DILocation(line: 46, column: 25, scope: !6)
!38 = !DILocation(line: 46, column: 36, scope: !6)
!39 = !DILocation(line: 46, column: 4, scope: !6)
