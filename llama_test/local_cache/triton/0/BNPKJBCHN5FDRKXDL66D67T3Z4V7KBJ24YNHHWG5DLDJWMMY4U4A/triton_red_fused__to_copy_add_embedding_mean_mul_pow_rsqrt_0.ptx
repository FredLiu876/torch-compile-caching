//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 117, 115, 47, 99, 117, 115, 110, 53, 114, 52, 102, 116, 110, 99, 108, 55, 103, 113, 115, 105, 105, 120, 103, 51, 104, 119, 51, 111, 106, 99, 102, 117, 118, 97, 113, 100, 104, 101, 122, 108, 120, 98, 108, 119, 101, 99, 110, 108, 99, 107, 106, 107, 106, 110, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<53>;
	.loc	1 18 0                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:18:0

// %bb.0:
	ld.param.u32 	%r2, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:22:28
	mov.u32 	%r3, %ctaid.x;
	.loc	1 24 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:24:21
	setp.lt.s32 	%p1, %r3, %r2;
	.loc	1 28 30                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:28:30
	mul.wide.s32 	%rd15, %r3, 8;
	add.s64 	%rd9, %rd14, %rd15;
	.loc	1 28 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:28:35
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:37:22
	add.s64 	%rd16, %rd12, 128256;
	.loc	1 38 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:38:22
	setp.lt.s64 	%p4, %rd12, 0;
	.loc	1 39 36                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:39:36
	selp.b64 	%rd17, %rd16, %rd12, %p4;
	.loc	1 40 41                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:41
	setp.gt.u64 	%p5, %rd17, 128255;
	.loc	1 41 46                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:46
	and.pred  	%p6, %p1, %p5;
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	@%p6 bra 	$L__BB0_2;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:0:69
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	mov.u32 	%r1, %tid.x;
	cvt.s64.s32 	%rd1, %r3;
	cvt.u32.u64 	%r43, %rd1;
	.loc	1 24 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:24:21
	setp.lt.s32 	%p7, %r43, %r2;
	.loc	1 38 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:38:22
	setp.lt.s64 	%p31, %rd10, 0;
	.loc	1 41 46                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:46
	shl.b64 	%rd39, %rd10, 12;
	add.s64 	%rd40, %rd39, 525336576;
	selp.b64 	%rd41, %rd40, %rd39, %p31;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd4, %rd42;
	.loc	1 25 37                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:25:37
	shl.b32 	%r44, %r1, 1;
	and.b32  	%r45, %r44, 1022;
	.loc	1 47 41                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:41
	shl.b32 	%r46, %r43, 12;
	.loc	1 30 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:30:40
	or.b32  	%r47, %r45, %r46;
	.loc	1 25 37                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:25:37
	and.b32  	%r48, %r1, 31;
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:34
	mul.wide.u32 	%rd44, %r45, 2;
	add.s64 	%rd18, %rd43, %rd44;
	mov.b32 	%r5, 0;
	.loc	1 41 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:53
	// begin inline asm
	mov.u32 %r6, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r6 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 47 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:29
	mul.wide.s32 	%rd45, %r47, 2;
	add.s64 	%rd19, %rd6, %rd45;
	.loc	1 47 52                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:52
	// begin inline asm
	@%p7 st.global.b32 [ %rd19 + 0 ], { %r6 };
	// end inline asm
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:34
	add.s64 	%rd20, %rd18, 2048;
	.loc	1 41 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:53
	// begin inline asm
	mov.u32 %r9, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r9 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 47 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:29
	add.s64 	%rd21, %rd19, 2048;
	.loc	1 47 52                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:52
	// begin inline asm
	@%p7 st.global.b32 [ %rd21 + 0 ], { %r9 };
	// end inline asm
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:34
	add.s64 	%rd22, %rd18, 4096;
	.loc	1 41 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:53
	// begin inline asm
	mov.u32 %r12, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r12 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 47 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:29
	add.s64 	%rd23, %rd19, 4096;
	.loc	1 47 52                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:52
	// begin inline asm
	@%p7 st.global.b32 [ %rd23 + 0 ], { %r12 };
	// end inline asm
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:34
	add.s64 	%rd24, %rd18, 6144;
	.loc	1 41 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:53
	// begin inline asm
	mov.u32 %r15, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r15 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 41 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:115
	mov.b32 	{%rs1, %rs2}, %r6;
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	mov.b32 	{%rs3, %rs4}, %r9;
	cvt.f32.f16 	%f3, %rs4;
	cvt.f32.f16 	%f4, %rs3;
	.loc	1 43 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:43:22
	mul.f32 	%f5, %f4, %f4;
	mul.f32 	%f6, %f3, %f3;
	.loc	1 45 25                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:45:25
	fma.rn.f32 	%f7, %f2, %f2, %f6;
	fma.rn.f32 	%f8, %f1, %f1, %f5;
	.loc	1 41 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:115
	mov.b32 	{%rs5, %rs6}, %r12;
	cvt.f32.f16 	%f9, %rs6;
	cvt.f32.f16 	%f10, %rs5;
	.loc	1 45 25                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:45:25
	fma.rn.f32 	%f11, %f10, %f10, %f8;
	fma.rn.f32 	%f12, %f9, %f9, %f7;
	.loc	1 41 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:115
	mov.b32 	{%rs7, %rs8}, %r15;
	cvt.f32.f16 	%f13, %rs7;
	cvt.f32.f16 	%f14, %rs8;
	.loc	1 45 25                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:45:25
	fma.rn.f32 	%f15, %f14, %f14, %f12;
	fma.rn.f32 	%f16, %f13, %f13, %f11;
	.loc	1 47 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:29
	add.s64 	%rd25, %rd19, 6144;
	.loc	1 47 52                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:52
	// begin inline asm
	@%p7 st.global.b32 [ %rd25 + 0 ], { %r15 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f16, %f15;
	selp.f32 	%f18, %f17, 0f00000000, %p7;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f18;
	shfl.sync.bfly.b32	%r50, %r49, 16, 31, -1;
	mov.b32 	%f19, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f20;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f21, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r53, %f22;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f23, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f24;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f25, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f26;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f27, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p15, %r48, 0;
	shr.u32 	%r59, %r1, 3;
	and.b32  	%r60, %r59, 60;
	mov.u32 	%r61, global_smem;
	add.s32 	%r16, %r61, %r60;
	mov.b32 	%r17, %f28;
	// begin inline asm
	@%p15 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p16, %r1, 16;
	shl.b32 	%r62, %r1, 2;
	add.s32 	%r19, %r61, %r62;
	// begin inline asm
	@%p16 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r18;
	shfl.sync.bfly.b32	%r63, %r18, 8, 31, -1;
	mov.b32 	%f30, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f31;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f32, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f33;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f34, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r68, %f35;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f36, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r70, %r1, 15;
	setp.eq.s32 	%p32, %r70, 0;
	and.pred  	%p17, %p16, %p32;
	mov.b32 	%r21, %f37;
	// begin inline asm
	@%p17 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f38, [global_smem];
	mov.f32 	%f39, 0f45800000;
$L__tmp2:
	.loc	1 50 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:50:21
	div.full.f32 	%f40, %f38, %f39;
	.loc	1 52 20                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:52:20
	add.f32 	%f41, %f40, 0f3727C5AC;
	.loc	1 53 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:53:28
	rsqrt.approx.ftz.f32 	%f42, %f41;
	.loc	1 54 4                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:55:28
	shl.b64 	%rd46, %rd1, 2;
	add.s64 	%rd26, %rd3, %rd46;
	.loc	1 55 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:55:40
	and.b32  	%r71, %r1, 511;
	setp.eq.s32 	%p33, %r71, 0;
	mov.b32 	%r22, %f42;
	and.pred  	%p18, %p33, %p7;
	// begin inline asm
	@%p18 st.global.b32 [ %rd26 + 0 ], { %r22 };
	// end inline asm
	.loc	1 62 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:35
	add.s64 	%rd27, %rd5, %rd44;
	mov.pred 	%p19, -1;
	.loc	1 62 42                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:42
	// begin inline asm
	mov.u32 %r23, %r5;
	@%p19 ld.global.L1::evict_last.b32 { %r23 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 63 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:53
	// begin inline asm
	mov.u32 %r25, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r25 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 68 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:29
	add.s64 	%rd29, %rd7, %rd45;
	.loc	1 62 95                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:95
	mov.b32 	{%rs9, %rs10}, %r23;
	cvt.f32.f16 	%f43, %rs10;
	cvt.f32.f16 	%f44, %rs9;
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	mov.b32 	{%rs11, %rs12}, %r25;
	cvt.f32.f16 	%f45, %rs11;
	cvt.f32.f16 	%f46, %rs12;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f47, %f42, %f46;
	mul.f32 	%f48, %f42, %f45;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	mul.f32 	%f49, %f48, %f44;
	mul.f32 	%f50, %f47, %f43;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16x2.f32 	%r27, %f50, %f49;
	// begin inline asm
	@%p7 st.global.b32 [ %rd29 + 0 ], { %r27 };
	// end inline asm
	.loc	1 62 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:35
	add.s64 	%rd30, %rd27, 2048;
	.loc	1 62 42                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:42
	// begin inline asm
	mov.u32 %r28, %r5;
	@%p19 ld.global.L1::evict_last.b32 { %r28 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 63 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:53
	// begin inline asm
	mov.u32 %r30, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r30 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 68 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:29
	add.s64 	%rd32, %rd29, 2048;
	.loc	1 62 95                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:95
	mov.b32 	{%rs13, %rs14}, %r28;
	cvt.f32.f16 	%f51, %rs14;
	cvt.f32.f16 	%f52, %rs13;
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	mov.b32 	{%rs15, %rs16}, %r30;
	cvt.f32.f16 	%f53, %rs15;
	cvt.f32.f16 	%f54, %rs16;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f55, %f42, %f54;
	mul.f32 	%f56, %f42, %f53;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	mul.f32 	%f57, %f56, %f52;
	mul.f32 	%f58, %f55, %f51;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16x2.f32 	%r32, %f58, %f57;
	// begin inline asm
	@%p7 st.global.b32 [ %rd32 + 0 ], { %r32 };
	// end inline asm
	.loc	1 62 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:35
	add.s64 	%rd33, %rd27, 4096;
	.loc	1 62 42                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:42
	// begin inline asm
	mov.u32 %r33, %r5;
	@%p19 ld.global.L1::evict_last.b32 { %r33 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 63 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:53
	// begin inline asm
	mov.u32 %r35, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r35 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 68 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:29
	add.s64 	%rd35, %rd29, 4096;
	.loc	1 62 95                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:95
	mov.b32 	{%rs17, %rs18}, %r33;
	cvt.f32.f16 	%f59, %rs18;
	cvt.f32.f16 	%f60, %rs17;
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	mov.b32 	{%rs19, %rs20}, %r35;
	cvt.f32.f16 	%f61, %rs19;
	cvt.f32.f16 	%f62, %rs20;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f63, %f42, %f62;
	mul.f32 	%f64, %f42, %f61;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	mul.f32 	%f65, %f64, %f60;
	mul.f32 	%f66, %f63, %f59;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16x2.f32 	%r37, %f66, %f65;
	// begin inline asm
	@%p7 st.global.b32 [ %rd35 + 0 ], { %r37 };
	// end inline asm
	.loc	1 62 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:35
	add.s64 	%rd36, %rd27, 6144;
	.loc	1 62 42                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:42
	// begin inline asm
	mov.u32 %r38, %r5;
	@%p19 ld.global.L1::evict_last.b32 { %r38 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 63 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:53
	// begin inline asm
	mov.u32 %r40, %r5;
	@%p7 ld.global.L1::evict_first.b32 { %r40 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 68 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:29
	add.s64 	%rd38, %rd29, 6144;
	.loc	1 62 95                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:95
	mov.b32 	{%rs21, %rs22}, %r38;
	cvt.f32.f16 	%f67, %rs22;
	cvt.f32.f16 	%f68, %rs21;
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	mov.b32 	{%rs23, %rs24}, %r40;
	cvt.f32.f16 	%f69, %rs23;
	cvt.f32.f16 	%f70, %rs24;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f71, %f42, %f70;
	mul.f32 	%f72, %f42, %f69;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	mul.f32 	%f73, %f72, %f68;
	mul.f32 	%f74, %f71, %f67;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16x2.f32 	%r42, %f74, %f73;
	// begin inline asm
	@%p7 st.global.b32 [ %rd38 + 0 ], { %r42 };
	// end inline asm
	.loc	1 56 4                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:4
	ret;
$L__BB0_2:
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	mov.u64 	%rd47, assertMessage_0;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, assertFile_0;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, assertFunc_0;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd48;
	.param .b64 param1;
	st.param.b64 	[param1], %rd50;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd52;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/us/cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 115
.b8 110
.b8 53
.b8 114
.b8 52
.b8 102
.b8 116
.b8 110
.b8 99
.b8 108
.b8 55
.b8 103
.b8 113
.b8 115
.b8 105
.b8 105
.b8 120
.b8 103
.b8 51
.b8 104
.b8 119
.b8 51
.b8 111
.b8 106
.b8 99
.b8 102
.b8 117
.b8 118
.b8 97
.b8 113
.b8 100
.b8 104
.b8 101
.b8 122
.b8 108
.b8 120
.b8 98
.b8 108
.b8 119
.b8 101
.b8 99
.b8 110
.b8 108
.b8 99
.b8 107
.b8 106
.b8 107
.b8 106
.b8 110
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
