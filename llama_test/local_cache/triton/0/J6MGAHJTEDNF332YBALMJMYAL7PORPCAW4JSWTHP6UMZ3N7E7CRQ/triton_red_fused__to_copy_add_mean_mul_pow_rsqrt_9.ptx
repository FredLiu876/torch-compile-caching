//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<16>;
	.reg .b32 	%r<41>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<29>;
	.loc	1 18 0                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:18:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0];
	ld.param.u32 	%r12, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5];
$L__tmp0:
	.loc	1 22 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:22:28
	mov.u32 	%r13, %ctaid.x;
	.loc	1 22 33                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:22:33
	shl.b32 	%r14, %r13, 2;
	.loc	1 23 44                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 3, 2;
	and.b32  	%r3, %r1, 3;
	.loc	1 23 23                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:23:23
	or.b32  	%r15, %r2, %r14;
	or.b32  	%r4, %r14, %r3;
	.loc	1 24 21                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:24:21
	setp.lt.s32 	%p17, %r15, %r12;
	.loc	1 25 37                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:25:37
	and.b32  	%r5, %r1, 7;
	.loc	1 35 46                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:46
	shl.b32 	%r17, %r15, 12;
	or.b32  	%r6, %r17, %r5;
	and.b32  	%r18, %r1, 32;
	setp.eq.s32 	%p3, %r18, 0;
	and.pred  	%p10, %p3, %p17;
	@%p17 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %.split.us.preheader
	.loc	1 0 46                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:0:46
	mov.f32 	%f28, 0f00000000;
	mov.b32 	%r39, -8;
$L__BB0_4:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:41
	add.s32 	%r39, %r39, 8;
	or.b32  	%r22, %r6, %r39;
	.loc	1 35 34                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:34
	mul.wide.s32 	%rd18, %r22, 2;
	add.s64 	%rd15, %rd8, %rd18;
	mov.b16 	%rs7, 0;
	mov.pred 	%p8, -1;
	.loc	1 35 51                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:51
	// begin inline asm
	mov.u16 %rs6, %rs7;
	@%p8 ld.global.L1::evict_first.b16 { %rs6 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	cvt.f32.f16 	%f7, %rs6;
	.loc	1 36 38                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:38
	add.s64 	%rd16, %rd6, %rd18;
	.loc	1 36 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:55
	// begin inline asm
	mov.u16 %rs8, %rs7;
	@%p8 ld.global.L1::evict_first.b16 { %rs8 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	cvt.f32.f16 	%f8, %rs8;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f9, %f7, %f8;
	.loc	1 41 23                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:41:23
	fma.rn.f32 	%f28, %f9, %f9, %f28;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16.f32 	%rs10, %f9;
	// begin inline asm
	@%p10 st.global.b16 [ %rd16 + 0 ], { %rs10 };
	// end inline asm
	.loc	1 29 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:29:40
	setp.lt.u32 	%p11, %r39, 4088;
	@%p11 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_5;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 40                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:0:40
	mov.b32 	%r40, -8;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:41
	add.s32 	%r40, %r40, 8;
	or.b32  	%r20, %r6, %r40;
	.loc	1 35 34                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:34
	mul.wide.s32 	%rd14, %r20, 2;
	add.s64 	%rd11, %rd8, %rd14;
	mov.b16 	%rs2, 0;
	mov.pred 	%p4, 0;
	.loc	1 35 51                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:51
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p4 ld.global.L1::evict_first.b16 { %rs1 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 38                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:38
	add.s64 	%rd12, %rd6, %rd14;
	.loc	1 36 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:55
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p4 ld.global.L1::evict_first.b16 { %rs3 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	add.f16 	%rs5, %rs1, %rs3;
	// begin inline asm
	@%p10 st.global.b16 [ %rd12 + 0 ], { %rs5 };
	// end inline asm
	.loc	1 29 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:29:40
	setp.lt.u32 	%p7, %r40, 4088;
	mov.f32 	%f28, 0f00000000;
	@%p7 bra 	$L__BB0_2;
$L__BB0_5:                              // %.split6.us
	.loc	1 0 40                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:0:40
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4];
	.loc	1 24 21                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:24:21
	setp.lt.s32 	%p14, %r4, %r12;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r26, %f28;
	shfl.sync.bfly.b32	%r27, %r26, 4, 31, -1;
	mov.b32 	%f10, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f28, %f10;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r28, %f11;
	shfl.sync.bfly.b32	%r29, %r28, 2, 31, -1;
	mov.b32 	%f12, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r30, %f13;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	mov.b32 	%f14, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
$L__tmp2:
	.loc	1 44 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:44:28
	shl.b32 	%r32, %r2, 2;
	mov.u32 	%r33, global_smem;
	add.s32 	%r23, %r33, %r32;
	mov.b32 	%r24, %f15;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r34, %r3, 2;
	add.s32 	%r35, %r33, %r34;
	ld.shared.f32 	%f16, [%r35];
	mov.f32 	%f17, 0f45800000;
	.loc	1 46 19                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:46:19
	div.full.f32 	%f18, %f16, %f17;
	div.full.f32 	%f19, %f15, %f17;
	.loc	1 48 19                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:48:19
	add.f32 	%f20, %f18, 0f3727C5AC;
	add.f32 	%f21, %f19, 0f3727C5AC;
	.loc	1 49 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:49:28
	rsqrt.approx.ftz.f32 	%f22, %f20;
	rsqrt.approx.ftz.f32 	%f4, %f21;
	.loc	1 50 4                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:51:28
	mul.wide.s32 	%rd21, %r4, 4;
	add.s64 	%rd19, %rd7, %rd21;
	.loc	1 51 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:51:40
	and.b32  	%r36, %r1, 60;
	setp.eq.s32 	%p15, %r36, 0;
	mov.b32 	%r25, %f22;
	and.pred  	%p13, %p15, %p14;
	// begin inline asm
	@%p13 st.global.b32 [ %rd19 + 0 ], { %r25 };
	// end inline asm
	.loc	1 52 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:52:40
	mul.wide.u32 	%rd22, %r5, 2;
	add.s64 	%rd27, %rd9, %rd22;
	mov.b64 	%rd28, -8;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:0:40
	mov.b16 	%rs12, 0;
	.loc	1 58 42                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:42
	// begin inline asm
	mov.u16 %rs11, %rs12;
	@%p12 ld.global.L1::evict_last.b16 { %rs11 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	cvt.f32.f16 	%f23, %rs11;
	add.s64 	%rd28, %rd28, 8;
	cvt.u32.u64 	%r37, %rd28;
	or.b32  	%r38, %r6, %r37;
	.loc	1 59 39                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:39
	mul.wide.s32 	%rd26, %r38, 2;
	add.s64 	%rd24, %rd6, %rd26;
	.loc	1 59 56                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:56
	// begin inline asm
	mov.u16 %rs13, %rs12;
	@%p17 ld.global.L1::evict_first.b16 { %rs13 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	cvt.f32.f16 	%f24, %rs13;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f25, %f4, %f24;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f26, %f25, %f23;
	.loc	1 64 29                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:29
	add.s64 	%rd25, %rd10, %rd26;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16.f32 	%rs15, %f26;
	// begin inline asm
	@%p10 st.global.b16 [ %rd25 + 0 ], { %rs15 };
	// end inline asm
	.loc	1 52 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:52:40
	add.s64 	%rd27, %rd27, 16;
	setp.lt.u64 	%p19, %rd28, 4088;
	@%p19 bra 	$L__BB0_6;
// %bb.7:
	.loc	1 52 4                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/cp/ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 112
.b8 109
.b8 118
.b8 102
.b8 54
.b8 108
.b8 103
.b8 109
.b8 110
.b8 112
.b8 102
.b8 111
.b8 114
.b8 97
.b8 118
.b8 118
.b8 98
.b8 114
.b8 118
.b8 119
.b8 105
.b8 52
.b8 116
.b8 53
.b8 122
.b8 111
.b8 105
.b8 111
.b8 115
.b8 102
.b8 121
.b8 54
.b8 50
.b8 106
.b8 106
.b8 50
.b8 117
.b8 51
.b8 55
.b8 98
.b8 52
.b8 103
.b8 53
.b8 108
.b8 115
.b8 109
.b8 53
.b8 121
.b8 105
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
