#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0)
#loc1 = loc(unknown)
#loc32 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":49:27)
#loc40 = loc(callsite(#loc1 at #loc32))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 2 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_mul_sum_11(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg5: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0), %arg7: i32 loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x16xi32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x16xf16, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc3)
    %3 = tt.splat %arg7 : i32 -> tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = tt.splat %0 : i32 -> tensor<1x16xi32, #blocked> loc(#loc38)
    %5 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc8)
    %7 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc9)
    %8 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc10)
    %9 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %10 = scf.for %arg8 = %c0_i32 to %arg7 step %c16_i32 iter_args(%arg9 = %cst) -> (tensor<1x16xf32, #blocked>)  : i32 {
      %17 = tt.splat %arg8 : i32 -> tensor<1x16xi32, #blocked> loc(#loc13)
      %18 = arith.addi %17, %2 : tensor<1x16xi32, #blocked> loc(#loc13)
      %19 = arith.cmpi slt, %18, %3 : tensor<1x16xi32, #blocked> loc(#loc4)
      %20 = arith.muli %18, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc14)
      %21 = arith.addi %4, %20 : tensor<1x16xi32, #blocked> loc(#loc5)
      %22 = tt.addptr %5, %21 : tensor<1x16x!tt.ptr<f16>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc7)
      %23 = tt.load %22, %19, %cst_1 evictionPolicy = evict_first : tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc15)
      %24 = arith.extf %23 : tensor<1x16xf16, #blocked> to tensor<1x16xf32, #blocked> loc(#loc16)
      %25 = tt.addptr %6, %21 : tensor<1x16x!tt.ptr<f16>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc8)
      %26 = tt.load %25, %19, %cst_1 evictionPolicy = evict_first : tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc17)
      %27 = arith.extf %26 : tensor<1x16xf16, #blocked> to tensor<1x16xf32, #blocked> loc(#loc18)
      %28 = tt.addptr %7, %21 : tensor<1x16x!tt.ptr<f16>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc9)
      %29 = tt.load %28, %19, %cst_1 evictionPolicy = evict_first : tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc19)
      %30 = arith.extf %29 : tensor<1x16xf16, #blocked> to tensor<1x16xf32, #blocked> loc(#loc20)
      %31 = tt.addptr %8, %21 : tensor<1x16x!tt.ptr<f16>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc10)
      %32 = tt.load %31, %19, %cst_1 evictionPolicy = evict_first : tensor<1x16x!tt.ptr<f16>, #blocked> loc(#loc21)
      %33 = arith.extf %32 : tensor<1x16xf16, #blocked> to tensor<1x16xf32, #blocked> loc(#loc22)
      %34 = tt.addptr %9, %18 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc11)
      %35 = tt.load %34, %19, %cst evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc23)
      %36 = arith.addf %24, %27 : tensor<1x16xf32, #blocked> loc(#loc24)
      %37 = arith.addf %36, %30 : tensor<1x16xf32, #blocked> loc(#loc25)
      %38 = arith.mulf %33, %35 : tensor<1x16xf32, #blocked> loc(#loc26)
      %39 = arith.mulf %37, %38 : tensor<1x16xf32, #blocked> loc(#loc27)
      %40 = arith.addf %arg9, %39 : tensor<1x16xf32, #blocked> loc(#loc28)
      %41 = arith.select %19, %40, %arg9 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc29)
      scf.yield %41 : tensor<1x16xf32, #blocked> loc(#loc30)
    } loc(#loc12)
    %11 = "tt.reduce"(%10) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc32)), %arg9: f32 loc(callsite(#loc1 at #loc32))):
      %17 = arith.addf %arg8, %arg9 : f32 loc(#loc42)
      tt.reduce.return %17 : f32 loc(#loc39)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc39)
    %12 = ttg.convert_layout %11 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc34)
    %13 = tt.expand_dims %12 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc35)
    %14 = tt.addptr %arg5, %0 : !tt.ptr<f16>, i32 loc(#loc36)
    %15 = arith.truncf %13 : tensor<1x1xf32, #blocked1> to tensor<1x1xf16, #blocked1> loc(#loc34)
    %16 = tt.splat %14 : !tt.ptr<f16> -> tensor<1x1x!tt.ptr<f16>, #blocked1> loc(#loc34)
    tt.store %16, %15 : tensor<1x1x!tt.ptr<f16>, #blocked1> loc(#loc34)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":22:28)
#loc3 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":25:37)
#loc4 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":31:29)
#loc5 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":35:39)
#loc6 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":23:23)
#loc7 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":35:34)
#loc8 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":36:34)
#loc9 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":37:34)
#loc10 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":38:34)
#loc11 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":39:34)
#loc12 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":29:40)
#loc13 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":30:31)
#loc14 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":35:44)
#loc15 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":35:51)
#loc16 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":35:105)
#loc17 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":36:51)
#loc18 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":36:105)
#loc19 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":37:51)
#loc20 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":37:105)
#loc21 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":38:51)
#loc22 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":38:105)
#loc23 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":39:41)
#loc24 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":40:22)
#loc25 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":41:22)
#loc26 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":43:22)
#loc27 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":45:23)
#loc28 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":47:25)
#loc29 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":48:42)
#loc30 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":48:8)
#loc31 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":286:36)
#loc33 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":256:15)
#loc34 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":50:37)
#loc35 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":49:30)
#loc36 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":50:25)
#loc37 = loc("./local_cache/sk/cska3fwz53boidgxgnhdyzwobijaqtfl73qndyo6jscov76o2orn.py":50:4)
#loc38 = loc(fused[#loc5, #loc6])
#loc39 = loc(callsite(#loc31 at #loc32))
#loc41 = loc(callsite(#loc33 at #loc31))
#loc42 = loc(callsite(#loc41 at #loc32))
