; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_clone_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 7, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = and i32 %9, 127, !dbg !11
  %11 = or disjoint i32 %8, %10, !dbg !12
  %12 = srem i32 %11, 128, !dbg !13
  %13 = sdiv i32 %11, 4096, !dbg !14
  %14 = sext i32 %11 to i64, !dbg !15
  %15 = getelementptr half, ptr addrspace(1) %0, i64 %14, !dbg !15
  %16 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l"(ptr addrspace(1) %15) #4, !dbg !16
  %.lhs.trunc = trunc nsw i32 %12 to i8, !dbg !17
  %17 = srem i8 %.lhs.trunc, 64, !dbg !17
  %.sext = sext i8 %17 to i32, !dbg !17
  %18 = mul i32 %3, %.sext, !dbg !18
  %19 = add i32 %18, %13, !dbg !19
  %20 = sext i32 %19 to i64, !dbg !20
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !20
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %21) #4, !dbg !21
  %23 = bitcast i32 %22 to float, !dbg !21
  %24 = icmp sgt i32 %12, 63, !dbg !22
  %25 = add i32 %11, -64, !dbg !23
  %26 = sext i32 %25 to i64, !dbg !24
  %27 = getelementptr half, ptr addrspace(1) %0, i64 %26, !dbg !24
  %28 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %27, i1 %24) #4, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %21, i1 %24) #4, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  %31 = fmul float %30, 0x3FE45F3060000000, !dbg !27
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i = icmp eq i32 %32, 0, !dbg !27
  %33 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %31) #4, !dbg !27
  %34 = tail call i32 @llvm.nvvm.f2i.rn(float %31) #4, !dbg !27
  %.01.i = select i1 %.not.i, i32 %34, i32 %33, !dbg !27
  %35 = sitofp i32 %.01.i to float, !dbg !27
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not15.i = icmp eq i32 %36, 0, !dbg !27
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0xBFF921FB40000000, float %30) #4, !dbg !27
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0xBFF921FB40000000, float %30) #4, !dbg !27
  %.02.i = select i1 %.not15.i, float %38, float %37, !dbg !27
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not16.i = icmp eq i32 %39, 0, !dbg !27
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %.03.i = select i1 %.not16.i, float %41, float %40, !dbg !27
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not17.i = icmp eq i32 %42, 0, !dbg !27
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %.04.i = select i1 %.not17.i, float %44, float %43, !dbg !27
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not18.i = icmp eq i32 %45, 0, !dbg !27
  %46 = tail call float @llvm.nvvm.fabs.ftz.f(float %30) #4, !dbg !27
  %47 = tail call float @llvm.nvvm.fabs.f(float %30) #4, !dbg !27
  %.06.i = select i1 %.not18.i, float %47, float %46, !dbg !27
  %48 = fcmp ult float %.06.i, 1.056150e+05, !dbg !27
  br i1 %48, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !27

__nv_isinff.exit.i.i.i:                           ; preds = %6
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not19.i = icmp eq i32 %49, 0, !dbg !27
  %.07.i = select i1 %.not19.i, float %47, float %46, !dbg !27
  %50 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !27
  br i1 %50, label %__nv_fmul_rn.exit.i.i.i, label %54, !dbg !27

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not27.i = icmp eq i32 %51, 0, !dbg !27
  %52 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %30, float 0.000000e+00) #4, !dbg !27
  %53 = tail call float @llvm.nvvm.mul.rn.f(float %30, float 0.000000e+00) #4, !dbg !27
  %.08.i = select i1 %.not27.i, float %53, float %52, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

54:                                               ; preds = %__nv_isinff.exit.i.i.i
  %55 = lshr i32 %29, 23, !dbg !27
  %56 = and i32 %55, 224, !dbg !27
  %57 = add nsw i32 %56, -128, !dbg !27
  %58 = shl i32 %29, 8, !dbg !27
  %59 = or i32 %58, -2147483648, !dbg !27
  %60 = lshr exact i32 %57, 5, !dbg !27
  br label %61, !dbg !27

61:                                               ; preds = %54, %61
  %indvars.iv = phi i64 [ 0, %54 ], [ %indvars.iv.next, %61 ]
  %hi.i.i.i.0.i109 = phi i32 [ 0, %54 ], [ %66, %61 ]
  %62 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !27
  %63 = load i32, ptr addrspace(1) %62, align 4, !dbg !27
  %64 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %63, i32 %59, i32 %hi.i.i.i.0.i109) #5, !dbg !27, !srcloc !28
  %65 = extractvalue { i32, i32 } %64, 0, !dbg !27
  %66 = extractvalue { i32, i32 } %64, 1, !dbg !27
  %67 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !27
  store i32 %65, ptr %67, align 4, !dbg !27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !27
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !27
  br i1 %exitcond.not, label %68, label %61, !dbg !27, !llvm.loop !29

68:                                               ; preds = %61
  %69 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !27
  store i32 %66, ptr %69, align 4, !dbg !27
  %70 = sub nsw i32 6, %60, !dbg !27
  %71 = sext i32 %70 to i64, !dbg !27
  %72 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %71, !dbg !27
  %73 = load i32, ptr %72, align 4, !dbg !27
  %74 = sub nsw i32 5, %60, !dbg !27
  %75 = sext i32 %74 to i64, !dbg !27
  %76 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %75, !dbg !27
  %77 = load i32, ptr %76, align 4, !dbg !27
  %78 = freeze i32 %77, !dbg !27
  %79 = and i32 %29, 260046848, !dbg !27
  %.not20.i = icmp eq i32 %79, 0, !dbg !27
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %80, !dbg !27

80:                                               ; preds = %68
  %81 = sub nsw i32 4, %60, !dbg !27
  %82 = sext i32 %81 to i64, !dbg !27
  %83 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %82, !dbg !27
  %84 = load i32, ptr %83, align 4, !dbg !27
  %85 = tail call i32 @llvm.fshl.i32(i32 %78, i32 %84, i32 %55), !dbg !27
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !27

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %80, %68
  %lo.i.i.i.0.i = phi i32 [ %85, %80 ], [ %78, %68 ], !dbg !27
  %86 = tail call i32 @llvm.fshl.i32(i32 %73, i32 %78, i32 %55), !dbg !27
  %87 = lshr i32 %86, 30, !dbg !27
  %88 = tail call i32 @llvm.fshl.i32(i32 %86, i32 %lo.i.i.i.0.i, i32 2), !dbg !27
  %89 = shl i32 %lo.i.i.i.0.i, 2, !dbg !27
  %90 = lshr i32 %88, 31, !dbg !27
  %91 = add nuw nsw i32 %90, %87, !dbg !27
  %92 = sub nsw i32 0, %91, !dbg !27
  %.not2123.i = icmp slt i32 %29, 0, !dbg !27
  %spec.select.i = select i1 %.not2123.i, i32 %92, i32 %91, !dbg !27
  %93 = xor i32 %88, %29, !dbg !27
  %.lobit.i = ashr i32 %88, 31, !dbg !27
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %88, !dbg !27
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %89, !dbg !27
  %94 = zext i32 %hi.i.i.i.2.i to i64, !dbg !27
  %95 = shl nuw i64 %94, 32, !dbg !27
  %96 = zext i32 %lo.i.i.i.1.i to i64, !dbg !27
  %97 = or disjoint i64 %95, %96, !dbg !27
  %98 = sitofp i64 %97 to double, !dbg !27
  %99 = fmul double %98, 0x3BF921FB54442D19, !dbg !27
  %100 = fptrunc double %99 to float, !dbg !27
  %101 = fneg float %100, !dbg !27
  %.not2526.i = icmp slt i32 %93, 0, !dbg !27
  %r.i.i.i.0.i = select i1 %.not2526.i, float %101, float %100, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %6
  %i.i.1.i = phi i32 [ %.01.i, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %t.i.i.1.i = phi float [ %.04.i, %6 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not28.i = icmp eq i32 %102, 0, !dbg !27
  %103 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %104 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %.011.i = select i1 %.not28.i, float %104, float %103, !dbg !27
  %105 = and i32 %i.i.1.i, 1, !dbg !27
  %.not29.i = icmp eq i32 %105, 0, !dbg !27
  %106 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !27
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not30.i = icmp eq i32 %107, 0, !dbg !27
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %106, float 0.000000e+00) #4, !dbg !27
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %106, float 0.000000e+00) #4, !dbg !27
  %.012.i = select i1 %.not30.i, float %109, float %108, !dbg !27
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !27

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not31.i = icmp eq i32 %110, 0, !dbg !27
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %112 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %.013.i = select i1 %.not31.i, float %112, float %111, !dbg !27
  br label %__internal_fmad.exit2.i.i.i, !dbg !27

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %113 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %114 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %115 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not32.i = icmp eq i32 %116, 0, !dbg !27
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float %.011.i, float %114) #4, !dbg !27
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %115, float %.011.i, float %114) #4, !dbg !27
  %.010.i = select i1 %.not32.i, float %118, float %117, !dbg !27
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not33.i = icmp eq i32 %119, 0, !dbg !27
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %113) #4, !dbg !27
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %113) #4, !dbg !27
  %.09.i = select i1 %.not33.i, float %121, float %120, !dbg !27
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not34.i = icmp eq i32 %122, 0, !dbg !27
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %106) #4, !dbg !27
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %106) #4, !dbg !27
  %.05.i = select i1 %.not34.i, float %124, float %123, !dbg !27
  %125 = and i32 %i.i.1.i, 2, !dbg !27
  %.not35.i = icmp eq i32 %125, 0, !dbg !27
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !27

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not36.i = icmp eq i32 %126, 0, !dbg !27
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %.0.i = select i1 %.not36.i, float %128, float %127, !dbg !27
  br label %__nv_sinf.exit, !dbg !27

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !27
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  %129 = icmp slt i32 %12, 64, !dbg !31
  %130 = add i32 %11, 64, !dbg !32
  %131 = sext i32 %130 to i64, !dbg !33
  %132 = getelementptr half, ptr addrspace(1) %0, i64 %131, !dbg !33
  %133 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %132, i1 %129) #4, !dbg !34
  %134 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %21, i1 %129) #4, !dbg !35
  %135 = bitcast i32 %134 to float, !dbg !35
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !36
  %136 = fmul float %135, 0x3FE45F3060000000, !dbg !36
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not.i2 = icmp eq i32 %137, 0, !dbg !36
  %138 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %136) #4, !dbg !36
  %139 = tail call i32 @llvm.nvvm.f2i.rn(float %136) #4, !dbg !36
  %.01.i3 = select i1 %.not.i2, i32 %139, i32 %138, !dbg !36
  %140 = sitofp i32 %.01.i3 to float, !dbg !36
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not15.i4 = icmp eq i32 %141, 0, !dbg !36
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float 0xBFF921FB40000000, float %135) #4, !dbg !36
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %140, float 0xBFF921FB40000000, float %135) #4, !dbg !36
  %.02.i5 = select i1 %.not15.i4, float %143, float %142, !dbg !36
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not16.i6 = icmp eq i32 %144, 0, !dbg !36
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !36
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %140, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !36
  %.03.i7 = select i1 %.not16.i6, float %146, float %145, !dbg !36
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not17.i8 = icmp eq i32 %147, 0, !dbg !36
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !36
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %140, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !36
  %.04.i9 = select i1 %.not17.i8, float %149, float %148, !dbg !36
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not18.i10 = icmp eq i32 %150, 0, !dbg !36
  %151 = tail call float @llvm.nvvm.fabs.ftz.f(float %135) #4, !dbg !36
  %152 = tail call float @llvm.nvvm.fabs.f(float %135) #4, !dbg !36
  %.06.i11 = select i1 %.not18.i10, float %152, float %151, !dbg !36
  %153 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !36
  br i1 %153, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !36

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not19.i13 = icmp eq i32 %154, 0, !dbg !36
  %.07.i14 = select i1 %.not19.i13, float %152, float %151, !dbg !36
  %155 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !36
  br i1 %155, label %__nv_fmul_rn.exit.i.i.i52, label %159, !dbg !36

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not27.i53 = icmp eq i32 %156, 0, !dbg !36
  %157 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %135, float 0.000000e+00) #4, !dbg !36
  %158 = tail call float @llvm.nvvm.mul.rn.f(float %135, float 0.000000e+00) #4, !dbg !36
  %.08.i54 = select i1 %.not27.i53, float %158, float %157, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !36

159:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %160 = lshr i32 %134, 23, !dbg !36
  %161 = and i32 %160, 224, !dbg !36
  %162 = add nsw i32 %161, -128, !dbg !36
  %163 = shl i32 %134, 8, !dbg !36
  %164 = or i32 %163, -2147483648, !dbg !36
  %165 = lshr exact i32 %162, 5, !dbg !36
  br label %166, !dbg !36

166:                                              ; preds = %159, %166
  %indvars.iv120 = phi i64 [ 0, %159 ], [ %indvars.iv.next121, %166 ]
  %hi.i.i.i.0.i15111 = phi i32 [ 0, %159 ], [ %171, %166 ]
  %167 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv120, !dbg !36
  %168 = load i32, ptr addrspace(1) %167, align 4, !dbg !36
  %169 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %168, i32 %164, i32 %hi.i.i.i.0.i15111) #5, !dbg !36, !srcloc !28
  %170 = extractvalue { i32, i32 } %169, 0, !dbg !36
  %171 = extractvalue { i32, i32 } %169, 1, !dbg !36
  %172 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv120, !dbg !36
  store i32 %170, ptr %172, align 4, !dbg !36
  %indvars.iv.next121 = add nuw nsw i64 %indvars.iv120, 1, !dbg !36
  %exitcond122.not = icmp eq i64 %indvars.iv.next121, 6, !dbg !36
  br i1 %exitcond122.not, label %173, label %166, !dbg !36, !llvm.loop !37

173:                                              ; preds = %166
  %174 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !36
  store i32 %171, ptr %174, align 4, !dbg !36
  %175 = sub nsw i32 6, %165, !dbg !36
  %176 = sext i32 %175 to i64, !dbg !36
  %177 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %176, !dbg !36
  %178 = load i32, ptr %177, align 4, !dbg !36
  %179 = sub nsw i32 5, %165, !dbg !36
  %180 = sext i32 %179 to i64, !dbg !36
  %181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %180, !dbg !36
  %182 = load i32, ptr %181, align 4, !dbg !36
  %183 = freeze i32 %182, !dbg !36
  %184 = and i32 %134, 260046848, !dbg !36
  %.not20.i17 = icmp eq i32 %184, 0, !dbg !36
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %185, !dbg !36

185:                                              ; preds = %173
  %186 = sub nsw i32 4, %165, !dbg !36
  %187 = sext i32 %186 to i64, !dbg !36
  %188 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %187, !dbg !36
  %189 = load i32, ptr %188, align 4, !dbg !36
  %190 = tail call i32 @llvm.fshl.i32(i32 %183, i32 %189, i32 %160), !dbg !36
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !36

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %185, %173
  %lo.i.i.i.0.i20 = phi i32 [ %190, %185 ], [ %183, %173 ], !dbg !36
  %191 = tail call i32 @llvm.fshl.i32(i32 %178, i32 %183, i32 %160), !dbg !36
  %192 = lshr i32 %191, 30, !dbg !36
  %193 = tail call i32 @llvm.fshl.i32(i32 %191, i32 %lo.i.i.i.0.i20, i32 2), !dbg !36
  %194 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !36
  %195 = lshr i32 %193, 31, !dbg !36
  %196 = add nuw nsw i32 %195, %192, !dbg !36
  %197 = sub nsw i32 0, %196, !dbg !36
  %.not2123.i21 = icmp slt i32 %134, 0, !dbg !36
  %spec.select.i22 = select i1 %.not2123.i21, i32 %197, i32 %196, !dbg !36
  %198 = xor i32 %193, %134, !dbg !36
  %.lobit.i23 = ashr i32 %193, 31, !dbg !36
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %193, !dbg !36
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %194, !dbg !36
  %199 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !36
  %200 = shl nuw i64 %199, 32, !dbg !36
  %201 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !36
  %202 = or disjoint i64 %200, %201, !dbg !36
  %203 = sitofp i64 %202 to double, !dbg !36
  %204 = fmul double %203, 0x3BF921FB54442D19, !dbg !36
  %205 = fptrunc double %204 to float, !dbg !36
  %206 = fneg float %205, !dbg !36
  %.not2526.i27 = icmp slt i32 %198, 0, !dbg !36
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %206, float %205, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !36

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !36
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !36
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not28.i32 = icmp eq i32 %207, 0, !dbg !36
  %208 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !36
  %209 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !36
  %.011.i33 = select i1 %.not28.i32, float %209, float %208, !dbg !36
  %210 = and i32 %i.i.1.i30, 1, !dbg !36
  %.not29.i34 = icmp eq i32 %210, 0, !dbg !36
  %211 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !36
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not30.i35 = icmp eq i32 %212, 0, !dbg !36
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %211, float 0.000000e+00) #4, !dbg !36
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %211, float 0.000000e+00) #4, !dbg !36
  %.012.i36 = select i1 %.not30.i35, float %214, float %213, !dbg !36
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !36

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not31.i38 = icmp eq i32 %215, 0, !dbg !36
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !36
  %217 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !36
  %.013.i39 = select i1 %.not31.i38, float %217, float %216, !dbg !36
  br label %__internal_fmad.exit2.i.i.i40, !dbg !36

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %218 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !36
  %219 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !36
  %220 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !36
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not32.i41 = icmp eq i32 %221, 0, !dbg !36
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %220, float %.011.i33, float %219) #4, !dbg !36
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %220, float %.011.i33, float %219) #4, !dbg !36
  %.010.i42 = select i1 %.not32.i41, float %223, float %222, !dbg !36
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not33.i43 = icmp eq i32 %224, 0, !dbg !36
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %218) #4, !dbg !36
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %218) #4, !dbg !36
  %.09.i44 = select i1 %.not33.i43, float %226, float %225, !dbg !36
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not34.i45 = icmp eq i32 %227, 0, !dbg !36
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %211) #4, !dbg !36
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %211) #4, !dbg !36
  %.05.i46 = select i1 %.not34.i45, float %229, float %228, !dbg !36
  %230 = and i32 %i.i.1.i30, 2, !dbg !36
  %.not35.i47 = icmp eq i32 %230, 0, !dbg !36
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !36

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not36.i49 = icmp eq i32 %231, 0, !dbg !36
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !36
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !36
  %.0.i50 = select i1 %.not36.i49, float %233, float %232, !dbg !36
  br label %__nv_sinf.exit55, !dbg !36

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !36
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !36
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !38
  %234 = fmul float %23, 0x3FE45F3060000000, !dbg !38
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i57 = icmp eq i32 %235, 0, !dbg !38
  %236 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %234) #4, !dbg !38
  %237 = tail call i32 @llvm.nvvm.f2i.rn(float %234) #4, !dbg !38
  %.01.i58 = select i1 %.not.i57, i32 %237, i32 %236, !dbg !38
  %238 = sitofp i32 %.01.i58 to float, !dbg !38
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not15.i59 = icmp eq i32 %239, 0, !dbg !38
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float 0xBFF921FB40000000, float %23) #4, !dbg !38
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float 0xBFF921FB40000000, float %23) #4, !dbg !38
  %.02.i60 = select i1 %.not15.i59, float %241, float %240, !dbg !38
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not16.i61 = icmp eq i32 %242, 0, !dbg !38
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !38
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %238, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !38
  %.03.i62 = select i1 %.not16.i61, float %244, float %243, !dbg !38
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not17.i63 = icmp eq i32 %245, 0, !dbg !38
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !38
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %238, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !38
  %.04.i64 = select i1 %.not17.i63, float %247, float %246, !dbg !38
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not18.i65 = icmp eq i32 %248, 0, !dbg !38
  %249 = tail call float @llvm.nvvm.fabs.ftz.f(float %23) #4, !dbg !38
  %250 = tail call float @llvm.nvvm.fabs.f(float %23) #4, !dbg !38
  %.06.i66 = select i1 %.not18.i65, float %250, float %249, !dbg !38
  %251 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !38
  br i1 %251, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !38

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not19.i68 = icmp eq i32 %252, 0, !dbg !38
  %.07.i69 = select i1 %.not19.i68, float %250, float %249, !dbg !38
  %253 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !38
  br i1 %253, label %__nv_fmul_rn.exit.i.i.i106, label %257, !dbg !38

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not27.i107 = icmp eq i32 %254, 0, !dbg !38
  %255 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %23, float 0.000000e+00) #4, !dbg !38
  %256 = tail call float @llvm.nvvm.mul.rn.f(float %23, float 0.000000e+00) #4, !dbg !38
  %.08.i108 = select i1 %.not27.i107, float %256, float %255, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !38

257:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %258 = lshr i32 %22, 23, !dbg !38
  %259 = and i32 %258, 224, !dbg !38
  %260 = add nsw i32 %259, -128, !dbg !38
  %261 = shl i32 %22, 8, !dbg !38
  %262 = or i32 %261, -2147483648, !dbg !38
  %263 = lshr exact i32 %260, 5, !dbg !38
  br label %264, !dbg !38

264:                                              ; preds = %257, %264
  %indvars.iv123 = phi i64 [ 0, %257 ], [ %indvars.iv.next124, %264 ]
  %hi.i.i.i.0.i70113 = phi i32 [ 0, %257 ], [ %269, %264 ]
  %265 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv123, !dbg !38
  %266 = load i32, ptr addrspace(1) %265, align 4, !dbg !38
  %267 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %266, i32 %262, i32 %hi.i.i.i.0.i70113) #5, !dbg !38, !srcloc !28
  %268 = extractvalue { i32, i32 } %267, 0, !dbg !38
  %269 = extractvalue { i32, i32 } %267, 1, !dbg !38
  %270 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv123, !dbg !38
  store i32 %268, ptr %270, align 4, !dbg !38
  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1, !dbg !38
  %exitcond125.not = icmp eq i64 %indvars.iv.next124, 6, !dbg !38
  br i1 %exitcond125.not, label %271, label %264, !dbg !38, !llvm.loop !39

271:                                              ; preds = %264
  %272 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !38
  store i32 %269, ptr %272, align 4, !dbg !38
  %273 = sub nsw i32 6, %263, !dbg !38
  %274 = sext i32 %273 to i64, !dbg !38
  %275 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %274, !dbg !38
  %276 = load i32, ptr %275, align 4, !dbg !38
  %277 = sub nsw i32 5, %263, !dbg !38
  %278 = sext i32 %277 to i64, !dbg !38
  %279 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %278, !dbg !38
  %280 = load i32, ptr %279, align 4, !dbg !38
  %281 = freeze i32 %280, !dbg !38
  %282 = and i32 %22, 260046848, !dbg !38
  %.not20.i72 = icmp eq i32 %282, 0, !dbg !38
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %283, !dbg !38

283:                                              ; preds = %271
  %284 = sub nsw i32 4, %263, !dbg !38
  %285 = sext i32 %284 to i64, !dbg !38
  %286 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %285, !dbg !38
  %287 = load i32, ptr %286, align 4, !dbg !38
  %288 = tail call i32 @llvm.fshl.i32(i32 %281, i32 %287, i32 %258), !dbg !38
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !38

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %283, %271
  %lo.i.i.i.0.i75 = phi i32 [ %288, %283 ], [ %281, %271 ], !dbg !38
  %289 = tail call i32 @llvm.fshl.i32(i32 %276, i32 %281, i32 %258), !dbg !38
  %290 = lshr i32 %289, 30, !dbg !38
  %291 = tail call i32 @llvm.fshl.i32(i32 %289, i32 %lo.i.i.i.0.i75, i32 2), !dbg !38
  %292 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !38
  %293 = lshr i32 %291, 31, !dbg !38
  %294 = add nuw nsw i32 %293, %290, !dbg !38
  %295 = sub nsw i32 0, %294, !dbg !38
  %.not2123.i76 = icmp slt i32 %22, 0, !dbg !38
  %spec.select.i77 = select i1 %.not2123.i76, i32 %295, i32 %294, !dbg !38
  %296 = xor i32 %291, %22, !dbg !38
  %.lobit.i78 = ashr i32 %291, 31, !dbg !38
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %291, !dbg !38
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %292, !dbg !38
  %297 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !38
  %298 = shl nuw i64 %297, 32, !dbg !38
  %299 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !38
  %300 = or disjoint i64 %298, %299, !dbg !38
  %301 = sitofp i64 %300 to double, !dbg !38
  %302 = fmul double %301, 0x3BF921FB54442D19, !dbg !38
  %303 = fptrunc double %302 to float, !dbg !38
  %304 = fneg float %303, !dbg !38
  %.not2526.i82 = icmp slt i32 %296, 0, !dbg !38
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %304, float %303, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !38

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !38
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !38
  %305 = add i32 %i.i.1.i85, 1, !dbg !38
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not28.i87 = icmp eq i32 %306, 0, !dbg !38
  %307 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !38
  %308 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !38
  %.011.i88 = select i1 %.not28.i87, float %308, float %307, !dbg !38
  %309 = and i32 %i.i.1.i85, 1, !dbg !38
  %.not29.not.i = icmp eq i32 %309, 0, !dbg !38
  %310 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !38
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not30.i89 = icmp eq i32 %311, 0, !dbg !38
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %310, float 0.000000e+00) #4, !dbg !38
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %310, float 0.000000e+00) #4, !dbg !38
  %.012.i90 = select i1 %.not30.i89, float %313, float %312, !dbg !38
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !38

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not31.i104 = icmp eq i32 %314, 0, !dbg !38
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !38
  %316 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !38
  %.013.i105 = select i1 %.not31.i104, float %316, float %315, !dbg !38
  br label %__internal_fmad.exit2.i.i.i91, !dbg !38

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %317 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %318 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %319 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not32.i92 = icmp eq i32 %320, 0, !dbg !38
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %319, float %.011.i88, float %318) #4, !dbg !38
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %319, float %.011.i88, float %318) #4, !dbg !38
  %.010.i93 = select i1 %.not32.i92, float %322, float %321, !dbg !38
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not33.i94 = icmp eq i32 %323, 0, !dbg !38
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %317) #4, !dbg !38
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %317) #4, !dbg !38
  %.09.i95 = select i1 %.not33.i94, float %325, float %324, !dbg !38
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not34.i96 = icmp eq i32 %326, 0, !dbg !38
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %310) #4, !dbg !38
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %310) #4, !dbg !38
  %.05.i97 = select i1 %.not34.i96, float %328, float %327, !dbg !38
  %329 = and i32 %305, 2, !dbg !38
  %.not35.i98 = icmp eq i32 %329, 0, !dbg !38
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !38

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not36.i100 = icmp eq i32 %330, 0, !dbg !38
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %.0.i101 = select i1 %.not36.i100, float %332, float %331, !dbg !38
  br label %__nv_cosf.exit, !dbg !38

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !38
  %333 = bitcast i16 %28 to half, !dbg !25
  %334 = fpext half %333 to float, !dbg !40
  %335 = fmul float %z.i.i.0.i, %334, !dbg !41
  %336 = fsub float 0.000000e+00, %335, !dbg !42
  %337 = select i1 %24, float %336, float 0.000000e+00, !dbg !43
  %338 = bitcast i16 %133 to half, !dbg !34
  %339 = fpext half %338 to float, !dbg !44
  %340 = fmul float %z.i.i.0.i51, %339, !dbg !45
  %341 = select i1 %129, float %340, float 0.000000e+00, !dbg !43
  %342 = fadd float %337, %341, !dbg !46
  %343 = bitcast i16 %16 to half, !dbg !16
  %344 = fpext half %343 to float, !dbg !47
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !38
  %345 = fmul float %z.i.i.0.i102, %344, !dbg !48
  %346 = fadd float %342, %345, !dbg !49
  %347 = getelementptr half, ptr addrspace(1) %2, i64 %14, !dbg !50
  %348 = fptrunc float %346 to half, !dbg !51
  %349 = bitcast half %348 to i16, !dbg !51
  tail call void asm sideeffect "st.global.b16 [ $1 + 0 ], { $0 };", "c,l"(i16 %349, ptr addrspace(1) %347) #4, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py", directory: "./local_cache/tr")
!4 = !{ptr @triton_poi_fused_clone_6, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_clone_6", linkageName: "triton_poi_fused_clone_6", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 22, column: 19, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 25, column: 31, scope: !6)
!16 = !DILocation(line: 25, column: 36, scope: !6)
!17 = !DILocation(line: 26, column: 47, scope: !6)
!18 = !DILocation(line: 26, column: 42, scope: !6)
!19 = !DILocation(line: 26, column: 36, scope: !6)
!20 = !DILocation(line: 26, column: 31, scope: !6)
!21 = !DILocation(line: 26, column: 54, scope: !6)
!22 = !DILocation(line: 29, column: 19, scope: !6)
!23 = !DILocation(line: 30, column: 38, scope: !6)
!24 = !DILocation(line: 30, column: 30, scope: !6)
!25 = !DILocation(line: 30, column: 43, scope: !6)
!26 = !DILocation(line: 31, column: 53, scope: !6)
!27 = !DILocation(line: 32, column: 23, scope: !6)
!28 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.count", i32 1}
!31 = !DILocation(line: 42, column: 19, scope: !6)
!32 = !DILocation(line: 43, column: 36, scope: !6)
!33 = !DILocation(line: 43, column: 31, scope: !6)
!34 = !DILocation(line: 43, column: 41, scope: !6)
!35 = !DILocation(line: 44, column: 54, scope: !6)
!36 = !DILocation(line: 45, column: 24, scope: !6)
!37 = distinct !{!37, !30}
!38 = !DILocation(line: 54, column: 24, scope: !6)
!39 = distinct !{!39, !30}
!40 = !DILocation(line: 30, column: 63, scope: !6)
!41 = !DILocation(line: 36, column: 18, scope: !6)
!42 = !DILocation(line: 37, column: 13, scope: !6)
!43 = !DILocation(line: 0, scope: !6)
!44 = !DILocation(line: 43, column: 62, scope: !6)
!45 = !DILocation(line: 49, column: 20, scope: !6)
!46 = !DILocation(line: 53, column: 20, scope: !6)
!47 = !DILocation(line: 25, column: 45, scope: !6)
!48 = !DILocation(line: 58, column: 20, scope: !6)
!49 = !DILocation(line: 59, column: 20, scope: !6)
!50 = !DILocation(line: 60, column: 25, scope: !6)
!51 = !DILocation(line: 60, column: 37, scope: !6)
!52 = !DILocation(line: 60, column: 4, scope: !6)
