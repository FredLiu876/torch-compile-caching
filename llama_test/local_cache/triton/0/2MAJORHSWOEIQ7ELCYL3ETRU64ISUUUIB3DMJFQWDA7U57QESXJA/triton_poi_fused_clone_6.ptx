//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_6 // -- Begin function triton_poi_fused_clone_6
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
                                        // @triton_poi_fused_clone_6
.visible .entry triton_poi_fused_clone_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_6_param_2,
	.param .u32 triton_poi_fused_clone_6_param_3,
	.param .u32 triton_poi_fused_clone_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_6_param_5
)
.reqntid 128, 1, 1
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<33>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<171>;
	.reg .f32 	%f<140>;
	.reg .b64 	%rd<54>;
	.reg .f64 	%fd<7>;
	.loc	1 18 0                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:18:0

// %bb.0:
	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd9, [triton_poi_fused_clone_6_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_clone_6_param_1];
	add.u64 	%rd17, %SPL, 0;
	ld.param.u32 	%r57, [triton_poi_fused_clone_6_param_3];
	add.u64 	%rd19, %SPL, 0;
	add.u64 	%rd21, %SPL, 0;
$L__tmp0:
	.loc	1 19 28                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:19:28
	mov.u32 	%r58, %ctaid.x;
	.loc	1 19 33                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:19:33
	shl.b32 	%r59, %r58, 7;
	.loc	1 20 36                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:20:36
	mov.u32 	%r60, %tid.x;
	and.b32  	%r61, %r60, 127;
	.loc	1 20 23                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:20:23
	or.b32  	%r62, %r59, %r61;
	.loc	1 22 19                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:22:19
	bfe.s32 	%r63, %r58, 24, 1;
	shr.u32 	%r64, %r63, 25;
	add.s32 	%r65, %r62, %r64;
	and.b32  	%r66, %r65, -128;
	sub.s32 	%r4, %r62, %r66;
	.loc	1 24 19                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:24:19
	shr.u32 	%r67, %r63, 20;
	add.s32 	%r68, %r62, %r67;
	shr.s32 	%r69, %r68, 12;
	.loc	1 25 31                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:25:31
	mul.wide.s32 	%rd22, %r62, 2;
	add.s64 	%rd11, %rd9, %rd22;
	.loc	1 25 36                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:25:36
	// begin inline asm
	mov.u16 %rs4, 0x0;
	ld.global.b16 { %rs4 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 26 47                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:26:47
	cvt.u16.u32 	%rs7, %r4;
	cvt.s8.s32 	%rs8, %r4;
	shr.u16 	%rs9, %rs8, 9;
	and.b16  	%rs10, %rs9, 63;
	add.s16 	%rs11, %rs7, %rs10;
	and.b16  	%rs12, %rs11, 192;
	sub.s16 	%rs13, %rs7, %rs12;
	cvt.u32.u16 	%r70, %rs13;
	cvt.s32.s8 	%r71, %r70;
	.loc	1 26 36                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:26:36
	mad.lo.s32 	%r72, %r57, %r71, %r69;
	.loc	1 26 31                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:26:31
	mul.wide.s32 	%rd23, %r72, 4;
	add.s64 	%rd12, %rd15, %rd23;
	.loc	1 26 54                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:26:54
	// begin inline asm
	mov.u32 %r54, 0x0;
	ld.global.L1::evict_last.b32 { %r54 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 29 19                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:29:19
	setp.gt.s32 	%p1, %r4, 63;
	.loc	1 30 38                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:30:38
	add.s32 	%r73, %r62, -64;
	.loc	1 30 30                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:30:30
	mul.wide.s32 	%rd24, %r73, 2;
	add.s64 	%rd13, %rd9, %rd24;
	mov.b16 	%rs6, 0;
	.loc	1 30 43                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:30:43
	// begin inline asm
	mov.u16 %rs5, %rs6;
	@%p1 ld.global.b16 { %rs5 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%r56, 0;
	.loc	1 31 53                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:31:53
	// begin inline asm
	mov.u32 %r55, %r56;
	@%p1 ld.global.L1::evict_last.b32 { %r55 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r55;
	.loc	1 32 23                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:32:23
	mul.f32 	%f49, %f2, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r162, %f49;
	cvt.rn.f32.s32 	%f50, %r162;
	mov.f32 	%f51, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f52, %f50, %f51, %f2;
	mov.f32 	%f53, 0fB3A22168;
	fma.rn.ftz.f32 	%f54, %f50, %f53, %f52;
	mov.f32 	%f55, 0fA7C234C5;
	fma.rn.ftz.f32 	%f125, %f50, %f55, %f54;
	abs.ftz.f32 	%f4, %f2;
	setp.ltu.f32 	%p3, %f4, 0f47CE4780;
	@%p3 bra 	$L__BB0_8;
// %bb.1:                               // %__nv_isinff.exit.i.i.i
	setp.neu.f32 	%p4, %f4, 0f7F800000;
	@%p4 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmul_rn.exit.i.i.i
	.loc	1 0 23                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:23
	mov.f32 	%f58, 0f00000000;
	.loc	1 32 23                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:32:23
	mul.rn.ftz.f32 	%f125, %f2, %f58;
	mov.b32 	%r162, 0;
	bra.uni 	$L__BB0_8;
$L__BB0_3:
	.loc	1 0 23                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:23
	cvt.u32.u64 	%r3, %rd21;
	.loc	1 32 23                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:32:23
	shr.u32 	%r8, %r55, 23;
	and.b32  	%r75, %r8, 224;
	add.s32 	%r76, %r75, -128;
	shl.b32 	%r77, %r55, 8;
	or.b32  	%r81, %r77, -2147483648;
	shr.u32 	%r10, %r76, 5;
	mov.b32 	%r160, 0;
	mov.b64 	%rd51, 0;
	mov.u64 	%rd26, __cudart_i2opi_f;
	mov.u32 	%r159, %r3;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd27, %rd26, %rd51;
	ld.global.nc.u32 	%r80, [%rd27];
	// begin inline asm
	{
	mad.lo.cc.u32   %r78, %r80, %r81, %r160;
	madc.hi.u32     %r160, %r80, %r81,  0;
	}
	// end inline asm
	st.local.u32 	[%r159], %r78;
	add.s32 	%r159, %r159, 4;
	add.s64 	%rd51, %rd51, 4;
	setp.ne.s64 	%p5, %rd51, 24;
	@%p5 bra 	$L__BB0_4;
// %bb.5:
	st.local.u32 	[%r3+24], %r160;
	shl.b32 	%r83, %r10, 2;
	sub.s32 	%r15, %r3, %r83;
	ld.local.u32 	%r16, [%r15+24];
	ld.local.u32 	%r17, [%r15+20];
	and.b32  	%r85, %r55, 260046848;
	setp.eq.s32 	%p6, %r85, 0;
	mov.u32 	%r161, %r17;
	@%p6 bra 	$L__BB0_7;
// %bb.6:
	ld.local.u32 	%r86, [%r15+16];
	shf.l.wrap.b32 	%r161, %r86, %r17, %r8;
$L__BB0_7:                              // %__internal_trig_reduction_slowpath.exit.i.i.i
	shf.l.wrap.b32 	%r87, %r17, %r16, %r8;
	shr.u32 	%r88, %r87, 30;
	shf.l.wrap.b32 	%r89, %r161, %r87, 2;
	shl.b32 	%r90, %r161, 2;
	shr.u32 	%r91, %r89, 31;
	add.s32 	%r92, %r91, %r88;
	neg.s32 	%r93, %r92;
	setp.lt.s32 	%p7, %r55, 0;
	selp.b32 	%r162, %r93, %r92, %p7;
	xor.b32  	%r94, %r89, %r55;
	shr.s32 	%r95, %r89, 31;
	xor.b32  	%r96, %r95, %r89;
	xor.b32  	%r97, %r95, %r90;
	cvt.u64.u32 	%rd28, %r96;
	shl.b64 	%rd29, %rd28, 32;
	cvt.u64.u32 	%rd30, %r97;
	or.b64  	%rd31, %rd29, %rd30;
	cvt.rn.f64.s64 	%fd1, %rd31;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f56, %fd2;
	neg.f32 	%f57, %f56;
	setp.lt.s32 	%p8, %r94, 0;
	selp.f32 	%f125, %f57, %f56, %p8;
$L__BB0_8:                              // %__internal_trig_reduction_kernel.exit.i.i
	mul.rn.ftz.f32 	%f8, %f125, %f125;
	and.b32  	%r99, %r162, 1;
	setp.eq.b32 	%p9, %r99, 1;
	not.pred 	%p10, %p9;
	selp.f32 	%f9, 0f3F800000, %f125, %p9;
	mov.f32 	%f62, 0f00000000;
	fma.rn.ftz.f32 	%f10, %f8, %f9, %f62;
	mov.f32 	%f128, 0fB94D4153;
	mov.f32 	%f127, 0f3C0885E4;
	mov.f32 	%f126, 0fBE2AAAA8;
	@%p10 bra 	$L__BB0_10;
// %bb.9:                               // %__internal_fmad.exit1.i.i.i
	.loc	1 0 23                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:23
	mov.f32 	%f63, 0fBAB607ED;
	mov.f32 	%f64, 0f37CBAC00;
	fma.rn.ftz.f32 	%f128, %f64, %f8, %f63;
	mov.f32 	%f127, 0f3D2AAABB;
	mov.f32 	%f126, 0fBEFFFFFF;
$L__BB0_10:                             // %__internal_fmad.exit2.i.i.i
	cvt.s64.s32 	%rd1, %r62;
	.loc	1 32 23                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:32:23
	fma.rn.ftz.f32 	%f67, %f128, %f8, %f127;
	fma.rn.ftz.f32 	%f68, %f67, %f8, %f126;
	fma.rn.ftz.f32 	%f129, %f68, %f10, %f9;
	and.b32  	%r100, %r162, 2;
	setp.eq.s32 	%p11, %r100, 0;
	@%p11 bra 	$L__BB0_12;
// %bb.11:                              // %__internal_fmad.exit5.i.i.i
	.loc	1 0 23                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:23
	mov.f32 	%f70, 0fBF800000;
	fma.rn.ftz.f32 	%f129, %f129, %f70, %f62;
$L__BB0_12:                             // %__nv_sinf.exit
	cvt.u32.u64 	%r103, %rd1;
	.loc	1 42 19                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:42:19
	setp.lt.s32 	%p12, %r4, 64;
	.loc	1 43 36                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:43:36
	add.s32 	%r104, %r103, 64;
	.loc	1 43 31                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:43:31
	mul.wide.s32 	%rd34, %r104, 2;
	add.s64 	%rd32, %rd9, %rd34;
	mov.b16 	%rs15, 0;
	.loc	1 43 41                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:43:41
	// begin inline asm
	mov.u16 %rs14, %rs15;
	@%p12 ld.global.b16 { %rs14 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%r102, 0;
	.loc	1 44 54                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:44:54
	// begin inline asm
	mov.u32 %r101, %r102;
	@%p12 ld.global.L1::evict_last.b32 { %r101 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r101;
	.loc	1 45 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:45:24
	mul.f32 	%f71, %f18, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r166, %f71;
	cvt.rn.f32.s32 	%f72, %r166;
	mov.f32 	%f73, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f74, %f72, %f73, %f18;
	mov.f32 	%f75, 0fB3A22168;
	fma.rn.ftz.f32 	%f76, %f72, %f75, %f74;
	mov.f32 	%f77, 0fA7C234C5;
	fma.rn.ftz.f32 	%f130, %f72, %f77, %f76;
	abs.ftz.f32 	%f20, %f18;
	setp.ltu.f32 	%p14, %f20, 0f47CE4780;
	@%p14 bra 	$L__BB0_20;
// %bb.13:                              // %__nv_isinff.exit.i.i.i12
	setp.neu.f32 	%p15, %f20, 0f7F800000;
	@%p15 bra 	$L__BB0_15;
// %bb.14:                              // %__nv_fmul_rn.exit.i.i.i52
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	mov.f32 	%f80, 0f00000000;
	.loc	1 45 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:45:24
	mul.rn.ftz.f32 	%f130, %f18, %f80;
	mov.b32 	%r166, 0;
	bra.uni 	$L__BB0_20;
$L__BB0_15:
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	cvt.u32.u64 	%r2, %rd19;
	.loc	1 45 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:45:24
	shr.u32 	%r24, %r101, 23;
	and.b32  	%r106, %r24, 224;
	add.s32 	%r107, %r106, -128;
	shl.b32 	%r108, %r101, 8;
	or.b32  	%r112, %r108, -2147483648;
	shr.u32 	%r26, %r107, 5;
	mov.b32 	%r164, 0;
	mov.b64 	%rd52, 0;
	mov.u64 	%rd36, __cudart_i2opi_f;
	mov.u32 	%r163, %r2;
$L__BB0_16:                             // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd37, %rd36, %rd52;
	ld.global.nc.u32 	%r111, [%rd37];
	// begin inline asm
	{
	mad.lo.cc.u32   %r109, %r111, %r112, %r164;
	madc.hi.u32     %r164, %r111, %r112,  0;
	}
	// end inline asm
	st.local.u32 	[%r163], %r109;
	add.s32 	%r163, %r163, 4;
	add.s64 	%rd52, %rd52, 4;
	setp.ne.s64 	%p16, %rd52, 24;
	@%p16 bra 	$L__BB0_16;
// %bb.17:
	st.local.u32 	[%r2+24], %r164;
	shl.b32 	%r114, %r26, 2;
	sub.s32 	%r31, %r2, %r114;
	ld.local.u32 	%r32, [%r31+24];
	ld.local.u32 	%r33, [%r31+20];
	and.b32  	%r116, %r101, 260046848;
	setp.eq.s32 	%p17, %r116, 0;
	mov.u32 	%r165, %r33;
	@%p17 bra 	$L__BB0_19;
// %bb.18:
	ld.local.u32 	%r117, [%r31+16];
	shf.l.wrap.b32 	%r165, %r117, %r33, %r24;
$L__BB0_19:                             // %__internal_trig_reduction_slowpath.exit.i.i.i18
	shf.l.wrap.b32 	%r118, %r33, %r32, %r24;
	shr.u32 	%r119, %r118, 30;
	shf.l.wrap.b32 	%r120, %r165, %r118, 2;
	shl.b32 	%r121, %r165, 2;
	shr.u32 	%r122, %r120, 31;
	add.s32 	%r123, %r122, %r119;
	neg.s32 	%r124, %r123;
	setp.lt.s32 	%p18, %r101, 0;
	selp.b32 	%r166, %r124, %r123, %p18;
	xor.b32  	%r125, %r120, %r101;
	shr.s32 	%r126, %r120, 31;
	xor.b32  	%r127, %r126, %r120;
	xor.b32  	%r128, %r126, %r121;
	cvt.u64.u32 	%rd38, %r127;
	shl.b64 	%rd39, %rd38, 32;
	cvt.u64.u32 	%rd40, %r128;
	or.b64  	%rd41, %rd39, %rd40;
	cvt.rn.f64.s64 	%fd3, %rd41;
	mul.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f78, %fd4;
	neg.f32 	%f79, %f78;
	setp.lt.s32 	%p19, %r125, 0;
	selp.f32 	%f130, %f79, %f78, %p19;
$L__BB0_20:                             // %__internal_trig_reduction_kernel.exit.i.i29
	mul.rn.ftz.f32 	%f24, %f130, %f130;
	and.b32  	%r130, %r166, 1;
	setp.eq.b32 	%p20, %r130, 1;
	not.pred 	%p21, %p20;
	selp.f32 	%f25, 0f3F800000, %f130, %p20;
	mov.f32 	%f84, 0f00000000;
	fma.rn.ftz.f32 	%f26, %f24, %f25, %f84;
	mov.f32 	%f133, 0fB94D4153;
	mov.f32 	%f132, 0f3C0885E4;
	mov.f32 	%f131, 0fBE2AAAA8;
	@%p21 bra 	$L__BB0_22;
// %bb.21:                              // %__internal_fmad.exit1.i.i.i37
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	mov.f32 	%f85, 0fBAB607ED;
	mov.f32 	%f86, 0f37CBAC00;
	fma.rn.ftz.f32 	%f133, %f86, %f24, %f85;
	mov.f32 	%f132, 0f3D2AAABB;
	mov.f32 	%f131, 0fBEFFFFFF;
$L__BB0_22:                             // %__internal_fmad.exit2.i.i.i40
	mov.b32 	%f1, %r54;
	.loc	1 45 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:45:24
	fma.rn.ftz.f32 	%f89, %f133, %f24, %f132;
	fma.rn.ftz.f32 	%f90, %f89, %f24, %f131;
	fma.rn.ftz.f32 	%f134, %f90, %f26, %f25;
	and.b32  	%r131, %r166, 2;
	setp.eq.s32 	%p22, %r131, 0;
	@%p22 bra 	$L__BB0_24;
// %bb.23:                              // %__internal_fmad.exit5.i.i.i48
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	mov.f32 	%f92, 0fBF800000;
	fma.rn.ftz.f32 	%f134, %f134, %f92, %f84;
$L__BB0_24:                             // %__nv_sinf.exit55
	.loc	1 54 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:54:24
	mul.f32 	%f93, %f1, 0f3F22F983;
	cvt.rni.ftz.s32.f32 	%r170, %f93;
	cvt.rn.f32.s32 	%f94, %r170;
	mov.f32 	%f95, 0fBFC90FDA;
	fma.rn.ftz.f32 	%f96, %f94, %f95, %f1;
	mov.f32 	%f97, 0fB3A22168;
	fma.rn.ftz.f32 	%f98, %f94, %f97, %f96;
	mov.f32 	%f99, 0fA7C234C5;
	fma.rn.ftz.f32 	%f135, %f94, %f99, %f98;
	abs.ftz.f32 	%f35, %f1;
	setp.ltu.f32 	%p23, %f35, 0f47CE4780;
	@%p23 bra 	$L__BB0_32;
// %bb.25:                              // %__nv_isinff.exit.i.i.i67
	setp.neu.f32 	%p24, %f35, 0f7F800000;
	@%p24 bra 	$L__BB0_27;
// %bb.26:                              // %__nv_fmul_rn.exit.i.i.i106
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	mov.f32 	%f102, 0f00000000;
	.loc	1 54 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:54:24
	mul.rn.ftz.f32 	%f135, %f1, %f102;
	mov.b32 	%r170, 0;
	bra.uni 	$L__BB0_32;
$L__BB0_27:
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	cvt.u32.u64 	%r1, %rd17;
	.loc	1 54 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:54:24
	shr.u32 	%r39, %r54, 23;
	and.b32  	%r133, %r39, 224;
	add.s32 	%r134, %r133, -128;
	shl.b32 	%r135, %r54, 8;
	or.b32  	%r139, %r135, -2147483648;
	shr.u32 	%r41, %r134, 5;
	mov.b32 	%r168, 0;
	mov.b64 	%rd53, 0;
	mov.u64 	%rd43, __cudart_i2opi_f;
	mov.u32 	%r167, %r1;
$L__BB0_28:                             // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	add.s64 	%rd44, %rd43, %rd53;
	ld.global.nc.u32 	%r138, [%rd44];
	// begin inline asm
	{
	mad.lo.cc.u32   %r136, %r138, %r139, %r168;
	madc.hi.u32     %r168, %r138, %r139,  0;
	}
	// end inline asm
	st.local.u32 	[%r167], %r136;
	add.s32 	%r167, %r167, 4;
	add.s64 	%rd53, %rd53, 4;
	setp.ne.s64 	%p25, %rd53, 24;
	@%p25 bra 	$L__BB0_28;
// %bb.29:
	st.local.u32 	[%r1+24], %r168;
	shl.b32 	%r141, %r41, 2;
	sub.s32 	%r46, %r1, %r141;
	ld.local.u32 	%r47, [%r46+24];
	ld.local.u32 	%r48, [%r46+20];
	and.b32  	%r143, %r54, 260046848;
	setp.eq.s32 	%p26, %r143, 0;
	mov.u32 	%r169, %r48;
	@%p26 bra 	$L__BB0_31;
// %bb.30:
	ld.local.u32 	%r144, [%r46+16];
	shf.l.wrap.b32 	%r169, %r144, %r48, %r39;
$L__BB0_31:                             // %__internal_trig_reduction_slowpath.exit.i.i.i73
	shf.l.wrap.b32 	%r145, %r48, %r47, %r39;
	shr.u32 	%r146, %r145, 30;
	shf.l.wrap.b32 	%r147, %r169, %r145, 2;
	shl.b32 	%r148, %r169, 2;
	shr.u32 	%r149, %r147, 31;
	add.s32 	%r150, %r149, %r146;
	neg.s32 	%r151, %r150;
	setp.lt.s32 	%p27, %r54, 0;
	selp.b32 	%r170, %r151, %r150, %p27;
	xor.b32  	%r152, %r147, %r54;
	shr.s32 	%r153, %r147, 31;
	xor.b32  	%r154, %r153, %r147;
	xor.b32  	%r155, %r153, %r148;
	cvt.u64.u32 	%rd45, %r154;
	shl.b64 	%rd46, %rd45, 32;
	cvt.u64.u32 	%rd47, %r155;
	or.b64  	%rd48, %rd46, %rd47;
	cvt.rn.f64.s64 	%fd5, %rd48;
	mul.f64 	%fd6, %fd5, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f100, %fd6;
	neg.f32 	%f101, %f100;
	setp.lt.s32 	%p28, %r152, 0;
	selp.f32 	%f135, %f101, %f100, %p28;
$L__BB0_32:                             // %__internal_trig_reduction_kernel.exit.i.i84
	add.s32 	%r53, %r170, 1;
	mul.rn.ftz.f32 	%f39, %f135, %f135;
	and.b32  	%r157, %r170, 1;
	setp.eq.b32 	%p29, %r157, 1;
	selp.f32 	%f40, %f135, 0f3F800000, %p29;
	mov.f32 	%f106, 0f00000000;
	fma.rn.ftz.f32 	%f41, %f39, %f40, %f106;
	mov.f32 	%f138, 0fB94D4153;
	mov.f32 	%f137, 0f3C0885E4;
	mov.f32 	%f136, 0fBE2AAAA8;
	@%p29 bra 	$L__BB0_34;
// %bb.33:                              // %__internal_fmad.exit1.i.i.i103
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	mov.f32 	%f107, 0fBAB607ED;
	mov.f32 	%f108, 0f37CBAC00;
	fma.rn.ftz.f32 	%f138, %f108, %f39, %f107;
	mov.f32 	%f137, 0f3D2AAABB;
	mov.f32 	%f136, 0fBEFFFFFF;
$L__BB0_34:                             // %__internal_fmad.exit2.i.i.i91
	ld.param.u64 	%rd10, [triton_poi_fused_clone_6_param_2];
	.loc	1 54 24                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:54:24
	fma.rn.ftz.f32 	%f111, %f138, %f39, %f137;
	fma.rn.ftz.f32 	%f112, %f111, %f39, %f136;
	fma.rn.ftz.f32 	%f139, %f112, %f41, %f40;
	and.b32  	%r158, %r53, 2;
	setp.eq.s32 	%p30, %r158, 0;
	@%p30 bra 	$L__BB0_36;
// %bb.35:                              // %__internal_fmad.exit5.i.i.i99
	.loc	1 0 24                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:24
	mov.f32 	%f114, 0fBF800000;
	fma.rn.ftz.f32 	%f139, %f139, %f114, %f106;
$L__BB0_36:                             // %__nv_cosf.exit
	.loc	1 30 63                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:30:63
	cvt.f32.f16 	%f115, %rs5;
	.loc	1 37 13                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:37:13
	neg.f32 	%f116, %f129;
	fma.rn.f32 	%f117, %f116, %f115, 0f00000000;
	.loc	1 0 0                           // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:0
	selp.f32 	%f118, %f117, 0f00000000, %p1;
	.loc	1 43 62                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:43:62
	cvt.f32.f16 	%f119, %rs14;
	.loc	1 49 20                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:49:20
	mul.f32 	%f120, %f134, %f119;
	.loc	1 0 0                           // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:0:0
	selp.f32 	%f121, %f120, 0f00000000, %p12;
	.loc	1 53 20                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:53:20
	add.f32 	%f122, %f118, %f121;
	.loc	1 25 45                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:25:45
	cvt.f32.f16 	%f123, %rs4;
	.loc	1 59 20                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:59:20
	fma.rn.f32 	%f124, %f139, %f123, %f122;
	.loc	1 60 25                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:60:25
	shl.b64 	%rd50, %rd1, 1;
	add.s64 	%rd49, %rd10, %rd50;
	.loc	1 60 37                         // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:60:37
	cvt.rn.f16.f32 	%rs16, %f124;
	// begin inline asm
	st.global.b16 [ %rd49 + 0 ], { %rs16 };
	// end inline asm
	.loc	1 60 4                          // ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py:60:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/tr/ctrdaubodzs5bsh5lodmk3ijrrhhh6yee4zoghuc4e5tatvr6jr7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 94                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x57 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 114
.b8 100
.b8 97
.b8 117
.b8 98
.b8 111
.b8 100
.b8 122
.b8 115
.b8 53
.b8 98
.b8 115
.b8 104
.b8 53
.b8 108
.b8 111
.b8 100
.b8 109
.b8 107
.b8 51
.b8 105
.b8 106
.b8 114
.b8 114
.b8 104
.b8 104
.b8 104
.b8 54
.b8 121
.b8 101
.b8 101
.b8 52
.b8 122
.b8 111
.b8 103
.b8 104
.b8 117
.b8 99
.b8 52
.b8 101
.b8 53
.b8 116
.b8 97
.b8 116
.b8 118
.b8 114
.b8 54
.b8 106
.b8 114
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
