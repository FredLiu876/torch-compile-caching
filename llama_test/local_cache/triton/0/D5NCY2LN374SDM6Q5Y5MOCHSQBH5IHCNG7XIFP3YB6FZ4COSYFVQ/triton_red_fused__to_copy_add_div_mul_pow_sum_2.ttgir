#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0)
#loc1 = loc(unknown)
#loc26 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":45:25)
#loc60 = loc(callsite(#loc1 at #loc26))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 16 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_div_mul_pow_sum_2(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0), %arg4: i32 loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-5.000000e-01> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2.44140625E-4> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf16, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %arg4 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %4 = arith.muli %0, %c4096_i32 : i32 loc(#loc5)
    %5 = tt.splat %4 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc57)
    %6 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc7)
    %7 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc58)
    %8 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc9)
    %9 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc10)
    %10 = scf.for %arg6 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg7 = %cst) -> (tensor<1x2048xf32, #blocked>)  : i32 {
      %24 = tt.splat %arg6 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc12)
      %25 = arith.addi %24, %3 : tensor<1x2048xi32, #blocked> loc(#loc12)
      %26 = arith.cmpi slt, %25, %cst_4 : tensor<1x2048xi32, #blocked> loc(#loc13)
      %27 = arith.addi %25, %5 : tensor<1x2048xi32, #blocked> loc(#loc6)
      %28 = tt.addptr %6, %27 : tensor<1x2048x!tt.ptr<f16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc7)
      %29 = arith.andi %26, %7 : tensor<1x2048xi1, #blocked> loc(#loc8)
      %30 = tt.load %28, %29, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc14)
      %31 = arith.extf %30 : tensor<1x2048xf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc15)
      %32 = tt.addptr %8, %25 : tensor<1x2048x!tt.ptr<f16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc9)
      %33 = tt.load %32, %26, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc16)
      %34 = arith.extf %33 : tensor<1x2048xf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc17)
      %35 = tt.addptr %9, %27 : tensor<1x2048x!tt.ptr<f16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc10)
      %36 = tt.load %35, %29, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc18)
      %37 = arith.extf %36 : tensor<1x2048xf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc19)
      %38 = arith.mulf %31, %34 : tensor<1x2048xf32, #blocked> loc(#loc20)
      %39 = arith.mulf %38, %37 : tensor<1x2048xf32, #blocked> loc(#loc21)
      %40 = arith.addf %arg7, %39 : tensor<1x2048xf32, #blocked> loc(#loc22)
      %41 = arith.select %29, %40, %arg7 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc23)
      scf.yield %41 : tensor<1x2048xf32, #blocked> loc(#loc24)
    } loc(#loc11)
    %11 = "tt.reduce"(%10) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc26)), %arg7: f32 loc(callsite(#loc1 at #loc26))):
      %24 = arith.addf %arg6, %arg7 : f32 loc(#loc62)
      tt.reduce.return %24 : f32 loc(#loc59)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc59)
    %12 = tt.expand_dims %11 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc28)
    %13 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc29)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    %15 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc30)
    %16 = tt.load %14, %15 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    %17 = tt.broadcast %16 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc31)
    %18 = arith.mulf %12, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc32)
    %19 = arith.mulf %16, %16 : tensor<1x1xf32, #blocked> loc(#loc33)
    %20 = arith.mulf %19, %16 : tensor<1x1xf32, #blocked> loc(#loc34)
    %21 = arith.mulf %18, %20 : tensor<1x1xf32, #blocked> loc(#loc35)
    %22 = arith.mulf %21, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc36)
    %23 = tt.broadcast %22 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc37)
    scf.for %arg6 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %24 = tt.splat %arg6 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc39)
      %25 = arith.addi %24, %3 : tensor<1x2048xi32, #blocked> loc(#loc39)
      %26 = arith.cmpi slt, %25, %cst_4 : tensor<1x2048xi32, #blocked> loc(#loc40)
      %27 = arith.addi %25, %5 : tensor<1x2048xi32, #blocked> loc(#loc41)
      %28 = tt.addptr %6, %27 : tensor<1x2048x!tt.ptr<f16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc42)
      %29 = arith.andi %26, %7 : tensor<1x2048xi1, #blocked> loc(#loc43)
      %30 = tt.load %28, %29, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc44)
      %31 = arith.extf %30 : tensor<1x2048xf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc45)
      %32 = tt.addptr %8, %25 : tensor<1x2048x!tt.ptr<f16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc46)
      %33 = tt.load %32, %26, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc47)
      %34 = arith.extf %33 : tensor<1x2048xf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc48)
      %35 = tt.addptr %9, %27 : tensor<1x2048x!tt.ptr<f16>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc49)
      %36 = tt.load %35, %29, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc50)
      %37 = arith.extf %36 : tensor<1x2048xf16, #blocked> to tensor<1x2048xf32, #blocked> loc(#loc51)
      %38 = arith.mulf %31, %34 : tensor<1x2048xf32, #blocked> loc(#loc52)
      %39 = arith.mulf %38, %17 : tensor<1x2048xf32, #blocked> loc(#loc31)
      %40 = arith.mulf %37, %cst_2 : tensor<1x2048xf32, #blocked> loc(#loc53)
      %41 = arith.mulf %23, %40 : tensor<1x2048xf32, #blocked> loc(#loc37)
      %42 = arith.addf %39, %41 : tensor<1x2048xf32, #blocked> loc(#loc54)
      %43 = arith.truncf %42 : tensor<1x2048xf32, #blocked> to tensor<1x2048xf16, #blocked> loc(#loc55)
      tt.store %28, %43, %29 : tensor<1x2048x!tt.ptr<f16>, #blocked> loc(#loc55)
    } loc(#loc38)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":22:28)
#loc3 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":24:21)
#loc4 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":25:37)
#loc5 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":35:50)
#loc6 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":35:45)
#loc7 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":35:38)
#loc8 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":35:65)
#loc9 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":36:34)
#loc10 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":37:34)
#loc11 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":29:40)
#loc12 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":30:31)
#loc13 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":31:29)
#loc14 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":35:55)
#loc15 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":35:116)
#loc16 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":36:41)
#loc17 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":36:94)
#loc18 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":37:51)
#loc19 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":37:112)
#loc20 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":38:22)
#loc21 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":41:22)
#loc22 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":43:23)
#loc23 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":44:48)
#loc24 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":44:8)
#loc25 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":286:36)
#loc27 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":45:28)
#loc29 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":46:31)
#loc30 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":46:36)
#loc31 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":58:24)
#loc32 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":60:23)
#loc33 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":61:24)
#loc34 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":62:24)
#loc35 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":63:24)
#loc36 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":65:24)
#loc37 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":69:24)
#loc38 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":47:40)
#loc39 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":48:31)
#loc40 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":49:29)
#loc41 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":53:46)
#loc42 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":53:39)
#loc43 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":53:66)
#loc44 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":53:56)
#loc45 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":53:118)
#loc46 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":54:35)
#loc47 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":54:42)
#loc48 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":54:95)
#loc49 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":55:35)
#loc50 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":55:52)
#loc51 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":55:114)
#loc52 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":56:24)
#loc53 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":68:24)
#loc54 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":70:24)
#loc55 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":72:56)
#loc56 = loc("./local_cache/m2/cm2digt4hcus2fxymbfdumzjafjngblhe2d6qijkeeihhspgjvlp.py":47:4)
#loc57 = loc(fused[#loc6, #loc5])
#loc58 = loc(fused[#loc8, #loc3])
#loc59 = loc(callsite(#loc25 at #loc26))
#loc61 = loc(callsite(#loc27 at #loc25))
#loc62 = loc(callsite(#loc61 at #loc26))
