; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_red_fused__to_copy_add_mul_sum_14(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11, i32 %12, ptr addrspace(1) readnone captures(none) %13) local_unnamed_addr !dbg !6 {
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %17 = and i32 %16, 3, !dbg !10
  %18 = icmp sgt i32 %12, 0, !dbg !11
  br i1 %18, label %.lr.ph, label %._crit_edge, !dbg !11

.lr.ph:                                           ; preds = %14, %.lr.ph
  %19 = phi float [ %75, %.lr.ph ], [ 0.000000e+00, %14 ]
  %20 = phi float [ %68, %.lr.ph ], [ 0.000000e+00, %14 ]
  %21 = phi i32 [ %76, %.lr.ph ], [ 0, %14 ]
  %22 = or disjoint i32 %21, %17, !dbg !12
  %23 = icmp slt i32 %22, %12, !dbg !13
  %24 = shl i32 %22, 12, !dbg !14
  %25 = add i32 %24, %15, !dbg !15
  %26 = sext i32 %25 to i64, !dbg !16
  %27 = getelementptr half, ptr addrspace(1) %0, i64 %26, !dbg !16
  %28 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %27, i1 %23) #2, !dbg !17
  %29 = getelementptr half, ptr addrspace(1) %1, i64 %26, !dbg !18
  %30 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %29, i1 %23) #2, !dbg !19
  %31 = getelementptr half, ptr addrspace(1) %2, i64 %26, !dbg !20
  %32 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %31, i1 %23) #2, !dbg !21
  %33 = getelementptr half, ptr addrspace(1) %3, i64 %26, !dbg !22
  %34 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %33, i1 %23) #2, !dbg !23
  %35 = sext i32 %22 to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %4, i64 %35, !dbg !24
  %37 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %36, i1 %23) #2, !dbg !25
  %38 = bitcast i32 %37 to float, !dbg !25
  %39 = getelementptr half, ptr addrspace(1) %5, i64 %26, !dbg !26
  %40 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %39, i1 %23) #2, !dbg !27
  %41 = bitcast i16 %40 to half, !dbg !27
  %42 = fpext half %41 to float, !dbg !28
  %43 = getelementptr half, ptr addrspace(1) %6, i64 %26, !dbg !29
  %44 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %43, i1 %23) #2, !dbg !30
  %45 = bitcast i16 %44 to half, !dbg !30
  %46 = fpext half %45 to float, !dbg !31
  %47 = getelementptr half, ptr addrspace(1) %7, i64 %26, !dbg !32
  %48 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %47, i1 %23) #2, !dbg !33
  %49 = bitcast i16 %48 to half, !dbg !33
  %50 = fpext half %49 to float, !dbg !34
  %51 = getelementptr float, ptr addrspace(1) %8, i64 %35, !dbg !35
  %52 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %51, i1 %23) #2, !dbg !36
  %53 = bitcast i32 %52 to float, !dbg !36
  %54 = insertelement <2 x i16> poison, i16 %28, i64 0, !dbg !17
  %55 = insertelement <2 x i16> %54, i16 %32, i64 1, !dbg !17
  %56 = bitcast <2 x i16> %55 to <2 x half>, !dbg !17
  %57 = fpext <2 x half> %56 to <2 x float>, !dbg !37
  %58 = insertelement <2 x i16> poison, i16 %30, i64 0, !dbg !19
  %59 = insertelement <2 x i16> %58, i16 %34, i64 1, !dbg !19
  %60 = bitcast <2 x i16> %59 to <2 x half>, !dbg !19
  %61 = fpext <2 x half> %60 to <2 x float>, !dbg !38
  %62 = fadd <2 x float> %57, %61, !dbg !39
  %63 = extractelement <2 x float> %62, i64 1, !dbg !40
  %64 = fmul float %63, %38, !dbg !40
  %65 = extractelement <2 x float> %62, i64 0, !dbg !41
  %66 = fmul float %65, %64, !dbg !41
  %67 = fadd float %20, %66, !dbg !42
  %68 = select i1 %23, float %67, float %20, !dbg !43
  %69 = fadd float %42, %46, !dbg !44
  %70 = fadd float %69, %50, !dbg !45
  %71 = extractelement <2 x float> %57, i64 1, !dbg !46
  %72 = fmul float %71, %53, !dbg !46
  %73 = fmul float %70, %72, !dbg !47
  %74 = fadd float %19, %73, !dbg !48
  %75 = select i1 %23, float %74, float %19, !dbg !49
  %76 = add i32 %21, 4, !dbg !11
  %77 = icmp slt i32 %76, %12, !dbg !11
  br i1 %77, label %.lr.ph, label %._crit_edge, !dbg !11

._crit_edge:                                      ; preds = %.lr.ph, %14
  %.lcssa2 = phi float [ 0.000000e+00, %14 ], [ %68, %.lr.ph ], !dbg !50
  %.lcssa = phi float [ 0.000000e+00, %14 ], [ %75, %.lr.ph ], !dbg !51
  %78 = bitcast float %.lcssa2 to i32, !dbg !52
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 2, i32 31), !dbg !52
  %80 = bitcast i32 %79 to float, !dbg !52
  %81 = fadd float %.lcssa2, %80, !dbg !56
  %82 = bitcast float %81 to i32, !dbg !52
  %83 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %82, i32 1, i32 31), !dbg !52
  %84 = bitcast i32 %83 to float, !dbg !52
  %85 = fadd float %81, %84, !dbg !56
  %86 = bitcast float %.lcssa to i32, !dbg !58
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 2, i32 31), !dbg !58
  %88 = bitcast i32 %87 to float, !dbg !58
  %89 = fadd float %.lcssa, %88, !dbg !60
  %90 = bitcast float %89 to i32, !dbg !58
  %91 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 1, i32 31), !dbg !58
  %92 = bitcast i32 %91 to float, !dbg !58
  %93 = fadd float %89, %92, !dbg !60
  %94 = sext i32 %15 to i64, !dbg !61
  %95 = getelementptr half, ptr addrspace(1) %9, i64 %94, !dbg !61
  %96 = fptrunc float %85 to half, !dbg !62
  %97 = and i32 %16, 63, !dbg !62
  %98 = icmp eq i32 %97, 0, !dbg !62
  %99 = bitcast half %96 to i16, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %99, ptr addrspace(1) %95, i1 %98) #2, !dbg !62
  %100 = getelementptr half, ptr addrspace(1) %10, i64 %94, !dbg !63
  %101 = fptrunc float %93 to half, !dbg !64
  %102 = bitcast half %101 to i16, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %102, ptr addrspace(1) %100, i1 %98) #2, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py", directory: "./local_cache/gh")
!4 = !{ptr @triton_red_fused__to_copy_add_mul_sum_14, !"reqntidx", i32 64}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mul_sum_14", linkageName: "triton_red_fused__to_copy_add_mul_sum_14", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 22, column: 28, scope: !6)
!10 = !DILocation(line: 25, column: 37, scope: !6)
!11 = !DILocation(line: 30, column: 40, scope: !6)
!12 = !DILocation(line: 31, column: 31, scope: !6)
!13 = !DILocation(line: 32, column: 29, scope: !6)
!14 = !DILocation(line: 36, column: 44, scope: !6)
!15 = !DILocation(line: 36, column: 39, scope: !6)
!16 = !DILocation(line: 36, column: 34, scope: !6)
!17 = !DILocation(line: 36, column: 51, scope: !6)
!18 = !DILocation(line: 37, column: 34, scope: !6)
!19 = !DILocation(line: 37, column: 51, scope: !6)
!20 = !DILocation(line: 38, column: 34, scope: !6)
!21 = !DILocation(line: 38, column: 51, scope: !6)
!22 = !DILocation(line: 39, column: 34, scope: !6)
!23 = !DILocation(line: 39, column: 51, scope: !6)
!24 = !DILocation(line: 40, column: 34, scope: !6)
!25 = !DILocation(line: 40, column: 41, scope: !6)
!26 = !DILocation(line: 41, column: 35, scope: !6)
!27 = !DILocation(line: 41, column: 52, scope: !6)
!28 = !DILocation(line: 41, column: 106, scope: !6)
!29 = !DILocation(line: 42, column: 35, scope: !6)
!30 = !DILocation(line: 42, column: 52, scope: !6)
!31 = !DILocation(line: 42, column: 106, scope: !6)
!32 = !DILocation(line: 43, column: 35, scope: !6)
!33 = !DILocation(line: 43, column: 52, scope: !6)
!34 = !DILocation(line: 43, column: 106, scope: !6)
!35 = !DILocation(line: 44, column: 35, scope: !6)
!36 = !DILocation(line: 44, column: 42, scope: !6)
!37 = !DILocation(line: 36, column: 105, scope: !6)
!38 = !DILocation(line: 37, column: 105, scope: !6)
!39 = !DILocation(line: 45, column: 22, scope: !6)
!40 = !DILocation(line: 48, column: 22, scope: !6)
!41 = !DILocation(line: 50, column: 23, scope: !6)
!42 = !DILocation(line: 52, column: 25, scope: !6)
!43 = !DILocation(line: 53, column: 42, scope: !6)
!44 = !DILocation(line: 54, column: 24, scope: !6)
!45 = !DILocation(line: 55, column: 24, scope: !6)
!46 = !DILocation(line: 57, column: 24, scope: !6)
!47 = !DILocation(line: 59, column: 24, scope: !6)
!48 = !DILocation(line: 61, column: 25, scope: !6)
!49 = !DILocation(line: 62, column: 42, scope: !6)
!50 = !DILocation(line: 28, column: 44, scope: !6)
!51 = !DILocation(line: 29, column: 44, scope: !6)
!52 = !DILocation(line: 286, column: 36, scope: !53, inlinedAt: !55)
!53 = distinct !DILexicalBlockFile(scope: !6, file: !54, discriminator: 0)
!54 = !DIFile(filename: "standard.py", directory: "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language")
!55 = !DILocation(line: 63, column: 27, scope: !6)
!56 = !DILocation(line: 256, column: 15, scope: !57, inlinedAt: !55)
!57 = distinct !DILexicalBlockFile(scope: !53, file: !54, discriminator: 0)
!58 = !DILocation(line: 286, column: 36, scope: !53, inlinedAt: !59)
!59 = !DILocation(line: 64, column: 27, scope: !6)
!60 = !DILocation(line: 256, column: 15, scope: !57, inlinedAt: !59)
!61 = !DILocation(line: 65, column: 25, scope: !6)
!62 = !DILocation(line: 65, column: 37, scope: !6)
!63 = !DILocation(line: 66, column: 25, scope: !6)
!64 = !DILocation(line: 66, column: 37, scope: !6)
!65 = !DILocation(line: 66, column: 4, scope: !6)
