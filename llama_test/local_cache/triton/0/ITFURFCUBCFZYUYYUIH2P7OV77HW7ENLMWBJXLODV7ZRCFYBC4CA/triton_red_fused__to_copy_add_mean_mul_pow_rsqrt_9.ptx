//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_7
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<59>;
	.reg .f32 	%f<60>;
	.reg .b64 	%rd<16>;
	.loc	1 18 0                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:18:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:22:28
	mov.u32 	%r28, %ctaid.x;
	ld.param.u32 	%r29, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5];
	.loc	1 24 21                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:24:21
	setp.lt.s32 	%p1, %r28, %r29;
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3];
	.loc	1 25 37                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:25:37
	mov.u32 	%r30, %tid.x;
	and.b32  	%r31, %r30, 31;
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4];
	shl.b32 	%r32, %r30, 2;
	and.b32  	%r33, %r32, 4092;
	.loc	1 35 46                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:46
	shl.b32 	%r34, %r28, 12;
	.loc	1 35 41                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:41
	or.b32  	%r35, %r33, %r34;
	.loc	1 35 34                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:34
	mul.wide.s32 	%rd13, %r35, 2;
	add.s64 	%rd1, %rd10, %rd13;
	mov.b32 	%r3, 0;
	.loc	1 35 51                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:51
	// begin inline asm
	mov.u32 %r1, %r3;
	mov.u32 %r2, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 36 38                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:38
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 36 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:55
	// begin inline asm
	mov.u32 %r5, %r3;
	mov.u32 %r6, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	mov.b32 	{%rs1, %rs2}, %r1;
	cvt.f32.f16 	%f1, %rs2;
	cvt.f32.f16 	%f2, %rs1;
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	mov.b32 	{%rs3, %rs4}, %r5;
	cvt.f32.f16 	%f3, %rs4;
	cvt.f32.f16 	%f4, %rs3;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f5, %f2, %f4;
	add.f32 	%f6, %f1, %f3;
	.loc	1 39 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:39:22
	mul.f32 	%f7, %f6, %f6;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16x2.f32 	%r9, %f6, %f5;
	.loc	1 35 113                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:35:113
	mov.b32 	{%rs5, %rs6}, %r2;
	cvt.f32.f16 	%f8, %rs6;
	cvt.f32.f16 	%f9, %rs5;
	.loc	1 36 117                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:36:117
	mov.b32 	{%rs7, %rs8}, %r6;
	cvt.f32.f16 	%f10, %rs8;
	cvt.f32.f16 	%f11, %rs7;
	.loc	1 37 22                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:37:22
	add.f32 	%f12, %f9, %f11;
	add.f32 	%f13, %f8, %f10;
	.loc	1 43 55                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:43:55
	cvt.rn.f16x2.f32 	%r10, %f13, %f12;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r9, %r10 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f14, %f5, %f5, %f7;
	fma.rn.f32 	%f15, %f12, %f12, %f14;
	fma.rn.f32 	%f16, %f13, %f13, %f15;
	selp.f32 	%f17, %f16, 0f00000000, %p1;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r36, %f17;
	shfl.sync.bfly.b32	%r37, %r36, 16, 31, -1;
	mov.b32 	%f18, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r38, %f19;
	shfl.sync.bfly.b32	%r39, %r38, 8, 31, -1;
	mov.b32 	%f20, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r40, %f21;
	shfl.sync.bfly.b32	%r41, %r40, 4, 31, -1;
	mov.b32 	%f22, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r42, %f23;
	shfl.sync.bfly.b32	%r43, %r42, 2, 31, -1;
	mov.b32 	%f24, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r44, %f25;
	shfl.sync.bfly.b32	%r45, %r44, 1, 31, -1;
	mov.b32 	%f26, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p4, %r31, 0;
	shr.u32 	%r46, %r30, 3;
	and.b32  	%r47, %r46, 124;
	mov.u32 	%r48, global_smem;
	add.s32 	%r11, %r48, %r47;
	mov.b32 	%r12, %f27;
	// begin inline asm
	@%p4 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r30, 32;
	add.s32 	%r14, %r48, %r32;
	// begin inline asm
	@%p5 ld.shared.b32 %r13, [ %r14 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r13;
	shfl.sync.bfly.b32	%r49, %r13, 16, 31, -1;
	mov.b32 	%f29, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r50, %f30;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f31, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r52, %f32;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f33, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r54, %f34;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f35, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r56, %f36;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f37, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 286 36                        // standard.py:286:36
	and.pred  	%p6, %p5, %p4;
	mov.b32 	%r16, %f38;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f39, [global_smem];
	mov.f32 	%f40, 0f45800000;
$L__tmp2:
	.loc	1 46 19                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:46:19
	div.full.f32 	%f41, %f39, %f40;
	.loc	1 48 19                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:48:19
	add.f32 	%f42, %f41, 0f3727C5AC;
	.loc	1 49 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:49:28
	rsqrt.approx.ftz.f32 	%f43, %f42;
	.loc	1 50 4                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:51:28
	mul.wide.s32 	%rd14, %r28, 4;
	add.s64 	%rd4, %rd9, %rd14;
	.loc	1 51 40                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:51:40
	and.b32  	%r58, %r30, 1023;
	setp.eq.s32 	%p11, %r58, 0;
	mov.b32 	%r17, %f43;
	and.pred  	%p7, %p11, %p1;
	// begin inline asm
	@%p7 st.global.b32 [ %rd4 + 0 ], { %r17 };
	// end inline asm
	.loc	1 58 35                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:35
	mul.wide.u32 	%rd15, %r33, 2;
	add.s64 	%rd5, %rd11, %rd15;
	mov.pred 	%p8, -1;
	.loc	1 58 42                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:42
	// begin inline asm
	mov.u32 %r18, %r3;
	mov.u32 %r19, %r3;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 59 56                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:56
	// begin inline asm
	mov.u32 %r22, %r3;
	mov.u32 %r23, %r3;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r22, %r23 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 64 29                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:29
	add.s64 	%rd7, %rd12, %rd13;
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	mov.b32 	{%rs9, %rs10}, %r18;
	cvt.f32.f16 	%f44, %rs10;
	cvt.f32.f16 	%f45, %rs9;
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	mov.b32 	{%rs11, %rs12}, %r22;
	cvt.f32.f16 	%f46, %rs11;
	cvt.f32.f16 	%f47, %rs12;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f48, %f43, %f47;
	mul.f32 	%f49, %f43, %f46;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f50, %f49, %f45;
	mul.f32 	%f51, %f48, %f44;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16x2.f32 	%r26, %f51, %f50;
	.loc	1 58 95                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:58:95
	mov.b32 	{%rs13, %rs14}, %r19;
	cvt.f32.f16 	%f52, %rs14;
	cvt.f32.f16 	%f53, %rs13;
	.loc	1 59 118                        // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:59:118
	mov.b32 	{%rs15, %rs16}, %r23;
	cvt.f32.f16 	%f54, %rs15;
	cvt.f32.f16 	%f55, %rs16;
	.loc	1 61 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:61:24
	mul.f32 	%f56, %f43, %f55;
	mul.f32 	%f57, %f43, %f54;
	.loc	1 63 24                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:63:24
	mul.f32 	%f58, %f57, %f53;
	mul.f32 	%f59, %f56, %f52;
	.loc	1 64 53                         // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:64:53
	cvt.rn.f16x2.f32 	%r27, %f59, %f58;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 52 4                          // ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/cp/ccpmvf6lgmnpforavvbrvwi4t5zoiosfy62jj2u37b4g5lsm5yib.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 112
.b8 109
.b8 118
.b8 102
.b8 54
.b8 108
.b8 103
.b8 109
.b8 110
.b8 112
.b8 102
.b8 111
.b8 114
.b8 97
.b8 118
.b8 118
.b8 98
.b8 114
.b8 118
.b8 119
.b8 105
.b8 52
.b8 116
.b8 53
.b8 122
.b8 111
.b8 105
.b8 111
.b8 115
.b8 102
.b8 121
.b8 54
.b8 50
.b8 106
.b8 106
.b8 50
.b8 117
.b8 51
.b8 55
.b8 98
.b8 52
.b8 103
.b8 53
.b8 108
.b8 115
.b8 109
.b8 53
.b8 121
.b8 105
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
