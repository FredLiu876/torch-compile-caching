//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_14 // -- Begin function triton_red_fused__to_copy_add_mul_sum_14
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_14
.visible .entry triton_red_fused__to_copy_add_mul_sum_14(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_9,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_10,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_11,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_12,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_13
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<104>;
	.reg .f32 	%f<93>;
	.reg .b64 	%rd<28>;
	.loc	1 18 0                          // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_add_mul_sum_14_param_12];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mul_sum_14_param_10];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mul_sum_14_param_9];
$L__tmp0:
	.loc	1 22 28                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:22:33
	shl.b32 	%r1, %r11, 3;
	.loc	1 23 44                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 1;
	and.b32  	%r3, %r12, 6;
	.loc	1 30 40                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:30:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f89, 0f00000000;
	mov.f32 	%f90, %f89;
	mov.f32 	%f91, %f89;
	mov.f32 	%f92, %f89;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:0:40
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mul_sum_14_param_8];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mul_sum_14_param_7];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mul_sum_14_param_6];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mul_sum_14_param_5];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_14_param_4];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_14_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_14_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_14_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_14_param_0];
	bfe.u32 	%r4, %r2, 2, 4;
	.loc	1 30 40                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:30:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r102, %r15, %r3;
	mov.f32 	%f89, 0f00000000;
	mov.b32 	%r17, 0;
	mov.u32 	%r103, %r17;
	mov.f32 	%f90, %f89;
	mov.f32 	%f91, %f89;
	mov.f32 	%f92, %f89;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 32 29                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:32:29
	add.s32 	%r38, %r4, %r103;
	setp.lt.s32 	%p2, %r38, %r10;
	.loc	1 36 34                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:36:34
	mul.wide.s32 	%rd23, %r102, 2;
	add.s64 	%rd12, %rd1, %rd23;
	.loc	1 36 51                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:36:51
	// begin inline asm
	mov.u32 %r16, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 36 105                        // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:36:105
	mov.b32 	{%rs1, %rs2}, %r16;
	cvt.f32.f16 	%f21, %rs1;
	cvt.f32.f16 	%f22, %rs2;
	.loc	1 37 34                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:37:34
	add.s64 	%rd13, %rd2, %rd23;
	.loc	1 37 51                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:37:51
	// begin inline asm
	mov.u32 %r18, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r18 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:38:34
	add.s64 	%rd14, %rd3, %rd23;
	.loc	1 38 51                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:38:51
	// begin inline asm
	mov.u32 %r20, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r20 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 39 34                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:39:34
	add.s64 	%rd15, %rd4, %rd23;
	.loc	1 39 51                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:39:51
	// begin inline asm
	mov.u32 %r22, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r22 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 40 34                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:40:34
	mul.wide.s32 	%rd24, %r38, 4;
	add.s64 	%rd16, %rd5, %rd24;
	.loc	1 40 41                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:40:41
	// begin inline asm
	mov.u32 %r24, %r17;
	@%p2 ld.global.L1::evict_last.b32 { %r24 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, %r17;
	@%p2 ld.global.L1::evict_last.b32 { %r26 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 41 35                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:41:35
	add.s64 	%rd18, %rd6, %rd23;
	.loc	1 41 52                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:41:52
	// begin inline asm
	mov.u32 %r28, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r28 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 42 35                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:42:35
	add.s64 	%rd19, %rd7, %rd23;
	.loc	1 42 52                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:42:52
	// begin inline asm
	mov.u32 %r30, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r30 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 43 35                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:43:35
	add.s64 	%rd20, %rd8, %rd23;
	.loc	1 43 52                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:43:52
	// begin inline asm
	mov.u32 %r32, %r17;
	@%p2 ld.global.L1::evict_first.b32 { %r32 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 44 35                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:44:35
	add.s64 	%rd21, %rd9, %rd24;
	.loc	1 44 42                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:44:42
	// begin inline asm
	mov.u32 %r34, %r17;
	@%p2 ld.global.L1::evict_last.b32 { %r34 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, %r17;
	@%p2 ld.global.L1::evict_last.b32 { %r36 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 41 106                        // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:41:106
	mov.b32 	{%rs3, %rs4}, %r28;
	cvt.f32.f16 	%f23, %rs4;
	cvt.f32.f16 	%f24, %rs3;
	.loc	1 42 106                        // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:42:106
	mov.b32 	{%rs5, %rs6}, %r30;
	cvt.f32.f16 	%f25, %rs6;
	cvt.f32.f16 	%f26, %rs5;
	.loc	1 54 24                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:54:24
	add.f32 	%f27, %f24, %f26;
	add.f32 	%f28, %f23, %f25;
	.loc	1 38 105                        // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:38:105
	mov.b32 	{%rs7, %rs8}, %r20;
	cvt.f32.f16 	%f29, %rs8;
	cvt.f32.f16 	%f30, %rs7;
	.loc	1 39 105                        // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:39:105
	mov.b32 	{%rs9, %rs10}, %r22;
	cvt.f32.f16 	%f31, %rs10;
	cvt.f32.f16 	%f32, %rs9;
	.loc	1 37 105                        // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:37:105
	mov.b32 	{%rs11, %rs12}, %r32;
	cvt.f32.f16 	%f33, %rs11;
	cvt.f32.f16 	%f34, %rs12;
	mov.b32 	{%rs13, %rs14}, %r18;
	cvt.f32.f16 	%f35, %rs13;
	cvt.f32.f16 	%f36, %rs14;
	.loc	1 40 41                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:40:41
	mov.b32 	%f37, %r36;
	mov.b32 	%f38, %r26;
	.loc	1 46 22                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:46:22
	add.f32 	%f39, %f30, %f32;
	add.f32 	%f40, %f29, %f31;
	.loc	1 45 22                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:45:22
	add.f32 	%f41, %f22, %f36;
	add.f32 	%f42, %f21, %f35;
	add.f32 	%f43, %f28, %f34;
	add.f32 	%f44, %f27, %f33;
	.loc	1 48 22                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:48:22
	mul.f32 	%f45, %f40, %f38;
	mul.f32 	%f46, %f39, %f38;
	mul.f32 	%f47, %f29, %f37;
	mul.f32 	%f48, %f30, %f37;
	.loc	1 52 25                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:52:25
	fma.rn.f32 	%f49, %f44, %f48, %f91;
	fma.rn.f32 	%f50, %f43, %f47, %f92;
	fma.rn.f32 	%f51, %f42, %f46, %f89;
	fma.rn.f32 	%f52, %f41, %f45, %f90;
	.loc	1 53 42                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:53:42
	selp.f32 	%f90, %f52, %f90, %p2;
	selp.f32 	%f89, %f51, %f89, %p2;
	selp.f32 	%f92, %f50, %f92, %p2;
	selp.f32 	%f91, %f49, %f91, %p2;
	.loc	1 30 40                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:30:40
	add.s32 	%r103, %r103, 16;
	add.s32 	%r102, %r102, 65536;
	setp.lt.s32 	%p13, %r103, %r10;
	@%p13 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:23:44
	and.b32  	%r61, %r2, 28;
	and.b32  	%r62, %r2, 7;
	.loc	1 23 23                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:23:23
	or.b32  	%r63, %r1, %r62;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r64, %f89;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f53, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f89, %f53;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r66, %f54;
	shfl.sync.bfly.b32	%r67, %r66, 8, 31, -1;
	mov.b32 	%f55, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r68, %f56;
	shfl.sync.bfly.b32	%r69, %r68, 4, 31, -1;
	mov.b32 	%f57, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r70, %f90;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f59, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f90, %f59;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r72, %f60;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f61, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r74, %f62;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f63, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p14, %r61, 0;
	shr.u32 	%r76, %r2, 3;
	and.b32  	%r77, %r76, 4;
	shl.b32 	%r78, %r3, 3;
	or.b32  	%r79, %r78, %r77;
	mov.u32 	%r80, global_smem;
	add.s32 	%r39, %r80, %r79;
	mov.b32 	%r40, %f58;
	// begin inline asm
	@%p14 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r39, 8;
	mov.b32 	%r42, %f64;
	// begin inline asm
	@%p14 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p16, %r2, 16;
	shl.b32 	%r81, %r2, 2;
	add.s32 	%r44, %r80, %r81;
	// begin inline asm
	@%p16 ld.shared.b32 %r43, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r43;
	shfl.sync.bfly.b32	%r82, %r43, 1, 31, -1;
	mov.b32 	%f66, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r83, %r2, 1;
	setp.eq.b32 	%p26, %r83, 1;
	not.pred 	%p27, %p26;
	and.pred  	%p17, %p16, %p27;
	mov.b32 	%r46, %f67;
	// begin inline asm
	@%p17 st.shared.b32 [ %r44 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r84, %r80, %r78;
	ld.shared.u32 	%r48, [%r84];
	ld.shared.u32 	%r49, [%r84+8];
$L__tmp2:
	.loc	1 65 37                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:65:37
	bar.sync 	0;
	shl.b32 	%r85, %r3, 2;
	sub.s32 	%r58, %r84, %r85;
	mov.pred 	%p18, -1;
	// begin inline asm
	@%p18 st.shared.v2.b32 [ %r58 + 0 ], { %r48, %r49 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r86, %r62, 2;
	add.s32 	%r87, %r80, %r86;
	ld.shared.f32 	%f68, [%r87];
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	mov.b32 	%r88, %f91;
	shfl.sync.bfly.b32	%r89, %r88, 16, 31, -1;
	mov.b32 	%f69, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f91, %f69;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r90, %f70;
	shfl.sync.bfly.b32	%r91, %r90, 8, 31, -1;
	mov.b32 	%f71, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r92, %f72;
	shfl.sync.bfly.b32	%r93, %r92, 4, 31, -1;
	mov.b32 	%f73, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r94, %f92;
	shfl.sync.bfly.b32	%r95, %r94, 16, 31, -1;
	mov.b32 	%f75, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f92, %f75;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r96, %f76;
	shfl.sync.bfly.b32	%r97, %r96, 8, 31, -1;
	mov.b32 	%f77, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r98, %f78;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	mov.b32 	%f79, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f74;
	// begin inline asm
	@%p14 st.shared.b32 [ %r39 + 0 ], %r51;
	// end inline asm
	mov.b32 	%r53, %f80;
	// begin inline asm
	@%p14 st.shared.b32 [ %r41 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p16 ld.shared.b32 %r54, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f81, %r54;
	shfl.sync.bfly.b32	%r100, %r54, 1, 31, -1;
	mov.b32 	%f82, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f83;
	// begin inline asm
	@%p17 st.shared.b32 [ %r44 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r59, [%r84];
	ld.shared.u32 	%r60, [%r84+8];
$L__tmp4:
	.loc	1 66 37                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:66:37
	bar.sync 	0;
	// begin inline asm
	@%p18 st.shared.v2.b32 [ %r58 + 0 ], { %r59, %r60 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f84, [%r87];
	.loc	1 65 25                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:65:25
	mul.wide.s32 	%rd27, %r63, 2;
	add.s64 	%rd25, %rd10, %rd27;
	.loc	1 65 37                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:65:37
	cvt.rn.f16.f32 	%rs15, %f68;
	and.b32  	%r101, %r2, 56;
	setp.eq.s32 	%p24, %r101, 0;
	// begin inline asm
	@%p24 st.global.b16 [ %rd25 + 0 ], { %rs15 };
	// end inline asm
	.loc	1 66 25                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:66:25
	add.s64 	%rd26, %rd11, %rd27;
	.loc	1 66 37                         // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:66:37
	cvt.rn.f16.f32 	%rs16, %f84;
	// begin inline asm
	@%p24 st.global.b16 [ %rd26 + 0 ], { %rs16 };
	// end inline asm
	.loc	1 66 4                          // cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/le/cleebz4qsuv6x3uay77iffht6w22pvdm2rpphczmwg6tlnbdvmxa.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 208                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 101
.b8 101
.b8 98
.b8 122
.b8 52
.b8 113
.b8 115
.b8 117
.b8 118
.b8 54
.b8 120
.b8 51
.b8 117
.b8 97
.b8 121
.b8 55
.b8 55
.b8 105
.b8 102
.b8 102
.b8 104
.b8 116
.b8 54
.b8 119
.b8 50
.b8 50
.b8 112
.b8 118
.b8 100
.b8 109
.b8 50
.b8 114
.b8 112
.b8 112
.b8 104
.b8 99
.b8 122
.b8 109
.b8 119
.b8 103
.b8 54
.b8 116
.b8 108
.b8 110
.b8 98
.b8 100
.b8 118
.b8 109
.b8 120
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
