//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 117, 115, 47, 99, 117, 115, 110, 53, 114, 52, 102, 116, 110, 99, 108, 55, 103, 113, 115, 105, 105, 120, 103, 51, 104, 119, 51, 111, 106, 99, 102, 117, 118, 97, 113, 100, 104, 101, 122, 108, 120, 98, 108, 119, 101, 99, 110, 108, 99, 107, 106, 107, 106, 110, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<23>;
	.reg .b32 	%r<55>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<69>;
	.loc	1 18 0                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:18:0

// %bb.0:
	ld.param.u32 	%r11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd31, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:22:28
	mov.u32 	%r12, %ctaid.x;
	.loc	1 23 44                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 4, 2;
	.loc	1 22 33                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:22:33
	shl.b32 	%r14, %r12, 2;
	.loc	1 23 23                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:23:23
	or.b32  	%r6, %r2, %r14;
	or.b32  	%r15, %r14, 1;
	or.b32  	%r16, %r14, 2;
	or.b32  	%r17, %r14, 3;
	.loc	1 24 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:24:21
	setp.lt.s32 	%p4, %r6, %r11;
	setp.lt.s32 	%p8, %r17, %r11;
	setp.lt.s32 	%p7, %r16, %r11;
	setp.lt.s32 	%p6, %r15, %r11;
	setp.lt.s32 	%p5, %r14, %r11;
	.loc	1 28 30                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:28:30
	mul.wide.s32 	%rd32, %r6, 8;
	add.s64 	%rd16, %rd31, %rd32;
	mul.wide.s32 	%rd33, %r14, 8;
	add.s64 	%rd24, %rd31, %rd33;
	add.s64 	%rd26, %rd24, 8;
	add.s64 	%rd28, %rd24, 16;
	add.s64 	%rd30, %rd24, 24;
	.loc	1 28 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:28:35
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p7 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 37 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:37:22
	add.s64 	%rd34, %rd25, 128256;
	add.s64 	%rd35, %rd23, 128256;
	add.s64 	%rd36, %rd29, 128256;
	add.s64 	%rd37, %rd27, 128256;
	.loc	1 38 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:38:22
	setp.lt.s64 	%p9, %rd25, 0;
	setp.lt.s64 	%p10, %rd23, 0;
	setp.lt.s64 	%p11, %rd29, 0;
	setp.lt.s64 	%p12, %rd27, 0;
	.loc	1 39 36                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:39:36
	selp.b64 	%rd38, %rd37, %rd27, %p12;
	selp.b64 	%rd39, %rd36, %rd29, %p11;
	selp.b64 	%rd40, %rd35, %rd23, %p10;
	selp.b64 	%rd41, %rd34, %rd25, %p9;
	.loc	1 40 41                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:41
	setp.gt.u64 	%p13, %rd41, 128255;
	setp.gt.u64 	%p14, %rd40, 128255;
	setp.gt.u64 	%p15, %rd39, 128255;
	setp.gt.u64 	%p16, %rd38, 128255;
	.loc	1 40 59                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:59
	and.pred  	%p17, %p7, %p16;
	selp.u16 	%rs1, 1, 0, %p17;
	shl.b16 	%rs2, %rs1, 2;
	and.pred  	%p18, %p8, %p15;
	selp.u16 	%rs3, -1, 0, %p18;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	and.pred  	%p19, %p5, %p14;
	selp.u16 	%rs6, 1, 0, %p19;
	and.pred  	%p20, %p6, %p13;
	selp.u16 	%rs7, -1, 0, %p20;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	setp.ne.s16 	%p21, %rs12, 0;
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	@%p21 bra 	$L__BB0_6;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:0:69
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	and.b32  	%r3, %r1, 3;
	shl.b32 	%r13, %r1, 2;
	and.b32  	%r4, %r13, 60;
	and.b32  	%r5, %r1, 63;
	or.b32  	%r7, %r14, %r3;
	shl.b32 	%r18, %r6, 12;
	or.b32  	%r8, %r4, %r18;
	.loc	1 38 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:38:22
	setp.lt.s64 	%p22, %rd21, 0;
	.loc	1 41 46                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:46
	shl.b64 	%rd49, %rd21, 12;
	add.s64 	%rd50, %rd49, 525336576;
	selp.b64 	%rd51, %rd50, %rd49, %p22;
	.loc	1 30 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:30:40
	cvt.u64.u32 	%rd52, %r4;
	or.b64  	%rd2, %rd51, %rd52;
	mov.f32 	%f55, 0f00000000;
	mov.b64 	%rd66, 0;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	bar.sync 	0;
	.loc	1 41 41                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:41
	or.b64  	%rd55, %rd2, %rd66;
	.loc	1 41 34                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:34
	shl.b64 	%rd56, %rd55, 1;
	add.s64 	%rd53, %rd11, %rd56;
	mov.b32 	%r21, 0;
	.loc	1 41 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:53
	// begin inline asm
	mov.u32 %r23, %r21;
	mov.u32 %r24, %r21;
	@%p4 ld.global.L1::evict_first.v2.b32 { %r23, %r24 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	{%rs13, %rs14}, %r23;
	mov.b32 	{%rs15, %rs16}, %r24;
	.loc	1 41 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:115
	cvt.f32.f16 	%f12, %rs13;
	cvt.f32.f16 	%f13, %rs14;
	cvt.f32.f16 	%f14, %rs15;
	cvt.f32.f16 	%f15, %rs16;
	.loc	1 45 25                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:45:25
	fma.rn.f32 	%f16, %f12, %f12, %f55;
	fma.rn.f32 	%f17, %f13, %f13, %f56;
	fma.rn.f32 	%f18, %f14, %f14, %f57;
	fma.rn.f32 	%f19, %f15, %f15, %f58;
	.loc	1 46 50                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:46:50
	selp.f32 	%f55, %f16, %f55, %p4;
	selp.f32 	%f56, %f17, %f56, %p4;
	selp.f32 	%f57, %f18, %f57, %p4;
	selp.f32 	%f58, %f19, %f58, %p4;
	cvt.u32.u64 	%r25, %rd66;
	or.b32  	%r26, %r8, %r25;
	.loc	1 47 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:29
	mul.wide.s32 	%rd57, %r26, 2;
	add.s64 	%rd54, %rd13, %rd57;
	.loc	1 47 52                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:52
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd54 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 30 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:30:40
	add.s64 	%rd4, %rd66, 64;
	setp.lt.u64 	%p25, %rd66, 4032;
	mov.u64 	%rd66, %rd4;
	@%p25 bra 	$L__BB0_2;
// %bb.3:                               // %__nv_rsqrtf.exit
	.loc	1 24 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:24:21
	setp.lt.s32 	%p28, %r7, %r11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f55, %f56;
	add.f32 	%f21, %f57, %f20;
	add.f32 	%f22, %f58, %f21;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r30, %f22;
	shfl.sync.bfly.b32	%r31, %r30, 8, 31, -1;
	mov.b32 	%f23, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r32, %f24;
	shfl.sync.bfly.b32	%r33, %r32, 4, 31, -1;
	mov.b32 	%f25, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r34, %f26;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	mov.b32 	%f27, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r36, %f28;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f29, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
$L__tmp2:
	.loc	1 53 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:53:28
	shl.b32 	%r38, %r2, 2;
	mov.u32 	%r39, global_smem;
	add.s32 	%r27, %r39, %r38;
	mov.b32 	%r28, %f30;
	mov.pred 	%p30, -1;
	// begin inline asm
	@%p30 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r40, %r3, 2;
	add.s32 	%r41, %r39, %r40;
	ld.shared.f32 	%f31, [%r41];
	mov.f32 	%f32, 0f45800000;
	.loc	1 50 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:50:21
	div.full.f32 	%f33, %f31, %f32;
	div.full.f32 	%f34, %f30, %f32;
	.loc	1 52 20                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:52:20
	add.f32 	%f35, %f33, 0f3727C5AC;
	add.f32 	%f36, %f34, 0f3727C5AC;
	.loc	1 53 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:53:28
	rsqrt.approx.ftz.f32 	%f37, %f35;
	rsqrt.approx.ftz.f32 	%f9, %f36;
	.loc	1 54 4                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:55:28
	mul.wide.s32 	%rd60, %r7, 4;
	add.s64 	%rd58, %rd10, %rd60;
	.loc	1 55 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:55:40
	and.b32  	%r42, %r1, 60;
	setp.eq.s32 	%p29, %r42, 0;
	mov.b32 	%r29, %f37;
	and.pred  	%p27, %p29, %p28;
	// begin inline asm
	@%p27 st.global.b32 [ %rd58 + 0 ], { %r29 };
	// end inline asm
	shl.b32 	%r43, %r5, 2;
	add.s32 	%r49, %r39, %r43;
	shl.b32 	%r44, %r4, 2;
	add.s32 	%r10, %r39, %r44;
	.loc	1 56 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:40
	mul.wide.u32 	%rd61, %r5, 2;
	add.s64 	%rd67, %rd12, %rd61;
	mov.b64 	%rd68, -64;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:0:40
	mov.b16 	%rs18, 0;
	.loc	1 62 42                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:42
	// begin inline asm
	mov.u16 %rs17, %rs18;
	@%p30 ld.global.L1::evict_last.b16 { %rs17 }, [ %rd67 + 0 ];
	// end inline asm
	.loc	1 62 95                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:95
	cvt.f32.f16 	%f38, %rs17;
	.loc	1 63 43                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:43
	add.s64 	%rd68, %rd68, 64;
	cvt.u32.u64 	%r53, %rd68;
	or.b32  	%r54, %r8, %r53;
	.loc	1 63 36                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:36
	mul.wide.s32 	%rd65, %r54, 2;
	add.s64 	%rd63, %rd13, %rd65;
	mov.b32 	%r47, 0;
	.loc	1 63 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:53
	// begin inline asm
	mov.u32 %r45, %r47;
	mov.u32 %r46, %r47;
	@%p4 ld.global.L1::evict_first.v2.b32 { %r45, %r46 }, [ %rd63 + 0 ];
	// end inline asm
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	bar.sync 	0;
	mov.b32 	%r50, %f38;
	// begin inline asm
	@%p30 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	.loc	1 68 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:29
	add.s64 	%rd64, %rd14, %rd65;
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	mov.b32 	{%rs19, %rs20}, %r45;
	cvt.f32.f16 	%f39, %rs19;
	cvt.f32.f16 	%f40, %rs20;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f41, %f9, %f40;
	mul.f32 	%f42, %f9, %f39;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	ld.shared.v4.f32 	{%f43, %f44, %f45, %f46}, [%r10];
	mul.f32 	%f47, %f43, %f42;
	mul.f32 	%f48, %f44, %f41;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16x2.f32 	%r51, %f48, %f47;
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	mov.b32 	{%rs21, %rs22}, %r46;
	cvt.f32.f16 	%f49, %rs21;
	cvt.f32.f16 	%f50, %rs22;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f51, %f9, %f50;
	mul.f32 	%f52, %f9, %f49;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	mul.f32 	%f53, %f45, %f52;
	mul.f32 	%f54, %f46, %f51;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16x2.f32 	%r52, %f54, %f53;
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd64 + 0 ], { %r51, %r52 };
	// end inline asm
	.loc	1 56 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:40
	add.s64 	%rd67, %rd67, 128;
	setp.lt.u64 	%p34, %rd68, 4032;
	@%p34 bra 	$L__BB0_4;
// %bb.5:
	.loc	1 56 4                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:4
	ret;
$L__BB0_6:
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	mov.u64 	%rd42, assertMessage_0;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, assertFile_0;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, assertFunc_0;
	cvta.global.u64 	%rd47, %rd46;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd43;
	.param .b64 param1;
	st.param.b64 	[param1], %rd45;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd47;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/us/cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 115
.b8 110
.b8 53
.b8 114
.b8 52
.b8 102
.b8 116
.b8 110
.b8 99
.b8 108
.b8 55
.b8 103
.b8 113
.b8 115
.b8 105
.b8 105
.b8 120
.b8 103
.b8 51
.b8 104
.b8 119
.b8 51
.b8 111
.b8 106
.b8 99
.b8 102
.b8 117
.b8 118
.b8 97
.b8 113
.b8 100
.b8 104
.b8 101
.b8 122
.b8 108
.b8 120
.b8 98
.b8 108
.b8 119
.b8 101
.b8 99
.b8 110
.b8 108
.b8 99
.b8 107
.b8 106
.b8 107
.b8 106
.b8 110
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
