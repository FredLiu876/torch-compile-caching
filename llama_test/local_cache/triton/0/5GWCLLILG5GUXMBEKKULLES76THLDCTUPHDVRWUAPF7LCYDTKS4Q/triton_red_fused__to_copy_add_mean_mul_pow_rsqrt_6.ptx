//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_4,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<55>;
	.reg .f32 	%f<43>;
	.reg .b64 	%rd<28>;
	.loc	1 18 0                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:18:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_3];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_2];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_1];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_0];
	ld.param.u32 	%r11, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_5];
$L__tmp0:
	.loc	1 22 28                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:22:28
	mov.u32 	%r12, %ctaid.x;
	.loc	1 22 33                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:22:33
	shl.b32 	%r13, %r12, 4;
	.loc	1 23 44                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 2, 4;
	and.b32  	%r3, %r1, 15;
	.loc	1 23 23                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:23:23
	or.b32  	%r14, %r2, %r13;
	or.b32  	%r4, %r13, %r3;
	.loc	1 24 21                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:24:21
	setp.lt.s32 	%p13, %r14, %r11;
	.loc	1 25 37                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:25:37
	shl.b32 	%r16, %r1, 1;
	and.b32  	%r17, %r16, 6;
	.loc	1 35 46                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:46
	shl.b32 	%r18, %r14, 12;
	or.b32  	%r5, %r18, %r17;
	@%p13 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %.split.us.preheader
	.loc	1 0 46                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:0:46
	mov.f32 	%f40, 0f00000000;
	mov.b32 	%r53, -8;
	mov.f32 	%f41, %f40;
$L__BB0_4:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:41
	add.s32 	%r53, %r53, 8;
	or.b32  	%r30, %r5, %r53;
	.loc	1 35 34                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:34
	mul.wide.s32 	%rd16, %r30, 2;
	add.s64 	%rd14, %rd7, %rd16;
	mov.b32 	%r27, 0;
	mov.pred 	%p5, -1;
	.loc	1 35 51                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:51
	// begin inline asm
	mov.u32 %r26, %r27;
	@%p5 ld.global.L1::evict_last.b32 { %r26 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r26;
	.loc	1 35 112                        // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:112
	cvt.f32.f16 	%f11, %rs1;
	cvt.f32.f16 	%f12, %rs2;
	.loc	1 36 34                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:36:34
	add.s64 	%rd15, %rd8, %rd16;
	.loc	1 36 51                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:36:51
	// begin inline asm
	mov.u32 %r28, %r27;
	@%p5 ld.global.L1::evict_last.b32 { %r28 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r28;
	.loc	1 36 112                        // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:36:112
	cvt.f32.f16 	%f13, %rs3;
	cvt.f32.f16 	%f14, %rs4;
	.loc	1 37 22                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:37:22
	add.f32 	%f15, %f11, %f13;
	add.f32 	%f16, %f12, %f14;
	.loc	1 41 23                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:41:23
	fma.rn.f32 	%f40, %f15, %f15, %f40;
	fma.rn.f32 	%f41, %f16, %f16, %f41;
	.loc	1 29 40                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:29:40
	setp.lt.u32 	%p7, %r53, 4088;
	@%p7 bra 	$L__BB0_4;
// %bb.5:                               // %.split11.us.loopexit
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	bra.uni 	$L__BB0_6;
$L__tmp2:
$L__BB0_1:                              // %.split.preheader
	.loc	2 0 15                          // standard.py:0:15
	mov.b32 	%r54, -8;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:41
	add.s32 	%r54, %r54, 8;
	or.b32  	%r24, %r5, %r54;
	.loc	1 35 34                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:34
	mul.wide.s32 	%rd13, %r24, 2;
	add.s64 	%rd11, %rd7, %rd13;
	mov.b32 	%r21, 0;
	mov.pred 	%p2, 0;
	.loc	1 35 51                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:35:51
	// begin inline asm
	mov.u32 %r20, %r21;
	@%p2 ld.global.L1::evict_last.b32 { %r20 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 34                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:36:34
	add.s64 	%rd12, %rd8, %rd13;
	.loc	1 36 51                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:36:51
	// begin inline asm
	mov.u32 %r22, %r21;
	@%p2 ld.global.L1::evict_last.b32 { %r22 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 29 40                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:29:40
	setp.lt.u32 	%p4, %r54, 4088;
	mov.f32 	%f42, 0f00000000;
	@%p4 bra 	$L__BB0_2;
$L__BB0_6:                              // %.split11.us
	.loc	1 0 40                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:0:40
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_6_param_4];
	.loc	1 24 21                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:24:21
	setp.lt.s32 	%p10, %r4, %r11;
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r34, %f42;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	mov.b32 	%f17, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f42, %f17;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r36, %f18;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f19, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
$L__tmp4:
	.loc	1 48 28                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:48:28
	shl.b32 	%r38, %r2, 2;
	mov.u32 	%r39, global_smem;
	add.s32 	%r31, %r39, %r38;
	mov.b32 	%r32, %f20;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r40, %r3, 2;
	add.s32 	%r41, %r39, %r40;
	ld.shared.f32 	%f21, [%r41];
	mov.f32 	%f22, 0f45800000;
	.loc	1 45 19                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:45:19
	div.full.f32 	%f23, %f21, %f22;
	div.full.f32 	%f24, %f20, %f22;
	.loc	1 47 19                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:47:19
	add.f32 	%f25, %f23, 0f3727C5AC;
	add.f32 	%f26, %f24, 0f3727C5AC;
	.loc	1 48 28                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:48:28
	rsqrt.approx.ftz.f32 	%f27, %f25;
	rsqrt.approx.ftz.f32 	%f7, %f26;
	.loc	1 49 4                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:49:4
	bar.sync 	0;
	.loc	1 50 28                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:50:28
	mul.wide.s32 	%rd19, %r4, 4;
	add.s64 	%rd17, %rd6, %rd19;
	.loc	1 50 40                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:50:40
	and.b32  	%r42, %r1, 48;
	setp.eq.s32 	%p11, %r42, 0;
	mov.b32 	%r33, %f27;
	and.pred  	%p9, %p11, %p10;
	// begin inline asm
	@%p9 st.global.b32 [ %rd17 + 0 ], { %r33 };
	// end inline asm
	.loc	1 51 40                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:51:40
	and.b32  	%r43, %r1, 3;
	mul.wide.u32 	%rd20, %r43, 4;
	add.s64 	%rd26, %rd9, %rd20;
	mov.b64 	%rd27, -8;
$L__BB0_7:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:0:40
	mov.b32 	%r45, 0;
	.loc	1 57 42                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:57:42
	// begin inline asm
	mov.u32 %r44, %r45;
	@%p8 ld.global.L1::evict_last.b32 { %r44 }, [ %rd26 + 0 ];
	// end inline asm
	add.s64 	%rd27, %rd27, 8;
	cvt.u32.u64 	%r51, %rd27;
	or.b32  	%r52, %r5, %r51;
	.loc	1 58 35                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:58:35
	mul.wide.s32 	%rd25, %r52, 2;
	add.s64 	%rd22, %rd7, %rd25;
	.loc	1 58 52                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:58:52
	// begin inline asm
	mov.u32 %r46, %r45;
	@%p13 ld.global.L1::evict_first.b32 { %r46 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 59 35                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:59:35
	add.s64 	%rd23, %rd8, %rd25;
	.loc	1 59 52                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:59:52
	// begin inline asm
	mov.u32 %r48, %r45;
	@%p13 ld.global.L1::evict_first.b32 { %r48 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 65 29                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:65:29
	add.s64 	%rd24, %rd10, %rd25;
	.loc	1 57 95                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:57:95
	mov.b32 	{%rs5, %rs6}, %r44;
	cvt.f32.f16 	%f28, %rs6;
	cvt.f32.f16 	%f29, %rs5;
	.loc	1 58 114                        // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:58:114
	mov.b32 	{%rs7, %rs8}, %r46;
	cvt.f32.f16 	%f30, %rs8;
	cvt.f32.f16 	%f31, %rs7;
	.loc	1 59 114                        // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:59:114
	mov.b32 	{%rs9, %rs10}, %r48;
	cvt.f32.f16 	%f32, %rs10;
	cvt.f32.f16 	%f33, %rs9;
	.loc	1 60 24                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:60:24
	add.f32 	%f34, %f31, %f33;
	add.f32 	%f35, %f30, %f32;
	.loc	1 62 24                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:62:24
	mul.f32 	%f36, %f7, %f35;
	mul.f32 	%f37, %f7, %f34;
	.loc	1 64 24                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:64:24
	mul.f32 	%f38, %f37, %f29;
	mul.f32 	%f39, %f36, %f28;
	.loc	1 65 53                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:65:53
	cvt.rn.f16x2.f32 	%r50, %f39, %f38;
	// begin inline asm
	@%p13 st.global.b32 [ %rd24 + 0 ], { %r50 };
	// end inline asm
	.loc	1 51 40                         // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:51:40
	add.s64 	%rd26, %rd26, 16;
	setp.lt.u64 	%p16, %rd27, 4088;
	@%p16 bra 	$L__BB0_7;
// %bb.8:
	.loc	1 51 4                          // c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py:51:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/5k/c5khdvdmkophlyqmatpbonjtmvckgp6kh4tu2ucyewdkyzkjokji.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 107
.b8 104
.b8 100
.b8 118
.b8 100
.b8 109
.b8 107
.b8 111
.b8 112
.b8 104
.b8 108
.b8 121
.b8 113
.b8 109
.b8 97
.b8 116
.b8 112
.b8 98
.b8 111
.b8 110
.b8 106
.b8 116
.b8 109
.b8 118
.b8 99
.b8 107
.b8 103
.b8 112
.b8 54
.b8 107
.b8 104
.b8 52
.b8 116
.b8 117
.b8 50
.b8 117
.b8 99
.b8 121
.b8 101
.b8 119
.b8 100
.b8 107
.b8 121
.b8 122
.b8 107
.b8 106
.b8 111
.b8 107
.b8 106
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
