//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 117, 115, 47, 99, 117, 115, 110, 53, 114, 52, 102, 116, 110, 99, 108, 55, 103, 113, 115, 105, 105, 120, 103, 51, 104, 119, 51, 111, 106, 99, 102, 117, 118, 97, 113, 100, 104, 101, 122, 108, 120, 98, 108, 119, 101, 99, 110, 108, 99, 107, 106, 107, 106, 110, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<28>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<46>;
	.loc	1 18 0                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:18:0

// %bb.0:
	ld.param.u32 	%r7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd20, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:22:28
	mov.u32 	%r8, %ctaid.x;
	.loc	1 22 33                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:22:33
	shl.b32 	%r9, %r8, 2;
	.loc	1 23 44                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 2, 2;
	.loc	1 23 23                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:23:23
	or.b32  	%r4, %r2, %r9;
	.loc	1 24 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:24:21
	setp.lt.s32 	%p2, %r4, %r7;
	.loc	1 28 30                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:28:30
	mul.wide.s32 	%rd21, %r4, 8;
	add.s64 	%rd19, %rd20, %rd21;
	.loc	1 28 35                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:28:35
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 37 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:37:22
	add.s64 	%rd22, %rd18, 128256;
	.loc	1 38 22                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:38:22
	setp.lt.s64 	%p3, %rd18, 0;
	.loc	1 39 36                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:39:36
	selp.b64 	%rd1, %rd22, %rd18, %p3;
	.loc	1 40 41                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:41
	setp.gt.u64 	%p4, %rd1, 128255;
	.loc	1 41 46                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:46
	and.pred  	%p5, %p2, %p4;
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	@%p5 bra 	$L__BB0_6;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:0:69
	ld.param.u64 	%rd17, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd16, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd15, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	and.b32  	%r3, %r1, 3;
	or.b32  	%r5, %r9, %r3;
	shl.b32 	%r10, %r4, 12;
	or.b32  	%r6, %r3, %r10;
	and.b32  	%r11, %r1, 240;
	setp.eq.s32 	%p6, %r11, 0;
	and.pred  	%p1, %p6, %p2;
	shl.b64 	%rd24, %rd1, 13;
	.loc	1 30 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:30:40
	mul.wide.u32 	%rd2, %r3, 2;
	or.b64  	%rd25, %rd24, %rd2;
	add.s64 	%rd42, %rd14, %rd25;
	mov.f32 	%f22, 0f00000000;
	mov.b64 	%rd43, -4;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	bar.sync 	0;
	mov.b16 	%rs2, 0;
	.loc	1 41 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:53
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p2 ld.global.L1::evict_first.b16 { %rs3 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 41 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:41:115
	cvt.f32.f16 	%f5, %rs3;
	.loc	1 45 25                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:45:25
	fma.rn.f32 	%f6, %f5, %f5, %f22;
	.loc	1 46 50                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:46:50
	selp.f32 	%f22, %f6, %f22, %p2;
	add.s64 	%rd43, %rd43, 4;
	cvt.u32.u64 	%r12, %rd43;
	or.b32  	%r13, %r6, %r12;
	.loc	1 47 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:29
	mul.wide.s32 	%rd28, %r13, 2;
	add.s64 	%rd27, %rd16, %rd28;
	.loc	1 47 52                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:47:52
	// begin inline asm
	@%p1 st.global.b16 [ %rd27 + 0 ], { %rs3 };
	// end inline asm
	.loc	1 30 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:30:40
	add.s64 	%rd42, %rd42, 8;
	setp.lt.u64 	%p9, %rd43, 4092;
	@%p9 bra 	$L__BB0_2;
// %bb.3:                               // %__nv_rsqrtf.exit
	.loc	1 24 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:24:21
	setp.lt.s32 	%p12, %r5, %r7;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r17, %f22;
	shfl.sync.bfly.b32	%r18, %r17, 2, 31, -1;
	mov.b32 	%f7, %r18;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f22, %f7;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r19, %f8;
	shfl.sync.bfly.b32	%r20, %r19, 1, 31, -1;
	mov.b32 	%f9, %r20;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
$L__tmp2:
	.loc	1 48 30                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:48:30
	shl.b32 	%r21, %r2, 2;
	mov.u32 	%r22, global_smem;
	add.s32 	%r14, %r22, %r21;
	mov.b32 	%r15, %f10;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r23, %r3, 2;
	add.s32 	%r24, %r22, %r23;
	ld.shared.f32 	%f11, [%r24];
	mov.f32 	%f12, 0f45800000;
	.loc	1 50 21                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:50:21
	div.full.f32 	%f13, %f11, %f12;
	div.full.f32 	%f14, %f10, %f12;
	.loc	1 52 20                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:52:20
	add.f32 	%f15, %f13, 0f3727C5AC;
	add.f32 	%f16, %f14, 0f3727C5AC;
	.loc	1 53 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:53:28
	rsqrt.approx.ftz.f32 	%f17, %f15;
	rsqrt.approx.ftz.f32 	%f3, %f16;
	.loc	1 54 4                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:55:28
	mul.wide.s32 	%rd31, %r5, 4;
	add.s64 	%rd29, %rd13, %rd31;
	.loc	1 55 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:55:40
	and.b32  	%r25, %r1, 252;
	setp.eq.s32 	%p13, %r25, 0;
	mov.b32 	%r16, %f17;
	and.pred  	%p11, %p13, %p12;
	// begin inline asm
	@%p11 st.global.b32 [ %rd29 + 0 ], { %r16 };
	// end inline asm
	.loc	1 56 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:40
	add.s64 	%rd44, %rd15, %rd2;
	mov.b64 	%rd45, -4;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:0:40
	mov.b16 	%rs5, 0;
	.loc	1 62 42                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:42
	// begin inline asm
	mov.u16 %rs4, %rs5;
	@%p10 ld.global.L1::evict_last.b16 { %rs4 }, [ %rd44 + 0 ];
	// end inline asm
	.loc	1 62 95                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:62:95
	cvt.f32.f16 	%f18, %rs4;
	add.s64 	%rd45, %rd45, 4;
	cvt.u32.u64 	%r26, %rd45;
	or.b32  	%r27, %r6, %r26;
	.loc	1 63 36                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:36
	mul.wide.s32 	%rd35, %r27, 2;
	add.s64 	%rd33, %rd16, %rd35;
	.loc	1 63 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:53
	// begin inline asm
	mov.u16 %rs6, %rs5;
	@%p2 ld.global.L1::evict_first.b16 { %rs6 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 63 115                        // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:63:115
	cvt.f32.f16 	%f19, %rs6;
	.loc	1 65 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:65:24
	mul.f32 	%f20, %f3, %f19;
	.loc	1 67 24                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:67:24
	mul.f32 	%f21, %f20, %f18;
	.loc	1 68 29                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:29
	add.s64 	%rd34, %rd17, %rd35;
	.loc	1 68 53                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:68:53
	cvt.rn.f16.f32 	%rs8, %f21;
	// begin inline asm
	@%p1 st.global.b16 [ %rd34 + 0 ], { %rs8 };
	// end inline asm
	.loc	1 56 40                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:40
	add.s64 	%rd44, %rd44, 8;
	setp.lt.u64 	%p17, %rd45, 4092;
	@%p17 bra 	$L__BB0_4;
// %bb.5:
	.loc	1 56 4                          // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:56:4
	ret;
$L__BB0_6:
	.loc	1 40 69                         // cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py:40:69
	mov.u64 	%rd36, assertMessage_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFile_0;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, assertFunc_0;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1], %rd39;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd41;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/us/cusn5r4ftncl7gqsiixg3hw3ojcfuvaqdhezlxblwecnlckjkjne.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 115
.b8 110
.b8 53
.b8 114
.b8 52
.b8 102
.b8 116
.b8 110
.b8 99
.b8 108
.b8 55
.b8 103
.b8 113
.b8 115
.b8 105
.b8 105
.b8 120
.b8 103
.b8 51
.b8 104
.b8 119
.b8 51
.b8 111
.b8 106
.b8 99
.b8 102
.b8 117
.b8 118
.b8 97
.b8 113
.b8 100
.b8 104
.b8 101
.b8 122
.b8 108
.b8 120
.b8 98
.b8 108
.b8 119
.b8 101
.b8 99
.b8 110
.b8 108
.b8 99
.b8 107
.b8 106
.b8 107
.b8 106
.b8 110
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
