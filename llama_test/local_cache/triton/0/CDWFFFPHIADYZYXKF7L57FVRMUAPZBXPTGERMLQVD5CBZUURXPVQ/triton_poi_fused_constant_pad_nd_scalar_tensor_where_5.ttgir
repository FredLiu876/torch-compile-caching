#blocked = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 1 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_constant_pad_nd_scalar_tensor_where_5(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":18:0), %arg2: i32 loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":18:0), %arg3: i32 loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":18:0), %arg4: i32 loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<8xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<8xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<true> : tensor<8xi1, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<8xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<8xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg4 : i32 -> tensor<8xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<8xi32, #blocked> loc(#loc6)
    %7 = tt.splat %arg2 : i32 -> tensor<8xi32, #blocked> loc(#loc7)
    %8 = arith.remsi %4, %7 : tensor<8xi32, #blocked> loc(#loc7)
    %9 = arith.divsi %4, %7 : tensor<8xi32, #blocked> loc(#loc8)
    %10 = tt.splat %arg3 : i32 -> tensor<8xi32, #blocked> loc(#loc9)
    %11 = arith.cmpi slt, %8, %10 : tensor<8xi32, #blocked> loc(#loc9)
    %12 = arith.cmpi sle, %8, %9 : tensor<8xi32, #blocked> loc(#loc10)
    %13 = arith.andi %6, %11 : tensor<8xi1, #blocked> loc(#loc11)
    %14 = arith.xori %13, %cst_2 : tensor<8xi1, #blocked> loc(#loc12)
    %15 = arith.ori %11, %14 : tensor<8xi1, #blocked> loc(#loc13)
    tt.assert %15, "index out of bounds: x0 < ks1" : tensor<8xi1, #blocked> loc(#loc14)
    %16 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<8x!tt.ptr<i64>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %8 : tensor<8x!tt.ptr<i64>, #blocked>, tensor<8xi32, #blocked> loc(#loc15)
    %18 = tt.load %17, %13, %cst evictionPolicy = evict_last : tensor<8x!tt.ptr<i64>, #blocked> loc(#loc16)
    %19 = arith.cmpi ne, %18, %cst : tensor<8xi64, #blocked> loc(#loc17)
    %20 = arith.andi %12, %19 : tensor<8xi1, #blocked> loc(#loc18)
    %21 = arith.select %20, %cst_1, %cst_0 : tensor<8xi1, #blocked>, tensor<8xf32, #blocked> loc(#loc19)
    %22 = arith.select %11, %21, %cst_1 : tensor<8xi1, #blocked>, tensor<8xf32, #blocked> loc(#loc20)
    %23 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<8x!tt.ptr<f16>, #blocked> loc(#loc21)
    %24 = tt.addptr %23, %4 : tensor<8x!tt.ptr<f16>, #blocked>, tensor<8xi32, #blocked> loc(#loc21)
    %25 = arith.truncf %22 : tensor<8xf32, #blocked> to tensor<8xf16, #blocked> loc(#loc22)
    tt.store %24, %25, %6 : tensor<8x!tt.ptr<f16>, #blocked> loc(#loc22)
    tt.return loc(#loc23)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":19:28)
#loc3 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":19:33)
#loc4 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":20:36)
#loc5 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":20:23)
#loc6 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":21:21)
#loc7 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":22:19)
#loc8 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":23:19)
#loc9 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":27:18)
#loc10 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":30:19)
#loc11 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":33:44)
#loc12 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":33:36)
#loc13 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":33:34)
#loc14 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":33:51)
#loc15 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":34:30)
#loc16 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":34:35)
#loc17 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":35:21)
#loc18 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":36:19)
#loc19 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":39:35)
#loc20 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":41:34)
#loc21 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":42:25)
#loc22 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":42:37)
#loc23 = loc("./local_cache/o7/co7iw7dsuutkvnklatkhtnweaaonzxd2sjk2cozzthzuyfwph2qu.py":42:4)
