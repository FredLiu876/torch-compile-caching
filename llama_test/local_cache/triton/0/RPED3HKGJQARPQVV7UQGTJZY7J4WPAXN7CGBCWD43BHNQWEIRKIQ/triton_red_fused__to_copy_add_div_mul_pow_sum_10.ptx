//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_div_mul_pow_sum_10 // -- Begin function triton_red_fused__to_copy_add_div_mul_pow_sum_10
                                        // @triton_red_fused__to_copy_add_div_mul_pow_sum_10
.visible .entry triton_red_fused__to_copy_add_div_mul_pow_sum_10(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_6,
	.param .u32 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_7,
	.param .u32 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<23>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<41>;
	.loc	1 18 0                          // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:18:0

// %bb.0:
	ld.param.u32 	%r3, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_7];
	ld.param.u64 	%rd15, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_6];
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_5];
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_3];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_2];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_1];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_0];
$L__tmp0:
	.loc	1 22 28                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:22:28
	mov.u32 	%r4, %ctaid.x;
	.loc	1 22 33                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:22:33
	shl.b32 	%r5, %r4, 4;
	.loc	1 23 44                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:23:44
	mov.u32 	%r6, %tid.x;
	ld.param.u64 	%rd17, [triton_red_fused__to_copy_add_div_mul_pow_sum_10_param_4];
	bfe.u32 	%r7, %r6, 2, 4;
	.loc	1 23 23                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:23:23
	or.b32  	%r1, %r7, %r5;
	.loc	1 25 37                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:25:37
	shl.b32 	%r8, %r6, 1;
	and.b32  	%r9, %r8, 6;
	.loc	1 35 46                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:35:46
	shl.b32 	%r10, %r1, 12;
	.loc	1 29 40                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:29:40
	or.b32  	%r2, %r9, %r10;
	and.b32  	%r11, %r6, 3;
	mul.wide.u32 	%rd18, %r11, 4;
	add.s64 	%rd39, %rd17, %rd18;
	mov.f32 	%f63, 0f00000000;
	mov.b64 	%rd38, -8;
	setp.lt.s32 	%p1, %r1, %r3;
	mov.u64 	%rd37, %rd39;
	mov.f32 	%f64, %f63;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:0:40
	add.s64 	%rd38, %rd38, 8;
	cvt.u32.u64 	%r22, %rd38;
	or.b32  	%r23, %r2, %r22;
	.loc	1 35 34                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:35:34
	mul.wide.s32 	%rd24, %r23, 2;
	add.s64 	%rd19, %rd11, %rd24;
	mov.b32 	%r13, 0;
	.loc	1 35 51                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:35:51
	// begin inline asm
	mov.u32 %r12, %r13;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r12;
	.loc	1 35 112                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:35:112
	cvt.f32.f16 	%f10, %rs1;
	cvt.f32.f16 	%f11, %rs2;
	.loc	1 36 34                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:36:34
	add.s64 	%rd20, %rd12, %rd24;
	.loc	1 36 51                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:36:51
	// begin inline asm
	mov.u32 %r14, %r13;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r14;
	.loc	1 36 112                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:36:112
	cvt.f32.f16 	%f12, %rs3;
	cvt.f32.f16 	%f13, %rs4;
	.loc	1 37 34                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:37:34
	add.s64 	%rd21, %rd13, %rd24;
	.loc	1 37 51                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:37:51
	// begin inline asm
	mov.u32 %r16, %r13;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r16;
	.loc	1 37 112                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:37:112
	cvt.f32.f16 	%f14, %rs5;
	cvt.f32.f16 	%f15, %rs6;
	mov.pred 	%p4, -1;
	.loc	1 38 41                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:38:41
	// begin inline asm
	mov.u32 %r18, %r13;
	@%p4 ld.global.L1::evict_last.b32 { %r18 }, [ %rd37 + 0 ];
	// end inline asm
	mov.b32 	{%rs7, %rs8}, %r18;
	.loc	1 38 94                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:38:94
	cvt.f32.f16 	%f16, %rs7;
	cvt.f32.f16 	%f17, %rs8;
	.loc	1 39 34                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:39:34
	add.s64 	%rd23, %rd14, %rd24;
	.loc	1 39 51                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:39:51
	// begin inline asm
	mov.u32 %r20, %r13;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r20;
	.loc	1 39 112                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:39:112
	cvt.f32.f16 	%f18, %rs9;
	cvt.f32.f16 	%f19, %rs10;
	.loc	1 40 22                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:40:22
	add.f32 	%f20, %f10, %f12;
	add.f32 	%f21, %f11, %f13;
	.loc	1 41 22                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:41:22
	add.f32 	%f22, %f20, %f14;
	add.f32 	%f23, %f21, %f15;
	.loc	1 42 22                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:42:22
	mul.f32 	%f24, %f22, %f16;
	mul.f32 	%f25, %f23, %f17;
	.loc	1 47 25                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:47:25
	fma.rn.f32 	%f26, %f24, %f18, %f63;
	fma.rn.f32 	%f27, %f25, %f19, %f64;
	.loc	1 48 50                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:48:50
	selp.f32 	%f63, %f26, %f63, %p1;
	selp.f32 	%f64, %f27, %f64, %p1;
	.loc	1 29 40                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:29:40
	add.s64 	%rd37, %rd37, 16;
	setp.lt.u64 	%p6, %rd38, 4088;
	@%p6 bra 	$L__BB0_1;
// %bb.2:
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f63, %f64;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r26, %f28;
	shfl.sync.bfly.b32	%r27, %r26, 2, 31, -1;
	mov.b32 	%f29, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r28, %f30;
	shfl.sync.bfly.b32	%r29, %r28, 1, 31, -1;
	mov.b32 	%f31, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
$L__tmp2:
	.loc	1 50 31                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:50:31
	mul.wide.s32 	%rd28, %r1, 4;
	add.s64 	%rd25, %rd15, %rd28;
	.loc	1 50 36                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:50:36
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd25 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r25;
	.loc	1 69 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:69:24
	mul.f32 	%f33, %f32, 0fBF000000;
	.loc	1 70 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:70:24
	mul.f32 	%f34, %f5, %f5;
	.loc	1 71 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:71:24
	mul.f32 	%f35, %f34, %f5;
	.loc	1 72 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:72:24
	mul.f32 	%f36, %f33, %f35;
	.loc	1 74 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:74:24
	mul.f32 	%f7, %f36, 0f39800000;
	mov.b64 	%rd40, -8;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 24                          // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:0:24
	add.s64 	%rd40, %rd40, 8;
	cvt.u32.u64 	%r43, %rd40;
	or.b32  	%r44, %r2, %r43;
	.loc	1 57 39                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:57:39
	mul.wide.s32 	%rd36, %r44, 2;
	add.s64 	%rd29, %rd10, %rd36;
	mov.b32 	%r31, 0;
	.loc	1 57 56                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:57:56
	// begin inline asm
	mov.u32 %r30, %r31;
	@%p1 ld.global.L1::evict_first.b32 { %r30 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 58 35                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:58:35
	add.s64 	%rd30, %rd11, %rd36;
	.loc	1 58 52                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:58:52
	// begin inline asm
	mov.u32 %r32, %r31;
	@%p1 ld.global.L1::evict_first.b32 { %r32 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 59 35                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:59:35
	add.s64 	%rd31, %rd12, %rd36;
	.loc	1 59 52                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:59:52
	// begin inline asm
	mov.u32 %r34, %r31;
	@%p1 ld.global.L1::evict_first.b32 { %r34 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 60 35                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:60:35
	add.s64 	%rd32, %rd13, %rd36;
	.loc	1 60 52                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:60:52
	// begin inline asm
	mov.u32 %r36, %r31;
	@%p1 ld.global.L1::evict_first.b32 { %r36 }, [ %rd32 + 0 ];
	// end inline asm
	mov.pred 	%p13, -1;
	.loc	1 61 42                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:61:42
	// begin inline asm
	mov.u32 %r38, %r31;
	@%p13 ld.global.L1::evict_last.b32 { %r38 }, [ %rd39 + 0 ];
	// end inline asm
	.loc	1 62 35                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:62:35
	add.s64 	%rd34, %rd14, %rd36;
	.loc	1 62 52                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:62:52
	// begin inline asm
	mov.u32 %r40, %r31;
	@%p1 ld.global.L1::evict_first.b32 { %r40 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 57 118                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:57:118
	mov.b32 	{%rs11, %rs12}, %r30;
	cvt.f32.f16 	%f37, %rs12;
	cvt.f32.f16 	%f38, %rs11;
	.loc	1 58 114                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:58:114
	mov.b32 	{%rs13, %rs14}, %r32;
	cvt.f32.f16 	%f39, %rs14;
	cvt.f32.f16 	%f40, %rs13;
	.loc	1 59 114                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:59:114
	mov.b32 	{%rs15, %rs16}, %r34;
	cvt.f32.f16 	%f41, %rs16;
	cvt.f32.f16 	%f42, %rs15;
	.loc	1 60 114                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:60:114
	mov.b32 	{%rs17, %rs18}, %r36;
	cvt.f32.f16 	%f43, %rs17;
	cvt.f32.f16 	%f44, %rs18;
	.loc	1 61 95                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:61:95
	mov.b32 	{%rs19, %rs20}, %r38;
	cvt.f32.f16 	%f45, %rs20;
	cvt.f32.f16 	%f46, %rs19;
	.loc	1 62 114                        // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:62:114
	mov.b32 	{%rs21, %rs22}, %r40;
	cvt.f32.f16 	%f47, %rs21;
	cvt.f32.f16 	%f48, %rs22;
	.loc	1 63 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:63:24
	add.f32 	%f49, %f40, %f42;
	add.f32 	%f50, %f39, %f41;
	.loc	1 64 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:64:24
	add.f32 	%f51, %f50, %f44;
	add.f32 	%f52, %f49, %f43;
	.loc	1 65 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:65:24
	mul.f32 	%f53, %f52, %f46;
	mul.f32 	%f54, %f51, %f45;
	.loc	1 77 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:77:24
	add.f32 	%f55, %f48, %f48;
	add.f32 	%f56, %f47, %f47;
	.loc	1 78 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:78:24
	mul.f32 	%f57, %f7, %f56;
	mul.f32 	%f58, %f7, %f55;
	.loc	1 79 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:79:24
	fma.rn.f32 	%f59, %f54, %f5, %f58;
	fma.rn.f32 	%f60, %f53, %f5, %f57;
	.loc	1 81 24                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:81:24
	add.f32 	%f61, %f60, %f38;
	add.f32 	%f62, %f59, %f37;
	.loc	1 82 56                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:82:56
	cvt.rn.f16x2.f32 	%r42, %f62, %f61;
	// begin inline asm
	@%p1 st.global.b32 [ %rd29 + 0 ], { %r42 };
	// end inline asm
	.loc	1 51 40                         // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:51:40
	add.s64 	%rd39, %rd39, 16;
	setp.lt.u64 	%p16, %rd40, 4088;
	@%p16 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 51 4                          // ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py:51:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/a5/ca52bl5squdroeaanlxdwl3jwdjj2wexli2lmyaxagznldaazf2w.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 192                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 53
.b8 50
.b8 98
.b8 108
.b8 53
.b8 115
.b8 113
.b8 117
.b8 100
.b8 114
.b8 111
.b8 101
.b8 97
.b8 97
.b8 110
.b8 108
.b8 120
.b8 100
.b8 119
.b8 108
.b8 51
.b8 106
.b8 119
.b8 100
.b8 106
.b8 106
.b8 50
.b8 119
.b8 101
.b8 120
.b8 108
.b8 105
.b8 50
.b8 108
.b8 109
.b8 121
.b8 97
.b8 120
.b8 97
.b8 103
.b8 122
.b8 110
.b8 108
.b8 100
.b8 97
.b8 97
.b8 122
.b8 102
.b8 50
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x95:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
