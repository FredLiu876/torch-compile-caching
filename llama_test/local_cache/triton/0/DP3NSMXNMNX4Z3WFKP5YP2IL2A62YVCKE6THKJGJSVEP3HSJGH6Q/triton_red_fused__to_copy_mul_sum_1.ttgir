#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0)
#loc1 = loc(unknown)
#loc24 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":45:25)
#loc32 = loc(callsite(#loc1 at #loc24))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 2 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_mul_sum_1(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg5: i32 loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x4xi32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x4xf16, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc3)
    %3 = tt.splat %arg5 : i32 -> tensor<1x4xi32, #blocked> loc(#loc4)
    %4 = tt.splat %0 : i32 -> tensor<1x4xi32, #blocked> loc(#loc30)
    %5 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<1x4x!tt.ptr<f16>, #blocked> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<1x4x!tt.ptr<f16>, #blocked> loc(#loc8)
    %7 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc9)
    %8 = scf.for %arg6 = %c0_i32 to %arg5 step %c4_i32 iter_args(%arg7 = %cst) -> (tensor<1x4xf32, #blocked>)  : i32 {
      %15 = tt.splat %arg6 : i32 -> tensor<1x4xi32, #blocked> loc(#loc11)
      %16 = arith.addi %15, %2 : tensor<1x4xi32, #blocked> loc(#loc11)
      %17 = arith.cmpi slt, %16, %3 : tensor<1x4xi32, #blocked> loc(#loc4)
      %18 = arith.muli %16, %cst_0 : tensor<1x4xi32, #blocked> loc(#loc12)
      %19 = arith.addi %4, %18 : tensor<1x4xi32, #blocked> loc(#loc5)
      %20 = tt.addptr %5, %19 : tensor<1x4x!tt.ptr<f16>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc7)
      %21 = tt.load %20, %17, %cst_1 evictionPolicy = evict_first : tensor<1x4x!tt.ptr<f16>, #blocked> loc(#loc13)
      %22 = arith.extf %21 : tensor<1x4xf16, #blocked> to tensor<1x4xf32, #blocked> loc(#loc14)
      %23 = tt.addptr %6, %19 : tensor<1x4x!tt.ptr<f16>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc8)
      %24 = tt.load %23, %17, %cst_1 evictionPolicy = evict_first : tensor<1x4x!tt.ptr<f16>, #blocked> loc(#loc15)
      %25 = arith.extf %24 : tensor<1x4xf16, #blocked> to tensor<1x4xf32, #blocked> loc(#loc16)
      %26 = tt.addptr %7, %16 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc9)
      %27 = tt.load %26, %17, %cst evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc17)
      %28 = arith.mulf %25, %27 : tensor<1x4xf32, #blocked> loc(#loc18)
      %29 = arith.mulf %22, %28 : tensor<1x4xf32, #blocked> loc(#loc19)
      %30 = arith.addf %arg7, %29 : tensor<1x4xf32, #blocked> loc(#loc20)
      %31 = arith.select %17, %30, %arg7 : tensor<1x4xi1, #blocked>, tensor<1x4xf32, #blocked> loc(#loc21)
      scf.yield %31 : tensor<1x4xf32, #blocked> loc(#loc22)
    } loc(#loc10)
    %9 = "tt.reduce"(%8) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc24)), %arg7: f32 loc(callsite(#loc1 at #loc24))):
      %15 = arith.addf %arg6, %arg7 : f32 loc(#loc34)
      tt.reduce.return %15 : f32 loc(#loc31)
    }) : (tensor<1x4xf32, #blocked>) -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc31)
    %10 = ttg.convert_layout %9 : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc26)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1xf32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc27)
    %12 = tt.addptr %arg3, %0 : !tt.ptr<f16>, i32 loc(#loc28)
    %13 = arith.truncf %11 : tensor<1x1xf32, #blocked1> to tensor<1x1xf16, #blocked1> loc(#loc26)
    %14 = tt.splat %12 : !tt.ptr<f16> -> tensor<1x1x!tt.ptr<f16>, #blocked1> loc(#loc26)
    tt.store %14, %13 : tensor<1x1x!tt.ptr<f16>, #blocked1> loc(#loc26)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":22:28)
#loc3 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":25:37)
#loc4 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":31:29)
#loc5 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:39)
#loc6 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":23:23)
#loc7 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:34)
#loc8 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":36:34)
#loc9 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":37:34)
#loc10 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":29:40)
#loc11 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":30:31)
#loc12 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:44)
#loc13 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:51)
#loc14 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:105)
#loc15 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":36:51)
#loc16 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":36:105)
#loc17 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":37:41)
#loc18 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":39:22)
#loc19 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":41:22)
#loc20 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":43:23)
#loc21 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":44:40)
#loc22 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":44:8)
#loc23 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":286:36)
#loc25 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":46:36)
#loc27 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":45:28)
#loc28 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":46:25)
#loc29 = loc("./local_cache/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":46:4)
#loc30 = loc(fused[#loc5, #loc6])
#loc31 = loc(callsite(#loc23 at #loc24))
#loc33 = loc(callsite(#loc25 at #loc23))
#loc34 = loc(callsite(#loc33 at #loc24))
