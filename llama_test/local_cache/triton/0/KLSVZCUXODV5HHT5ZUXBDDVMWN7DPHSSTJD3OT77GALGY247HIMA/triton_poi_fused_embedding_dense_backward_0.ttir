#loc = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":18:0)
module {
  tt.func public @triton_poi_fused_embedding_dense_backward_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":18:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc6)
    tt.store %6, %cst : tensor<512x!tt.ptr<f32>> loc(#loc7)
    tt.return loc(#loc8)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":20:28)
#loc3 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":20:33)
#loc4 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":21:36)
#loc5 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":21:23)
#loc6 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":25:25)
#loc7 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":25:36)
#loc8 = loc("./local_cache/f7/cf75wfhrx4hlqtiaol5uh7c6pfejp3sdfx5gwjbthqbpdlmpt6mi.py":25:4)
