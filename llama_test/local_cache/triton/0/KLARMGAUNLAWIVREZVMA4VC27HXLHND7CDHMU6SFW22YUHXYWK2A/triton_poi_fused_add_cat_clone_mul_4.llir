; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_add_cat_clone_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 7, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 1, !dbg !11
  %11 = and i32 %10, 126, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = or disjoint i32 %12, 1, !dbg !12
  %14 = sdiv i32 %12, 128, !dbg !13
  %15 = mul i32 %14, 128, !dbg !14
  %.decomposed = sub i32 %12, %15, !dbg !14
  %16 = srem i32 %13, 128, !dbg !14
  %17 = sdiv i32 %12, 4096, !dbg !15
  %18 = sext i32 %12 to i64, !dbg !16
  %19 = getelementptr half, ptr addrspace(1) %0, i64 %18, !dbg !16
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %19) #4, !dbg !17
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !18
  %21 = srem i8 %.lhs.trunc, 64, !dbg !18
  %.sext = sext i8 %21 to i32, !dbg !18
  %.lhs.trunc164 = trunc nsw i32 %16 to i8, !dbg !18
  %22 = srem i8 %.lhs.trunc164, 64, !dbg !18
  %.sext165 = sext i8 %22 to i32, !dbg !18
  %23 = mul i32 %3, %.sext, !dbg !19
  %24 = mul i32 %3, %.sext165, !dbg !19
  %25 = add i32 %23, %17, !dbg !20
  %26 = add i32 %24, %17, !dbg !20
  %27 = sext i32 %25 to i64, !dbg !21
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !21
  %29 = sext i32 %26 to i64, !dbg !21
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %28) #4, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %30) #4, !dbg !22
  %34 = bitcast i32 %33 to float, !dbg !22
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !23
  %35 = fmul float %32, 0x3FE45F3060000000, !dbg !23
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i57 = icmp eq i32 %36, 0, !dbg !23
  %37 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %35) #4, !dbg !23
  %38 = tail call i32 @llvm.nvvm.f2i.rn(float %35) #4, !dbg !23
  %.01.i58 = select i1 %.not.i57, i32 %38, i32 %37, !dbg !23
  %39 = sitofp i32 %.01.i58 to float, !dbg !23
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i59 = icmp eq i32 %40, 0, !dbg !23
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0xBFF921FB40000000, float %32) #4, !dbg !23
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0xBFF921FB40000000, float %32) #4, !dbg !23
  %.02.i60 = select i1 %.not15.i59, float %42, float %41, !dbg !23
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i61 = icmp eq i32 %43, 0, !dbg !23
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !23
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !23
  %.03.i62 = select i1 %.not16.i61, float %45, float %44, !dbg !23
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i63 = icmp eq i32 %46, 0, !dbg !23
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !23
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !23
  %.04.i64 = select i1 %.not17.i63, float %48, float %47, !dbg !23
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i65 = icmp eq i32 %49, 0, !dbg !23
  %50 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #4, !dbg !23
  %51 = tail call float @llvm.nvvm.fabs.f(float %32) #4, !dbg !23
  %.06.i66 = select i1 %.not18.i65, float %51, float %50, !dbg !23
  %52 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !23
  br i1 %52, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !23

__nv_isinff.exit.i.i.i67:                         ; preds = %6
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i68 = icmp eq i32 %53, 0, !dbg !23
  %.07.i69 = select i1 %.not19.i68, float %51, float %50, !dbg !23
  %54 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !23
  br i1 %54, label %__nv_fmul_rn.exit.i.i.i106, label %58, !dbg !23

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i107 = icmp eq i32 %55, 0, !dbg !23
  %56 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %32, float 0.000000e+00) #4, !dbg !23
  %57 = tail call float @llvm.nvvm.mul.rn.f(float %32, float 0.000000e+00) #4, !dbg !23
  %.08.i108 = select i1 %.not27.i107, float %57, float %56, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !23

58:                                               ; preds = %__nv_isinff.exit.i.i.i67
  %59 = lshr i32 %31, 23, !dbg !23
  %60 = and i32 %59, 224, !dbg !23
  %61 = add nsw i32 %60, -128, !dbg !23
  %62 = shl i32 %31, 8, !dbg !23
  %63 = or i32 %62, -2147483648, !dbg !23
  %64 = lshr exact i32 %61, 5, !dbg !23
  br label %65, !dbg !23

65:                                               ; preds = %58, %65
  %indvars.iv = phi i64 [ 0, %58 ], [ %indvars.iv.next, %65 ]
  %hi.i.i.i.0.i70166 = phi i32 [ 0, %58 ], [ %70, %65 ]
  %66 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !23
  %67 = load i32, ptr addrspace(1) %66, align 4, !dbg !23
  %68 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %67, i32 %63, i32 %hi.i.i.i.0.i70166) #5, !dbg !23, !srcloc !24
  %69 = extractvalue { i32, i32 } %68, 0, !dbg !23
  %70 = extractvalue { i32, i32 } %68, 1, !dbg !23
  %71 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv, !dbg !23
  store i32 %69, ptr %71, align 4, !dbg !23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !23
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !23
  br i1 %exitcond.not, label %72, label %65, !dbg !23, !llvm.loop !25

72:                                               ; preds = %65
  %73 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !23
  store i32 %70, ptr %73, align 4, !dbg !23
  %74 = sub nsw i32 6, %64, !dbg !23
  %75 = sext i32 %74 to i64, !dbg !23
  %76 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %75, !dbg !23
  %77 = load i32, ptr %76, align 4, !dbg !23
  %78 = sub nsw i32 5, %64, !dbg !23
  %79 = sext i32 %78 to i64, !dbg !23
  %80 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %79, !dbg !23
  %81 = load i32, ptr %80, align 4, !dbg !23
  %82 = freeze i32 %81, !dbg !23
  %83 = and i32 %31, 260046848, !dbg !23
  %.not20.i72 = icmp eq i32 %83, 0, !dbg !23
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %84, !dbg !23

84:                                               ; preds = %72
  %85 = sub nsw i32 4, %64, !dbg !23
  %86 = sext i32 %85 to i64, !dbg !23
  %87 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %86, !dbg !23
  %88 = load i32, ptr %87, align 4, !dbg !23
  %89 = tail call i32 @llvm.fshl.i32(i32 %82, i32 %88, i32 %59), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %84, %72
  %lo.i.i.i.0.i75 = phi i32 [ %89, %84 ], [ %82, %72 ], !dbg !23
  %90 = tail call i32 @llvm.fshl.i32(i32 %77, i32 %82, i32 %59), !dbg !23
  %91 = lshr i32 %90, 30, !dbg !23
  %92 = tail call i32 @llvm.fshl.i32(i32 %90, i32 %lo.i.i.i.0.i75, i32 2), !dbg !23
  %93 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !23
  %94 = lshr i32 %92, 31, !dbg !23
  %95 = add nuw nsw i32 %94, %91, !dbg !23
  %96 = sub nsw i32 0, %95, !dbg !23
  %.not2123.i76 = icmp slt i32 %31, 0, !dbg !23
  %spec.select.i77 = select i1 %.not2123.i76, i32 %96, i32 %95, !dbg !23
  %97 = xor i32 %92, %31, !dbg !23
  %.lobit.i78 = ashr i32 %92, 31, !dbg !23
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %92, !dbg !23
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %93, !dbg !23
  %98 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !23
  %99 = shl nuw i64 %98, 32, !dbg !23
  %100 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !23
  %101 = or disjoint i64 %99, %100, !dbg !23
  %102 = sitofp i64 %101 to double, !dbg !23
  %103 = fmul double %102, 0x3BF921FB54442D19, !dbg !23
  %104 = fptrunc double %103 to float, !dbg !23
  %105 = fneg float %104, !dbg !23
  %.not2526.i82 = icmp slt i32 %97, 0, !dbg !23
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %105, float %104, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !23

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %6
  %i.i.1.i85 = phi i32 [ %.01.i58, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !23
  %t.i.i.1.i86 = phi float [ %.04.i64, %6 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !23
  %106 = add i32 %i.i.1.i85, 1, !dbg !23
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i87 = icmp eq i32 %107, 0, !dbg !23
  %108 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !23
  %109 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !23
  %.011.i88 = select i1 %.not28.i87, float %109, float %108, !dbg !23
  %110 = and i32 %i.i.1.i85, 1, !dbg !23
  %.not29.not.i = icmp eq i32 %110, 0, !dbg !23
  %111 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !23
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i89 = icmp eq i32 %112, 0, !dbg !23
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %111, float 0.000000e+00) #4, !dbg !23
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %111, float 0.000000e+00) #4, !dbg !23
  %.012.i90 = select i1 %.not30.i89, float %114, float %113, !dbg !23
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !23

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i104 = icmp eq i32 %115, 0, !dbg !23
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !23
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i105 = select i1 %.not31.i104, float %117, float %116, !dbg !23
  br label %__internal_fmad.exit2.i.i.i91, !dbg !23

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %118 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !23
  %119 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !23
  %120 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !23
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i92 = icmp eq i32 %121, 0, !dbg !23
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %120, float %.011.i88, float %119) #4, !dbg !23
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %120, float %.011.i88, float %119) #4, !dbg !23
  %.010.i93 = select i1 %.not32.i92, float %123, float %122, !dbg !23
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i94 = icmp eq i32 %124, 0, !dbg !23
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %118) #4, !dbg !23
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %118) #4, !dbg !23
  %.09.i95 = select i1 %.not33.i94, float %126, float %125, !dbg !23
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i96 = icmp eq i32 %127, 0, !dbg !23
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %111) #4, !dbg !23
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %111) #4, !dbg !23
  %.05.i97 = select i1 %.not34.i96, float %129, float %128, !dbg !23
  %130 = and i32 %106, 2, !dbg !23
  %.not35.i98 = icmp eq i32 %130, 0, !dbg !23
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !23

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i100 = icmp eq i32 %131, 0, !dbg !23
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i101 = select i1 %.not36.i100, float %133, float %132, !dbg !23
  br label %__nv_cosf.exit, !dbg !23

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !23
  %134 = fmul float %34, 0x3FE45F3060000000, !dbg !23
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i110 = icmp eq i32 %135, 0, !dbg !23
  %136 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %134) #4, !dbg !23
  %137 = tail call i32 @llvm.nvvm.f2i.rn(float %134) #4, !dbg !23
  %.01.i111 = select i1 %.not.i110, i32 %137, i32 %136, !dbg !23
  %138 = sitofp i32 %.01.i111 to float, !dbg !23
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i112 = icmp eq i32 %139, 0, !dbg !23
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0xBFF921FB40000000, float %34) #4, !dbg !23
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0xBFF921FB40000000, float %34) #4, !dbg !23
  %.02.i113 = select i1 %.not15.i112, float %141, float %140, !dbg !23
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i114 = icmp eq i32 %142, 0, !dbg !23
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !23
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !23
  %.03.i115 = select i1 %.not16.i114, float %144, float %143, !dbg !23
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i116 = icmp eq i32 %145, 0, !dbg !23
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !23
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !23
  %.04.i117 = select i1 %.not17.i116, float %147, float %146, !dbg !23
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i118 = icmp eq i32 %148, 0, !dbg !23
  %149 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #4, !dbg !23
  %150 = tail call float @llvm.nvvm.fabs.f(float %34) #4, !dbg !23
  %.06.i119 = select i1 %.not18.i118, float %150, float %149, !dbg !23
  %151 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !23
  br i1 %151, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !23

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i121 = icmp eq i32 %152, 0, !dbg !23
  %.07.i122 = select i1 %.not19.i121, float %150, float %149, !dbg !23
  %153 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !23
  br i1 %153, label %__nv_fmul_rn.exit.i.i.i160, label %157, !dbg !23

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i161 = icmp eq i32 %154, 0, !dbg !23
  %155 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %34, float 0.000000e+00) #4, !dbg !23
  %156 = tail call float @llvm.nvvm.mul.rn.f(float %34, float 0.000000e+00) #4, !dbg !23
  %.08.i162 = select i1 %.not27.i161, float %156, float %155, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !23

157:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %158 = lshr i32 %33, 23, !dbg !23
  %159 = and i32 %158, 224, !dbg !23
  %160 = add nsw i32 %159, -128, !dbg !23
  %161 = shl i32 %33, 8, !dbg !23
  %162 = or i32 %161, -2147483648, !dbg !23
  %163 = lshr exact i32 %160, 5, !dbg !23
  br label %164, !dbg !23

164:                                              ; preds = %157, %164
  %indvars.iv181 = phi i64 [ 0, %157 ], [ %indvars.iv.next182, %164 ]
  %hi.i.i.i.0.i123168 = phi i32 [ 0, %157 ], [ %169, %164 ]
  %165 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv181, !dbg !23
  %166 = load i32, ptr addrspace(1) %165, align 4, !dbg !23
  %167 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %166, i32 %162, i32 %hi.i.i.i.0.i123168) #5, !dbg !23, !srcloc !24
  %168 = extractvalue { i32, i32 } %167, 0, !dbg !23
  %169 = extractvalue { i32, i32 } %167, 1, !dbg !23
  %170 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv181, !dbg !23
  store i32 %168, ptr %170, align 4, !dbg !23
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !23
  %exitcond183.not = icmp eq i64 %indvars.iv.next182, 6, !dbg !23
  br i1 %exitcond183.not, label %171, label %164, !dbg !23, !llvm.loop !27

171:                                              ; preds = %164
  %172 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i109, i64 24, !dbg !23
  store i32 %169, ptr %172, align 4, !dbg !23
  %173 = sub nsw i32 6, %163, !dbg !23
  %174 = sext i32 %173 to i64, !dbg !23
  %175 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %174, !dbg !23
  %176 = load i32, ptr %175, align 4, !dbg !23
  %177 = sub nsw i32 5, %163, !dbg !23
  %178 = sext i32 %177 to i64, !dbg !23
  %179 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %178, !dbg !23
  %180 = load i32, ptr %179, align 4, !dbg !23
  %181 = freeze i32 %180, !dbg !23
  %182 = and i32 %33, 260046848, !dbg !23
  %.not20.i125 = icmp eq i32 %182, 0, !dbg !23
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %183, !dbg !23

183:                                              ; preds = %171
  %184 = sub nsw i32 4, %163, !dbg !23
  %185 = sext i32 %184 to i64, !dbg !23
  %186 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %185, !dbg !23
  %187 = load i32, ptr %186, align 4, !dbg !23
  %188 = tail call i32 @llvm.fshl.i32(i32 %181, i32 %187, i32 %158), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %183, %171
  %lo.i.i.i.0.i128 = phi i32 [ %188, %183 ], [ %181, %171 ], !dbg !23
  %189 = tail call i32 @llvm.fshl.i32(i32 %176, i32 %181, i32 %158), !dbg !23
  %190 = lshr i32 %189, 30, !dbg !23
  %191 = tail call i32 @llvm.fshl.i32(i32 %189, i32 %lo.i.i.i.0.i128, i32 2), !dbg !23
  %192 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !23
  %193 = lshr i32 %191, 31, !dbg !23
  %194 = add nuw nsw i32 %193, %190, !dbg !23
  %195 = sub nsw i32 0, %194, !dbg !23
  %.not2123.i129 = icmp slt i32 %33, 0, !dbg !23
  %spec.select.i130 = select i1 %.not2123.i129, i32 %195, i32 %194, !dbg !23
  %196 = xor i32 %191, %33, !dbg !23
  %.lobit.i131 = ashr i32 %191, 31, !dbg !23
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %191, !dbg !23
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %192, !dbg !23
  %197 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !23
  %198 = shl nuw i64 %197, 32, !dbg !23
  %199 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !23
  %200 = or disjoint i64 %198, %199, !dbg !23
  %201 = sitofp i64 %200 to double, !dbg !23
  %202 = fmul double %201, 0x3BF921FB54442D19, !dbg !23
  %203 = fptrunc double %202 to float, !dbg !23
  %204 = fneg float %203, !dbg !23
  %.not2526.i135 = icmp slt i32 %196, 0, !dbg !23
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %204, float %203, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !23

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !23
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !23
  %205 = add i32 %i.i.1.i138, 1, !dbg !23
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i140 = icmp eq i32 %206, 0, !dbg !23
  %207 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !23
  %208 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !23
  %.011.i141 = select i1 %.not28.i140, float %208, float %207, !dbg !23
  %209 = and i32 %i.i.1.i138, 1, !dbg !23
  %.not29.not.i142 = icmp eq i32 %209, 0, !dbg !23
  %210 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !23
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i143 = icmp eq i32 %211, 0, !dbg !23
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %210, float 0.000000e+00) #4, !dbg !23
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %210, float 0.000000e+00) #4, !dbg !23
  %.012.i144 = select i1 %.not30.i143, float %213, float %212, !dbg !23
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !23

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i158 = icmp eq i32 %214, 0, !dbg !23
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !23
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i159 = select i1 %.not31.i158, float %216, float %215, !dbg !23
  br label %__internal_fmad.exit2.i.i.i145, !dbg !23

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %217 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !23
  %218 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !23
  %219 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !23
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i146 = icmp eq i32 %220, 0, !dbg !23
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %219, float %.011.i141, float %218) #4, !dbg !23
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %219, float %.011.i141, float %218) #4, !dbg !23
  %.010.i147 = select i1 %.not32.i146, float %222, float %221, !dbg !23
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i148 = icmp eq i32 %223, 0, !dbg !23
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %217) #4, !dbg !23
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %217) #4, !dbg !23
  %.09.i149 = select i1 %.not33.i148, float %225, float %224, !dbg !23
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i150 = icmp eq i32 %226, 0, !dbg !23
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %210) #4, !dbg !23
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %210) #4, !dbg !23
  %.05.i151 = select i1 %.not34.i150, float %228, float %227, !dbg !23
  %229 = and i32 %205, 2, !dbg !23
  %.not35.i152 = icmp eq i32 %229, 0, !dbg !23
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !23

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i154 = icmp eq i32 %230, 0, !dbg !23
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i155 = select i1 %.not36.i154, float %232, float %231, !dbg !23
  br label %__nv_cosf.exit163, !dbg !23

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !23
  %233 = icmp slt i32 %.decomposed, 64, !dbg !28
  %234 = shl nsw i32 %14, 7, !dbg !29
  %235 = add nsw i32 %.decomposed, 64, !dbg !30
  %236 = add i32 %235, %234, !dbg !31
  %237 = sext i32 %236 to i64, !dbg !32
  %238 = getelementptr half, ptr addrspace(1) %0, i64 %237, !dbg !32
  %239 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %238, i1 %233) #4, !dbg !33
  %240 = icmp sgt i32 %.decomposed, 63, !dbg !34
  %241 = add nsw i32 %.decomposed, -64, !dbg !35
  %242 = add i32 %241, %234, !dbg !36
  %243 = sext i32 %242 to i64, !dbg !37
  %244 = getelementptr half, ptr addrspace(1) %0, i64 %243, !dbg !37
  %245 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %244, i1 %240) #4, !dbg !38
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !39
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i = icmp eq i32 %246, 0, !dbg !39
  %.01.i = select i1 %.not.i, i32 %38, i32 %37, !dbg !39
  %247 = sitofp i32 %.01.i to float, !dbg !39
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not15.i = icmp eq i32 %248, 0, !dbg !39
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float 0xBFF921FB40000000, float %32) #4, !dbg !39
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %247, float 0xBFF921FB40000000, float %32) #4, !dbg !39
  %.02.i = select i1 %.not15.i, float %250, float %249, !dbg !39
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not16.i = icmp eq i32 %251, 0, !dbg !39
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float 0xBE74442D00000000, float %.02.i) #4, !dbg !39
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %247, float 0xBE74442D00000000, float %.02.i) #4, !dbg !39
  %.03.i = select i1 %.not16.i, float %253, float %252, !dbg !39
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not17.i = icmp eq i32 %254, 0, !dbg !39
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !39
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %247, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !39
  %.04.i = select i1 %.not17.i, float %256, float %255, !dbg !39
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not18.i = icmp eq i32 %257, 0, !dbg !39
  %.06.i = select i1 %.not18.i, float %51, float %50, !dbg !39
  %258 = fcmp ult float %.06.i, 1.056150e+05, !dbg !39
  br i1 %258, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !39

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit163
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not19.i = icmp eq i32 %259, 0, !dbg !39
  %.07.i = select i1 %.not19.i, float %51, float %50, !dbg !39
  %260 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !39
  br i1 %260, label %__nv_fmul_rn.exit.i.i.i, label %264, !dbg !39

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not27.i = icmp eq i32 %261, 0, !dbg !39
  %262 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %32, float 0.000000e+00) #4, !dbg !39
  %263 = tail call float @llvm.nvvm.mul.rn.f(float %32, float 0.000000e+00) #4, !dbg !39
  %.08.i = select i1 %.not27.i, float %263, float %262, !dbg !39
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !39

264:                                              ; preds = %__nv_isinff.exit.i.i.i
  %265 = lshr i32 %31, 23, !dbg !39
  %266 = and i32 %265, 224, !dbg !39
  %267 = add nsw i32 %266, -128, !dbg !39
  %268 = shl i32 %31, 8, !dbg !39
  %269 = or i32 %268, -2147483648, !dbg !39
  %270 = lshr exact i32 %267, 5, !dbg !39
  br label %271, !dbg !39

271:                                              ; preds = %264, %271
  %indvars.iv184 = phi i64 [ 0, %264 ], [ %indvars.iv.next185, %271 ]
  %hi.i.i.i.0.i170 = phi i32 [ 0, %264 ], [ %276, %271 ]
  %272 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv184, !dbg !39
  %273 = load i32, ptr addrspace(1) %272, align 4, !dbg !39
  %274 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %273, i32 %269, i32 %hi.i.i.i.0.i170) #5, !dbg !39, !srcloc !24
  %275 = extractvalue { i32, i32 } %274, 0, !dbg !39
  %276 = extractvalue { i32, i32 } %274, 1, !dbg !39
  %277 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv184, !dbg !39
  store i32 %275, ptr %277, align 4, !dbg !39
  %indvars.iv.next185 = add nuw nsw i64 %indvars.iv184, 1, !dbg !39
  %exitcond186.not = icmp eq i64 %indvars.iv.next185, 6, !dbg !39
  br i1 %exitcond186.not, label %278, label %271, !dbg !39, !llvm.loop !40

278:                                              ; preds = %271
  %279 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !39
  store i32 %276, ptr %279, align 4, !dbg !39
  %280 = sub nsw i32 6, %270, !dbg !39
  %281 = sext i32 %280 to i64, !dbg !39
  %282 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %281, !dbg !39
  %283 = load i32, ptr %282, align 4, !dbg !39
  %284 = sub nsw i32 5, %270, !dbg !39
  %285 = sext i32 %284 to i64, !dbg !39
  %286 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %285, !dbg !39
  %287 = load i32, ptr %286, align 4, !dbg !39
  %288 = freeze i32 %287, !dbg !39
  %289 = and i32 %31, 260046848, !dbg !39
  %.not20.i = icmp eq i32 %289, 0, !dbg !39
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %290, !dbg !39

290:                                              ; preds = %278
  %291 = sub nsw i32 4, %270, !dbg !39
  %292 = sext i32 %291 to i64, !dbg !39
  %293 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %292, !dbg !39
  %294 = load i32, ptr %293, align 4, !dbg !39
  %295 = tail call i32 @llvm.fshl.i32(i32 %288, i32 %294, i32 %265), !dbg !39
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !39

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %290, %278
  %lo.i.i.i.0.i = phi i32 [ %295, %290 ], [ %288, %278 ], !dbg !39
  %296 = tail call i32 @llvm.fshl.i32(i32 %283, i32 %288, i32 %265), !dbg !39
  %297 = lshr i32 %296, 30, !dbg !39
  %298 = tail call i32 @llvm.fshl.i32(i32 %296, i32 %lo.i.i.i.0.i, i32 2), !dbg !39
  %299 = shl i32 %lo.i.i.i.0.i, 2, !dbg !39
  %300 = lshr i32 %298, 31, !dbg !39
  %301 = add nuw nsw i32 %300, %297, !dbg !39
  %302 = sub nsw i32 0, %301, !dbg !39
  %.not2123.i = icmp slt i32 %31, 0, !dbg !39
  %spec.select.i = select i1 %.not2123.i, i32 %302, i32 %301, !dbg !39
  %303 = xor i32 %298, %31, !dbg !39
  %.lobit.i = ashr i32 %298, 31, !dbg !39
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %298, !dbg !39
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %299, !dbg !39
  %304 = zext i32 %hi.i.i.i.2.i to i64, !dbg !39
  %305 = shl nuw i64 %304, 32, !dbg !39
  %306 = zext i32 %lo.i.i.i.1.i to i64, !dbg !39
  %307 = or disjoint i64 %305, %306, !dbg !39
  %308 = sitofp i64 %307 to double, !dbg !39
  %309 = fmul double %308, 0x3BF921FB54442D19, !dbg !39
  %310 = fptrunc double %309 to float, !dbg !39
  %311 = fneg float %310, !dbg !39
  %.not2526.i = icmp slt i32 %303, 0, !dbg !39
  %r.i.i.i.0.i = select i1 %.not2526.i, float %311, float %310, !dbg !39
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !39

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit163
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit163 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !39
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit163 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !39
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not28.i = icmp eq i32 %312, 0, !dbg !39
  %313 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !39
  %314 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !39
  %.011.i = select i1 %.not28.i, float %314, float %313, !dbg !39
  %315 = and i32 %i.i.1.i, 1, !dbg !39
  %.not29.i = icmp eq i32 %315, 0, !dbg !39
  %316 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !39
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not30.i = icmp eq i32 %317, 0, !dbg !39
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %316, float 0.000000e+00) #4, !dbg !39
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %316, float 0.000000e+00) #4, !dbg !39
  %.012.i = select i1 %.not30.i, float %319, float %318, !dbg !39
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !39

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not31.i = icmp eq i32 %320, 0, !dbg !39
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !39
  %322 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !39
  %.013.i = select i1 %.not31.i, float %322, float %321, !dbg !39
  br label %__internal_fmad.exit2.i.i.i, !dbg !39

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %323 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !39
  %324 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !39
  %325 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !39
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not32.i = icmp eq i32 %326, 0, !dbg !39
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %325, float %.011.i, float %324) #4, !dbg !39
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %325, float %.011.i, float %324) #4, !dbg !39
  %.010.i = select i1 %.not32.i, float %328, float %327, !dbg !39
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not33.i = icmp eq i32 %329, 0, !dbg !39
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %323) #4, !dbg !39
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %323) #4, !dbg !39
  %.09.i = select i1 %.not33.i, float %331, float %330, !dbg !39
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not34.i = icmp eq i32 %332, 0, !dbg !39
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %316) #4, !dbg !39
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %316) #4, !dbg !39
  %.05.i = select i1 %.not34.i, float %334, float %333, !dbg !39
  %335 = and i32 %i.i.1.i, 2, !dbg !39
  %.not35.i = icmp eq i32 %335, 0, !dbg !39
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !39

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not36.i = icmp eq i32 %336, 0, !dbg !39
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !39
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !39
  %.0.i = select i1 %.not36.i, float %338, float %337, !dbg !39
  br label %__nv_sinf.exit, !dbg !39

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !39
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !39
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !39
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i2 = icmp eq i32 %339, 0, !dbg !39
  %.01.i3 = select i1 %.not.i2, i32 %137, i32 %136, !dbg !39
  %340 = sitofp i32 %.01.i3 to float, !dbg !39
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not15.i4 = icmp eq i32 %341, 0, !dbg !39
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %340, float 0xBFF921FB40000000, float %34) #4, !dbg !39
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %340, float 0xBFF921FB40000000, float %34) #4, !dbg !39
  %.02.i5 = select i1 %.not15.i4, float %343, float %342, !dbg !39
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not16.i6 = icmp eq i32 %344, 0, !dbg !39
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %340, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !39
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %340, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !39
  %.03.i7 = select i1 %.not16.i6, float %346, float %345, !dbg !39
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not17.i8 = icmp eq i32 %347, 0, !dbg !39
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %340, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !39
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %340, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !39
  %.04.i9 = select i1 %.not17.i8, float %349, float %348, !dbg !39
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not18.i10 = icmp eq i32 %350, 0, !dbg !39
  %.06.i11 = select i1 %.not18.i10, float %150, float %149, !dbg !39
  %351 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !39
  br i1 %351, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !39

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not19.i13 = icmp eq i32 %352, 0, !dbg !39
  %.07.i14 = select i1 %.not19.i13, float %150, float %149, !dbg !39
  %353 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !39
  br i1 %353, label %__nv_fmul_rn.exit.i.i.i52, label %357, !dbg !39

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not27.i53 = icmp eq i32 %354, 0, !dbg !39
  %355 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %34, float 0.000000e+00) #4, !dbg !39
  %356 = tail call float @llvm.nvvm.mul.rn.f(float %34, float 0.000000e+00) #4, !dbg !39
  %.08.i54 = select i1 %.not27.i53, float %356, float %355, !dbg !39
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !39

357:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %358 = lshr i32 %33, 23, !dbg !39
  %359 = and i32 %358, 224, !dbg !39
  %360 = add nsw i32 %359, -128, !dbg !39
  %361 = shl i32 %33, 8, !dbg !39
  %362 = or i32 %361, -2147483648, !dbg !39
  %363 = lshr exact i32 %360, 5, !dbg !39
  br label %364, !dbg !39

364:                                              ; preds = %357, %364
  %indvars.iv187 = phi i64 [ 0, %357 ], [ %indvars.iv.next188, %364 ]
  %hi.i.i.i.0.i15172 = phi i32 [ 0, %357 ], [ %369, %364 ]
  %365 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv187, !dbg !39
  %366 = load i32, ptr addrspace(1) %365, align 4, !dbg !39
  %367 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %366, i32 %362, i32 %hi.i.i.i.0.i15172) #5, !dbg !39, !srcloc !24
  %368 = extractvalue { i32, i32 } %367, 0, !dbg !39
  %369 = extractvalue { i32, i32 } %367, 1, !dbg !39
  %370 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv187, !dbg !39
  store i32 %368, ptr %370, align 4, !dbg !39
  %indvars.iv.next188 = add nuw nsw i64 %indvars.iv187, 1, !dbg !39
  %exitcond189.not = icmp eq i64 %indvars.iv.next188, 6, !dbg !39
  br i1 %exitcond189.not, label %371, label %364, !dbg !39, !llvm.loop !41

371:                                              ; preds = %364
  %372 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !39
  store i32 %369, ptr %372, align 4, !dbg !39
  %373 = sub nsw i32 6, %363, !dbg !39
  %374 = sext i32 %373 to i64, !dbg !39
  %375 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %374, !dbg !39
  %376 = load i32, ptr %375, align 4, !dbg !39
  %377 = sub nsw i32 5, %363, !dbg !39
  %378 = sext i32 %377 to i64, !dbg !39
  %379 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %378, !dbg !39
  %380 = load i32, ptr %379, align 4, !dbg !39
  %381 = freeze i32 %380, !dbg !39
  %382 = and i32 %33, 260046848, !dbg !39
  %.not20.i17 = icmp eq i32 %382, 0, !dbg !39
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %383, !dbg !39

383:                                              ; preds = %371
  %384 = sub nsw i32 4, %363, !dbg !39
  %385 = sext i32 %384 to i64, !dbg !39
  %386 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %385, !dbg !39
  %387 = load i32, ptr %386, align 4, !dbg !39
  %388 = tail call i32 @llvm.fshl.i32(i32 %381, i32 %387, i32 %358), !dbg !39
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !39

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %383, %371
  %lo.i.i.i.0.i20 = phi i32 [ %388, %383 ], [ %381, %371 ], !dbg !39
  %389 = tail call i32 @llvm.fshl.i32(i32 %376, i32 %381, i32 %358), !dbg !39
  %390 = lshr i32 %389, 30, !dbg !39
  %391 = tail call i32 @llvm.fshl.i32(i32 %389, i32 %lo.i.i.i.0.i20, i32 2), !dbg !39
  %392 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !39
  %393 = lshr i32 %391, 31, !dbg !39
  %394 = add nuw nsw i32 %393, %390, !dbg !39
  %395 = sub nsw i32 0, %394, !dbg !39
  %.not2123.i21 = icmp slt i32 %33, 0, !dbg !39
  %spec.select.i22 = select i1 %.not2123.i21, i32 %395, i32 %394, !dbg !39
  %396 = xor i32 %391, %33, !dbg !39
  %.lobit.i23 = ashr i32 %391, 31, !dbg !39
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %391, !dbg !39
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %392, !dbg !39
  %397 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !39
  %398 = shl nuw i64 %397, 32, !dbg !39
  %399 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !39
  %400 = or disjoint i64 %398, %399, !dbg !39
  %401 = sitofp i64 %400 to double, !dbg !39
  %402 = fmul double %401, 0x3BF921FB54442D19, !dbg !39
  %403 = fptrunc double %402 to float, !dbg !39
  %404 = fneg float %403, !dbg !39
  %.not2526.i27 = icmp slt i32 %396, 0, !dbg !39
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %404, float %403, !dbg !39
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !39

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !39
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !39
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not28.i32 = icmp eq i32 %405, 0, !dbg !39
  %406 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !39
  %407 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !39
  %.011.i33 = select i1 %.not28.i32, float %407, float %406, !dbg !39
  %408 = and i32 %i.i.1.i30, 1, !dbg !39
  %.not29.i34 = icmp eq i32 %408, 0, !dbg !39
  %409 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !39
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not30.i35 = icmp eq i32 %410, 0, !dbg !39
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %409, float 0.000000e+00) #4, !dbg !39
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %409, float 0.000000e+00) #4, !dbg !39
  %.012.i36 = select i1 %.not30.i35, float %412, float %411, !dbg !39
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !39

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not31.i38 = icmp eq i32 %413, 0, !dbg !39
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !39
  %415 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !39
  %.013.i39 = select i1 %.not31.i38, float %415, float %414, !dbg !39
  br label %__internal_fmad.exit2.i.i.i40, !dbg !39

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %416 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !39
  %417 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !39
  %418 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !39
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not32.i41 = icmp eq i32 %419, 0, !dbg !39
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %418, float %.011.i33, float %417) #4, !dbg !39
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %418, float %.011.i33, float %417) #4, !dbg !39
  %.010.i42 = select i1 %.not32.i41, float %421, float %420, !dbg !39
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not33.i43 = icmp eq i32 %422, 0, !dbg !39
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %416) #4, !dbg !39
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %416) #4, !dbg !39
  %.09.i44 = select i1 %.not33.i43, float %424, float %423, !dbg !39
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not34.i45 = icmp eq i32 %425, 0, !dbg !39
  %426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %409) #4, !dbg !39
  %427 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %409) #4, !dbg !39
  %.05.i46 = select i1 %.not34.i45, float %427, float %426, !dbg !39
  %428 = and i32 %i.i.1.i30, 2, !dbg !39
  %.not35.i47 = icmp eq i32 %428, 0, !dbg !39
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !39

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not36.i49 = icmp eq i32 %429, 0, !dbg !39
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !39
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !39
  %.0.i50 = select i1 %.not36.i49, float %431, float %430, !dbg !39
  br label %__nv_sinf.exit55, !dbg !39

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !39
  %432 = bitcast i32 %239 to <2 x half>, !dbg !33
  %433 = bitcast i32 %245 to <2 x half>, !dbg !38
  %434 = bitcast i32 %20 to <2 x half>, !dbg !17
  %435 = srem i32 %14, 32, !dbg !42
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !39
  %436 = mul i32 %435, %3, !dbg !43
  %reass.add = add i32 %436, %17
  %reass.mul = shl i32 %reass.add, 7
  %437 = add i32 %reass.mul, %.decomposed, !dbg !44
  %438 = sext i32 %437 to i64, !dbg !45
  %439 = getelementptr half, ptr addrspace(1) %2, i64 %438, !dbg !45
  %440 = fpext <2 x half> %432 to <2 x float>, !dbg !46
  %441 = fsub <2 x float> zeroinitializer, %440, !dbg !47
  %442 = fpext <2 x half> %433 to <2 x float>, !dbg !48
  %443 = insertelement <2 x i1> poison, i1 %233, i64 0, !dbg !49
  %444 = shufflevector <2 x i1> %443, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !49
  %445 = select <2 x i1> %444, <2 x float> %441, <2 x float> %442, !dbg !49
  %446 = fpext <2 x half> %434 to <2 x float>, !dbg !50
  %447 = insertelement <2 x float> poison, float %z.i.i.0.i102, i64 0, !dbg !51
  %448 = insertelement <2 x float> %447, float %z.i.i.0.i156, i64 1, !dbg !51
  %449 = fmul <2 x float> %448, %446, !dbg !51
  %450 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !52
  %451 = insertelement <2 x float> %450, float %z.i.i.0.i51, i64 1, !dbg !52
  %452 = fmul <2 x float> %445, %451, !dbg !52
  %453 = fadd <2 x float> %449, %452, !dbg !53
  %454 = fptrunc <2 x float> %453 to <2 x half>, !dbg !54
  %455 = bitcast <2 x half> %454 to i32, !dbg !54
  tail call void asm sideeffect "st.global.b32 [ $1 + 0 ], { $0 };", "r,l"(i32 %455, ptr addrspace(1) %439) #4, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c74cu5piannu2kyts54gyevikcp25xbtpxgzzz6hmumgpkx3ahdw.py", directory: "./local_cache/74")
!4 = !{ptr @triton_poi_fused_add_cat_clone_mul_4, !"reqntidx", i32 64}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_clone_mul_4", linkageName: "triton_poi_fused_add_cat_clone_mul_4", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 19, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 24, column: 19, scope: !6)
!16 = !DILocation(line: 27, column: 30, scope: !6)
!17 = !DILocation(line: 27, column: 35, scope: !6)
!18 = !DILocation(line: 28, column: 46, scope: !6)
!19 = !DILocation(line: 28, column: 41, scope: !6)
!20 = !DILocation(line: 28, column: 35, scope: !6)
!21 = !DILocation(line: 28, column: 30, scope: !6)
!22 = !DILocation(line: 28, column: 53, scope: !6)
!23 = !DILocation(line: 29, column: 23, scope: !6)
!24 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.count", i32 1}
!27 = distinct !{!27, !26}
!28 = !DILocation(line: 38, column: 19, scope: !6)
!29 = !DILocation(line: 39, column: 40, scope: !6)
!30 = !DILocation(line: 39, column: 36, scope: !6)
!31 = !DILocation(line: 39, column: 46, scope: !6)
!32 = !DILocation(line: 39, column: 31, scope: !6)
!33 = !DILocation(line: 39, column: 52, scope: !6)
!34 = !DILocation(line: 43, column: 20, scope: !6)
!35 = !DILocation(line: 46, column: 49, scope: !6)
!36 = !DILocation(line: 46, column: 41, scope: !6)
!37 = !DILocation(line: 46, column: 31, scope: !6)
!38 = !DILocation(line: 46, column: 55, scope: !6)
!39 = !DILocation(line: 48, column: 24, scope: !6)
!40 = distinct !{!40, !26}
!41 = distinct !{!41, !26}
!42 = !DILocation(line: 26, column: 28, scope: !6)
!43 = !DILocation(line: 53, column: 47, scope: !6)
!44 = !DILocation(line: 53, column: 39, scope: !6)
!45 = !DILocation(line: 53, column: 25, scope: !6)
!46 = !DILocation(line: 39, column: 103, scope: !6)
!47 = !DILocation(line: 40, column: 13, scope: !6)
!48 = !DILocation(line: 46, column: 106, scope: !6)
!49 = !DILocation(line: 0, scope: !6)
!50 = !DILocation(line: 27, column: 44, scope: !6)
!51 = !DILocation(line: 33, column: 18, scope: !6)
!52 = !DILocation(line: 51, column: 20, scope: !6)
!53 = !DILocation(line: 52, column: 19, scope: !6)
!54 = !DILocation(line: 53, column: 59, scope: !6)
!55 = !DILocation(line: 53, column: 4, scope: !6)
