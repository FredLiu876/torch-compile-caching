//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_6,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<20>;
	.reg .b32 	%r<39>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<32>;
	.loc	1 18 0                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:18:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_4];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_3];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_2];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_1];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_0];
	ld.param.u32 	%r12, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_6];
$L__tmp0:
	.loc	1 22 28                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:22:28
	mov.u32 	%r13, %ctaid.x;
	.loc	1 22 33                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:22:33
	shl.b32 	%r14, %r13, 4;
	.loc	1 23 44                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 2, 4;
	and.b32  	%r3, %r1, 3;
	and.b32  	%r4, %r1, 15;
	.loc	1 23 23                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:23:23
	or.b32  	%r15, %r2, %r14;
	or.b32  	%r5, %r14, %r4;
	.loc	1 24 21                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:24:21
	setp.lt.s32 	%p19, %r15, %r12;
	.loc	1 35 46                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:46
	shl.b32 	%r17, %r15, 12;
	or.b32  	%r6, %r17, %r3;
	and.b32  	%r18, %r1, 192;
	setp.eq.s32 	%p3, %r18, 0;
	and.pred  	%p12, %p3, %p19;
	@%p19 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %.split.us.preheader
	.loc	1 0 46                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:0:46
	mov.f32 	%f33, 0f00000000;
	mov.b32 	%r37, -4;
$L__BB0_4:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:41
	add.s32 	%r37, %r37, 4;
	or.b32  	%r22, %r6, %r37;
	.loc	1 35 34                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:34
	mul.wide.s32 	%rd21, %r22, 2;
	add.s64 	%rd17, %rd8, %rd21;
	mov.b16 	%rs9, 0;
	mov.pred 	%p9, -1;
	.loc	1 35 51                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:51
	// begin inline asm
	mov.u16 %rs8, %rs9;
	@%p9 ld.global.L1::evict_first.b16 { %rs8 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 35 113                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:113
	cvt.f32.f16 	%f12, %rs8;
	.loc	1 36 34                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:36:34
	add.s64 	%rd18, %rd9, %rd21;
	.loc	1 36 51                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:36:51
	// begin inline asm
	mov.u16 %rs10, %rs9;
	@%p9 ld.global.L1::evict_first.b16 { %rs10 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 36 113                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:36:113
	cvt.f32.f16 	%f13, %rs10;
	.loc	1 37 38                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:37:38
	add.s64 	%rd19, %rd6, %rd21;
	.loc	1 37 55                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:37:55
	// begin inline asm
	mov.u16 %rs12, %rs9;
	@%p9 ld.global.L1::evict_first.b16 { %rs12 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 37 117                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:37:117
	cvt.f32.f16 	%f14, %rs12;
	.loc	1 38 22                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:38:22
	add.f32 	%f15, %f12, %f13;
	.loc	1 39 22                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:39:22
	add.f32 	%f16, %f15, %f14;
	.loc	1 43 23                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:43:23
	fma.rn.f32 	%f33, %f16, %f16, %f33;
	.loc	1 45 55                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:45:55
	cvt.rn.f16.f32 	%rs14, %f16;
	// begin inline asm
	@%p12 st.global.b16 [ %rd19 + 0 ], { %rs14 };
	// end inline asm
	.loc	1 29 40                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:29:40
	setp.lt.u32 	%p13, %r37, 4092;
	@%p13 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_5;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 40                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:0:40
	mov.b32 	%r38, -4;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:41
	add.s32 	%r38, %r38, 4;
	or.b32  	%r20, %r6, %r38;
	.loc	1 35 34                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:34
	mul.wide.s32 	%rd16, %r20, 2;
	add.s64 	%rd12, %rd8, %rd16;
	mov.b16 	%rs2, 0;
	mov.pred 	%p4, 0;
	.loc	1 35 51                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:51
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p4 ld.global.L1::evict_first.b16 { %rs1 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 35 113                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:35:113
	cvt.f32.f16 	%f6, %rs1;
	.loc	1 36 34                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:36:34
	add.s64 	%rd13, %rd9, %rd16;
	.loc	1 36 51                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:36:51
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p4 ld.global.L1::evict_first.b16 { %rs3 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 36 113                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:36:113
	cvt.f32.f16 	%f7, %rs3;
	.loc	1 37 38                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:37:38
	add.s64 	%rd14, %rd6, %rd16;
	.loc	1 37 55                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:37:55
	// begin inline asm
	mov.u16 %rs5, %rs2;
	@%p4 ld.global.L1::evict_first.b16 { %rs5 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 37 117                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:37:117
	cvt.f32.f16 	%f8, %rs5;
	.loc	1 38 22                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:38:22
	add.f32 	%f9, %f6, %f7;
	.loc	1 39 22                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:39:22
	add.f32 	%f10, %f9, %f8;
	.loc	1 45 55                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:45:55
	cvt.rn.f16.f32 	%rs7, %f10;
	// begin inline asm
	@%p12 st.global.b16 [ %rd14 + 0 ], { %rs7 };
	// end inline asm
	.loc	1 29 40                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:29:40
	setp.lt.u32 	%p8, %r38, 4092;
	mov.f32 	%f33, 0f00000000;
	@%p8 bra 	$L__BB0_2;
$L__BB0_5:                              // %.split7.us
	.loc	1 0 40                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:0:40
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_5];
	.loc	1 24 21                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:24:21
	setp.lt.s32 	%p16, %r5, %r12;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r26, %f33;
	shfl.sync.bfly.b32	%r27, %r26, 2, 31, -1;
	mov.b32 	%f17, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f33, %f17;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r28, %f18;
	shfl.sync.bfly.b32	%r29, %r28, 1, 31, -1;
	mov.b32 	%f19, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
$L__tmp2:
	.loc	1 46 28                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:46:28
	shl.b32 	%r30, %r2, 2;
	mov.u32 	%r31, global_smem;
	add.s32 	%r23, %r31, %r30;
	mov.b32 	%r24, %f20;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r32, %r4, 2;
	add.s32 	%r33, %r31, %r32;
	ld.shared.f32 	%f21, [%r33];
	mov.f32 	%f22, 0f45800000;
	.loc	1 48 20                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:48:20
	div.full.f32 	%f23, %f21, %f22;
	div.full.f32 	%f24, %f20, %f22;
	.loc	1 50 20                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:50:20
	add.f32 	%f25, %f23, 0f3727C5AC;
	add.f32 	%f26, %f24, 0f3727C5AC;
	.loc	1 51 28                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:51:28
	rsqrt.approx.ftz.f32 	%f27, %f25;
	rsqrt.approx.ftz.f32 	%f4, %f26;
	.loc	1 52 4                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:52:4
	bar.sync 	0;
	.loc	1 53 28                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:53:28
	mul.wide.s32 	%rd24, %r5, 4;
	add.s64 	%rd22, %rd7, %rd24;
	.loc	1 53 40                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:53:40
	and.b32  	%r34, %r1, 240;
	setp.eq.s32 	%p17, %r34, 0;
	mov.b32 	%r25, %f27;
	and.pred  	%p15, %p17, %p16;
	// begin inline asm
	@%p15 st.global.b32 [ %rd22 + 0 ], { %r25 };
	// end inline asm
	.loc	1 54 40                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:54:40
	mul.wide.u32 	%rd25, %r3, 2;
	add.s64 	%rd30, %rd10, %rd25;
	mov.b64 	%rd31, -4;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:0:40
	mov.b16 	%rs16, 0;
	.loc	1 60 42                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:60:42
	// begin inline asm
	mov.u16 %rs15, %rs16;
	@%p14 ld.global.L1::evict_last.b16 { %rs15 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 60 95                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:60:95
	cvt.f32.f16 	%f28, %rs15;
	add.s64 	%rd31, %rd31, 4;
	cvt.u32.u64 	%r35, %rd31;
	or.b32  	%r36, %r6, %r35;
	.loc	1 61 39                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:61:39
	mul.wide.s32 	%rd29, %r36, 2;
	add.s64 	%rd27, %rd6, %rd29;
	.loc	1 61 56                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:61:56
	// begin inline asm
	mov.u16 %rs17, %rs16;
	@%p19 ld.global.L1::evict_first.b16 { %rs17 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 61 118                        // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:61:118
	cvt.f32.f16 	%f29, %rs17;
	.loc	1 63 24                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:63:24
	mul.f32 	%f30, %f4, %f29;
	.loc	1 65 24                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:65:24
	mul.f32 	%f31, %f30, %f28;
	.loc	1 66 29                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:66:29
	add.s64 	%rd28, %rd11, %rd29;
	.loc	1 66 53                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:66:53
	cvt.rn.f16.f32 	%rs19, %f31;
	// begin inline asm
	@%p12 st.global.b16 [ %rd28 + 0 ], { %rs19 };
	// end inline asm
	.loc	1 54 40                         // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:54:40
	add.s64 	%rd30, %rd30, 8;
	setp.lt.u64 	%p21, %rd31, 4092;
	@%p21 bra 	$L__BB0_6;
// %bb.7:
	.loc	1 54 4                          // cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py:54:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/g3/cg3n6hvtx4do75kalztgulpaqncj5atzscma6f3lugjffmi36kyt.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 51
.b8 110
.b8 54
.b8 104
.b8 118
.b8 116
.b8 120
.b8 52
.b8 100
.b8 111
.b8 55
.b8 53
.b8 107
.b8 97
.b8 108
.b8 122
.b8 116
.b8 103
.b8 117
.b8 108
.b8 112
.b8 97
.b8 113
.b8 110
.b8 99
.b8 106
.b8 53
.b8 97
.b8 116
.b8 122
.b8 115
.b8 99
.b8 109
.b8 97
.b8 54
.b8 102
.b8 51
.b8 108
.b8 117
.b8 103
.b8 106
.b8 102
.b8 102
.b8 109
.b8 105
.b8 51
.b8 54
.b8 107
.b8 121
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
