//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 97, 115, 47, 99, 97, 115, 122, 51, 101, 112, 53, 100, 120, 114, 111, 100, 120, 110, 105, 54, 51, 102, 54, 102, 110, 115, 116, 106, 114, 110, 117, 114, 54, 108, 109, 54, 117, 101, 120, 98, 103, 103, 121, 108, 114, 101, 114, 111, 97, 51, 109, 110, 102, 103, 102, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<49>;
	.reg .b32 	%r<102>;
	.reg .f32 	%f<127>;
	.reg .b64 	%rd<55>;
	.loc	1 18 0                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:18:0

// %bb.0:
	ld.param.u32 	%r2, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd26, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:22:28
	mov.u32 	%r3, %ctaid.x;
	.loc	1 24 21                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:24:21
	setp.lt.s32 	%p1, %r3, %r2;
	.loc	1 28 30                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:28:30
	mul.wide.s32 	%rd27, %r3, 8;
	add.s64 	%rd9, %rd26, %rd27;
	.loc	1 28 35                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:28:35
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:37:22
	add.s64 	%rd28, %rd24, 128256;
	.loc	1 38 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:38:22
	setp.lt.s64 	%p10, %rd24, 0;
	.loc	1 39 36                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:39:36
	selp.b64 	%rd29, %rd28, %rd24, %p10;
	.loc	1 40 41                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:41
	setp.gt.u64 	%p11, %rd29, 128255;
	.loc	1 41 46                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:46
	and.pred  	%p12, %p1, %p11;
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	@%p12 bra 	$L__BB0_2;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:0:69
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	mov.u32 	%r1, %tid.x;
	cvt.s64.s32 	%rd1, %r3;
	cvt.u32.u64 	%r75, %rd1;
	.loc	1 24 21                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:24:21
	setp.lt.s32 	%p13, %r75, %r2;
	.loc	1 38 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:38:22
	setp.lt.s64 	%p27, %rd22, 0;
	.loc	1 41 46                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:46
	shl.b64 	%rd41, %rd22, 12;
	add.s64 	%rd42, %rd41, 525336576;
	selp.b64 	%rd43, %rd42, %rd41, %p27;
	shl.b64 	%rd44, %rd43, 1;
	add.s64 	%rd45, %rd4, %rd44;
	.loc	1 25 37                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:25:37
	shl.b32 	%r76, %r1, 3;
	and.b32  	%r77, %r76, 2040;
	.loc	1 47 41                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:41
	shl.b32 	%r78, %r75, 12;
	.loc	1 30 40                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:30:40
	or.b32  	%r79, %r77, %r78;
	.loc	1 25 37                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:25:37
	and.b32  	%r80, %r1, 31;
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:34
	mul.wide.u32 	%rd46, %r77, 2;
	add.s64 	%rd30, %rd45, %rd46;
	mov.b32 	%r8, 0;
	.loc	1 41 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:53
	// begin inline asm
	mov.u32 %r12, %r8;
	mov.u32 %r13, %r8;
	mov.u32 %r14, %r8;
	mov.u32 %r15, %r8;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r12;
	.loc	1 41 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:115
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	.loc	1 47 29                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:29
	mul.wide.s32 	%rd47, %r79, 2;
	add.s64 	%rd31, %rd6, %rd47;
	.loc	1 47 52                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:52
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd31 + 0 ], { %r12, %r13, %r14, %r15 };
	// end inline asm
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:34
	add.s64 	%rd32, %rd30, 4096;
	.loc	1 41 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:53
	// begin inline asm
	mov.u32 %r24, %r8;
	mov.u32 %r25, %r8;
	mov.u32 %r26, %r8;
	mov.u32 %r27, %r8;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r24;
	.loc	1 41 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:115
	cvt.f32.f16 	%f3, %rs3;
	cvt.f32.f16 	%f4, %rs4;
	.loc	1 43 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:43:22
	mul.f32 	%f5, %f3, %f3;
	mul.f32 	%f6, %f4, %f4;
	.loc	1 45 25                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:45:25
	fma.rn.f32 	%f7, %f1, %f1, %f5;
	fma.rn.f32 	%f8, %f2, %f2, %f6;
	.loc	1 41 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:115
	mov.b32 	{%rs5, %rs6}, %r13;
	cvt.f32.f16 	%f9, %rs5;
	cvt.f32.f16 	%f10, %rs6;
	mov.b32 	{%rs7, %rs8}, %r25;
	cvt.f32.f16 	%f11, %rs8;
	cvt.f32.f16 	%f12, %rs7;
	.loc	1 43 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:43:22
	mul.f32 	%f13, %f12, %f12;
	mul.f32 	%f14, %f11, %f11;
	.loc	1 45 25                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:45:25
	fma.rn.f32 	%f15, %f10, %f10, %f14;
	fma.rn.f32 	%f16, %f9, %f9, %f13;
	.loc	1 41 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:115
	mov.b32 	{%rs9, %rs10}, %r14;
	cvt.f32.f16 	%f17, %rs9;
	cvt.f32.f16 	%f18, %rs10;
	mov.b32 	{%rs11, %rs12}, %r26;
	cvt.f32.f16 	%f19, %rs12;
	cvt.f32.f16 	%f20, %rs11;
	.loc	1 43 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:43:22
	mul.f32 	%f21, %f20, %f20;
	mul.f32 	%f22, %f19, %f19;
	.loc	1 45 25                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:45:25
	fma.rn.f32 	%f23, %f18, %f18, %f22;
	fma.rn.f32 	%f24, %f17, %f17, %f21;
	.loc	1 41 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:41:115
	mov.b32 	{%rs13, %rs14}, %r15;
	cvt.f32.f16 	%f25, %rs13;
	cvt.f32.f16 	%f26, %rs14;
	mov.b32 	{%rs15, %rs16}, %r27;
	cvt.f32.f16 	%f27, %rs16;
	cvt.f32.f16 	%f28, %rs15;
	.loc	1 43 22                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:43:22
	mul.f32 	%f29, %f28, %f28;
	mul.f32 	%f30, %f27, %f27;
	.loc	1 45 25                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:45:25
	fma.rn.f32 	%f31, %f26, %f26, %f30;
	fma.rn.f32 	%f32, %f25, %f25, %f29;
	.loc	1 47 29                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:29
	add.s64 	%rd33, %rd31, 4096;
	.loc	1 47 52                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:47:52
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd33 + 0 ], { %r24, %r25, %r26, %r27 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f7, %f8;
	add.f32 	%f34, %f16, %f33;
	add.f32 	%f35, %f15, %f34;
	add.f32 	%f36, %f24, %f35;
	add.f32 	%f37, %f23, %f36;
	add.f32 	%f38, %f32, %f37;
	add.f32 	%f39, %f31, %f38;
	selp.f32 	%f40, %f39, 0f00000000, %p13;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r81, %f40;
	shfl.sync.bfly.b32	%r82, %r81, 16, 31, -1;
	mov.b32 	%f41, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r83, %f42;
	shfl.sync.bfly.b32	%r84, %r83, 8, 31, -1;
	mov.b32 	%f43, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r85, %f44;
	shfl.sync.bfly.b32	%r86, %r85, 4, 31, -1;
	mov.b32 	%f45, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r87, %f46;
	shfl.sync.bfly.b32	%r88, %r87, 2, 31, -1;
	mov.b32 	%f47, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f48;
	shfl.sync.bfly.b32	%r90, %r89, 1, 31, -1;
	mov.b32 	%f49, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p17, %r80, 0;
	shr.u32 	%r91, %r1, 3;
	and.b32  	%r92, %r91, 28;
	mov.u32 	%r93, global_smem;
	add.s32 	%r28, %r93, %r92;
	mov.b32 	%r29, %f50;
	// begin inline asm
	@%p17 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p18, %r1, 8;
	shl.b32 	%r94, %r1, 2;
	add.s32 	%r31, %r93, %r94;
	// begin inline asm
	@%p18 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r30;
	shfl.sync.bfly.b32	%r95, %r30, 4, 31, -1;
	mov.b32 	%f52, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r96, %f53;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f54, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r98, %f55;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f56, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r100, %r1, 7;
	setp.eq.s32 	%p28, %r100, 0;
	and.pred  	%p19, %p18, %p28;
	mov.b32 	%r33, %f57;
	// begin inline asm
	@%p19 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f58, [global_smem];
	mov.f32 	%f59, 0f45800000;
$L__tmp2:
	.loc	1 50 21                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:50:21
	div.full.f32 	%f60, %f58, %f59;
	.loc	1 52 20                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:52:20
	add.f32 	%f61, %f60, 0f3727C5AC;
	.loc	1 53 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:53:28
	rsqrt.approx.ftz.f32 	%f62, %f61;
	.loc	1 54 4                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:55:28
	shl.b64 	%rd48, %rd1, 2;
	add.s64 	%rd34, %rd3, %rd48;
	.loc	1 55 40                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:55:40
	and.b32  	%r101, %r1, 255;
	setp.eq.s32 	%p29, %r101, 0;
	mov.b32 	%r34, %f62;
	and.pred  	%p20, %p29, %p13;
	// begin inline asm
	@%p20 st.global.b32 [ %rd34 + 0 ], { %r34 };
	// end inline asm
	.loc	1 62 35                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:35
	add.s64 	%rd35, %rd5, %rd46;
	mov.pred 	%p21, -1;
	.loc	1 62 42                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:42
	// begin inline asm
	mov.u32 %r35, %r8;
	mov.u32 %r36, %r8;
	mov.u32 %r37, %r8;
	mov.u32 %r38, %r8;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 63 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:53
	// begin inline asm
	mov.u32 %r43, %r8;
	mov.u32 %r44, %r8;
	mov.u32 %r45, %r8;
	mov.u32 %r46, %r8;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 68 29                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:29
	add.s64 	%rd37, %rd7, %rd47;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs17, %rs18}, %r35;
	cvt.f32.f16 	%f63, %rs18;
	cvt.f32.f16 	%f64, %rs17;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs19, %rs20}, %r43;
	cvt.f32.f16 	%f65, %rs19;
	cvt.f32.f16 	%f66, %rs20;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f67, %f62, %f66;
	mul.f32 	%f68, %f62, %f65;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f69, %f68, %f64;
	mul.f32 	%f70, %f67, %f63;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r51, %f70, %f69;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs21, %rs22}, %r36;
	cvt.f32.f16 	%f71, %rs22;
	cvt.f32.f16 	%f72, %rs21;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs23, %rs24}, %r44;
	cvt.f32.f16 	%f73, %rs23;
	cvt.f32.f16 	%f74, %rs24;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f75, %f62, %f74;
	mul.f32 	%f76, %f62, %f73;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f77, %f76, %f72;
	mul.f32 	%f78, %f75, %f71;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r52, %f78, %f77;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs25, %rs26}, %r37;
	cvt.f32.f16 	%f79, %rs26;
	cvt.f32.f16 	%f80, %rs25;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs27, %rs28}, %r45;
	cvt.f32.f16 	%f81, %rs27;
	cvt.f32.f16 	%f82, %rs28;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f83, %f62, %f82;
	mul.f32 	%f84, %f62, %f81;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f85, %f84, %f80;
	mul.f32 	%f86, %f83, %f79;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r53, %f86, %f85;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs29, %rs30}, %r38;
	cvt.f32.f16 	%f87, %rs30;
	cvt.f32.f16 	%f88, %rs29;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs31, %rs32}, %r46;
	cvt.f32.f16 	%f89, %rs31;
	cvt.f32.f16 	%f90, %rs32;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f91, %f62, %f90;
	mul.f32 	%f92, %f62, %f89;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f93, %f92, %f88;
	mul.f32 	%f94, %f91, %f87;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r54, %f94, %f93;
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd37 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	.loc	1 62 35                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:35
	add.s64 	%rd38, %rd35, 4096;
	.loc	1 62 42                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:42
	// begin inline asm
	mov.u32 %r55, %r8;
	mov.u32 %r56, %r8;
	mov.u32 %r57, %r8;
	mov.u32 %r58, %r8;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd38 + 0 ];
	// end inline asm
	.loc	1 63 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:53
	// begin inline asm
	mov.u32 %r63, %r8;
	mov.u32 %r64, %r8;
	mov.u32 %r65, %r8;
	mov.u32 %r66, %r8;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 68 29                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:29
	add.s64 	%rd40, %rd37, 4096;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs33, %rs34}, %r55;
	cvt.f32.f16 	%f95, %rs34;
	cvt.f32.f16 	%f96, %rs33;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs35, %rs36}, %r63;
	cvt.f32.f16 	%f97, %rs35;
	cvt.f32.f16 	%f98, %rs36;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f99, %f62, %f98;
	mul.f32 	%f100, %f62, %f97;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f101, %f100, %f96;
	mul.f32 	%f102, %f99, %f95;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r71, %f102, %f101;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs37, %rs38}, %r56;
	cvt.f32.f16 	%f103, %rs38;
	cvt.f32.f16 	%f104, %rs37;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs39, %rs40}, %r64;
	cvt.f32.f16 	%f105, %rs39;
	cvt.f32.f16 	%f106, %rs40;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f107, %f62, %f106;
	mul.f32 	%f108, %f62, %f105;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f109, %f108, %f104;
	mul.f32 	%f110, %f107, %f103;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r72, %f110, %f109;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs41, %rs42}, %r57;
	cvt.f32.f16 	%f111, %rs42;
	cvt.f32.f16 	%f112, %rs41;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs43, %rs44}, %r65;
	cvt.f32.f16 	%f113, %rs43;
	cvt.f32.f16 	%f114, %rs44;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f115, %f62, %f114;
	mul.f32 	%f116, %f62, %f113;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f117, %f116, %f112;
	mul.f32 	%f118, %f115, %f111;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r73, %f118, %f117;
	.loc	1 62 95                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:62:95
	mov.b32 	{%rs45, %rs46}, %r58;
	cvt.f32.f16 	%f119, %rs46;
	cvt.f32.f16 	%f120, %rs45;
	.loc	1 63 115                        // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:63:115
	mov.b32 	{%rs47, %rs48}, %r66;
	cvt.f32.f16 	%f121, %rs47;
	cvt.f32.f16 	%f122, %rs48;
	.loc	1 65 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:65:24
	mul.f32 	%f123, %f62, %f122;
	mul.f32 	%f124, %f62, %f121;
	.loc	1 67 24                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:67:24
	mul.f32 	%f125, %f124, %f120;
	mul.f32 	%f126, %f123, %f119;
	.loc	1 68 53                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:68:53
	cvt.rn.f16x2.f32 	%r74, %f126, %f125;
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd40 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	.loc	1 56 4                          // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:56:4
	ret;
$L__BB0_2:
	.loc	1 40 69                         // casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py:40:69
	mov.u64 	%rd49, assertMessage_0;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, assertFile_0;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, assertFunc_0;
	cvta.global.u64 	%rd54, %rd53;
	{ // callseq 7, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd50;
	.param .b64 param1;
	st.param.b64 	[param1], %rd52;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd54;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 7
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/as/casz3ep5dxrodxni63f6fnstjrnur6lm6uexbggylreroa3mnfgf.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 115
.b8 122
.b8 51
.b8 101
.b8 112
.b8 53
.b8 100
.b8 120
.b8 114
.b8 111
.b8 100
.b8 120
.b8 110
.b8 105
.b8 54
.b8 51
.b8 102
.b8 54
.b8 102
.b8 110
.b8 115
.b8 116
.b8 106
.b8 114
.b8 110
.b8 117
.b8 114
.b8 54
.b8 108
.b8 109
.b8 54
.b8 117
.b8 101
.b8 120
.b8 98
.b8 103
.b8 103
.b8 121
.b8 108
.b8 114
.b8 101
.b8 114
.b8 111
.b8 97
.b8 51
.b8 109
.b8 110
.b8 102
.b8 103
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
