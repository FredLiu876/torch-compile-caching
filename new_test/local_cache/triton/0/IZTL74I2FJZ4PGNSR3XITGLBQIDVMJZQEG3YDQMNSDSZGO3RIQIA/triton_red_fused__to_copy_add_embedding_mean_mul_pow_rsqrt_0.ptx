//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 51, 107, 47, 99, 51, 107, 112, 51, 117, 105, 115, 111, 108, 113, 107, 120, 112, 107, 112, 52, 52, 121, 120, 116, 100, 52, 109, 52, 103, 109, 53, 116, 118, 122, 102, 103, 110, 98, 52, 112, 102, 122, 55, 114, 51, 55, 99, 118, 55, 108, 107, 109, 119, 104, 53, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<164>;
	.reg .f32 	%f<229>;
	.reg .b64 	%rd<71>;
	.loc	1 18 0                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:18:0

// %bb.0:
	ld.param.u32 	%r5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd26, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:22:28
	mov.u32 	%r6, %ctaid.x;
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p1, %r6, %r5;
	.loc	1 28 30                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:30
	mul.wide.s32 	%rd27, %r6, 8;
	add.s64 	%rd9, %rd26, %rd27;
	.loc	1 28 35                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:35
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:37:22
	add.s64 	%rd28, %rd24, 128256;
	.loc	1 38 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:38:22
	setp.lt.s64 	%p10, %rd24, 0;
	.loc	1 39 36                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:39:36
	selp.b64 	%rd29, %rd28, %rd24, %p10;
	.loc	1 40 41                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:41
	setp.gt.u64 	%p11, %rd29, 128255;
	.loc	1 41 46                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:46
	and.pred  	%p12, %p1, %p11;
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	@%p12 bra 	$L__BB0_2;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:0:69
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	mov.u32 	%r1, %tid.x;
	shl.b32 	%r7, %r1, 3;
	and.b32  	%r2, %r7, 1016;
	cvt.s64.s32 	%rd1, %r6;
	shl.b32 	%r3, %r6, 12;
	or.b32  	%r4, %r2, %r3;
	cvt.u32.u64 	%r143, %rd1;
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p13, %r143, %r5;
	.loc	1 38 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:38:22
	setp.lt.s64 	%p37, %rd22, 0;
	.loc	1 41 46                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:46
	shl.b64 	%rd51, %rd22, 12;
	add.s64 	%rd52, %rd51, 525336576;
	selp.b64 	%rd53, %rd52, %rd51, %p37;
	shl.b64 	%rd54, %rd53, 1;
	add.s64 	%rd55, %rd4, %rd54;
	.loc	1 25 37                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:25:37
	and.b32  	%r144, %r1, 31;
	.loc	1 30 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:30:40
	cvt.u64.u32 	%rd56, %r2;
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	mul.wide.u32 	%rd57, %r2, 2;
	add.s64 	%rd30, %rd55, %rd57;
	add.s64 	%rd31, %rd30, 2048;
	mov.b32 	%r12, 0;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r24, %r12;
	mov.u32 %r25, %r12;
	mov.u32 %r26, %r12;
	mov.u32 %r27, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r24;
	mov.b32 	{%rs3, %rs4}, %r25;
	mov.b32 	{%rs5, %rs6}, %r26;
	mov.b32 	{%rs7, %rs8}, %r27;
	// begin inline asm
	mov.u32 %r28, %r12;
	mov.u32 %r29, %r12;
	mov.u32 %r30, %r12;
	mov.u32 %r31, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r28;
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	cvt.f32.f16 	%f3, %rs3;
	cvt.f32.f16 	%f4, %rs4;
	cvt.f32.f16 	%f5, %rs5;
	cvt.f32.f16 	%f6, %rs6;
	cvt.f32.f16 	%f7, %rs7;
	cvt.f32.f16 	%f8, %rs8;
	cvt.f32.f16 	%f9, %rs9;
	cvt.f32.f16 	%f10, %rs10;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	mul.wide.s32 	%rd58, %r4, 2;
	add.s64 	%rd32, %rd6, %rd58;
	cvt.s64.s32 	%rd59, %r3;
	add.s64 	%rd60, %rd56, %rd59;
	shl.b64 	%rd61, %rd60, 1;
	add.s64 	%rd62, %rd6, %rd61;
	add.s64 	%rd33, %rd62, 2048;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd32 + 0 ], { %r24, %r25, %r26, %r27 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd33 + 0 ], { %r28, %r29, %r30, %r31 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd34, %rd30, 4096;
	add.s64 	%rd35, %rd30, 6144;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r48, %r12;
	mov.u32 %r49, %r12;
	mov.u32 %r50, %r12;
	mov.u32 %r51, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r48, %r49, %r50, %r51 }, [ %rd34 + 0 ];
	// end inline asm
	mov.b32 	{%rs11, %rs12}, %r48;
	mov.b32 	{%rs13, %rs14}, %r49;
	mov.b32 	{%rs15, %rs16}, %r50;
	mov.b32 	{%rs17, %rs18}, %r51;
	// begin inline asm
	mov.u32 %r52, %r12;
	mov.u32 %r53, %r12;
	mov.u32 %r54, %r12;
	mov.u32 %r55, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r52, %r53, %r54, %r55 }, [ %rd35 + 0 ];
	// end inline asm
	mov.b32 	{%rs19, %rs20}, %r52;
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	cvt.f32.f16 	%f11, %rs11;
	cvt.f32.f16 	%f12, %rs12;
	cvt.f32.f16 	%f13, %rs13;
	cvt.f32.f16 	%f14, %rs14;
	cvt.f32.f16 	%f15, %rs15;
	cvt.f32.f16 	%f16, %rs16;
	cvt.f32.f16 	%f17, %rs17;
	cvt.f32.f16 	%f18, %rs18;
	cvt.f32.f16 	%f19, %rs19;
	cvt.f32.f16 	%f20, %rs20;
	.loc	1 43 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:43:22
	mul.f32 	%f21, %f11, %f11;
	mul.f32 	%f22, %f12, %f12;
	mul.f32 	%f23, %f13, %f13;
	mul.f32 	%f24, %f14, %f14;
	mul.f32 	%f25, %f15, %f15;
	mul.f32 	%f26, %f16, %f16;
	mul.f32 	%f27, %f17, %f17;
	mul.f32 	%f28, %f18, %f18;
	mul.f32 	%f29, %f19, %f19;
	mul.f32 	%f30, %f20, %f20;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f31, %f1, %f1, %f21;
	fma.rn.f32 	%f32, %f2, %f2, %f22;
	fma.rn.f32 	%f33, %f3, %f3, %f23;
	fma.rn.f32 	%f34, %f4, %f4, %f24;
	fma.rn.f32 	%f35, %f5, %f5, %f25;
	fma.rn.f32 	%f36, %f6, %f6, %f26;
	fma.rn.f32 	%f37, %f7, %f7, %f27;
	fma.rn.f32 	%f38, %f8, %f8, %f28;
	fma.rn.f32 	%f39, %f9, %f9, %f29;
	fma.rn.f32 	%f40, %f10, %f10, %f30;
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs21, %rs22}, %r29;
	cvt.f32.f16 	%f41, %rs21;
	cvt.f32.f16 	%f42, %rs22;
	mov.b32 	{%rs23, %rs24}, %r53;
	cvt.f32.f16 	%f43, %rs24;
	cvt.f32.f16 	%f44, %rs23;
	.loc	1 43 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:43:22
	mul.f32 	%f45, %f44, %f44;
	mul.f32 	%f46, %f43, %f43;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f47, %f42, %f42, %f46;
	fma.rn.f32 	%f48, %f41, %f41, %f45;
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs25, %rs26}, %r30;
	cvt.f32.f16 	%f49, %rs25;
	cvt.f32.f16 	%f50, %rs26;
	mov.b32 	{%rs27, %rs28}, %r54;
	cvt.f32.f16 	%f51, %rs28;
	cvt.f32.f16 	%f52, %rs27;
	.loc	1 43 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:43:22
	mul.f32 	%f53, %f52, %f52;
	mul.f32 	%f54, %f51, %f51;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f55, %f50, %f50, %f54;
	fma.rn.f32 	%f56, %f49, %f49, %f53;
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs29, %rs30}, %r31;
	cvt.f32.f16 	%f57, %rs29;
	cvt.f32.f16 	%f58, %rs30;
	mov.b32 	{%rs31, %rs32}, %r55;
	cvt.f32.f16 	%f59, %rs32;
	cvt.f32.f16 	%f60, %rs31;
	.loc	1 43 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:43:22
	mul.f32 	%f61, %f60, %f60;
	mul.f32 	%f62, %f59, %f59;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f63, %f58, %f58, %f62;
	fma.rn.f32 	%f64, %f57, %f57, %f61;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd36, %rd32, 4096;
	add.s64 	%rd48, %rd62, 6144;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd36 + 0 ], { %r48, %r49, %r50, %r51 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd48 + 0 ], { %r52, %r53, %r54, %r55 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f31, %f32;
	add.f32 	%f66, %f33, %f65;
	add.f32 	%f67, %f34, %f66;
	add.f32 	%f68, %f35, %f67;
	add.f32 	%f69, %f36, %f68;
	add.f32 	%f70, %f37, %f69;
	add.f32 	%f71, %f38, %f70;
	add.f32 	%f72, %f39, %f71;
	add.f32 	%f73, %f40, %f72;
	add.f32 	%f74, %f48, %f73;
	add.f32 	%f75, %f47, %f74;
	add.f32 	%f76, %f56, %f75;
	add.f32 	%f77, %f55, %f76;
	add.f32 	%f78, %f64, %f77;
	add.f32 	%f79, %f63, %f78;
	selp.f32 	%f80, %f79, 0f00000000, %p13;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r145, %f80;
	shfl.sync.bfly.b32	%r146, %r145, 16, 31, -1;
	mov.b32 	%f81, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r147, %f82;
	shfl.sync.bfly.b32	%r148, %r147, 8, 31, -1;
	mov.b32 	%f83, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r149, %f84;
	shfl.sync.bfly.b32	%r150, %r149, 4, 31, -1;
	mov.b32 	%f85, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r151, %f86;
	shfl.sync.bfly.b32	%r152, %r151, 2, 31, -1;
	mov.b32 	%f87, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r153, %f88;
	shfl.sync.bfly.b32	%r154, %r153, 1, 31, -1;
	mov.b32 	%f89, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p21, %r144, 0;
	shr.u32 	%r155, %r1, 3;
	and.b32  	%r156, %r155, 12;
	mov.u32 	%r157, global_smem;
	add.s32 	%r56, %r157, %r156;
	mov.b32 	%r57, %f90;
	// begin inline asm
	@%p21 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r1, 4;
	shl.b32 	%r158, %r1, 2;
	add.s32 	%r59, %r157, %r158;
	// begin inline asm
	@%p22 ld.shared.b32 %r58, [ %r59 + 0 ];
	// end inline asm
	mov.b32 	%f91, %r58;
	shfl.sync.bfly.b32	%r159, %r58, 2, 31, -1;
	mov.b32 	%f92, %r159;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r160, %f93;
	shfl.sync.bfly.b32	%r161, %r160, 1, 31, -1;
	mov.b32 	%f94, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r162, %r1, 3;
	setp.eq.s32 	%p38, %r162, 0;
	and.pred  	%p23, %p22, %p38;
	mov.b32 	%r61, %f95;
	// begin inline asm
	@%p23 st.shared.b32 [ %r59 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f96, [global_smem];
	mov.f32 	%f97, 0f45800000;
$L__tmp2:
	.loc	1 50 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:50:21
	div.full.f32 	%f98, %f96, %f97;
	.loc	1 52 20                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:52:20
	add.f32 	%f99, %f98, 0f3727C5AC;
	.loc	1 53 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:53:28
	rsqrt.approx.ftz.f32 	%f100, %f99;
	.loc	1 54 4                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:55:28
	shl.b64 	%rd63, %rd1, 2;
	add.s64 	%rd38, %rd3, %rd63;
	.loc	1 55 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:55:40
	and.b32  	%r163, %r1, 127;
	setp.eq.s32 	%p39, %r163, 0;
	mov.b32 	%r62, %f100;
	and.pred  	%p24, %p39, %p13;
	// begin inline asm
	@%p24 st.global.b32 [ %rd38 + 0 ], { %r62 };
	// end inline asm
	.loc	1 62 35                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:35
	add.s64 	%rd39, %rd5, %rd57;
	add.s64 	%rd40, %rd39, 2048;
	mov.pred 	%p25, -1;
	.loc	1 62 42                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:42
	// begin inline asm
	mov.u32 %r63, %r12;
	mov.u32 %r64, %r12;
	mov.u32 %r65, %r12;
	mov.u32 %r66, %r12;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r71, %r12;
	mov.u32 %r72, %r12;
	mov.u32 %r73, %r12;
	mov.u32 %r74, %r12;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r71, %r72, %r73, %r74 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 63 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:53
	// begin inline asm
	mov.u32 %r79, %r12;
	mov.u32 %r80, %r12;
	mov.u32 %r81, %r12;
	mov.u32 %r82, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r79, %r80, %r81, %r82 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r87, %r12;
	mov.u32 %r88, %r12;
	mov.u32 %r89, %r12;
	mov.u32 %r90, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r87, %r88, %r89, %r90 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 68 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:29
	add.s64 	%rd43, %rd7, %rd58;
	add.s64 	%rd64, %rd7, %rd61;
	add.s64 	%rd44, %rd64, 2048;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs33, %rs34}, %r63;
	cvt.f32.f16 	%f101, %rs34;
	cvt.f32.f16 	%f102, %rs33;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs35, %rs36}, %r79;
	cvt.f32.f16 	%f103, %rs35;
	cvt.f32.f16 	%f104, %rs36;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f105, %f100, %f104;
	mul.f32 	%f106, %f100, %f103;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f107, %f106, %f102;
	mul.f32 	%f108, %f105, %f101;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r95, %f108, %f107;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs37, %rs38}, %r64;
	cvt.f32.f16 	%f109, %rs38;
	cvt.f32.f16 	%f110, %rs37;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs39, %rs40}, %r80;
	cvt.f32.f16 	%f111, %rs39;
	cvt.f32.f16 	%f112, %rs40;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f113, %f100, %f112;
	mul.f32 	%f114, %f100, %f111;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f115, %f114, %f110;
	mul.f32 	%f116, %f113, %f109;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r96, %f116, %f115;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs41, %rs42}, %r65;
	cvt.f32.f16 	%f117, %rs42;
	cvt.f32.f16 	%f118, %rs41;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs43, %rs44}, %r81;
	cvt.f32.f16 	%f119, %rs43;
	cvt.f32.f16 	%f120, %rs44;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f121, %f100, %f120;
	mul.f32 	%f122, %f100, %f119;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f123, %f122, %f118;
	mul.f32 	%f124, %f121, %f117;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r97, %f124, %f123;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs45, %rs46}, %r66;
	cvt.f32.f16 	%f125, %rs46;
	cvt.f32.f16 	%f126, %rs45;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs47, %rs48}, %r82;
	cvt.f32.f16 	%f127, %rs47;
	cvt.f32.f16 	%f128, %rs48;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f129, %f100, %f128;
	mul.f32 	%f130, %f100, %f127;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f131, %f130, %f126;
	mul.f32 	%f132, %f129, %f125;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r98, %f132, %f131;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs49, %rs50}, %r71;
	cvt.f32.f16 	%f133, %rs50;
	cvt.f32.f16 	%f134, %rs49;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs51, %rs52}, %r87;
	cvt.f32.f16 	%f135, %rs51;
	cvt.f32.f16 	%f136, %rs52;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f137, %f100, %f136;
	mul.f32 	%f138, %f100, %f135;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f139, %f138, %f134;
	mul.f32 	%f140, %f137, %f133;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r99, %f140, %f139;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs53, %rs54}, %r72;
	cvt.f32.f16 	%f141, %rs54;
	cvt.f32.f16 	%f142, %rs53;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs55, %rs56}, %r88;
	cvt.f32.f16 	%f143, %rs55;
	cvt.f32.f16 	%f144, %rs56;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f145, %f100, %f144;
	mul.f32 	%f146, %f100, %f143;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f147, %f146, %f142;
	mul.f32 	%f148, %f145, %f141;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r100, %f148, %f147;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs57, %rs58}, %r73;
	cvt.f32.f16 	%f149, %rs58;
	cvt.f32.f16 	%f150, %rs57;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs59, %rs60}, %r89;
	cvt.f32.f16 	%f151, %rs59;
	cvt.f32.f16 	%f152, %rs60;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f153, %f100, %f152;
	mul.f32 	%f154, %f100, %f151;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f155, %f154, %f150;
	mul.f32 	%f156, %f153, %f149;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r101, %f156, %f155;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs61, %rs62}, %r74;
	cvt.f32.f16 	%f157, %rs62;
	cvt.f32.f16 	%f158, %rs61;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs63, %rs64}, %r90;
	cvt.f32.f16 	%f159, %rs63;
	cvt.f32.f16 	%f160, %rs64;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f161, %f100, %f160;
	mul.f32 	%f162, %f100, %f159;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f163, %f162, %f158;
	mul.f32 	%f164, %f161, %f157;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r102, %f164, %f163;
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd43 + 0 ], { %r95, %r96, %r97, %r98 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd44 + 0 ], { %r99, %r100, %r101, %r102 };
	// end inline asm
	.loc	1 62 35                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:35
	add.s64 	%rd45, %rd39, 4096;
	add.s64 	%rd46, %rd39, 6144;
	.loc	1 62 42                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:42
	// begin inline asm
	mov.u32 %r103, %r12;
	mov.u32 %r104, %r12;
	mov.u32 %r105, %r12;
	mov.u32 %r106, %r12;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r103, %r104, %r105, %r106 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r111, %r12;
	mov.u32 %r112, %r12;
	mov.u32 %r113, %r12;
	mov.u32 %r114, %r12;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r111, %r112, %r113, %r114 }, [ %rd46 + 0 ];
	// end inline asm
	.loc	1 63 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:53
	// begin inline asm
	mov.u32 %r119, %r12;
	mov.u32 %r120, %r12;
	mov.u32 %r121, %r12;
	mov.u32 %r122, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r119, %r120, %r121, %r122 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r127, %r12;
	mov.u32 %r128, %r12;
	mov.u32 %r129, %r12;
	mov.u32 %r130, %r12;
	@%p13 ld.global.L1::evict_first.v4.b32 { %r127, %r128, %r129, %r130 }, [ %rd48 + 0 ];
	// end inline asm
	.loc	1 68 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:29
	add.s64 	%rd49, %rd43, 4096;
	add.s64 	%rd50, %rd64, 6144;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs65, %rs66}, %r103;
	cvt.f32.f16 	%f165, %rs66;
	cvt.f32.f16 	%f166, %rs65;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs67, %rs68}, %r119;
	cvt.f32.f16 	%f167, %rs67;
	cvt.f32.f16 	%f168, %rs68;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f169, %f100, %f168;
	mul.f32 	%f170, %f100, %f167;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f171, %f170, %f166;
	mul.f32 	%f172, %f169, %f165;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r135, %f172, %f171;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs69, %rs70}, %r104;
	cvt.f32.f16 	%f173, %rs70;
	cvt.f32.f16 	%f174, %rs69;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs71, %rs72}, %r120;
	cvt.f32.f16 	%f175, %rs71;
	cvt.f32.f16 	%f176, %rs72;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f177, %f100, %f176;
	mul.f32 	%f178, %f100, %f175;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f179, %f178, %f174;
	mul.f32 	%f180, %f177, %f173;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r136, %f180, %f179;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs73, %rs74}, %r105;
	cvt.f32.f16 	%f181, %rs74;
	cvt.f32.f16 	%f182, %rs73;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs75, %rs76}, %r121;
	cvt.f32.f16 	%f183, %rs75;
	cvt.f32.f16 	%f184, %rs76;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f185, %f100, %f184;
	mul.f32 	%f186, %f100, %f183;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f187, %f186, %f182;
	mul.f32 	%f188, %f185, %f181;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r137, %f188, %f187;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs77, %rs78}, %r106;
	cvt.f32.f16 	%f189, %rs78;
	cvt.f32.f16 	%f190, %rs77;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs79, %rs80}, %r122;
	cvt.f32.f16 	%f191, %rs79;
	cvt.f32.f16 	%f192, %rs80;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f193, %f100, %f192;
	mul.f32 	%f194, %f100, %f191;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f195, %f194, %f190;
	mul.f32 	%f196, %f193, %f189;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r138, %f196, %f195;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs81, %rs82}, %r111;
	cvt.f32.f16 	%f197, %rs82;
	cvt.f32.f16 	%f198, %rs81;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs83, %rs84}, %r127;
	cvt.f32.f16 	%f199, %rs83;
	cvt.f32.f16 	%f200, %rs84;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f201, %f100, %f200;
	mul.f32 	%f202, %f100, %f199;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f203, %f202, %f198;
	mul.f32 	%f204, %f201, %f197;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r139, %f204, %f203;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs85, %rs86}, %r112;
	cvt.f32.f16 	%f205, %rs86;
	cvt.f32.f16 	%f206, %rs85;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs87, %rs88}, %r128;
	cvt.f32.f16 	%f207, %rs87;
	cvt.f32.f16 	%f208, %rs88;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f209, %f100, %f208;
	mul.f32 	%f210, %f100, %f207;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f211, %f210, %f206;
	mul.f32 	%f212, %f209, %f205;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r140, %f212, %f211;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs89, %rs90}, %r113;
	cvt.f32.f16 	%f213, %rs90;
	cvt.f32.f16 	%f214, %rs89;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs91, %rs92}, %r129;
	cvt.f32.f16 	%f215, %rs91;
	cvt.f32.f16 	%f216, %rs92;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f217, %f100, %f216;
	mul.f32 	%f218, %f100, %f215;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f219, %f218, %f214;
	mul.f32 	%f220, %f217, %f213;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r141, %f220, %f219;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs93, %rs94}, %r114;
	cvt.f32.f16 	%f221, %rs94;
	cvt.f32.f16 	%f222, %rs93;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs95, %rs96}, %r130;
	cvt.f32.f16 	%f223, %rs95;
	cvt.f32.f16 	%f224, %rs96;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f225, %f100, %f224;
	mul.f32 	%f226, %f100, %f223;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f227, %f226, %f222;
	mul.f32 	%f228, %f225, %f221;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r142, %f228, %f227;
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd49 + 0 ], { %r135, %r136, %r137, %r138 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd50 + 0 ], { %r139, %r140, %r141, %r142 };
	// end inline asm
	.loc	1 56 4                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:4
	ret;
$L__BB0_2:
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	mov.u64 	%rd65, assertMessage_0;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, assertFile_0;
	cvta.global.u64 	%rd68, %rd67;
	mov.u64 	%rd69, assertFunc_0;
	cvta.global.u64 	%rd70, %rd69;
	{ // callseq 9, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd66;
	.param .b64 param1;
	st.param.b64 	[param1], %rd68;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd70;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 9
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/3k/c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 107
.b8 112
.b8 51
.b8 117
.b8 105
.b8 115
.b8 111
.b8 108
.b8 113
.b8 107
.b8 120
.b8 112
.b8 107
.b8 112
.b8 52
.b8 52
.b8 121
.b8 120
.b8 116
.b8 100
.b8 52
.b8 109
.b8 52
.b8 103
.b8 109
.b8 53
.b8 116
.b8 118
.b8 122
.b8 102
.b8 103
.b8 110
.b8 98
.b8 52
.b8 112
.b8 102
.b8 122
.b8 55
.b8 114
.b8 51
.b8 55
.b8 99
.b8 118
.b8 55
.b8 108
.b8 107
.b8 109
.b8 119
.b8 104
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 51
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
