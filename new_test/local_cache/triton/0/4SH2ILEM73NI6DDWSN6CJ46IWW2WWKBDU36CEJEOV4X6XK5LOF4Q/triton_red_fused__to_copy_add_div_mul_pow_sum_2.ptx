//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_div_mul_pow_sum_2 // -- Begin function triton_red_fused__to_copy_add_div_mul_pow_sum_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_div_mul_pow_sum_2
.visible .entry triton_red_fused__to_copy_add_div_mul_pow_sum_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_3,
	.param .u32 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_4,
	.param .u32 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<21>;
	.reg .b32 	%r<55>;
	.reg .f32 	%f<86>;
	.reg .b64 	%rd<35>;
	.loc	1 18 0                          // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:18:0

// %bb.0:
	ld.param.u32 	%r5, [triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_3];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_2];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_0];
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_div_mul_pow_sum_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:22:28
	mov.u32 	%r6, %ctaid.x;
	.loc	1 22 33                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:22:33
	shl.b32 	%r7, %r6, 2;
	.loc	1 23 44                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:23:44
	mov.u32 	%r8, %tid.x;
	bfe.u32 	%r9, %r8, 4, 2;
	.loc	1 23 23                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:23:23
	or.b32  	%r1, %r9, %r7;
	.loc	1 24 21                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:24:21
	setp.lt.s32 	%p10, %r1, %r5;
	.loc	1 25 37                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:25:37
	shl.b32 	%r10, %r8, 2;
	and.b32  	%r11, %r10, 60;
	and.b32  	%r12, %r8, 63;
	.loc	1 35 50                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:35:50
	shl.b32 	%r13, %r1, 12;
	or.b32  	%r2, %r13, %r11;
	shl.b32 	%r14, %r12, 2;
	mov.u32 	%r15, global_smem;
	add.s32 	%r49, %r15, %r14;
	shl.b32 	%r16, %r11, 2;
	add.s32 	%r4, %r15, %r16;
	.loc	1 29 40                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:29:40
	mul.wide.u32 	%rd15, %r12, 2;
	add.s64 	%rd33, %rd14, %rd15;
	mov.f32 	%f82, 0f00000000;
	mov.b64 	%rd32, -64;
	mov.u64 	%rd31, %rd33;
	mov.f32 	%f83, %f82;
	mov.f32 	%f84, %f82;
	mov.f32 	%f85, %f82;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 35 45                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:35:45
	add.s64 	%rd32, %rd32, 64;
	cvt.u32.u64 	%r27, %rd32;
	or.b32  	%r28, %r2, %r27;
	.loc	1 35 38                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:35:38
	mul.wide.s32 	%rd19, %r28, 2;
	add.s64 	%rd16, %rd10, %rd19;
	mov.b32 	%r19, 0;
	.loc	1 35 55                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:35:55
	// begin inline asm
	mov.u32 %r17, %r19;
	mov.u32 %r18, %r19;
	@%p10 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b16 	%rs2, 0;
	mov.pred 	%p6, -1;
	.loc	1 36 41                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:36:41
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p6 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 36 94                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:36:94
	cvt.f32.f16 	%f17, %rs1;
	.loc	1 37 34                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:37:34
	add.s64 	%rd18, %rd11, %rd19;
	.loc	1 37 51                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:37:51
	// begin inline asm
	mov.u32 %r21, %r19;
	mov.u32 %r22, %r19;
	@%p10 ld.global.L1::evict_last.v2.b32 { %r21, %r22 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 38 22                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:38:22
	bar.sync 	0;
	mov.b32 	%r26, %f17;
	// begin inline asm
	@%p6 st.shared.b32 [ %r49 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	.loc	1 35 116                        // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:35:116
	mov.b32 	{%rs3, %rs4}, %r17;
	cvt.f32.f16 	%f18, %rs3;
	cvt.f32.f16 	%f19, %rs4;
	mov.b32 	{%rs5, %rs6}, %r18;
	cvt.f32.f16 	%f20, %rs5;
	cvt.f32.f16 	%f21, %rs6;
	.loc	1 37 112                        // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:37:112
	mov.b32 	{%rs7, %rs8}, %r22;
	cvt.f32.f16 	%f22, %rs8;
	cvt.f32.f16 	%f23, %rs7;
	mov.b32 	{%rs9, %rs10}, %r21;
	cvt.f32.f16 	%f24, %rs10;
	cvt.f32.f16 	%f25, %rs9;
	.loc	1 38 22                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:38:22
	ld.shared.v4.f32 	{%f26, %f27, %f28, %f29}, [%r4];
	mul.f32 	%f30, %f29, %f21;
	mul.f32 	%f31, %f28, %f20;
	mul.f32 	%f32, %f27, %f19;
	mul.f32 	%f33, %f26, %f18;
	.loc	1 43 23                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:43:23
	fma.rn.f32 	%f34, %f33, %f25, %f82;
	fma.rn.f32 	%f35, %f32, %f24, %f83;
	fma.rn.f32 	%f36, %f31, %f23, %f84;
	fma.rn.f32 	%f37, %f30, %f22, %f85;
	.loc	1 44 48                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:44:48
	selp.f32 	%f85, %f37, %f85, %p10;
	selp.f32 	%f84, %f36, %f84, %p10;
	selp.f32 	%f83, %f35, %f83, %p10;
	selp.f32 	%f82, %f34, %f82, %p10;
	.loc	1 29 40                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:29:40
	add.s64 	%rd31, %rd31, 128;
	setp.lt.u64 	%p9, %rd32, 4032;
	@%p9 bra 	$L__BB0_1;
// %bb.2:
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f82, %f83;
	add.f32 	%f39, %f84, %f38;
	add.f32 	%f40, %f85, %f39;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r33, %f40;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f41, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r35, %f42;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f43, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r37, %f44;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f45, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r39, %f46;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f47, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
$L__tmp2:
	.loc	1 46 31                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:46:31
	mul.wide.s32 	%rd25, %r1, 4;
	add.s64 	%rd20, %rd12, %rd25;
	.loc	1 46 36                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:46:36
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r29 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r30 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r31 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r32 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r32;
	.loc	1 60 23                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:60:23
	mul.f32 	%f49, %f48, 0fBF000000;
	.loc	1 61 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:61:24
	mul.f32 	%f50, %f11, %f11;
	.loc	1 62 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:62:24
	mul.f32 	%f51, %f50, %f11;
	.loc	1 63 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:63:24
	mul.f32 	%f52, %f49, %f51;
	.loc	1 65 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:65:24
	mul.f32 	%f9, %f52, 0f39800000;
	mov.b64 	%rd34, -64;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 53 46                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:53:46
	add.s64 	%rd34, %rd34, 64;
	cvt.u32.u64 	%r53, %rd34;
	or.b32  	%r54, %r2, %r53;
	.loc	1 53 39                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:53:39
	mul.wide.s32 	%rd30, %r54, 2;
	add.s64 	%rd26, %rd10, %rd30;
	mov.b32 	%r43, 0;
	.loc	1 53 56                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:53:56
	// begin inline asm
	mov.u32 %r41, %r43;
	mov.u32 %r42, %r43;
	@%p10 ld.global.L1::evict_first.v2.b32 { %r41, %r42 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b16 	%rs12, 0;
	mov.pred 	%p15, -1;
	.loc	1 54 42                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:54:42
	// begin inline asm
	mov.u16 %rs11, %rs12;
	@%p15 ld.global.L1::evict_last.b16 { %rs11 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 54 95                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:54:95
	cvt.f32.f16 	%f53, %rs11;
	.loc	1 55 35                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:55:35
	add.s64 	%rd28, %rd11, %rd30;
	.loc	1 55 52                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:55:52
	// begin inline asm
	mov.u32 %r45, %r43;
	mov.u32 %r46, %r43;
	@%p10 ld.global.L1::evict_first.v2.b32 { %r45, %r46 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 58 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:58:24
	bar.sync 	0;
	mov.b32 	%r50, %f53;
	// begin inline asm
	@%p15 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	.loc	1 53 118                        // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:53:118
	mov.b32 	{%rs13, %rs14}, %r41;
	cvt.f32.f16 	%f54, %rs14;
	cvt.f32.f16 	%f55, %rs13;
	.loc	1 55 114                        // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:55:114
	mov.b32 	{%rs15, %rs16}, %r45;
	cvt.f32.f16 	%f56, %rs15;
	cvt.f32.f16 	%f57, %rs16;
	.loc	1 58 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:58:24
	ld.shared.v4.f32 	{%f58, %f59, %f60, %f61}, [%r4];
	.loc	1 56 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:56:24
	mul.f32 	%f62, %f58, %f55;
	mul.f32 	%f63, %f59, %f54;
	.loc	1 58 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:58:24
	mul.f32 	%f64, %f63, %f11;
	mul.f32 	%f65, %f62, %f11;
	.loc	1 68 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:68:24
	add.f32 	%f66, %f57, %f57;
	add.f32 	%f67, %f56, %f56;
	.loc	1 70 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:70:24
	fma.rn.f32 	%f68, %f9, %f67, %f65;
	fma.rn.f32 	%f69, %f9, %f66, %f64;
	.loc	1 72 56                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:72:56
	cvt.rn.f16x2.f32 	%r51, %f69, %f68;
	.loc	1 53 118                        // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:53:118
	mov.b32 	{%rs17, %rs18}, %r42;
	cvt.f32.f16 	%f70, %rs18;
	cvt.f32.f16 	%f71, %rs17;
	.loc	1 55 114                        // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:55:114
	mov.b32 	{%rs19, %rs20}, %r46;
	cvt.f32.f16 	%f72, %rs19;
	cvt.f32.f16 	%f73, %rs20;
	.loc	1 56 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:56:24
	mul.f32 	%f74, %f60, %f71;
	mul.f32 	%f75, %f61, %f70;
	.loc	1 58 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:58:24
	mul.f32 	%f76, %f75, %f11;
	mul.f32 	%f77, %f74, %f11;
	.loc	1 68 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:68:24
	add.f32 	%f78, %f73, %f73;
	add.f32 	%f79, %f72, %f72;
	.loc	1 70 24                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:70:24
	fma.rn.f32 	%f80, %f9, %f79, %f77;
	fma.rn.f32 	%f81, %f9, %f78, %f76;
	.loc	1 72 56                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:72:56
	cvt.rn.f16x2.f32 	%r52, %f81, %f80;
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd26 + 0 ], { %r51, %r52 };
	// end inline asm
	.loc	1 47 40                         // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:47:40
	add.s64 	%rd33, %rd33, 128;
	setp.lt.u64 	%p19, %rd34, 4032;
	@%p19 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 47 4                          // c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py:47:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/6d/c6dfi5krguusrox3zkmtwd6w5h4h7dbj756re5gbfvoizvxxionr.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 201                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 100
.b8 102
.b8 105
.b8 53
.b8 107
.b8 114
.b8 103
.b8 117
.b8 117
.b8 115
.b8 114
.b8 111
.b8 120
.b8 51
.b8 122
.b8 107
.b8 109
.b8 116
.b8 119
.b8 100
.b8 54
.b8 119
.b8 53
.b8 104
.b8 52
.b8 104
.b8 55
.b8 100
.b8 98
.b8 106
.b8 55
.b8 53
.b8 54
.b8 114
.b8 101
.b8 53
.b8 103
.b8 98
.b8 102
.b8 118
.b8 111
.b8 105
.b8 122
.b8 118
.b8 120
.b8 120
.b8 105
.b8 111
.b8 110
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 54
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x32 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb3:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
