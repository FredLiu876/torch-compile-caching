#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 4], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0)
#loc1 = loc(unknown)
#loc51 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":63:27)
#loc54 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":64:27)
#loc62 = loc(callsite(#loc1 at #loc51))
#loc65 = loc(callsite(#loc1 at #loc54))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_mul_sum_14(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg5: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg6: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg7: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg9: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg10: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0), %arg12: i32 loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64x4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64x4xf16, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x4xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x4xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<64x1xi32, #blocked> loc(#loc5)
    %6 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc6)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc6)
    %8 = tt.splat %arg12 : i32 -> tensor<1x4xi32, #blocked> loc(#loc7)
    %9 = tt.broadcast %5 : tensor<64x1xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc8)
    %10 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc9)
    %11 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc10)
    %12 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc11)
    %13 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc12)
    %14 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc13)
    %15 = tt.splat %arg5 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc14)
    %16 = tt.splat %arg6 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc15)
    %17 = tt.splat %arg7 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc16)
    %18 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19:2 = scf.for %arg13 = %c0_i32 to %arg12 step %c4_i32 iter_args(%arg14 = %cst, %arg15 = %cst) -> (tensor<64x4xf32, #blocked>, tensor<64x4xf32, #blocked>)  : i32 {
      %30 = tt.splat %arg13 : i32 -> tensor<1x4xi32, #blocked> loc(#loc19)
      %31 = arith.addi %30, %7 : tensor<1x4xi32, #blocked> loc(#loc19)
      %32 = arith.cmpi slt, %31, %8 : tensor<1x4xi32, #blocked> loc(#loc7)
      %33 = arith.muli %31, %cst_2 : tensor<1x4xi32, #blocked> loc(#loc20)
      %34 = tt.broadcast %33 : tensor<1x4xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc8)
      %35 = arith.addi %9, %34 : tensor<64x4xi32, #blocked> loc(#loc8)
      %36 = tt.addptr %10, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc9)
      %37 = tt.broadcast %32 : tensor<1x4xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc21)
      %38 = tt.load %36, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc21)
      %39 = arith.extf %38 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc22)
      %40 = tt.addptr %11, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc10)
      %41 = tt.load %40, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc23)
      %42 = arith.extf %41 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc24)
      %43 = tt.addptr %12, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc11)
      %44 = tt.load %43, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc25)
      %45 = arith.extf %44 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc26)
      %46 = tt.addptr %13, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc12)
      %47 = tt.load %46, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc27)
      %48 = arith.extf %47 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc28)
      %49 = tt.addptr %14, %31 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc13)
      %50 = tt.load %49, %32, %cst_1 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc29)
      %51 = tt.addptr %15, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc14)
      %52 = tt.load %51, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc30)
      %53 = arith.extf %52 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc31)
      %54 = tt.addptr %16, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc15)
      %55 = tt.load %54, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc32)
      %56 = arith.extf %55 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc33)
      %57 = tt.addptr %17, %35 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc16)
      %58 = tt.load %57, %37, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc34)
      %59 = arith.extf %58 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc35)
      %60 = tt.addptr %18, %31 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc17)
      %61 = tt.load %60, %32, %cst_1 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc36)
      %62 = arith.addf %39, %42 : tensor<64x4xf32, #blocked> loc(#loc37)
      %63 = arith.addf %45, %48 : tensor<64x4xf32, #blocked> loc(#loc38)
      %64 = tt.broadcast %50 : tensor<1x4xf32, #blocked> -> tensor<64x4xf32, #blocked> loc(#loc39)
      %65 = arith.mulf %63, %64 : tensor<64x4xf32, #blocked> loc(#loc39)
      %66 = arith.mulf %62, %65 : tensor<64x4xf32, #blocked> loc(#loc40)
      %67 = arith.addf %arg14, %66 : tensor<64x4xf32, #blocked> loc(#loc41)
      %68 = arith.select %37, %67, %arg14 : tensor<64x4xi1, #blocked>, tensor<64x4xf32, #blocked> loc(#loc42)
      %69 = arith.addf %53, %56 : tensor<64x4xf32, #blocked> loc(#loc43)
      %70 = arith.addf %69, %59 : tensor<64x4xf32, #blocked> loc(#loc44)
      %71 = tt.broadcast %61 : tensor<1x4xf32, #blocked> -> tensor<64x4xf32, #blocked> loc(#loc45)
      %72 = arith.mulf %45, %71 : tensor<64x4xf32, #blocked> loc(#loc45)
      %73 = arith.mulf %70, %72 : tensor<64x4xf32, #blocked> loc(#loc46)
      %74 = arith.addf %arg15, %73 : tensor<64x4xf32, #blocked> loc(#loc47)
      %75 = arith.select %37, %74, %arg15 : tensor<64x4xi1, #blocked>, tensor<64x4xf32, #blocked> loc(#loc48)
      scf.yield %68, %75 : tensor<64x4xf32, #blocked>, tensor<64x4xf32, #blocked> loc(#loc49)
    } loc(#loc18)
    %20 = "tt.reduce"(%19#0) <{axis = 1 : i32}> ({
    ^bb0(%arg13: f32 loc(callsite(#loc1 at #loc51)), %arg14: f32 loc(callsite(#loc1 at #loc51))):
      %30 = arith.addf %arg13, %arg14 : f32 loc(#loc66)
      tt.reduce.return %30 : f32 loc(#loc61)
    }) : (tensor<64x4xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc61)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc53)
    %22 = "tt.reduce"(%19#1) <{axis = 1 : i32}> ({
    ^bb0(%arg13: f32 loc(callsite(#loc1 at #loc54)), %arg14: f32 loc(callsite(#loc1 at #loc54))):
      %30 = arith.addf %arg13, %arg14 : f32 loc(#loc67)
      tt.reduce.return %30 : f32 loc(#loc64)
    }) : (tensor<64x4xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc64)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc55)
    %24 = tt.splat %arg9 : !tt.ptr<f16> -> tensor<64x1x!tt.ptr<f16>, #blocked> loc(#loc56)
    %25 = tt.addptr %24, %5 : tensor<64x1x!tt.ptr<f16>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc56)
    %26 = arith.truncf %21 : tensor<64x1xf32, #blocked> to tensor<64x1xf16, #blocked> loc(#loc57)
    tt.store %25, %26 : tensor<64x1x!tt.ptr<f16>, #blocked> loc(#loc57)
    %27 = tt.splat %arg10 : !tt.ptr<f16> -> tensor<64x1x!tt.ptr<f16>, #blocked> loc(#loc58)
    %28 = tt.addptr %27, %5 : tensor<64x1x!tt.ptr<f16>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc58)
    %29 = arith.truncf %23 : tensor<64x1xf32, #blocked> to tensor<64x1xf16, #blocked> loc(#loc59)
    tt.store %28, %29 : tensor<64x1x!tt.ptr<f16>, #blocked> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":22:28)
#loc3 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":22:33)
#loc4 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":23:44)
#loc5 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":23:23)
#loc6 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":25:37)
#loc7 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":32:29)
#loc8 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":36:39)
#loc9 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":36:34)
#loc10 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":37:34)
#loc11 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":38:34)
#loc12 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":39:34)
#loc13 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":40:34)
#loc14 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":41:35)
#loc15 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":42:35)
#loc16 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":43:35)
#loc17 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":44:35)
#loc18 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":30:40)
#loc19 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":31:31)
#loc20 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":36:44)
#loc21 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":36:51)
#loc22 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":36:105)
#loc23 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":37:51)
#loc24 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":37:105)
#loc25 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":38:51)
#loc26 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":38:105)
#loc27 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":39:51)
#loc28 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":39:105)
#loc29 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":40:41)
#loc30 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":41:52)
#loc31 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":41:106)
#loc32 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":42:52)
#loc33 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":42:106)
#loc34 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":43:52)
#loc35 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":43:106)
#loc36 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":44:42)
#loc37 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":45:22)
#loc38 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":46:22)
#loc39 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":48:22)
#loc40 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":50:23)
#loc41 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":52:25)
#loc42 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":53:42)
#loc43 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":54:24)
#loc44 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":55:24)
#loc45 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":57:24)
#loc46 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":59:24)
#loc47 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":61:25)
#loc48 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":62:42)
#loc49 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":62:8)
#loc50 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":286:36)
#loc52 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":256:15)
#loc53 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":63:30)
#loc55 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":64:30)
#loc56 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":65:25)
#loc57 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":65:37)
#loc58 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":66:25)
#loc59 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":66:37)
#loc60 = loc("/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py":66:4)
#loc61 = loc(callsite(#loc50 at #loc51))
#loc63 = loc(callsite(#loc52 at #loc50))
#loc64 = loc(callsite(#loc50 at #loc54))
#loc66 = loc(callsite(#loc63 at #loc51))
#loc67 = loc(callsite(#loc63 at #loc54))
