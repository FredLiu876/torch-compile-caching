//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_14 // -- Begin function triton_red_fused__to_copy_add_mul_sum_14
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_14
.visible .entry triton_red_fused__to_copy_add_mul_sum_14(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_9,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_10,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_11,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_12,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_13
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<45>;
	.reg .b16 	%rs<31>;
	.reg .b32 	%r<181>;
	.reg .f32 	%f<137>;
	.reg .b64 	%rd<32>;
	.loc	1 18 0                          // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:18:0

// %bb.0:
	ld.param.u32 	%r26, [triton_red_fused__to_copy_add_mul_sum_14_param_12];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mul_sum_14_param_10];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mul_sum_14_param_9];
$L__tmp0:
	.loc	1 22 28                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:22:28
	mov.u32 	%r28, %ctaid.x;
	.loc	1 22 33                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:22:33
	shl.b32 	%r1, %r28, 7;
	.loc	1 23 44                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r29, %r2, 2;
	and.b32  	%r3, %r29, 124;
	.loc	1 25 37                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:25:37
	bfe.u32 	%r4, %r2, 5, 2;
	.loc	1 30 40                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:30:40
	setp.lt.s32 	%p1, %r26, 1;
	mov.b32 	%r173, 0;
	mov.u32 	%r174, %r173;
	mov.u32 	%r175, %r173;
	mov.u32 	%r176, %r173;
	mov.u32 	%r177, %r173;
	mov.u32 	%r178, %r173;
	mov.u32 	%r179, %r173;
	mov.u32 	%r180, %r173;
	@%p1 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:0:40
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mul_sum_14_param_8];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mul_sum_14_param_7];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mul_sum_14_param_6];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mul_sum_14_param_5];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_14_param_4];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_14_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_14_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_14_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_14_param_0];
	.loc	1 30 40                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:30:40
	shl.b32 	%r31, %r4, 12;
	add.s32 	%r32, %r31, %r1;
	add.s32 	%r171, %r32, %r3;
	mov.f32 	%f129, 0f00000000;
	mov.b32 	%r35, 0;
	mov.u32 	%r172, %r35;
	mov.f32 	%f130, %f129;
	mov.f32 	%f131, %f129;
	mov.f32 	%f132, %f129;
	mov.f32 	%f133, %f129;
	mov.f32 	%f134, %f129;
	mov.f32 	%f135, %f129;
	mov.f32 	%f136, %f129;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 32 29                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:32:29
	add.s32 	%r77, %r4, %r172;
	setp.lt.s32 	%p2, %r77, %r26;
	.loc	1 36 34                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:36:34
	mul.wide.s32 	%rd27, %r171, 2;
	add.s64 	%rd12, %rd1, %rd27;
	.loc	1 36 51                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:36:51
	// begin inline asm
	mov.u32 %r33, %r35;
	mov.u32 %r34, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r33, %r34 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 34                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:37:34
	add.s64 	%rd13, %rd2, %rd27;
	.loc	1 37 51                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:37:51
	// begin inline asm
	mov.u32 %r37, %r35;
	mov.u32 %r38, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r37, %r38 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:38:34
	add.s64 	%rd14, %rd3, %rd27;
	.loc	1 38 51                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:38:51
	// begin inline asm
	mov.u32 %r41, %r35;
	mov.u32 %r42, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r41, %r42 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 39 34                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:39:34
	add.s64 	%rd15, %rd4, %rd27;
	.loc	1 39 51                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:39:51
	// begin inline asm
	mov.u32 %r45, %r35;
	mov.u32 %r46, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r45, %r46 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 40 34                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:40:34
	mul.wide.s32 	%rd28, %r77, 4;
	add.s64 	%rd16, %rd5, %rd28;
	.loc	1 40 41                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:40:41
	// begin inline asm
	mov.u32 %r49, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r49 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r51, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r51 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r53, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r53 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r55 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 41 35                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:41:35
	add.s64 	%rd20, %rd6, %rd27;
	.loc	1 41 52                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:41:52
	// begin inline asm
	mov.u32 %r57, %r35;
	mov.u32 %r58, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r57, %r58 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 42 35                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:42:35
	add.s64 	%rd21, %rd7, %rd27;
	.loc	1 42 52                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:42:52
	// begin inline asm
	mov.u32 %r61, %r35;
	mov.u32 %r62, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r61, %r62 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 43 35                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:43:35
	add.s64 	%rd22, %rd8, %rd27;
	.loc	1 43 52                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:43:52
	// begin inline asm
	mov.u32 %r65, %r35;
	mov.u32 %r66, %r35;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r65, %r66 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 44 35                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:44:35
	add.s64 	%rd23, %rd9, %rd28;
	.loc	1 44 42                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:44:42
	// begin inline asm
	mov.u32 %r69, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r69 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r71, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r71 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r73, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r73 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r75, %r35;
	@%p2 ld.global.L1::evict_last.b32 { %r75 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 36 105                        // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:36:105
	mov.b32 	{%rs1, %rs2}, %r33;
	cvt.f32.f16 	%f25, %rs1;
	cvt.f32.f16 	%f26, %rs2;
	mov.b32 	{%rs3, %rs4}, %r34;
	cvt.f32.f16 	%f27, %rs3;
	cvt.f32.f16 	%f28, %rs4;
	.loc	1 38 105                        // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:38:105
	mov.b32 	{%rs5, %rs6}, %r42;
	cvt.f32.f16 	%f29, %rs6;
	cvt.f32.f16 	%f30, %rs5;
	mov.b32 	{%rs7, %rs8}, %r41;
	cvt.f32.f16 	%f31, %rs8;
	cvt.f32.f16 	%f32, %rs7;
	.loc	1 39 105                        // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:39:105
	mov.b32 	{%rs9, %rs10}, %r46;
	cvt.f32.f16 	%f33, %rs10;
	cvt.f32.f16 	%f34, %rs9;
	mov.b32 	{%rs11, %rs12}, %r45;
	cvt.f32.f16 	%f35, %rs12;
	cvt.f32.f16 	%f36, %rs11;
	.loc	1 41 106                        // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:41:106
	mov.b32 	{%rs13, %rs14}, %r58;
	cvt.f32.f16 	%f37, %rs14;
	cvt.f32.f16 	%f38, %rs13;
	mov.b32 	{%rs15, %rs16}, %r57;
	cvt.f32.f16 	%f39, %rs16;
	cvt.f32.f16 	%f40, %rs15;
	.loc	1 42 106                        // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:42:106
	mov.b32 	{%rs17, %rs18}, %r62;
	cvt.f32.f16 	%f41, %rs18;
	cvt.f32.f16 	%f42, %rs17;
	mov.b32 	{%rs19, %rs20}, %r61;
	cvt.f32.f16 	%f43, %rs20;
	cvt.f32.f16 	%f44, %rs19;
	.loc	1 43 106                        // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:43:106
	mov.b32 	{%rs21, %rs22}, %r65;
	cvt.f32.f16 	%f45, %rs21;
	cvt.f32.f16 	%f46, %rs22;
	mov.b32 	{%rs23, %rs24}, %r66;
	cvt.f32.f16 	%f47, %rs23;
	cvt.f32.f16 	%f48, %rs24;
	mov.b32 	{%rs25, %rs26}, %r37;
	cvt.f32.f16 	%f49, %rs25;
	cvt.f32.f16 	%f50, %rs26;
	mov.b32 	{%rs27, %rs28}, %r38;
	cvt.f32.f16 	%f51, %rs27;
	cvt.f32.f16 	%f52, %rs28;
	.loc	1 44 42                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:44:42
	mov.b32 	%f53, %r75;
	mov.b32 	%f54, %r55;
	.loc	1 46 22                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:46:22
	add.f32 	%f55, %f32, %f36;
	add.f32 	%f56, %f31, %f35;
	add.f32 	%f57, %f30, %f34;
	add.f32 	%f58, %f29, %f33;
	.loc	1 54 24                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:54:24
	add.f32 	%f59, %f40, %f44;
	add.f32 	%f60, %f39, %f43;
	add.f32 	%f61, %f38, %f42;
	add.f32 	%f62, %f37, %f41;
	.loc	1 55 24                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:55:24
	add.f32 	%f63, %f28, %f52;
	add.f32 	%f64, %f27, %f51;
	add.f32 	%f65, %f26, %f50;
	add.f32 	%f66, %f25, %f49;
	add.f32 	%f67, %f62, %f48;
	add.f32 	%f68, %f61, %f47;
	add.f32 	%f69, %f60, %f46;
	add.f32 	%f70, %f59, %f45;
	.loc	1 57 24                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:57:24
	mul.f32 	%f71, %f58, %f54;
	mul.f32 	%f72, %f57, %f54;
	mul.f32 	%f73, %f56, %f54;
	mul.f32 	%f74, %f55, %f54;
	mul.f32 	%f75, %f29, %f53;
	mul.f32 	%f76, %f30, %f53;
	mul.f32 	%f77, %f31, %f53;
	mul.f32 	%f78, %f32, %f53;
	.loc	1 61 25                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:61:25
	fma.rn.f32 	%f79, %f70, %f78, %f129;
	fma.rn.f32 	%f80, %f69, %f77, %f130;
	fma.rn.f32 	%f81, %f68, %f76, %f131;
	fma.rn.f32 	%f82, %f67, %f75, %f132;
	fma.rn.f32 	%f83, %f66, %f74, %f133;
	fma.rn.f32 	%f84, %f65, %f73, %f134;
	fma.rn.f32 	%f85, %f64, %f72, %f135;
	fma.rn.f32 	%f86, %f63, %f71, %f136;
	.loc	1 62 42                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:62:42
	selp.f32 	%f136, %f86, %f136, %p2;
	selp.f32 	%f135, %f85, %f135, %p2;
	selp.f32 	%f134, %f84, %f134, %p2;
	selp.f32 	%f133, %f83, %f133, %p2;
	selp.f32 	%f132, %f82, %f132, %p2;
	selp.f32 	%f131, %f81, %f131, %p2;
	selp.f32 	%f130, %f80, %f130, %p2;
	selp.f32 	%f129, %f79, %f129, %p2;
	.loc	1 30 40                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:30:40
	add.s32 	%r172, %r172, 4;
	add.s32 	%r171, %r171, 16384;
	setp.lt.s32 	%p17, %r172, %r26;
	@%p17 bra 	$L__BB0_2;
// %bb.3:                               // %._crit_edge.loopexit
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r173, %f133;
	mov.b32 	%r174, %f134;
	mov.b32 	%r175, %f135;
	mov.b32 	%r176, %f136;
$L__tmp2:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r177, %f129;
	mov.b32 	%r178, %f130;
	mov.b32 	%r179, %f131;
	mov.b32 	%r180, %f132;
$L__tmp3:
$L__BB0_4:                              // %._crit_edge
	.loc	1 23 44                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:23:44
	and.b32  	%r136, %r2, 127;
	.loc	1 23 23                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:23:23
	or.b32  	%r137, %r1, %r136;
$L__tmp4:
	.loc	2 286 36                        // standard.py:286:36
	shl.b32 	%r138, %r4, 2;
	shl.b32 	%r139, %r3, 4;
	or.b32  	%r140, %r139, %r138;
	mov.u32 	%r141, global_smem;
	add.s32 	%r78, %r141, %r140;
	mov.pred 	%p18, -1;
	// begin inline asm
	@%p18 st.shared.b32 [ %r78 + 0 ], %r173;
	// end inline asm
	add.s32 	%r80, %r78, 16;
	// begin inline asm
	@%p18 st.shared.b32 [ %r80 + 0 ], %r174;
	// end inline asm
	add.s32 	%r82, %r78, 32;
	// begin inline asm
	@%p18 st.shared.b32 [ %r82 + 0 ], %r175;
	// end inline asm
	add.s32 	%r84, %r78, 48;
	// begin inline asm
	@%p18 st.shared.b32 [ %r84 + 0 ], %r176;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r2, 512;
	add.s32 	%r87, %r141, %r29;
	// begin inline asm
	@%p22 ld.shared.b32 %r86, [ %r87 + 0 ];
	// end inline asm
	mov.b32 	%f87, %r86;
	shfl.sync.bfly.b32	%r143, %r86, 2, 31, -1;
	mov.b32 	%f88, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r144, %f89;
	shfl.sync.bfly.b32	%r145, %r144, 1, 31, -1;
	mov.b32 	%f90, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r146, %r2, 3;
	setp.eq.s32 	%p44, %r146, 0;
	and.pred  	%p23, %p22, %p44;
	mov.b32 	%r89, %f91;
	// begin inline asm
	@%p23 st.shared.b32 [ %r87 + 0 ], %r89;
	// end inline asm
	add.s32 	%r91, %r87, 512;
	// begin inline asm
	@%p22 ld.shared.b32 %r90, [ %r91 + 0 ];
	// end inline asm
	mov.b32 	%f92, %r90;
	shfl.sync.bfly.b32	%r147, %r90, 2, 31, -1;
	mov.b32 	%f93, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r148, %f94;
	shfl.sync.bfly.b32	%r149, %r148, 1, 31, -1;
	mov.b32 	%f95, %r149;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r93, %f96;
	// begin inline asm
	@%p23 st.shared.b32 [ %r91 + 0 ], %r93;
	// end inline asm
	add.s32 	%r95, %r87, 1024;
	// begin inline asm
	@%p22 ld.shared.b32 %r94, [ %r95 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r94;
	shfl.sync.bfly.b32	%r150, %r94, 2, 31, -1;
	mov.b32 	%f98, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r151, %f99;
	shfl.sync.bfly.b32	%r152, %r151, 1, 31, -1;
	mov.b32 	%f100, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r97, %f101;
	// begin inline asm
	@%p23 st.shared.b32 [ %r95 + 0 ], %r97;
	// end inline asm
	add.s32 	%r99, %r87, 1536;
	// begin inline asm
	@%p22 ld.shared.b32 %r98, [ %r99 + 0 ];
	// end inline asm
	mov.b32 	%f102, %r98;
	shfl.sync.bfly.b32	%r153, %r98, 2, 31, -1;
	mov.b32 	%f103, %r153;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r154, %f104;
	shfl.sync.bfly.b32	%r155, %r154, 1, 31, -1;
	mov.b32 	%f105, %r155;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r101, %f106;
	// begin inline asm
	@%p23 st.shared.b32 [ %r99 + 0 ], %r101;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r156, %r141, %r139;
	ld.shared.u32 	%r103, [%r156];
	ld.shared.u32 	%r104, [%r156+16];
	ld.shared.u32 	%r105, [%r156+32];
	ld.shared.u32 	%r106, [%r156+48];
$L__tmp5:
	.loc	1 65 37                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:65:37
	bar.sync 	0;
	mad.lo.s32 	%r102, %r3, -12, %r156;
	// begin inline asm
	@%p18 st.shared.v4.b32 [ %r102 + 0 ], { %r103, %r104, %r105, %r106 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r157, %r136, 2;
	add.s32 	%r158, %r141, %r157;
	ld.shared.f32 	%f107, [%r158];
$L__tmp6:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	// begin inline asm
	@%p18 st.shared.b32 [ %r78 + 0 ], %r177;
	// end inline asm
	// begin inline asm
	@%p18 st.shared.b32 [ %r80 + 0 ], %r178;
	// end inline asm
	// begin inline asm
	@%p18 st.shared.b32 [ %r82 + 0 ], %r179;
	// end inline asm
	// begin inline asm
	@%p18 st.shared.b32 [ %r84 + 0 ], %r180;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r115, [ %r87 + 0 ];
	// end inline asm
	mov.b32 	%f108, %r115;
	shfl.sync.bfly.b32	%r159, %r115, 2, 31, -1;
	mov.b32 	%f109, %r159;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r160, %f110;
	shfl.sync.bfly.b32	%r161, %r160, 1, 31, -1;
	mov.b32 	%f111, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f110, %f111;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r118, %f112;
	// begin inline asm
	@%p23 st.shared.b32 [ %r87 + 0 ], %r118;
	// end inline asm
	// begin inline asm
	@%p22 ld.shared.b32 %r119, [ %r91 + 0 ];
	// end inline asm
	mov.b32 	%f113, %r119;
	shfl.sync.bfly.b32	%r162, %r119, 2, 31, -1;
	mov.b32 	%f114, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r163, %f115;
	shfl.sync.bfly.b32	%r164, %r163, 1, 31, -1;
	mov.b32 	%f116, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r122, %f117;
	// begin inline asm
	@%p23 st.shared.b32 [ %r91 + 0 ], %r122;
	// end inline asm
	// begin inline asm
	@%p22 ld.shared.b32 %r123, [ %r95 + 0 ];
	// end inline asm
	mov.b32 	%f118, %r123;
	shfl.sync.bfly.b32	%r165, %r123, 2, 31, -1;
	mov.b32 	%f119, %r165;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f118, %f119;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r166, %f120;
	shfl.sync.bfly.b32	%r167, %r166, 1, 31, -1;
	mov.b32 	%f121, %r167;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r126, %f122;
	// begin inline asm
	@%p23 st.shared.b32 [ %r95 + 0 ], %r126;
	// end inline asm
	// begin inline asm
	@%p22 ld.shared.b32 %r127, [ %r99 + 0 ];
	// end inline asm
	mov.b32 	%f123, %r127;
	shfl.sync.bfly.b32	%r168, %r127, 2, 31, -1;
	mov.b32 	%f124, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f125, %f123, %f124;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r169, %f125;
	shfl.sync.bfly.b32	%r170, %r169, 1, 31, -1;
	mov.b32 	%f126, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f127, %f125, %f126;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r130, %f127;
	// begin inline asm
	@%p23 st.shared.b32 [ %r99 + 0 ], %r130;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r132, [%r156];
	ld.shared.u32 	%r133, [%r156+16];
	ld.shared.u32 	%r134, [%r156+32];
	ld.shared.u32 	%r135, [%r156+48];
$L__tmp7:
	.loc	1 66 37                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:66:37
	bar.sync 	0;
	// begin inline asm
	@%p18 st.shared.v4.b32 [ %r102 + 0 ], { %r132, %r133, %r134, %r135 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f128, [%r158];
	.loc	1 65 25                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:65:25
	mul.wide.s32 	%rd31, %r137, 2;
	add.s64 	%rd29, %rd10, %rd31;
	.loc	1 65 37                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:65:37
	cvt.rn.f16.f32 	%rs29, %f107;
	// begin inline asm
	st.global.b16 [ %rd29 + 0 ], { %rs29 };
	// end inline asm
	.loc	1 66 25                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:66:25
	add.s64 	%rd30, %rd11, %rd31;
	.loc	1 66 37                         // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:66:37
	cvt.rn.f16.f32 	%rs30, %f128;
	// begin inline asm
	st.global.b16 [ %rd30 + 0 ], { %rs30 };
	// end inline asm
	.loc	1 66 4                          // cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py:66:4
	ret;
$L__tmp8:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/gh/cghfemwp5je4gtzbsncc3ktqr4kitawxmdiwtkz7ekfqatqqwhde.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 104
.b8 102
.b8 101
.b8 109
.b8 119
.b8 112
.b8 53
.b8 106
.b8 101
.b8 52
.b8 103
.b8 116
.b8 122
.b8 98
.b8 115
.b8 110
.b8 99
.b8 99
.b8 51
.b8 107
.b8 116
.b8 113
.b8 114
.b8 52
.b8 107
.b8 105
.b8 116
.b8 97
.b8 119
.b8 120
.b8 109
.b8 100
.b8 105
.b8 119
.b8 116
.b8 107
.b8 122
.b8 55
.b8 101
.b8 107
.b8 102
.b8 113
.b8 97
.b8 116
.b8 113
.b8 113
.b8 119
.b8 104
.b8 100
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 103
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
