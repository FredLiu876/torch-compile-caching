; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @triton_red_fused__to_copy_add_mul_sum_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr !dbg !6 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %11 = shl i32 %10, 6, !dbg !10
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %13 = and i32 %12, 63, !dbg !11
  %14 = or disjoint i32 %11, %13, !dbg !12
  %15 = lshr i32 %12, 6, !dbg !13
  %16 = and i32 %15, 3, !dbg !13
  %17 = icmp sgt i32 %7, 0, !dbg !14
  br i1 %17, label %.lr.ph, label %._crit_edge, !dbg !14

.lr.ph:                                           ; preds = %9, %.lr.ph
  %18 = phi float [ %50, %.lr.ph ], [ 0.000000e+00, %9 ]
  %19 = phi i32 [ %51, %.lr.ph ], [ 0, %9 ]
  %20 = or disjoint i32 %19, %16, !dbg !15
  %21 = icmp slt i32 %20, %7, !dbg !16
  %22 = shl i32 %20, 12, !dbg !17
  %23 = add i32 %22, %14, !dbg !18
  %24 = sext i32 %23 to i64, !dbg !19
  %25 = getelementptr half, ptr addrspace(1) %0, i64 %24, !dbg !19
  %26 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %25, i1 %21) #3, !dbg !20
  %27 = bitcast i16 %26 to half, !dbg !20
  %28 = fpext half %27 to float, !dbg !21
  %29 = getelementptr half, ptr addrspace(1) %1, i64 %24, !dbg !22
  %30 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %29, i1 %21) #3, !dbg !23
  %31 = bitcast i16 %30 to half, !dbg !23
  %32 = fpext half %31 to float, !dbg !24
  %33 = getelementptr half, ptr addrspace(1) %2, i64 %24, !dbg !25
  %34 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %33, i1 %21) #3, !dbg !26
  %35 = bitcast i16 %34 to half, !dbg !26
  %36 = fpext half %35 to float, !dbg !27
  %37 = getelementptr half, ptr addrspace(1) %3, i64 %24, !dbg !28
  %38 = tail call i16 asm sideeffect "mov.u16 $0, $1;\0A\09@$3 ld.global.L1::evict_first.b16 { $0 }, [ $2 + 0 ];", "=c,c,l,b"(i16 0, ptr addrspace(1) %37, i1 %21) #3, !dbg !29
  %39 = bitcast i16 %38 to half, !dbg !29
  %40 = fpext half %39 to float, !dbg !30
  %41 = sext i32 %20 to i64, !dbg !31
  %42 = getelementptr float, ptr addrspace(1) %4, i64 %41, !dbg !31
  %43 = tail call i32 asm sideeffect "mov.u32 $0, $1;\0A\09@$3 ld.global.L1::evict_last.b32 { $0 }, [ $2 + 0 ];", "=r,r,l,b"(i32 0, ptr addrspace(1) %42, i1 %21) #3, !dbg !32
  %44 = bitcast i32 %43 to float, !dbg !32
  %45 = fadd float %28, %32, !dbg !33
  %46 = fadd float %45, %36, !dbg !34
  %47 = fmul float %40, %44, !dbg !35
  %48 = fmul float %46, %47, !dbg !36
  %49 = fadd float %18, %48, !dbg !37
  %50 = select i1 %21, float %49, float %18, !dbg !38
  %51 = add i32 %19, 4, !dbg !14
  %52 = icmp slt i32 %51, %7, !dbg !14
  br i1 %52, label %.lr.ph, label %._crit_edge.loopexit, !dbg !14

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %53 = bitcast float %50 to <1 x i32>, !dbg !39
  br label %._crit_edge, !dbg !39

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9
  %.lcssa = phi <1 x i32> [ zeroinitializer, %9 ], [ %53, %._crit_edge.loopexit ]
  %54 = shl nuw nsw i32 %13, 2, !dbg !39
  %55 = or disjoint i32 %54, %16, !dbg !39
  %56 = getelementptr float, ptr addrspace(3) @global_smem, i32 %55, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %56, <1 x i32> %.lcssa, i1 true) #3, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %57 = icmp slt i32 %12, 256, !dbg !39
  %58 = getelementptr float, ptr addrspace(3) @global_smem, i32 %12, !dbg !39
  %59 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %58, i1 %57) #3, !dbg !39
  %60 = bitcast i32 %59 to float, !dbg !39
  %61 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 2, i32 31), !dbg !39
  %62 = bitcast i32 %61 to float, !dbg !39
  %63 = fadd float %60, %62, !dbg !43
  %64 = bitcast float %63 to i32, !dbg !39
  %65 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %64, i32 1, i32 31), !dbg !39
  %66 = bitcast i32 %65 to float, !dbg !39
  %67 = fadd float %63, %66, !dbg !43
  %68 = and i32 %12, 3, !dbg !39
  %69 = icmp eq i32 %68, 0, !dbg !39
  %70 = and i1 %57, %69, !dbg !39
  %71 = bitcast float %67 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %58, <1 x i32> %71, i1 %70) #3, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %72 = getelementptr float, ptr addrspace(3) @global_smem, i32 %54, !dbg !39
  %73 = load float, ptr addrspace(3) %72, align 16, !dbg !39
  %74 = sext i32 %14 to i64, !dbg !45
  %75 = getelementptr half, ptr addrspace(1) %5, i64 %74, !dbg !45
  %76 = fptrunc float %73 to half, !dbg !46
  %77 = and i32 %12, 192, !dbg !46
  %78 = icmp eq i32 %77, 0, !dbg !46
  %79 = bitcast half %76 to i16, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %79, ptr addrspace(1) %75, i1 %78) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cooiaknvye32serylx7xwhx2qwftzzzc42hc3guninlw4pdaroz3.py", directory: "/tmp/torchinductor_root/oo")
!4 = !{ptr @triton_red_fused__to_copy_add_mul_sum_11, !"reqntidx", i32 256}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_red_fused__to_copy_add_mul_sum_11", linkageName: "triton_red_fused__to_copy_add_mul_sum_11", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 22, column: 28, scope: !6)
!10 = !DILocation(line: 22, column: 33, scope: !6)
!11 = !DILocation(line: 23, column: 44, scope: !6)
!12 = !DILocation(line: 23, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 37, scope: !6)
!14 = !DILocation(line: 29, column: 40, scope: !6)
!15 = !DILocation(line: 30, column: 31, scope: !6)
!16 = !DILocation(line: 31, column: 29, scope: !6)
!17 = !DILocation(line: 35, column: 44, scope: !6)
!18 = !DILocation(line: 35, column: 39, scope: !6)
!19 = !DILocation(line: 35, column: 34, scope: !6)
!20 = !DILocation(line: 35, column: 51, scope: !6)
!21 = !DILocation(line: 35, column: 105, scope: !6)
!22 = !DILocation(line: 36, column: 34, scope: !6)
!23 = !DILocation(line: 36, column: 51, scope: !6)
!24 = !DILocation(line: 36, column: 105, scope: !6)
!25 = !DILocation(line: 37, column: 34, scope: !6)
!26 = !DILocation(line: 37, column: 51, scope: !6)
!27 = !DILocation(line: 37, column: 105, scope: !6)
!28 = !DILocation(line: 38, column: 34, scope: !6)
!29 = !DILocation(line: 38, column: 51, scope: !6)
!30 = !DILocation(line: 38, column: 105, scope: !6)
!31 = !DILocation(line: 39, column: 34, scope: !6)
!32 = !DILocation(line: 39, column: 41, scope: !6)
!33 = !DILocation(line: 40, column: 22, scope: !6)
!34 = !DILocation(line: 41, column: 22, scope: !6)
!35 = !DILocation(line: 43, column: 22, scope: !6)
!36 = !DILocation(line: 45, column: 23, scope: !6)
!37 = !DILocation(line: 47, column: 25, scope: !6)
!38 = !DILocation(line: 48, column: 42, scope: !6)
!39 = !DILocation(line: 286, column: 36, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !6, file: !41, discriminator: 0)
!41 = !DIFile(filename: "standard.py", directory: "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language")
!42 = !DILocation(line: 49, column: 27, scope: !6)
!43 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !42)
!44 = distinct !DILexicalBlockFile(scope: !40, file: !41, discriminator: 0)
!45 = !DILocation(line: 50, column: 25, scope: !6)
!46 = !DILocation(line: 50, column: 37, scope: !6)
!47 = !DILocation(line: 50, column: 4, scope: !6)
