//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 121, 105, 47, 99, 121, 105, 104, 109, 101, 55, 116, 51, 53, 52, 120, 100, 101, 107, 107, 117, 53, 114, 107, 115, 55, 119, 97, 111, 116, 113, 100, 110, 122, 51, 109, 112, 111, 52, 55, 113, 51, 117, 104, 113, 106, 116, 114, 53, 105, 120, 114, 103, 111, 108, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<41>;
	.reg .b32 	%r<123>;
	.reg .f32 	%f<139>;
	.reg .b64 	%rd<60>;
	.loc	1 18 0                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:18:0

// %bb.0:
	ld.param.u32 	%r8, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd27, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:22:28
	mov.u32 	%r9, %ctaid.x;
	.loc	1 22 33                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:22:33
	shl.b32 	%r1, %r9, 1;
	.loc	1 23 44                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r4, %r2, 8, 1;
	.loc	1 23 23                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:23:23
	or.b32  	%r6, %r4, %r1;
	or.b32  	%r10, %r1, 1;
	.loc	1 24 21                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:24:21
	setp.lt.s32 	%p18, %r6, %r8;
	setp.lt.s32 	%p9, %r1, %r8;
	setp.lt.s32 	%p10, %r10, %r8;
	.loc	1 28 30                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:28:30
	mul.wide.s32 	%rd28, %r6, 8;
	add.s64 	%rd8, %rd27, %rd28;
	mul.wide.s32 	%rd29, %r1, 8;
	add.s64 	%rd24, %rd27, %rd29;
	add.s64 	%rd26, %rd24, 8;
	.loc	1 28 35                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:28:35
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 37 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:37:22
	add.s64 	%rd30, %rd25, 128256;
	add.s64 	%rd31, %rd23, 128256;
	.loc	1 38 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:38:22
	setp.lt.s64 	%p11, %rd25, 0;
	setp.lt.s64 	%p12, %rd23, 0;
	.loc	1 39 36                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:39:36
	selp.b64 	%rd32, %rd31, %rd23, %p12;
	selp.b64 	%rd33, %rd30, %rd25, %p11;
	.loc	1 40 41                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:41
	setp.gt.u64 	%p13, %rd33, 128255;
	setp.gt.u64 	%p14, %rd32, 128255;
	.loc	1 40 59                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:59
	and.pred  	%p15, %p9, %p14;
	.loc	1 41 46                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:46
	and.pred  	%p16, %p10, %p13;
	or.pred  	%p17, %p15, %p16;
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	@%p17 bra 	$L__BB0_2;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:0:69
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	and.b32  	%r3, %r2, 256;
	and.b32  	%r5, %r2, 1;
	shl.b32 	%r11, %r2, 3;
	and.b32  	%r7, %r11, 2040;
	.loc	1 47 41                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:41
	shl.b32 	%r87, %r6, 12;
	.loc	1 30 40                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:30:40
	or.b32  	%r88, %r7, %r87;
	.loc	1 38 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:38:22
	setp.lt.s64 	%p35, %rd21, 0;
	.loc	1 41 46                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:46
	shl.b64 	%rd45, %rd21, 12;
	add.s64 	%rd46, %rd45, 525336576;
	selp.b64 	%rd47, %rd46, %rd45, %p35;
	.loc	1 23 44                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:23:44
	and.b32  	%r89, %r2, 31;
	.loc	1 30 40                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:30:40
	cvt.u64.u32 	%rd48, %r7;
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	bar.sync 	0;
	.loc	1 41 41                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:41
	or.b64  	%rd49, %rd47, %rd48;
	.loc	1 41 34                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:34
	shl.b64 	%rd50, %rd49, 1;
	add.s64 	%rd34, %rd3, %rd50;
	mov.b32 	%r16, 0;
	.loc	1 41 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:53
	// begin inline asm
	mov.u32 %r20, %r16;
	mov.u32 %r21, %r16;
	mov.u32 %r22, %r16;
	mov.u32 %r23, %r16;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd34 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r20;
	.loc	1 41 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:115
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	.loc	1 47 29                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:29
	mul.wide.s32 	%rd51, %r88, 2;
	add.s64 	%rd35, %rd5, %rd51;
	.loc	1 47 52                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:52
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd35 + 0 ], { %r20, %r21, %r22, %r23 };
	// end inline asm
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:34
	add.s64 	%rd36, %rd34, 4096;
	.loc	1 41 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:53
	// begin inline asm
	mov.u32 %r32, %r16;
	mov.u32 %r33, %r16;
	mov.u32 %r34, %r16;
	mov.u32 %r35, %r16;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd36 + 0 ];
	// end inline asm
	mov.b32 	{%rs3, %rs4}, %r32;
	.loc	1 41 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:115
	cvt.f32.f16 	%f3, %rs3;
	cvt.f32.f16 	%f4, %rs4;
	.loc	1 43 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:43:22
	mul.f32 	%f5, %f3, %f3;
	mul.f32 	%f6, %f4, %f4;
	.loc	1 45 25                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:45:25
	fma.rn.f32 	%f7, %f1, %f1, %f5;
	fma.rn.f32 	%f8, %f2, %f2, %f6;
	.loc	1 41 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:115
	mov.b32 	{%rs5, %rs6}, %r21;
	cvt.f32.f16 	%f9, %rs5;
	cvt.f32.f16 	%f10, %rs6;
	mov.b32 	{%rs7, %rs8}, %r33;
	cvt.f32.f16 	%f11, %rs8;
	cvt.f32.f16 	%f12, %rs7;
	.loc	1 43 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:43:22
	mul.f32 	%f13, %f12, %f12;
	mul.f32 	%f14, %f11, %f11;
	.loc	1 45 25                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:45:25
	fma.rn.f32 	%f15, %f10, %f10, %f14;
	fma.rn.f32 	%f16, %f9, %f9, %f13;
	.loc	1 41 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:115
	mov.b32 	{%rs9, %rs10}, %r22;
	cvt.f32.f16 	%f17, %rs9;
	cvt.f32.f16 	%f18, %rs10;
	mov.b32 	{%rs11, %rs12}, %r34;
	cvt.f32.f16 	%f19, %rs12;
	cvt.f32.f16 	%f20, %rs11;
	.loc	1 43 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:43:22
	mul.f32 	%f21, %f20, %f20;
	mul.f32 	%f22, %f19, %f19;
	.loc	1 45 25                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:45:25
	fma.rn.f32 	%f23, %f18, %f18, %f22;
	fma.rn.f32 	%f24, %f17, %f17, %f21;
	.loc	1 41 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:115
	mov.b32 	{%rs13, %rs14}, %r23;
	cvt.f32.f16 	%f25, %rs13;
	cvt.f32.f16 	%f26, %rs14;
	mov.b32 	{%rs15, %rs16}, %r35;
	cvt.f32.f16 	%f27, %rs16;
	cvt.f32.f16 	%f28, %rs15;
	.loc	1 43 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:43:22
	mul.f32 	%f29, %f28, %f28;
	mul.f32 	%f30, %f27, %f27;
	.loc	1 45 25                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:45:25
	fma.rn.f32 	%f31, %f26, %f26, %f30;
	fma.rn.f32 	%f32, %f25, %f25, %f29;
	.loc	1 47 29                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:29
	add.s64 	%rd37, %rd35, 4096;
	.loc	1 47 52                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:52
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd37 + 0 ], { %r32, %r33, %r34, %r35 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f7, %f8;
	add.f32 	%f34, %f16, %f33;
	add.f32 	%f35, %f15, %f34;
	add.f32 	%f36, %f24, %f35;
	add.f32 	%f37, %f23, %f36;
	add.f32 	%f38, %f32, %f37;
	add.f32 	%f39, %f31, %f38;
	selp.f32 	%f40, %f39, 0f00000000, %p18;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r90, %f40;
	shfl.sync.bfly.b32	%r91, %r90, 16, 31, -1;
	mov.b32 	%f41, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r92, %f42;
	shfl.sync.bfly.b32	%r93, %r92, 8, 31, -1;
	mov.b32 	%f43, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r94, %f44;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f45, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r96, %f46;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f47, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r98, %f48;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f49, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 286 36                        // standard.py:286:36
	bfe.u32 	%r100, %r2, 5, 3;
	setp.eq.s32 	%p22, %r89, 0;
	shr.u32 	%r101, %r3, 5;
	or.b32  	%r102, %r101, %r100;
	shl.b32 	%r103, %r102, 2;
	mov.u32 	%r104, global_smem;
	add.s32 	%r36, %r104, %r103;
	mov.b32 	%r37, %f50;
	// begin inline asm
	@%p22 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p23, %r2, 16;
	shl.b32 	%r105, %r2, 2;
	add.s32 	%r39, %r104, %r105;
	// begin inline asm
	@%p23 ld.shared.b32 %r38, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r38;
	shfl.sync.bfly.b32	%r106, %r38, 4, 31, -1;
	mov.b32 	%f52, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r107, %f53;
	shfl.sync.bfly.b32	%r108, %r107, 2, 31, -1;
	mov.b32 	%f54, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r109, %f55;
	shfl.sync.bfly.b32	%r110, %r109, 1, 31, -1;
	mov.b32 	%f56, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r111, %r2, 7;
	setp.eq.s32 	%p36, %r111, 0;
	and.pred  	%p24, %p23, %p36;
	mov.b32 	%r41, %f57;
	// begin inline asm
	@%p24 st.shared.b32 [ %r39 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r112, %r3, 3;
	add.s32 	%r113, %r104, %r112;
	ld.shared.f32 	%f58, [%r113];
$L__tmp2:
	.loc	1 53 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:53:28
	bar.sync 	0;
	shl.b32 	%r114, %r4, 2;
	add.s32 	%r42, %r104, %r114;
	mov.b32 	%r43, %f58;
	mov.pred 	%p25, -1;
	// begin inline asm
	@%p25 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r115, %r5, 2;
	add.s32 	%r116, %r104, %r115;
	ld.shared.f32 	%f59, [%r116];
	mov.f32 	%f60, 0f45800000;
	.loc	1 50 21                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:50:21
	div.full.f32 	%f61, %f59, %f60;
	div.full.f32 	%f62, %f58, %f60;
	.loc	1 52 20                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:52:20
	add.f32 	%f63, %f61, 0f3727C5AC;
	add.f32 	%f64, %f62, 0f3727C5AC;
	.loc	1 53 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:53:28
	rsqrt.approx.ftz.f32 	%f65, %f63;
	rsqrt.approx.ftz.f32 	%f66, %f64;
	.loc	1 25 37                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:25:37
	and.b32  	%r117, %r105, 2044;
	.loc	1 23 23                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:23:23
	or.b32  	%r118, %r1, %r5;
	.loc	1 24 21                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:24:21
	setp.lt.s32 	%p37, %r118, %r8;
	.loc	1 54 4                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:55:28
	mul.wide.s32 	%rd52, %r118, 4;
	add.s64 	%rd38, %rd2, %rd52;
	.loc	1 55 40                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:55:40
	and.b32  	%r119, %r2, 510;
	setp.eq.s32 	%p38, %r119, 0;
	mov.b32 	%r44, %f65;
	and.pred  	%p26, %p38, %p37;
	// begin inline asm
	@%p26 st.global.b32 [ %rd38 + 0 ], { %r44 };
	// end inline asm
	shl.b32 	%r120, %r117, 2;
	add.s32 	%r57, %r104, %r120;
	shl.b32 	%r121, %r7, 2;
	add.s32 	%r122, %r104, %r121;
	.loc	1 62 35                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:35
	mul.wide.u32 	%rd53, %r117, 2;
	add.s64 	%rd39, %rd4, %rd53;
	.loc	1 62 42                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:42
	// begin inline asm
	mov.u32 %r45, %r16;
	mov.u32 %r46, %r16;
	@%p25 ld.global.L1::evict_last.v2.b32 { %r45, %r46 }, [ %rd39 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r45;
	mov.b32 	{%rs19, %rs20}, %r46;
	.loc	1 62 95                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:95
	cvt.f32.f16 	%f67, %rs17;
	cvt.f32.f16 	%f68, %rs18;
	cvt.f32.f16 	%f69, %rs19;
	cvt.f32.f16 	%f70, %rs20;
	.loc	1 63 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:53
	// begin inline asm
	mov.u32 %r49, %r16;
	mov.u32 %r50, %r16;
	mov.u32 %r51, %r16;
	mov.u32 %r52, %r16;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r49, %r50, %r51, %r52 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	bar.sync 	0;
	mov.b32 	%r58, %f67;
	mov.b32 	%r59, %f68;
	mov.b32 	%r60, %f69;
	mov.b32 	%r61, %f70;
	// begin inline asm
	@%p25 st.shared.v4.b32 [ %r57 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	bar.sync 	0;
	.loc	1 68 29                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:29
	add.s64 	%rd41, %rd6, %rd51;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs21, %rs22}, %r49;
	cvt.f32.f16 	%f71, %rs21;
	cvt.f32.f16 	%f72, %rs22;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f73, %f66, %f72;
	mul.f32 	%f74, %f66, %f71;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	ld.shared.v4.f32 	{%f75, %f76, %f77, %f78}, [%r122];
	mul.f32 	%f79, %f75, %f74;
	mul.f32 	%f80, %f76, %f73;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r62, %f80, %f79;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs23, %rs24}, %r50;
	cvt.f32.f16 	%f81, %rs23;
	cvt.f32.f16 	%f82, %rs24;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f83, %f66, %f82;
	mul.f32 	%f84, %f66, %f81;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	mul.f32 	%f85, %f77, %f84;
	mul.f32 	%f86, %f78, %f83;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r63, %f86, %f85;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs25, %rs26}, %r51;
	cvt.f32.f16 	%f87, %rs25;
	cvt.f32.f16 	%f88, %rs26;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f89, %f66, %f88;
	mul.f32 	%f90, %f66, %f87;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	ld.shared.v4.f32 	{%f91, %f92, %f93, %f94}, [%r122+16];
	mul.f32 	%f95, %f90, %f91;
	mul.f32 	%f96, %f89, %f92;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r64, %f96, %f95;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs27, %rs28}, %r52;
	cvt.f32.f16 	%f97, %rs27;
	cvt.f32.f16 	%f98, %rs28;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f99, %f66, %f98;
	mul.f32 	%f100, %f66, %f97;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	mul.f32 	%f101, %f100, %f93;
	mul.f32 	%f102, %f99, %f94;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r65, %f102, %f101;
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd41 + 0 ], { %r62, %r63, %r64, %r65 };
	// end inline asm
	.loc	1 62 35                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:35
	add.s64 	%rd42, %rd39, 4096;
	.loc	1 62 42                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:42
	// begin inline asm
	mov.u32 %r66, %r16;
	mov.u32 %r67, %r16;
	@%p25 ld.global.L1::evict_last.v2.b32 { %r66, %r67 }, [ %rd42 + 0 ];
	// end inline asm
	mov.b32 	{%rs29, %rs30}, %r66;
	mov.b32 	{%rs31, %rs32}, %r67;
	.loc	1 62 95                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:95
	cvt.f32.f16 	%f103, %rs29;
	cvt.f32.f16 	%f104, %rs30;
	cvt.f32.f16 	%f105, %rs31;
	cvt.f32.f16 	%f106, %rs32;
	.loc	1 63 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:53
	// begin inline asm
	mov.u32 %r70, %r16;
	mov.u32 %r71, %r16;
	mov.u32 %r72, %r16;
	mov.u32 %r73, %r16;
	@%p18 ld.global.L1::evict_first.v4.b32 { %r70, %r71, %r72, %r73 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	bar.sync 	0;
	mov.b32 	%r79, %f103;
	mov.b32 	%r80, %f104;
	mov.b32 	%r81, %f105;
	mov.b32 	%r82, %f106;
	// begin inline asm
	@%p25 st.shared.v4.b32 [ %r57 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	bar.sync 	0;
	.loc	1 68 29                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:29
	add.s64 	%rd44, %rd41, 4096;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs33, %rs34}, %r70;
	cvt.f32.f16 	%f107, %rs33;
	cvt.f32.f16 	%f108, %rs34;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f109, %f66, %f108;
	mul.f32 	%f110, %f66, %f107;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	ld.shared.v4.f32 	{%f111, %f112, %f113, %f114}, [%r122];
	mul.f32 	%f115, %f111, %f110;
	mul.f32 	%f116, %f112, %f109;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r83, %f116, %f115;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs35, %rs36}, %r71;
	cvt.f32.f16 	%f117, %rs35;
	cvt.f32.f16 	%f118, %rs36;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f119, %f66, %f118;
	mul.f32 	%f120, %f66, %f117;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	mul.f32 	%f121, %f113, %f120;
	mul.f32 	%f122, %f114, %f119;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r84, %f122, %f121;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs37, %rs38}, %r72;
	cvt.f32.f16 	%f123, %rs37;
	cvt.f32.f16 	%f124, %rs38;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f125, %f66, %f124;
	mul.f32 	%f126, %f66, %f123;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	ld.shared.v4.f32 	{%f127, %f128, %f129, %f130}, [%r122+16];
	mul.f32 	%f131, %f126, %f127;
	mul.f32 	%f132, %f125, %f128;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r85, %f132, %f131;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs39, %rs40}, %r73;
	cvt.f32.f16 	%f133, %rs39;
	cvt.f32.f16 	%f134, %rs40;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f135, %f66, %f134;
	mul.f32 	%f136, %f66, %f133;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	mul.f32 	%f137, %f136, %f129;
	mul.f32 	%f138, %f135, %f130;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r86, %f138, %f137;
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd44 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 56 4                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:56:4
	ret;
$L__BB0_2:
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	mov.u64 	%rd54, assertMessage_0;
	cvta.global.u64 	%rd55, %rd54;
	mov.u64 	%rd56, assertFile_0;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, assertFunc_0;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd55;
	.param .b64 param1;
	st.param.b64 	[param1], %rd57;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd59;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/yi/cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 105
.b8 104
.b8 109
.b8 101
.b8 55
.b8 116
.b8 51
.b8 53
.b8 52
.b8 120
.b8 100
.b8 101
.b8 107
.b8 107
.b8 117
.b8 53
.b8 114
.b8 107
.b8 115
.b8 55
.b8 119
.b8 97
.b8 111
.b8 116
.b8 113
.b8 100
.b8 110
.b8 122
.b8 51
.b8 109
.b8 112
.b8 111
.b8 52
.b8 55
.b8 113
.b8 51
.b8 117
.b8 104
.b8 113
.b8 106
.b8 116
.b8 114
.b8 53
.b8 105
.b8 120
.b8 114
.b8 103
.b8 111
.b8 108
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 121
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
