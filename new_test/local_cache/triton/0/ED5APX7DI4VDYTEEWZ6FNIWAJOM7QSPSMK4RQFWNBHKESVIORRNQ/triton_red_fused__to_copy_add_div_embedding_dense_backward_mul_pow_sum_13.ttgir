#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [16, 2], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [4, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0)
#loc1 = loc(unknown)
#loc37 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":49:27)
#loc97 = loc(callsite(#loc1 at #loc37))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_add_div_embedding_dense_backward_mul_pow_sum_13(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg4: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg5: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg6: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg9: i32 loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64x8xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-5.000000e-01> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2.44140625E-4> : tensor<64x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e+00> : tensor<64x8xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x8xf16, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x8xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<4096> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<-1> : tensor<64x1xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<64x1xi64, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<128256> : tensor<64x1xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<128256> : tensor<64x1xi64, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<0> : tensor<64x1xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<0> : tensor<64x1xi64, #blocked1> loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<1x8xf16, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<true> : tensor<64x1xi1, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<64x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<64x1xi32, #blocked1> loc(#loc5)
    %10 = tt.splat %arg9 : i32 -> tensor<64x1xi32, #blocked> loc(#loc6)
    %11 = tt.splat %arg9 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc6)
    %12 = arith.cmpi slt, %8, %10 : tensor<64x1xi32, #blocked> loc(#loc6)
    %13 = arith.cmpi slt, %9, %11 : tensor<64x1xi32, #blocked1> loc(#loc6)
    %14 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %15 = tt.expand_dims %14 {axis = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xi32, #blocked> loc(#loc7)
    %16 = arith.muli %8, %cst_5 : tensor<64x1xi32, #blocked> loc(#loc8)
    %17 = tt.broadcast %16 : tensor<64x1xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc9)
    %18 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc10)
    %19 = tt.broadcast %12 : tensor<64x1xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc11)
    %20 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc12)
    %21 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc13)
    %22 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<1x8x!tt.ptr<f16>, #blocked> loc(#loc14)
    %23 = tt.splat %arg4 : !tt.ptr<f16> -> tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc15)
    %24 = scf.for %arg11 = %c0_i32 to %c4096_i32 step %c8_i32 iter_args(%arg12 = %cst) -> (tensor<64x8xf32, #blocked>)  : i32 {
      %61 = tt.splat %arg11 : i32 -> tensor<1x8xi32, #blocked> loc(#loc17)
      %62 = arith.addi %61, %15 : tensor<1x8xi32, #blocked> loc(#loc17)
      %63 = arith.cmpi slt, %62, %cst_4 : tensor<1x8xi32, #blocked> loc(#loc18)
      %64 = tt.broadcast %62 : tensor<1x8xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc9)
      %65 = arith.addi %64, %17 : tensor<64x8xi32, #blocked> loc(#loc9)
      %66 = tt.addptr %18, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc10)
      %67 = tt.broadcast %63 : tensor<1x8xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc11)
      %68 = arith.andi %19, %67 : tensor<64x8xi1, #blocked> loc(#loc11)
      %69 = tt.load %66, %68, %cst_3 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc19)
      %70 = arith.extf %69 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc20)
      %71 = tt.addptr %20, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc12)
      %72 = tt.load %71, %68, %cst_3 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc21)
      %73 = arith.extf %72 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc22)
      %74 = tt.addptr %21, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc13)
      %75 = tt.load %74, %68, %cst_3 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc23)
      %76 = arith.extf %75 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc24)
      %77 = tt.addptr %22, %62 : tensor<1x8x!tt.ptr<f16>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc14)
      %78 = tt.load %77, %63, %cst_12 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f16>, #blocked> loc(#loc25)
      %79 = arith.extf %78 : tensor<1x8xf16, #blocked> to tensor<1x8xf32, #blocked> loc(#loc26)
      %80 = tt.addptr %23, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc15)
      %81 = tt.load %80, %68, %cst_3 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc27)
      %82 = arith.extf %81 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc28)
      %83 = arith.addf %70, %73 : tensor<64x8xf32, #blocked> loc(#loc29)
      %84 = arith.addf %83, %76 : tensor<64x8xf32, #blocked> loc(#loc30)
      %85 = tt.broadcast %79 : tensor<1x8xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc31)
      %86 = arith.mulf %84, %85 : tensor<64x8xf32, #blocked> loc(#loc31)
      %87 = arith.mulf %86, %82 : tensor<64x8xf32, #blocked> loc(#loc32)
      %88 = arith.addf %arg12, %87 : tensor<64x8xf32, #blocked> loc(#loc33)
      %89 = arith.select %68, %88, %arg12 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc34)
      scf.yield %89 : tensor<64x8xf32, #blocked> loc(#loc35)
    } loc(#loc16)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc37)), %arg12: f32 loc(callsite(#loc1 at #loc37))):
      %61 = arith.addf %arg11, %arg12 : f32 loc(#loc99)
      tt.reduce.return %61 : f32 loc(#loc96)
    }) : (tensor<64x8xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc96)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc39)
    %27 = tt.splat %arg5 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>, #blocked> loc(#loc40)
    %28 = tt.splat %arg5 : !tt.ptr<i64> -> tensor<64x1x!tt.ptr<i64>, #blocked1> loc(#loc40)
    %29 = tt.addptr %27, %8 : tensor<64x1x!tt.ptr<i64>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc40)
    %30 = tt.addptr %28, %9 : tensor<64x1x!tt.ptr<i64>, #blocked1>, tensor<64x1xi32, #blocked1> loc(#loc40)
    %31 = tt.load %29, %12 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>, #blocked> loc(#loc41)
    %32 = tt.load %30, %13 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<i64>, #blocked1> loc(#loc41)
    %33 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc42)
    %34 = tt.addptr %33, %8 : tensor<64x1x!tt.ptr<f32>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc42)
    %35 = tt.load %34, %12 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc43)
    %36 = tt.splat %arg6 : !tt.ptr<f16> -> tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc44)
    %37 = arith.cmpi eq, %31, %cst_6 : tensor<64x1xi64, #blocked> loc(#loc45)
    %38 = tt.broadcast %35 : tensor<64x1xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc46)
    %39 = arith.mulf %26, %cst_0 : tensor<64x1xf32, #blocked> loc(#loc47)
    %40 = arith.mulf %35, %35 : tensor<64x1xf32, #blocked> loc(#loc48)
    %41 = arith.mulf %40, %35 : tensor<64x1xf32, #blocked> loc(#loc49)
    %42 = arith.mulf %39, %41 : tensor<64x1xf32, #blocked> loc(#loc50)
    %43 = arith.mulf %42, %cst_1 : tensor<64x1xf32, #blocked> loc(#loc51)
    %44 = tt.broadcast %43 : tensor<64x1xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc52)
    %45 = tt.broadcast %37 : tensor<64x1xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc53)
    %46 = arith.addi %31, %cst_8 : tensor<64x1xi64, #blocked> loc(#loc54)
    %47 = arith.addi %32, %cst_9 : tensor<64x1xi64, #blocked1> loc(#loc54)
    %48 = arith.cmpi slt, %31, %cst_10 : tensor<64x1xi64, #blocked> loc(#loc55)
    %49 = arith.cmpi slt, %32, %cst_11 : tensor<64x1xi64, #blocked1> loc(#loc55)
    %50 = arith.select %48, %46, %31 : tensor<64x1xi1, #blocked>, tensor<64x1xi64, #blocked> loc(#loc56)
    %51 = arith.select %49, %47, %32 : tensor<64x1xi1, #blocked1>, tensor<64x1xi64, #blocked1> loc(#loc56)
    %52 = arith.cmpi sge, %51, %cst_11 : tensor<64x1xi64, #blocked1> loc(#loc57)
    %53 = arith.cmpi slt, %51, %cst_9 : tensor<64x1xi64, #blocked1> loc(#loc58)
    %54 = arith.andi %52, %53 : tensor<64x1xi1, #blocked1> loc(#loc59)
    %55 = arith.xori %13, %cst_13 : tensor<64x1xi1, #blocked1> loc(#loc60)
    %56 = arith.ori %54, %55 : tensor<64x1xi1, #blocked1> loc(#loc61)
    %57 = tt.broadcast %56 : tensor<64x1xi1, #blocked1> -> tensor<64x8xi1, #blocked1> loc(#loc61)
    %58 = arith.muli %50, %cst_7 : tensor<64x1xi64, #blocked> loc(#loc62)
    %59 = tt.broadcast %58 : tensor<64x1xi64, #blocked> -> tensor<64x8xi64, #blocked> loc(#loc62)
    %60 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>, #blocked> loc(#loc63)
    scf.for %arg11 = %c0_i32 to %c4096_i32 step %c8_i32  : i32 {
      %61 = tt.splat %arg11 : i32 -> tensor<1x8xi32, #blocked> loc(#loc65)
      %62 = arith.addi %61, %15 : tensor<1x8xi32, #blocked> loc(#loc65)
      %63 = arith.cmpi slt, %62, %cst_4 : tensor<1x8xi32, #blocked> loc(#loc66)
      %64 = tt.broadcast %62 : tensor<1x8xi32, #blocked> -> tensor<64x8xi32, #blocked> loc(#loc67)
      %65 = arith.addi %64, %17 : tensor<64x8xi32, #blocked> loc(#loc67)
      %66 = tt.addptr %36, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc44)
      %67 = tt.broadcast %63 : tensor<1x8xi1, #blocked> -> tensor<64x8xi1, #blocked> loc(#loc68)
      %68 = arith.andi %19, %67 : tensor<64x8xi1, #blocked> loc(#loc68)
      %69 = tt.load %66, %68, %cst_3 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc69)
      %70 = arith.extf %69 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc70)
      %71 = tt.addptr %18, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc71)
      %72 = tt.load %71, %68, %cst_3 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc72)
      %73 = arith.extf %72 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc73)
      %74 = tt.addptr %20, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc74)
      %75 = tt.load %74, %68, %cst_3 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc75)
      %76 = arith.extf %75 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc76)
      %77 = tt.addptr %21, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc77)
      %78 = tt.load %77, %68, %cst_3 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc78)
      %79 = arith.extf %78 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc79)
      %80 = tt.addptr %22, %62 : tensor<1x8x!tt.ptr<f16>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc80)
      %81 = tt.load %80, %63, %cst_12 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f16>, #blocked> loc(#loc81)
      %82 = arith.extf %81 : tensor<1x8xf16, #blocked> to tensor<1x8xf32, #blocked> loc(#loc82)
      %83 = tt.addptr %23, %65 : tensor<64x8x!tt.ptr<f16>, #blocked>, tensor<64x8xi32, #blocked> loc(#loc83)
      %84 = tt.load %83, %68, %cst_3 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f16>, #blocked> loc(#loc84)
      %85 = arith.extf %84 : tensor<64x8xf16, #blocked> to tensor<64x8xf32, #blocked> loc(#loc85)
      %86 = arith.addf %73, %76 : tensor<64x8xf32, #blocked> loc(#loc86)
      %87 = arith.addf %86, %79 : tensor<64x8xf32, #blocked> loc(#loc87)
      %88 = tt.broadcast %82 : tensor<1x8xf32, #blocked> -> tensor<64x8xf32, #blocked> loc(#loc88)
      %89 = arith.mulf %87, %88 : tensor<64x8xf32, #blocked> loc(#loc88)
      %90 = arith.mulf %89, %38 : tensor<64x8xf32, #blocked> loc(#loc46)
      %91 = arith.mulf %85, %cst_2 : tensor<64x8xf32, #blocked> loc(#loc89)
      %92 = arith.mulf %44, %91 : tensor<64x8xf32, #blocked> loc(#loc52)
      %93 = arith.addf %90, %92 : tensor<64x8xf32, #blocked> loc(#loc90)
      %94 = arith.addf %70, %93 : tensor<64x8xf32, #blocked> loc(#loc91)
      %95 = arith.select %45, %cst, %94 : tensor<64x8xi1, #blocked>, tensor<64x8xf32, #blocked> loc(#loc53)
      tt.assert %57, "index out of bounds: 0 <= tmp49 < 128256" : tensor<64x8xi1, #blocked1> loc(#loc92)
      %96 = arith.extsi %62 : tensor<1x8xi32, #blocked> to tensor<1x8xi64, #blocked> loc(#loc93)
      %97 = tt.broadcast %96 : tensor<1x8xi64, #blocked> -> tensor<64x8xi64, #blocked> loc(#loc93)
      %98 = arith.addi %97, %59 : tensor<64x8xi64, #blocked> loc(#loc93)
      %99 = tt.addptr %60, %98 : tensor<64x8x!tt.ptr<f32>, #blocked>, tensor<64x8xi64, #blocked> loc(#loc63)
      %100 = tt.atomic_rmw fadd, relaxed, gpu, %99, %95, %68 : (tensor<64x8x!tt.ptr<f32>, #blocked>, tensor<64x8xf32, #blocked>, tensor<64x8xi1, #blocked>) -> tensor<64x8xf32, #blocked> loc(#loc94)
    } loc(#loc64)
    tt.return loc(#loc95)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":22:28)
#loc3 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":22:33)
#loc4 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":23:44)
#loc5 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":23:23)
#loc6 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":24:21)
#loc7 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":25:37)
#loc8 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":35:46)
#loc9 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":35:41)
#loc10 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":35:34)
#loc11 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":35:59)
#loc12 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":36:34)
#loc13 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":37:34)
#loc14 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":38:34)
#loc15 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":39:34)
#loc16 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":29:40)
#loc17 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":30:31)
#loc18 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":31:29)
#loc19 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":35:51)
#loc20 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":35:112)
#loc21 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":36:51)
#loc22 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":36:112)
#loc23 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":37:51)
#loc24 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":37:112)
#loc25 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":38:41)
#loc26 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":38:94)
#loc27 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":39:51)
#loc28 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":39:112)
#loc29 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":40:22)
#loc30 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":41:22)
#loc31 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":42:22)
#loc32 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":45:23)
#loc33 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":47:25)
#loc34 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":48:50)
#loc35 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":48:8)
#loc36 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":286:36)
#loc38 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":256:15)
#loc39 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":49:30)
#loc40 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":50:31)
#loc41 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":50:36)
#loc42 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":51:31)
#loc43 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":51:36)
#loc44 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":58:35)
#loc45 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":65:25)
#loc46 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":70:24)
#loc47 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":72:24)
#loc48 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":73:24)
#loc49 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":74:24)
#loc50 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":75:24)
#loc51 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":77:24)
#loc52 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":81:24)
#loc53 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":87:39)
#loc54 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":89:24)
#loc55 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":90:24)
#loc56 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":91:39)
#loc57 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":92:32)
#loc58 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":92:50)
#loc59 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":92:42)
#loc60 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":92:63)
#loc61 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":92:61)
#loc62 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":93:62)
#loc63 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":93:34)
#loc64 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":52:40)
#loc65 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":53:31)
#loc66 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":54:29)
#loc67 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":58:42)
#loc68 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":58:60)
#loc69 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":58:52)
#loc70 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":58:114)
#loc71 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":59:35)
#loc72 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":59:52)
#loc73 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":59:114)
#loc74 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":60:35)
#loc75 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":60:52)
#loc76 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":60:114)
#loc77 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":61:35)
#loc78 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":61:52)
#loc79 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":61:114)
#loc80 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":62:35)
#loc81 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":62:42)
#loc82 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":62:95)
#loc83 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":63:35)
#loc84 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":63:52)
#loc85 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":63:114)
#loc86 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":66:24)
#loc87 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":67:24)
#loc88 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":68:24)
#loc89 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":80:24)
#loc90 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":82:24)
#loc91 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":84:24)
#loc92 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":92:71)
#loc93 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":93:57)
#loc94 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":93:98)
#loc95 = loc("/tmp/torchinductor_root/tx/ctxmaw5t3t256dq7yrmhxrht563tkigfbxuljvcdxlsac2hljoin.py":52:4)
#loc96 = loc(callsite(#loc36 at #loc37))
#loc98 = loc(callsite(#loc38 at #loc36))
#loc99 = loc(callsite(#loc98 at #loc37))
