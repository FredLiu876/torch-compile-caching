//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[83] = {47, 116, 109, 112, 47, 116, 111, 114, 99, 104, 105, 110, 100, 117, 99, 116, 111, 114, 95, 114, 111, 111, 116, 47, 121, 105, 47, 99, 121, 105, 104, 109, 101, 55, 116, 51, 53, 52, 120, 100, 101, 107, 107, 117, 53, 114, 107, 115, 55, 119, 97, 111, 116, 113, 100, 110, 122, 51, 109, 112, 111, 52, 55, 113, 51, 117, 104, 113, 106, 116, 114, 53, 105, 120, 114, 103, 111, 108, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 1024, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<52>;
	.reg .b64 	%rd<42>;
	.loc	1 18 0                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:18:0

// %bb.0:
	ld.param.u32 	%r1, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd18, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:22:28
	mov.u32 	%r2, %ctaid.x;
	.loc	1 24 21                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:24:21
	setp.ge.s32 	%p6, %r2, %r1;
	setp.lt.s32 	%p1, %r2, %r1;
	.loc	1 28 30                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:28:30
	mul.wide.s32 	%rd19, %r2, 8;
	add.s64 	%rd9, %rd18, %rd19;
	.loc	1 28 35                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:28:35
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:37:22
	add.s64 	%rd20, %rd16, 128256;
	.loc	1 38 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:38:22
	setp.lt.s64 	%p7, %rd16, 0;
	.loc	1 39 36                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:39:36
	selp.b64 	%rd21, %rd20, %rd16, %p7;
	.loc	1 40 41                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:41
	setp.lt.u64 	%p8, %rd21, 128256;
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	or.pred  	%p9, %p6, %p8;
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_rsqrtf.exit
	.loc	1 0 69                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:0:69
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	cvt.s64.s32 	%rd1, %r2;
	cvt.u32.u64 	%r26, %rd1;
	.loc	1 24 21                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:24:21
	setp.lt.s32 	%p10, %r26, %r1;
	.loc	1 38 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:38:22
	setp.lt.s64 	%p19, %rd14, 0;
	.loc	1 25 37                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:25:37
	mov.u32 	%r27, %tid.x;
	shl.b32 	%r28, %r27, 2;
	and.b32  	%r29, %r28, 4092;
	and.b32  	%r30, %r27, 31;
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	bar.sync 	0;
	.loc	1 41 46                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:46
	shl.b64 	%rd28, %rd14, 12;
	add.s64 	%rd29, %rd28, 525336576;
	selp.b64 	%rd30, %rd29, %rd28, %p19;
	.loc	1 41 34                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:34
	shl.b64 	%rd31, %rd30, 1;
	add.s64 	%rd32, %rd4, %rd31;
	mul.wide.u32 	%rd33, %r29, 2;
	add.s64 	%rd22, %rd32, %rd33;
	mov.b32 	%r5, 0;
	.loc	1 41 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:53
	// begin inline asm
	mov.u32 %r7, %r5;
	mov.u32 %r8, %r5;
	@%p10 ld.global.L1::evict_first.v2.b32 { %r7, %r8 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r7;
	mov.b32 	{%rs3, %rs4}, %r8;
	.loc	1 41 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:41:115
	cvt.f32.f16 	%f1, %rs1;
	cvt.f32.f16 	%f2, %rs2;
	cvt.f32.f16 	%f3, %rs3;
	cvt.f32.f16 	%f4, %rs4;
	.loc	1 43 22                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:43:22
	mul.f32 	%f5, %f2, %f2;
	.loc	1 47 41                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:41
	shl.b32 	%r31, %r26, 12;
	.loc	1 47 36                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:36
	or.b32  	%r32, %r29, %r31;
	.loc	1 47 29                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:29
	mul.wide.s32 	%rd34, %r32, 2;
	add.s64 	%rd23, %rd6, %rd34;
	.loc	1 47 52                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:47:52
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd23 + 0 ], { %r7, %r8 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	fma.rn.f32 	%f7, %f3, %f3, %f6;
	fma.rn.f32 	%f8, %f4, %f4, %f7;
	selp.f32 	%f9, %f8, 0f00000000, %p10;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r33, %f9;
	shfl.sync.bfly.b32	%r34, %r33, 16, 31, -1;
	mov.b32 	%f10, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r35, %f11;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f12, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r37, %f13;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f14, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r39, %f15;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f16, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f17;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f18, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p12, %r30, 0;
	shr.u32 	%r43, %r27, 3;
	and.b32  	%r44, %r43, 124;
	mov.u32 	%r45, global_smem;
	add.s32 	%r9, %r45, %r44;
	mov.b32 	%r10, %f19;
	// begin inline asm
	@%p12 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r27, 32;
	add.s32 	%r12, %r45, %r28;
	// begin inline asm
	@%p13 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r11;
	shfl.sync.bfly.b32	%r46, %r11, 16, 31, -1;
	mov.b32 	%f21, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r47, %f22;
	shfl.sync.bfly.b32	%r48, %r47, 8, 31, -1;
	mov.b32 	%f23, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r49, %f24;
	shfl.sync.bfly.b32	%r50, %r49, 4, 31, -1;
	mov.b32 	%f25, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r51, %f26;
	shfl.sync.bfly.b32	%r52, %r51, 2, 31, -1;
	mov.b32 	%f27, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r53, %f28;
	shfl.sync.bfly.b32	%r54, %r53, 1, 31, -1;
	mov.b32 	%f29, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 286 36                        // standard.py:286:36
	and.pred  	%p14, %p13, %p12;
	mov.b32 	%r14, %f30;
	// begin inline asm
	@%p14 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f31, [global_smem];
	mov.f32 	%f32, 0f45800000;
$L__tmp2:
	.loc	1 50 21                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:50:21
	div.full.f32 	%f33, %f31, %f32;
	.loc	1 52 20                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:52:20
	add.f32 	%f34, %f33, 0f3727C5AC;
	.loc	1 53 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:53:28
	rsqrt.approx.ftz.f32 	%f35, %f34;
	.loc	1 54 4                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:55:28
	shl.b64 	%rd35, %rd1, 2;
	add.s64 	%rd24, %rd3, %rd35;
	.loc	1 55 40                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:55:40
	and.b32  	%r55, %r27, 1023;
	setp.eq.s32 	%p20, %r55, 0;
	mov.b32 	%r15, %f35;
	and.pred  	%p15, %p20, %p10;
	// begin inline asm
	@%p15 st.global.b32 [ %rd24 + 0 ], { %r15 };
	// end inline asm
	.loc	1 62 35                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:35
	add.s64 	%rd25, %rd5, %rd33;
	mov.pred 	%p16, -1;
	.loc	1 62 42                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:42
	// begin inline asm
	mov.u32 %r16, %r5;
	mov.u32 %r17, %r5;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 63 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:53
	// begin inline asm
	mov.u32 %r20, %r5;
	mov.u32 %r21, %r5;
	@%p10 ld.global.L1::evict_first.v2.b32 { %r20, %r21 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 68 29                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:29
	add.s64 	%rd27, %rd7, %rd34;
	.loc	1 62 95                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:95
	mov.b32 	{%rs5, %rs6}, %r16;
	cvt.f32.f16 	%f36, %rs6;
	cvt.f32.f16 	%f37, %rs5;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs7, %rs8}, %r20;
	cvt.f32.f16 	%f38, %rs7;
	cvt.f32.f16 	%f39, %rs8;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f40, %f35, %f39;
	mul.f32 	%f41, %f35, %f38;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	mul.f32 	%f42, %f41, %f37;
	mul.f32 	%f43, %f40, %f36;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r24, %f43, %f42;
	.loc	1 62 95                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:62:95
	mov.b32 	{%rs9, %rs10}, %r17;
	cvt.f32.f16 	%f44, %rs10;
	cvt.f32.f16 	%f45, %rs9;
	.loc	1 63 115                        // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:63:115
	mov.b32 	{%rs11, %rs12}, %r21;
	cvt.f32.f16 	%f46, %rs11;
	cvt.f32.f16 	%f47, %rs12;
	.loc	1 65 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:65:24
	mul.f32 	%f48, %f35, %f47;
	mul.f32 	%f49, %f35, %f46;
	.loc	1 67 24                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:67:24
	mul.f32 	%f50, %f49, %f45;
	mul.f32 	%f51, %f48, %f44;
	.loc	1 68 53                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:68:53
	cvt.rn.f16x2.f32 	%r25, %f51, %f50;
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd27 + 0 ], { %r24, %r25 };
	// end inline asm
	.loc	1 56 4                          // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:56:4
	ret;
$L__BB0_1:
	.loc	1 40 69                         // cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py:40:69
	mov.u64 	%rd36, assertMessage_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFile_0;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, assertFunc_0;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1], %rd39;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd41;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/yi/cyihme7t354xdekku5rks7waotqdnz3mpo47q3uhqjtr5ixrgolb.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 105
.b8 104
.b8 109
.b8 101
.b8 55
.b8 116
.b8 51
.b8 53
.b8 52
.b8 120
.b8 100
.b8 101
.b8 107
.b8 107
.b8 117
.b8 53
.b8 114
.b8 107
.b8 115
.b8 55
.b8 119
.b8 97
.b8 111
.b8 116
.b8 113
.b8 100
.b8 110
.b8 122
.b8 51
.b8 109
.b8 112
.b8 111
.b8 52
.b8 55
.b8 113
.b8 51
.b8 117
.b8 104
.b8 113
.b8 106
.b8 116
.b8 114
.b8 53
.b8 105
.b8 120
.b8 114
.b8 103
.b8 111
.b8 108
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 121
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
