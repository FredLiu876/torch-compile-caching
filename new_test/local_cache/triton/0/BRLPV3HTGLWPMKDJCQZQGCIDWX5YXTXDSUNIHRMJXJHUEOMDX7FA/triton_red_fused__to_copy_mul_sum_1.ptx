//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_mul_sum_1 // -- Begin function triton_red_fused__to_copy_mul_sum_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_mul_sum_1
.visible .entry triton_red_fused__to_copy_mul_sum_1(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_3,
	.param .u32 triton_red_fused__to_copy_mul_sum_1_param_4,
	.param .u32 triton_red_fused__to_copy_mul_sum_1_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<27>;
	.reg .b64 	%rd<12>;
	.loc	1 18 0                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:18:0

// %bb.0:
	ld.param.u32 	%r9, [triton_red_fused__to_copy_mul_sum_1_param_5];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_mul_sum_1_param_3];
$L__tmp0:
	.loc	1 22 28                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:22:28
	mov.u32 	%r1, %ctaid.x;
	.loc	1 25 37                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:25:37
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 63;
	.loc	1 29 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:29:40
	setp.lt.s32 	%p1, %r9, 1;
	mov.f32 	%f26, 0f00000000;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:0:40
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_mul_sum_1_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_mul_sum_1_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_mul_sum_1_param_0];
	.loc	1 29 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:29:40
	shl.b32 	%r11, %r3, 12;
	add.s32 	%r38, %r1, %r11;
	mov.b32 	%r10, 0;
	mov.f32 	%f26, 0f00000000;
	mov.u32 	%r39, %r10;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 31 29                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:31:29
	add.s32 	%r14, %r3, %r39;
	setp.lt.s32 	%p2, %r14, %r9;
	.loc	1 35 34                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:35:34
	mul.wide.s32 	%rd8, %r38, 2;
	add.s64 	%rd5, %rd1, %rd8;
	mov.b16 	%rs2, 0;
	.loc	1 35 51                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:35:51
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p2 ld.global.L1::evict_first.b16 { %rs1 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 105                        // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:35:105
	cvt.f32.f16 	%f6, %rs1;
	.loc	1 36 34                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:36:34
	add.s64 	%rd6, %rd2, %rd8;
	.loc	1 36 51                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:36:51
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p2 ld.global.L1::evict_first.b16 { %rs3 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 105                        // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:36:105
	cvt.f32.f16 	%f7, %rs3;
	.loc	1 37 34                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:37:34
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd7, %rd3, %rd9;
	.loc	1 37 41                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:37:41
	// begin inline asm
	mov.u32 %r12, %r10;
	@%p2 ld.global.L1::evict_last.b32 { %r12 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r12;
	.loc	1 39 22                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:39:22
	mul.f32 	%f9, %f7, %f8;
	.loc	1 43 23                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:43:23
	fma.rn.f32 	%f10, %f9, %f6, %f26;
	.loc	1 44 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:44:40
	selp.f32 	%f26, %f10, %f26, %p2;
	.loc	1 29 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:29:40
	add.s32 	%r39, %r39, 64;
	add.s32 	%r38, %r38, 262144;
	setp.lt.s32 	%p5, %r39, %r9;
	@%p5 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 25 37                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:25:37
	and.b32  	%r21, %r2, 31;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r22, %f26;
	shfl.sync.bfly.b32	%r23, %r22, 16, 31, -1;
	mov.b32 	%f11, %r23;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f26, %f11;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r24, %f12;
	shfl.sync.bfly.b32	%r25, %r24, 8, 31, -1;
	mov.b32 	%f13, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r26, %f14;
	shfl.sync.bfly.b32	%r27, %r26, 4, 31, -1;
	mov.b32 	%f15, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r28, %f16;
	shfl.sync.bfly.b32	%r29, %r28, 2, 31, -1;
	mov.b32 	%f17, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r30, %f18;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	mov.b32 	%f19, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p6, %r21, 0;
	shr.u32 	%r32, %r2, 3;
	and.b32  	%r33, %r32, 4;
	mov.u32 	%r34, global_smem;
	add.s32 	%r15, %r34, %r33;
	mov.b32 	%r16, %f20;
	// begin inline asm
	@%p6 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r2, 2;
	shl.b32 	%r35, %r2, 2;
	add.s32 	%r18, %r34, %r35;
	// begin inline asm
	@%p7 ld.shared.b32 %r17, [ %r18 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r17;
	shfl.sync.bfly.b32	%r36, %r17, 1, 31, -1;
	mov.b32 	%f22, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r37, %r2, 1;
	setp.eq.b32 	%p10, %r37, 1;
	not.pred 	%p11, %p10;
	and.pred  	%p8, %p7, %p11;
	mov.b32 	%r20, %f23;
	// begin inline asm
	@%p8 st.shared.b32 [ %r18 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f24, [global_smem];
$L__tmp2:
	.loc	1 46 25                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:25
	mul.wide.s32 	%rd11, %r1, 2;
	add.s64 	%rd10, %rd4, %rd11;
	.loc	1 46 36                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:36
	cvt.rn.f16.f32 	%rs5, %f24;
	setp.eq.s32 	%p9, %r3, 0;
	// begin inline asm
	@%p9 st.global.b16 [ %rd10 + 0 ], { %rs5 };
	// end inline asm
	.loc	1 46 4                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/o4/co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 189                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 52
.b8 110
.b8 109
.b8 120
.b8 118
.b8 118
.b8 97
.b8 98
.b8 97
.b8 110
.b8 110
.b8 109
.b8 111
.b8 121
.b8 108
.b8 116
.b8 103
.b8 118
.b8 118
.b8 52
.b8 55
.b8 52
.b8 97
.b8 53
.b8 118
.b8 121
.b8 118
.b8 54
.b8 118
.b8 106
.b8 107
.b8 50
.b8 104
.b8 114
.b8 113
.b8 51
.b8 120
.b8 122
.b8 53
.b8 111
.b8 107
.b8 109
.b8 53
.b8 51
.b8 50
.b8 106
.b8 55
.b8 99
.b8 112
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 111
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
