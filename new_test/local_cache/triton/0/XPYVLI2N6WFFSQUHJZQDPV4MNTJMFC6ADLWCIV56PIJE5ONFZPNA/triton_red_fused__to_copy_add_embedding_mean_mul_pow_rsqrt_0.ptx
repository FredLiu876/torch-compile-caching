//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 51, 107, 47, 99, 51, 107, 112, 51, 117, 105, 115, 111, 108, 113, 107, 120, 112, 107, 112, 52, 52, 121, 120, 116, 100, 52, 109, 52, 103, 109, 53, 116, 118, 122, 102, 103, 110, 98, 52, 112, 102, 122, 55, 114, 51, 55, 99, 118, 55, 108, 107, 109, 119, 104, 53, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<62>;
	.reg .b16 	%rs<51>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<103>;
	.reg .b64 	%rd<93>;
	.loc	1 18 0                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:18:0

// %bb.0:
	ld.param.u32 	%r8, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd47, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:22:28
	mov.u32 	%r9, %ctaid.x;
	.loc	1 22 33                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:22:33
	shl.b32 	%r10, %r9, 6;
	.loc	1 23 44                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 3, 6;
	bfe.u32 	%r11, %r1, 6, 3;
	.loc	1 23 23                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:23:23
	or.b32  	%r4, %r2, %r10;
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p16, %r4, %r8;
	.loc	1 28 30                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:30
	mul.wide.s32 	%rd48, %r4, 8;
	add.s64 	%rd16, %rd47, %rd48;
	.loc	1 28 35                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:35
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 23 23                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:23:23
	or.b32  	%r13, %r11, %r10;
	or.b32  	%r14, %r13, 8;
	or.b32  	%r15, %r13, 16;
	or.b32  	%r16, %r13, 24;
	or.b32  	%r17, %r13, 32;
	or.b32  	%r18, %r13, 40;
	or.b32  	%r19, %r13, 48;
	or.b32  	%r20, %r13, 56;
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p24, %r20, %r8;
	setp.lt.s32 	%p23, %r19, %r8;
	setp.lt.s32 	%p22, %r18, %r8;
	setp.lt.s32 	%p21, %r17, %r8;
	setp.lt.s32 	%p20, %r16, %r8;
	setp.lt.s32 	%p19, %r15, %r8;
	setp.lt.s32 	%p18, %r14, %r8;
	setp.lt.s32 	%p17, %r13, %r8;
	.loc	1 28 30                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:30
	mul.wide.s32 	%rd49, %r13, 8;
	add.s64 	%rd32, %rd47, %rd49;
	add.s64 	%rd34, %rd32, 64;
	add.s64 	%rd36, %rd32, 128;
	add.s64 	%rd38, %rd32, 192;
	add.s64 	%rd40, %rd32, 256;
	add.s64 	%rd42, %rd32, 320;
	add.s64 	%rd44, %rd32, 384;
	add.s64 	%rd46, %rd32, 448;
	.loc	1 28 35                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:35
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p17 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p18 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p19 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p20 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p21 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p22 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p23 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p24 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd46 + 0 ];
	// end inline asm
	.loc	1 37 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:37:22
	add.s64 	%rd50, %rd41, 128256;
	add.s64 	%rd51, %rd39, 128256;
	add.s64 	%rd52, %rd45, 128256;
	add.s64 	%rd53, %rd43, 128256;
	add.s64 	%rd54, %rd33, 128256;
	add.s64 	%rd55, %rd31, 128256;
	add.s64 	%rd56, %rd37, 128256;
	add.s64 	%rd57, %rd35, 128256;
	.loc	1 38 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:38:22
	setp.lt.s64 	%p25, %rd41, 0;
	setp.lt.s64 	%p26, %rd39, 0;
	setp.lt.s64 	%p27, %rd45, 0;
	setp.lt.s64 	%p28, %rd43, 0;
	setp.lt.s64 	%p29, %rd33, 0;
	setp.lt.s64 	%p30, %rd31, 0;
	setp.lt.s64 	%p31, %rd37, 0;
	setp.lt.s64 	%p32, %rd35, 0;
	.loc	1 39 36                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:39:36
	selp.b64 	%rd58, %rd57, %rd35, %p32;
	selp.b64 	%rd59, %rd56, %rd37, %p31;
	selp.b64 	%rd60, %rd55, %rd31, %p30;
	selp.b64 	%rd61, %rd54, %rd33, %p29;
	selp.b64 	%rd62, %rd53, %rd43, %p28;
	selp.b64 	%rd63, %rd52, %rd45, %p27;
	selp.b64 	%rd64, %rd51, %rd39, %p26;
	selp.b64 	%rd65, %rd50, %rd41, %p25;
	.loc	1 40 41                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:41
	setp.gt.u64 	%p33, %rd65, 128255;
	setp.gt.u64 	%p34, %rd64, 128255;
	setp.gt.u64 	%p35, %rd63, 128255;
	setp.gt.u64 	%p36, %rd62, 128255;
	setp.gt.u64 	%p37, %rd61, 128255;
	setp.gt.u64 	%p38, %rd60, 128255;
	setp.gt.u64 	%p39, %rd59, 128255;
	setp.gt.u64 	%p40, %rd58, 128255;
	.loc	1 40 59                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:59
	and.pred  	%p41, %p19, %p40;
	selp.u16 	%rs1, 1, 0, %p41;
	shl.b16 	%rs2, %rs1, 2;
	and.pred  	%p42, %p20, %p39;
	selp.u16 	%rs3, -1, 0, %p42;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	and.pred  	%p43, %p17, %p38;
	selp.u16 	%rs6, 1, 0, %p43;
	and.pred  	%p44, %p18, %p37;
	selp.u16 	%rs7, -1, 0, %p44;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	and.pred  	%p45, %p23, %p36;
	selp.u16 	%rs13, 1, 0, %p45;
	shl.b16 	%rs14, %rs13, 2;
	and.pred  	%p46, %p24, %p35;
	selp.u16 	%rs15, -1, 0, %p46;
	shl.b16 	%rs16, %rs15, 3;
	or.b16  	%rs17, %rs16, %rs14;
	and.pred  	%p47, %p21, %p34;
	selp.u16 	%rs18, 1, 0, %p47;
	and.pred  	%p48, %p22, %p33;
	selp.u16 	%rs19, -1, 0, %p48;
	shl.b16 	%rs20, %rs19, 1;
	or.b16  	%rs21, %rs18, %rs20;
	and.b16  	%rs22, %rs21, 3;
	or.b16  	%rs23, %rs22, %rs17;
	shl.b16 	%rs24, %rs23, 4;
	or.b16  	%rs25, %rs12, %rs24;
	and.b16  	%rs26, %rs25, 255;
	setp.ne.s16 	%p49, %rs26, 0;
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	@%p49 bra 	$L__BB0_6;
// %bb.1:                               // %.split.preheader
	.loc	1 0 69                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:0:69
	ld.param.u64 	%rd14, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	and.b32  	%r3, %r1, 63;
	or.b32  	%r5, %r10, %r3;
	shl.b32 	%r12, %r1, 3;
	and.b32  	%r6, %r12, 56;
	shl.b32 	%r21, %r4, 12;
	or.b32  	%r7, %r6, %r21;
	.loc	1 38 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:38:22
	setp.lt.s64 	%p50, %rd29, 0;
	.loc	1 41 46                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:46
	shl.b64 	%rd73, %rd29, 12;
	add.s64 	%rd74, %rd73, 525336576;
	selp.b64 	%rd75, %rd74, %rd73, %p50;
	.loc	1 30 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:30:40
	cvt.u64.u32 	%rd76, %r6;
	or.b64  	%rd2, %rd75, %rd76;
	mov.f32 	%f95, 0f00000000;
	mov.b64 	%rd90, 0;
	mov.f32 	%f96, %f95;
	mov.f32 	%f97, %f95;
	mov.f32 	%f98, %f95;
	mov.f32 	%f99, %f95;
	mov.f32 	%f100, %f95;
	mov.f32 	%f101, %f95;
	mov.f32 	%f102, %f95;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 41                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:41
	or.b64  	%rd79, %rd2, %rd90;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	shl.b64 	%rd80, %rd79, 1;
	add.s64 	%rd77, %rd11, %rd80;
	mov.b32 	%r26, 0;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r30, %r26;
	mov.u32 %r31, %r26;
	mov.u32 %r32, %r26;
	mov.u32 %r33, %r26;
	@%p16 ld.global.L1::evict_first.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd77 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs27, %rs28}, %r33;
	cvt.f32.f16 	%f27, %rs27;
	mov.b32 	{%rs29, %rs30}, %r32;
	cvt.f32.f16 	%f28, %rs30;
	cvt.f32.f16 	%f29, %rs29;
	mov.b32 	{%rs31, %rs32}, %r31;
	cvt.f32.f16 	%f30, %rs32;
	cvt.f32.f16 	%f31, %rs31;
	mov.b32 	{%rs33, %rs34}, %r30;
	cvt.f32.f16 	%f32, %rs34;
	cvt.f32.f16 	%f33, %rs33;
	cvt.f32.f16 	%f34, %rs28;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f35, %f34, %f34, %f102;
	fma.rn.f32 	%f36, %f33, %f33, %f95;
	fma.rn.f32 	%f37, %f32, %f32, %f96;
	fma.rn.f32 	%f38, %f31, %f31, %f97;
	fma.rn.f32 	%f39, %f30, %f30, %f98;
	fma.rn.f32 	%f40, %f29, %f29, %f99;
	fma.rn.f32 	%f41, %f28, %f28, %f100;
	fma.rn.f32 	%f42, %f27, %f27, %f101;
	.loc	1 46 50                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:46:50
	selp.f32 	%f101, %f42, %f101, %p16;
	selp.f32 	%f100, %f41, %f100, %p16;
	selp.f32 	%f99, %f40, %f99, %p16;
	selp.f32 	%f98, %f39, %f98, %p16;
	selp.f32 	%f97, %f38, %f97, %p16;
	selp.f32 	%f96, %f37, %f96, %p16;
	selp.f32 	%f95, %f36, %f95, %p16;
	selp.f32 	%f102, %f35, %f102, %p16;
	cvt.u32.u64 	%r34, %rd90;
	or.b32  	%r35, %r7, %r34;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	mul.wide.s32 	%rd81, %r35, 2;
	add.s64 	%rd78, %rd13, %rd81;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd78 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	.loc	1 30 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:30:40
	add.s64 	%rd4, %rd90, 64;
	setp.lt.u64 	%p53, %rd90, 4032;
	mov.u64 	%rd90, %rd4;
	@%p53 bra 	$L__BB0_2;
// %bb.3:                               // %__nv_rsqrtf.exit
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p56, %r5, %r8;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f95, %f96;
	add.f32 	%f44, %f97, %f43;
	add.f32 	%f45, %f98, %f44;
	add.f32 	%f46, %f99, %f45;
	add.f32 	%f47, %f100, %f46;
	add.f32 	%f48, %f101, %f47;
	add.f32 	%f49, %f102, %f48;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r39, %f49;
	shfl.sync.bfly.b32	%r40, %r39, 4, 31, -1;
	mov.b32 	%f50, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f51;
	shfl.sync.bfly.b32	%r42, %r41, 2, 31, -1;
	mov.b32 	%f52, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f53;
	shfl.sync.bfly.b32	%r44, %r43, 1, 31, -1;
	mov.b32 	%f54, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
$L__tmp2:
	.loc	1 53 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:53:28
	shl.b32 	%r45, %r2, 2;
	mov.u32 	%r46, global_smem;
	add.s32 	%r36, %r46, %r45;
	mov.b32 	%r37, %f55;
	mov.pred 	%p54, -1;
	// begin inline asm
	@%p54 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r47, %r3, 2;
	add.s32 	%r48, %r46, %r47;
	ld.shared.f32 	%f56, [%r48];
	mov.f32 	%f57, 0f45800000;
	.loc	1 50 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:50:21
	div.full.f32 	%f58, %f56, %f57;
	div.full.f32 	%f59, %f55, %f57;
	.loc	1 52 20                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:52:20
	add.f32 	%f60, %f58, 0f3727C5AC;
	add.f32 	%f61, %f59, 0f3727C5AC;
	.loc	1 53 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:53:28
	rsqrt.approx.ftz.f32 	%f62, %f60;
	rsqrt.approx.ftz.f32 	%f17, %f61;
	.loc	1 54 4                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:55:28
	mul.wide.s32 	%rd84, %r5, 4;
	add.s64 	%rd82, %rd10, %rd84;
	.loc	1 55 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:55:40
	and.b32  	%r49, %r1, 448;
	setp.eq.s32 	%p57, %r49, 0;
	mov.b32 	%r38, %f62;
	and.pred  	%p55, %p57, %p56;
	// begin inline asm
	@%p55 st.global.b32 [ %rd82 + 0 ], { %r38 };
	// end inline asm
	.loc	1 56 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:40
	and.b32  	%r50, %r1, 7;
	mul.wide.u32 	%rd85, %r50, 16;
	add.s64 	%rd91, %rd12, %rd85;
	mov.b64 	%rd92, -64;
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:0:40
	mov.b32 	%r55, 0;
	.loc	1 62 42                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:42
	// begin inline asm
	mov.u32 %r51, %r55;
	mov.u32 %r52, %r55;
	mov.u32 %r53, %r55;
	mov.u32 %r54, %r55;
	@%p54 ld.global.L1::evict_last.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd91 + 0 ];
	// end inline asm
	add.s64 	%rd92, %rd92, 64;
	cvt.u32.u64 	%r71, %rd92;
	or.b32  	%r72, %r7, %r71;
	.loc	1 63 36                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:36
	mul.wide.s32 	%rd89, %r72, 2;
	add.s64 	%rd87, %rd13, %rd89;
	.loc	1 63 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:53
	// begin inline asm
	mov.u32 %r59, %r55;
	mov.u32 %r60, %r55;
	mov.u32 %r61, %r55;
	mov.u32 %r62, %r55;
	@%p16 ld.global.L1::evict_first.v4.b32 { %r59, %r60, %r61, %r62 }, [ %rd87 + 0 ];
	// end inline asm
	.loc	1 68 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:29
	add.s64 	%rd88, %rd14, %rd89;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs35, %rs36}, %r51;
	cvt.f32.f16 	%f63, %rs36;
	cvt.f32.f16 	%f64, %rs35;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs37, %rs38}, %r59;
	cvt.f32.f16 	%f65, %rs37;
	cvt.f32.f16 	%f66, %rs38;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f67, %f17, %f66;
	mul.f32 	%f68, %f17, %f65;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f69, %f68, %f64;
	mul.f32 	%f70, %f67, %f63;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r67, %f70, %f69;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs39, %rs40}, %r52;
	cvt.f32.f16 	%f71, %rs40;
	cvt.f32.f16 	%f72, %rs39;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs41, %rs42}, %r60;
	cvt.f32.f16 	%f73, %rs41;
	cvt.f32.f16 	%f74, %rs42;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f75, %f17, %f74;
	mul.f32 	%f76, %f17, %f73;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f77, %f76, %f72;
	mul.f32 	%f78, %f75, %f71;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r68, %f78, %f77;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs43, %rs44}, %r53;
	cvt.f32.f16 	%f79, %rs44;
	cvt.f32.f16 	%f80, %rs43;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs45, %rs46}, %r61;
	cvt.f32.f16 	%f81, %rs45;
	cvt.f32.f16 	%f82, %rs46;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f83, %f17, %f82;
	mul.f32 	%f84, %f17, %f81;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f85, %f84, %f80;
	mul.f32 	%f86, %f83, %f79;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r69, %f86, %f85;
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	mov.b32 	{%rs47, %rs48}, %r54;
	cvt.f32.f16 	%f87, %rs48;
	cvt.f32.f16 	%f88, %rs47;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs49, %rs50}, %r62;
	cvt.f32.f16 	%f89, %rs49;
	cvt.f32.f16 	%f90, %rs50;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f91, %f17, %f90;
	mul.f32 	%f92, %f17, %f89;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f93, %f92, %f88;
	mul.f32 	%f94, %f91, %f87;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r70, %f94, %f93;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd88 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	.loc	1 56 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:40
	add.s64 	%rd91, %rd91, 128;
	setp.lt.u64 	%p61, %rd92, 4032;
	@%p61 bra 	$L__BB0_4;
// %bb.5:
	.loc	1 56 4                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:4
	ret;
$L__BB0_6:
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	mov.u64 	%rd66, assertMessage_0;
	cvta.global.u64 	%rd67, %rd66;
	mov.u64 	%rd68, assertFile_0;
	cvta.global.u64 	%rd69, %rd68;
	mov.u64 	%rd70, assertFunc_0;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd67;
	.param .b64 param1;
	st.param.b64 	[param1], %rd69;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd71;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/3k/c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 107
.b8 112
.b8 51
.b8 117
.b8 105
.b8 115
.b8 111
.b8 108
.b8 113
.b8 107
.b8 120
.b8 112
.b8 107
.b8 112
.b8 52
.b8 52
.b8 121
.b8 120
.b8 116
.b8 100
.b8 52
.b8 109
.b8 52
.b8 103
.b8 109
.b8 53
.b8 116
.b8 118
.b8 122
.b8 102
.b8 103
.b8 110
.b8 98
.b8 52
.b8 112
.b8 102
.b8 122
.b8 55
.b8 114
.b8 51
.b8 55
.b8 99
.b8 118
.b8 55
.b8 108
.b8 107
.b8 109
.b8 119
.b8 104
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
