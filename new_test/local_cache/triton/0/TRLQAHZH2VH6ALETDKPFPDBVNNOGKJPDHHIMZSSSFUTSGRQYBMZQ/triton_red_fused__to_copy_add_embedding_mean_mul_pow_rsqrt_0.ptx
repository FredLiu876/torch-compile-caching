//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0 // -- Begin function triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[73] = {46, 47, 108, 111, 99, 97, 108, 95, 99, 97, 99, 104, 101, 47, 51, 107, 47, 99, 51, 107, 112, 51, 117, 105, 115, 111, 108, 113, 107, 120, 112, 107, 112, 52, 52, 121, 120, 116, 100, 52, 109, 52, 103, 109, 53, 116, 118, 122, 102, 103, 110, 98, 52, 112, 102, 122, 55, 114, 51, 55, 99, 118, 55, 108, 107, 109, 119, 104, 53, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 50, 56, 50, 53, 54};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0
.visible .entry triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6,
	.param .u32 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<73>;
	.reg .b16 	%rs<101>;
	.reg .b32 	%r<171>;
	.reg .f32 	%f<200>;
	.reg .b64 	%rd<105>;
	.loc	1 18 0                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:18:0

// %bb.0:
	ld.param.u32 	%r13, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_6];
	ld.param.u64 	%rd43, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:22:28
	mov.u32 	%r14, %ctaid.x;
	.loc	1 23 44                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r3, %r1, 6, 3;
	.loc	1 22 33                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:22:33
	shl.b32 	%r16, %r14, 3;
	.loc	1 23 23                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:23:23
	or.b32  	%r8, %r3, %r16;
	or.b32  	%r17, %r16, 1;
	or.b32  	%r18, %r16, 2;
	or.b32  	%r19, %r16, 3;
	or.b32  	%r20, %r16, 4;
	or.b32  	%r21, %r16, 5;
	or.b32  	%r22, %r16, 6;
	or.b32  	%r23, %r16, 7;
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p8, %r8, %r13;
	setp.lt.s32 	%p16, %r23, %r13;
	setp.lt.s32 	%p15, %r22, %r13;
	setp.lt.s32 	%p14, %r21, %r13;
	setp.lt.s32 	%p13, %r20, %r13;
	setp.lt.s32 	%p12, %r19, %r13;
	setp.lt.s32 	%p11, %r18, %r13;
	setp.lt.s32 	%p10, %r17, %r13;
	setp.lt.s32 	%p9, %r16, %r13;
	.loc	1 28 30                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:30
	mul.wide.s32 	%rd45, %r8, 8;
	add.s64 	%rd12, %rd43, %rd45;
	mul.wide.s32 	%rd46, %r16, 8;
	add.s64 	%rd28, %rd43, %rd46;
	add.s64 	%rd30, %rd28, 8;
	add.s64 	%rd32, %rd28, 16;
	add.s64 	%rd34, %rd28, 24;
	mul.wide.s32 	%rd47, %r20, 8;
	add.s64 	%rd36, %rd43, %rd47;
	mul.wide.s32 	%rd48, %r21, 8;
	add.s64 	%rd38, %rd43, %rd48;
	mul.wide.s32 	%rd49, %r22, 8;
	add.s64 	%rd40, %rd43, %rd49;
	mul.wide.s32 	%rd50, %r23, 8;
	add.s64 	%rd42, %rd43, %rd50;
	.loc	1 28 35                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:28:35
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p10 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p11 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p12 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p13 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p14 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p15 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p16 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 37 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:37:22
	add.s64 	%rd51, %rd37, 128256;
	add.s64 	%rd52, %rd35, 128256;
	add.s64 	%rd53, %rd41, 128256;
	add.s64 	%rd54, %rd39, 128256;
	add.s64 	%rd55, %rd29, 128256;
	add.s64 	%rd56, %rd27, 128256;
	add.s64 	%rd57, %rd33, 128256;
	add.s64 	%rd58, %rd31, 128256;
	.loc	1 38 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:38:22
	setp.lt.s64 	%p18, %rd37, 0;
	setp.lt.s64 	%p19, %rd35, 0;
	setp.lt.s64 	%p20, %rd41, 0;
	setp.lt.s64 	%p21, %rd39, 0;
	setp.lt.s64 	%p22, %rd29, 0;
	setp.lt.s64 	%p23, %rd27, 0;
	setp.lt.s64 	%p24, %rd33, 0;
	setp.lt.s64 	%p25, %rd31, 0;
	.loc	1 39 36                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:39:36
	selp.b64 	%rd59, %rd58, %rd31, %p25;
	selp.b64 	%rd60, %rd57, %rd33, %p24;
	selp.b64 	%rd61, %rd56, %rd27, %p23;
	selp.b64 	%rd62, %rd55, %rd29, %p22;
	selp.b64 	%rd63, %rd54, %rd39, %p21;
	selp.b64 	%rd64, %rd53, %rd41, %p20;
	selp.b64 	%rd65, %rd52, %rd35, %p19;
	selp.b64 	%rd66, %rd51, %rd37, %p18;
	.loc	1 40 41                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:41
	setp.gt.u64 	%p26, %rd66, 128255;
	setp.gt.u64 	%p27, %rd65, 128255;
	setp.gt.u64 	%p28, %rd64, 128255;
	setp.gt.u64 	%p29, %rd63, 128255;
	setp.gt.u64 	%p30, %rd62, 128255;
	setp.gt.u64 	%p31, %rd61, 128255;
	setp.gt.u64 	%p32, %rd60, 128255;
	setp.gt.u64 	%p33, %rd59, 128255;
	.loc	1 40 59                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:59
	and.pred  	%p34, %p11, %p33;
	selp.u16 	%rs1, 1, 0, %p34;
	shl.b16 	%rs2, %rs1, 2;
	and.pred  	%p35, %p12, %p32;
	selp.u16 	%rs3, -1, 0, %p35;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	and.pred  	%p36, %p9, %p31;
	selp.u16 	%rs6, 1, 0, %p36;
	and.pred  	%p37, %p10, %p30;
	selp.u16 	%rs7, -1, 0, %p37;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	and.pred  	%p38, %p15, %p29;
	selp.u16 	%rs13, 1, 0, %p38;
	shl.b16 	%rs14, %rs13, 2;
	and.pred  	%p39, %p16, %p28;
	selp.u16 	%rs15, -1, 0, %p39;
	shl.b16 	%rs16, %rs15, 3;
	or.b16  	%rs17, %rs16, %rs14;
	and.pred  	%p40, %p13, %p27;
	selp.u16 	%rs18, 1, 0, %p40;
	and.pred  	%p41, %p14, %p26;
	selp.u16 	%rs19, -1, 0, %p41;
	shl.b16 	%rs20, %rs19, 1;
	or.b16  	%rs21, %rs18, %rs20;
	and.b16  	%rs22, %rs21, 3;
	or.b16  	%rs23, %rs22, %rs17;
	shl.b16 	%rs24, %rs23, 4;
	or.b16  	%rs25, %rs12, %rs24;
	and.b16  	%rs26, %rs25, 255;
	setp.ne.s16 	%p42, %rs26, 0;
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	@%p42 bra 	$L__BB0_4;
// %bb.1:                               // %.split
	.loc	1 0 69                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:0:69
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_5];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_4];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_3];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_0];
	ld.param.u64 	%rd44, [triton_red_fused__to_copy_add_embedding_mean_mul_pow_rsqrt_0_param_2];
	shr.u32 	%r2, %r1, 5;
	and.b32  	%r4, %r1, 31;
	and.b32  	%r5, %r1, 7;
	shl.b32 	%r15, %r1, 3;
	and.b32  	%r6, %r15, 504;
	and.b32  	%r7, %r1, 511;
	or.b32  	%r9, %r16, %r5;
	setp.lt.s64 	%p17, %rd25, 0;
	shl.b64 	%rd67, %rd25, 12;
	add.s64 	%rd68, %rd67, 525336576;
	selp.b64 	%rd69, %rd68, %rd67, %p17;
	shl.b32 	%r24, %r8, 12;
	or.b32  	%r10, %r6, %r24;
	shl.b64 	%rd70, %rd69, 1;
	add.s64 	%rd1, %rd44, %rd70;
	.loc	1 24 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:24:21
	setp.lt.s32 	%p64, %r9, %r13;
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	mul.wide.u32 	%rd95, %r6, 2;
	add.s64 	%rd77, %rd1, %rd95;
	mov.b32 	%r116, 0;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r33, %r116;
	mov.u32 %r34, %r116;
	mov.u32 %r35, %r116;
	mov.u32 %r36, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd77 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs27, %rs28}, %r36;
	cvt.f32.f16 	%f3, %rs28;
	cvt.f32.f16 	%f4, %rs27;
	mov.b32 	{%rs29, %rs30}, %r35;
	cvt.f32.f16 	%f5, %rs30;
	cvt.f32.f16 	%f6, %rs29;
	mov.b32 	{%rs31, %rs32}, %r34;
	cvt.f32.f16 	%f7, %rs32;
	cvt.f32.f16 	%f8, %rs31;
	mov.b32 	{%rs33, %rs34}, %r33;
	cvt.f32.f16 	%f9, %rs34;
	cvt.f32.f16 	%f10, %rs33;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	mul.wide.s32 	%rd96, %r10, 2;
	add.s64 	%rd78, %rd9, %rd96;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd78 + 0 ], { %r33, %r34, %r35, %r36 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd79, %rd77, 1024;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r45, %r116;
	mov.u32 %r46, %r116;
	mov.u32 %r47, %r116;
	mov.u32 %r48, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r45, %r46, %r47, %r48 }, [ %rd79 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs35, %rs36}, %r45;
	cvt.f32.f16 	%f11, %rs35;
	cvt.f32.f16 	%f12, %rs36;
	mov.b32 	{%rs37, %rs38}, %r46;
	cvt.f32.f16 	%f13, %rs37;
	cvt.f32.f16 	%f14, %rs38;
	mov.b32 	{%rs39, %rs40}, %r47;
	cvt.f32.f16 	%f15, %rs39;
	cvt.f32.f16 	%f16, %rs40;
	mov.b32 	{%rs41, %rs42}, %r48;
	cvt.f32.f16 	%f17, %rs41;
	cvt.f32.f16 	%f18, %rs42;
	.loc	1 43 22                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:43:22
	mul.f32 	%f19, %f18, %f18;
	mul.f32 	%f20, %f17, %f17;
	mul.f32 	%f21, %f16, %f16;
	mul.f32 	%f22, %f15, %f15;
	mul.f32 	%f23, %f14, %f14;
	mul.f32 	%f24, %f13, %f13;
	mul.f32 	%f25, %f12, %f12;
	mul.f32 	%f26, %f11, %f11;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f27, %f10, %f10, %f26;
	fma.rn.f32 	%f28, %f9, %f9, %f25;
	fma.rn.f32 	%f29, %f8, %f8, %f24;
	fma.rn.f32 	%f30, %f7, %f7, %f23;
	fma.rn.f32 	%f31, %f6, %f6, %f22;
	fma.rn.f32 	%f32, %f5, %f5, %f21;
	fma.rn.f32 	%f33, %f4, %f4, %f20;
	fma.rn.f32 	%f34, %f3, %f3, %f19;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd80, %rd78, 1024;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd80 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd81, %rd77, 2048;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r57, %r116;
	mov.u32 %r58, %r116;
	mov.u32 %r59, %r116;
	mov.u32 %r60, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r57, %r58, %r59, %r60 }, [ %rd81 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs43, %rs44}, %r57;
	cvt.f32.f16 	%f35, %rs43;
	cvt.f32.f16 	%f36, %rs44;
	mov.b32 	{%rs45, %rs46}, %r58;
	cvt.f32.f16 	%f37, %rs45;
	cvt.f32.f16 	%f38, %rs46;
	mov.b32 	{%rs47, %rs48}, %r59;
	cvt.f32.f16 	%f39, %rs47;
	cvt.f32.f16 	%f40, %rs48;
	mov.b32 	{%rs49, %rs50}, %r60;
	cvt.f32.f16 	%f41, %rs49;
	cvt.f32.f16 	%f42, %rs50;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f43, %f42, %f42, %f34;
	fma.rn.f32 	%f44, %f41, %f41, %f33;
	fma.rn.f32 	%f45, %f40, %f40, %f32;
	fma.rn.f32 	%f46, %f39, %f39, %f31;
	fma.rn.f32 	%f47, %f38, %f38, %f30;
	fma.rn.f32 	%f48, %f37, %f37, %f29;
	fma.rn.f32 	%f49, %f36, %f36, %f28;
	fma.rn.f32 	%f50, %f35, %f35, %f27;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd82, %rd78, 2048;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd82 + 0 ], { %r57, %r58, %r59, %r60 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd83, %rd77, 3072;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r69, %r116;
	mov.u32 %r70, %r116;
	mov.u32 %r71, %r116;
	mov.u32 %r72, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r69, %r70, %r71, %r72 }, [ %rd83 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs51, %rs52}, %r72;
	cvt.f32.f16 	%f51, %rs52;
	cvt.f32.f16 	%f52, %rs51;
	mov.b32 	{%rs53, %rs54}, %r71;
	cvt.f32.f16 	%f53, %rs54;
	cvt.f32.f16 	%f54, %rs53;
	mov.b32 	{%rs55, %rs56}, %r70;
	cvt.f32.f16 	%f55, %rs56;
	cvt.f32.f16 	%f56, %rs55;
	mov.b32 	{%rs57, %rs58}, %r69;
	cvt.f32.f16 	%f57, %rs58;
	cvt.f32.f16 	%f58, %rs57;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f59, %f58, %f58, %f50;
	fma.rn.f32 	%f60, %f57, %f57, %f49;
	fma.rn.f32 	%f61, %f56, %f56, %f48;
	fma.rn.f32 	%f62, %f55, %f55, %f47;
	fma.rn.f32 	%f63, %f54, %f54, %f46;
	fma.rn.f32 	%f64, %f53, %f53, %f45;
	fma.rn.f32 	%f65, %f52, %f52, %f44;
	fma.rn.f32 	%f66, %f51, %f51, %f43;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd84, %rd78, 3072;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd84 + 0 ], { %r69, %r70, %r71, %r72 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd85, %rd77, 4096;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r81, %r116;
	mov.u32 %r82, %r116;
	mov.u32 %r83, %r116;
	mov.u32 %r84, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r81, %r82, %r83, %r84 }, [ %rd85 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs59, %rs60}, %r81;
	cvt.f32.f16 	%f67, %rs59;
	cvt.f32.f16 	%f68, %rs60;
	mov.b32 	{%rs61, %rs62}, %r82;
	cvt.f32.f16 	%f69, %rs61;
	cvt.f32.f16 	%f70, %rs62;
	mov.b32 	{%rs63, %rs64}, %r83;
	cvt.f32.f16 	%f71, %rs63;
	cvt.f32.f16 	%f72, %rs64;
	mov.b32 	{%rs65, %rs66}, %r84;
	cvt.f32.f16 	%f73, %rs65;
	cvt.f32.f16 	%f74, %rs66;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f75, %f74, %f74, %f66;
	fma.rn.f32 	%f76, %f73, %f73, %f65;
	fma.rn.f32 	%f77, %f72, %f72, %f64;
	fma.rn.f32 	%f78, %f71, %f71, %f63;
	fma.rn.f32 	%f79, %f70, %f70, %f62;
	fma.rn.f32 	%f80, %f69, %f69, %f61;
	fma.rn.f32 	%f81, %f68, %f68, %f60;
	fma.rn.f32 	%f82, %f67, %f67, %f59;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd86, %rd78, 4096;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd86 + 0 ], { %r81, %r82, %r83, %r84 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd87, %rd77, 5120;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r93, %r116;
	mov.u32 %r94, %r116;
	mov.u32 %r95, %r116;
	mov.u32 %r96, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r93, %r94, %r95, %r96 }, [ %rd87 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs67, %rs68}, %r96;
	cvt.f32.f16 	%f83, %rs68;
	cvt.f32.f16 	%f84, %rs67;
	mov.b32 	{%rs69, %rs70}, %r95;
	cvt.f32.f16 	%f85, %rs70;
	cvt.f32.f16 	%f86, %rs69;
	mov.b32 	{%rs71, %rs72}, %r94;
	cvt.f32.f16 	%f87, %rs72;
	cvt.f32.f16 	%f88, %rs71;
	mov.b32 	{%rs73, %rs74}, %r93;
	cvt.f32.f16 	%f89, %rs74;
	cvt.f32.f16 	%f90, %rs73;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f91, %f90, %f90, %f82;
	fma.rn.f32 	%f92, %f89, %f89, %f81;
	fma.rn.f32 	%f93, %f88, %f88, %f80;
	fma.rn.f32 	%f94, %f87, %f87, %f79;
	fma.rn.f32 	%f95, %f86, %f86, %f78;
	fma.rn.f32 	%f96, %f85, %f85, %f77;
	fma.rn.f32 	%f97, %f84, %f84, %f76;
	fma.rn.f32 	%f98, %f83, %f83, %f75;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd88, %rd78, 5120;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd88 + 0 ], { %r93, %r94, %r95, %r96 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd89, %rd77, 6144;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r105, %r116;
	mov.u32 %r106, %r116;
	mov.u32 %r107, %r116;
	mov.u32 %r108, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r105, %r106, %r107, %r108 }, [ %rd89 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs75, %rs76}, %r105;
	cvt.f32.f16 	%f99, %rs75;
	cvt.f32.f16 	%f100, %rs76;
	mov.b32 	{%rs77, %rs78}, %r106;
	cvt.f32.f16 	%f101, %rs77;
	cvt.f32.f16 	%f102, %rs78;
	mov.b32 	{%rs79, %rs80}, %r107;
	cvt.f32.f16 	%f103, %rs79;
	cvt.f32.f16 	%f104, %rs80;
	mov.b32 	{%rs81, %rs82}, %r108;
	cvt.f32.f16 	%f105, %rs81;
	cvt.f32.f16 	%f106, %rs82;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f107, %f106, %f106, %f98;
	fma.rn.f32 	%f108, %f105, %f105, %f97;
	fma.rn.f32 	%f109, %f104, %f104, %f96;
	fma.rn.f32 	%f110, %f103, %f103, %f95;
	fma.rn.f32 	%f111, %f102, %f102, %f94;
	fma.rn.f32 	%f112, %f101, %f101, %f93;
	fma.rn.f32 	%f113, %f100, %f100, %f92;
	fma.rn.f32 	%f114, %f99, %f99, %f91;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd90, %rd78, 6144;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd90 + 0 ], { %r105, %r106, %r107, %r108 };
	// end inline asm
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	bar.sync 	0;
	.loc	1 41 34                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:34
	add.s64 	%rd91, %rd77, 7168;
	.loc	1 41 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:53
	// begin inline asm
	mov.u32 %r117, %r116;
	mov.u32 %r118, %r116;
	mov.u32 %r119, %r116;
	mov.u32 %r120, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r117, %r118, %r119, %r120 }, [ %rd91 + 0 ];
	// end inline asm
	.loc	1 41 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:41:115
	mov.b32 	{%rs83, %rs84}, %r120;
	cvt.f32.f16 	%f115, %rs84;
	cvt.f32.f16 	%f116, %rs83;
	mov.b32 	{%rs85, %rs86}, %r119;
	cvt.f32.f16 	%f117, %rs86;
	cvt.f32.f16 	%f118, %rs85;
	mov.b32 	{%rs87, %rs88}, %r118;
	cvt.f32.f16 	%f119, %rs88;
	cvt.f32.f16 	%f120, %rs87;
	mov.b32 	{%rs89, %rs90}, %r117;
	cvt.f32.f16 	%f121, %rs90;
	cvt.f32.f16 	%f122, %rs89;
	.loc	1 45 25                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:45:25
	fma.rn.f32 	%f123, %f122, %f122, %f114;
	fma.rn.f32 	%f124, %f121, %f121, %f113;
	fma.rn.f32 	%f125, %f120, %f120, %f112;
	fma.rn.f32 	%f126, %f119, %f119, %f111;
	fma.rn.f32 	%f127, %f118, %f118, %f110;
	fma.rn.f32 	%f128, %f117, %f117, %f109;
	fma.rn.f32 	%f129, %f116, %f116, %f108;
	fma.rn.f32 	%f130, %f115, %f115, %f107;
	.loc	1 46 50                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:46:50
	selp.f32 	%f131, %f130, 0f00000000, %p8;
	selp.f32 	%f132, %f129, 0f00000000, %p8;
	selp.f32 	%f133, %f128, 0f00000000, %p8;
	selp.f32 	%f134, %f127, 0f00000000, %p8;
	selp.f32 	%f135, %f126, 0f00000000, %p8;
	selp.f32 	%f136, %f125, 0f00000000, %p8;
	selp.f32 	%f137, %f124, 0f00000000, %p8;
	selp.f32 	%f138, %f123, 0f00000000, %p8;
	.loc	1 47 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:29
	add.s64 	%rd92, %rd78, 7168;
	.loc	1 47 52                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:47:52
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd92 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f138, %f137;
	add.f32 	%f140, %f136, %f139;
	add.f32 	%f141, %f135, %f140;
	add.f32 	%f142, %f134, %f141;
	add.f32 	%f143, %f133, %f142;
	add.f32 	%f144, %f132, %f143;
	add.f32 	%f145, %f131, %f144;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r130, %f145;
	shfl.sync.bfly.b32	%r131, %r130, 16, 31, -1;
	mov.b32 	%f146, %r131;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f147, %f145, %f146;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r132, %f147;
	shfl.sync.bfly.b32	%r133, %r132, 8, 31, -1;
	mov.b32 	%f148, %r133;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f149, %f147, %f148;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r134, %f149;
	shfl.sync.bfly.b32	%r135, %r134, 4, 31, -1;
	mov.b32 	%f150, %r135;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f151, %f149, %f150;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r136, %f151;
	shfl.sync.bfly.b32	%r137, %r136, 2, 31, -1;
	mov.b32 	%f152, %r137;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f153, %f151, %f152;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r138, %f153;
	shfl.sync.bfly.b32	%r139, %r138, 1, 31, -1;
	mov.b32 	%f154, %r139;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f155, %f153, %f154;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r140, %r2, 1;
	setp.eq.s32 	%p59, %r4, 0;
	shl.b32 	%r141, %r140, 2;
	shl.b32 	%r142, %r3, 3;
	or.b32  	%r143, %r142, %r141;
	mov.u32 	%r144, global_smem;
	add.s32 	%r121, %r144, %r143;
	mov.b32 	%r122, %f155;
	// begin inline asm
	@%p59 st.shared.b32 [ %r121 + 0 ], %r122;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p60, %r1, 16;
	shl.b32 	%r145, %r1, 2;
	add.s32 	%r124, %r144, %r145;
	// begin inline asm
	@%p60 ld.shared.b32 %r123, [ %r124 + 0 ];
	// end inline asm
	mov.b32 	%f156, %r123;
	shfl.sync.bfly.b32	%r146, %r123, 1, 31, -1;
	mov.b32 	%f157, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r147, %r1, 1;
	setp.eq.b32 	%p65, %r147, 1;
	not.pred 	%p66, %p65;
	and.pred  	%p61, %p60, %p66;
	mov.b32 	%r126, %f158;
	// begin inline asm
	@%p61 st.shared.b32 [ %r124 + 0 ], %r126;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r148, %r144, %r142;
	ld.shared.f32 	%f159, [%r148];
$L__tmp2:
	.loc	1 53 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:53:28
	bar.sync 	0;
	shl.b32 	%r149, %r3, 2;
	sub.s32 	%r127, %r148, %r149;
	mov.b32 	%r128, %f159;
	mov.pred 	%p62, -1;
	// begin inline asm
	@%p62 st.shared.b32 [ %r127 + 0 ], %r128;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r150, %r5, 2;
	add.s32 	%r151, %r144, %r150;
	ld.shared.f32 	%f160, [%r151];
	mov.f32 	%f161, 0f45800000;
	.loc	1 50 21                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:50:21
	div.full.f32 	%f162, %f160, %f161;
	div.full.f32 	%f163, %f159, %f161;
	.loc	1 52 20                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:52:20
	add.f32 	%f164, %f162, 0f3727C5AC;
	add.f32 	%f165, %f163, 0f3727C5AC;
	.loc	1 53 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:53:28
	rsqrt.approx.ftz.f32 	%f166, %f164;
	rsqrt.approx.ftz.f32 	%f1, %f165;
	.loc	1 54 4                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:55:28
	mul.wide.s32 	%rd97, %r9, 4;
	add.s64 	%rd93, %rd7, %rd97;
	.loc	1 55 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:55:40
	and.b32  	%r152, %r1, 504;
	setp.eq.s32 	%p67, %r152, 0;
	mov.b32 	%r129, %f166;
	and.pred  	%p63, %p67, %p64;
	// begin inline asm
	@%p63 st.global.b32 [ %rd93 + 0 ], { %r129 };
	// end inline asm
	shl.b32 	%r153, %r7, 2;
	add.s32 	%r163, %r144, %r153;
	shl.b32 	%r154, %r6, 2;
	add.s32 	%r12, %r144, %r154;
	.loc	1 56 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:40
	mul.wide.u32 	%rd98, %r7, 2;
	add.s64 	%rd103, %rd8, %rd98;
	mov.b64 	%rd104, -512;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:0:40
	mov.b16 	%rs92, 0;
	.loc	1 62 42                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:42
	// begin inline asm
	mov.u16 %rs91, %rs92;
	@%p62 ld.global.L1::evict_last.b16 { %rs91 }, [ %rd103 + 0 ];
	// end inline asm
	.loc	1 62 95                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:62:95
	cvt.f32.f16 	%f167, %rs91;
	.loc	1 63 43                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:43
	add.s64 	%rd104, %rd104, 512;
	cvt.u32.u64 	%r169, %rd104;
	or.b32  	%r170, %r10, %r169;
	.loc	1 63 36                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:36
	mul.wide.s32 	%rd102, %r170, 2;
	add.s64 	%rd100, %rd9, %rd102;
	.loc	1 63 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:53
	// begin inline asm
	mov.u32 %r155, %r116;
	mov.u32 %r156, %r116;
	mov.u32 %r157, %r116;
	mov.u32 %r158, %r116;
	@%p8 ld.global.L1::evict_first.v4.b32 { %r155, %r156, %r157, %r158 }, [ %rd100 + 0 ];
	// end inline asm
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	bar.sync 	0;
	mov.b32 	%r164, %f167;
	// begin inline asm
	@%p62 st.shared.b32 [ %r163 + 0 ], %r164;
	// end inline asm
	bar.sync 	0;
	.loc	1 68 29                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:29
	add.s64 	%rd101, %rd10, %rd102;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs93, %rs94}, %r155;
	cvt.f32.f16 	%f168, %rs93;
	cvt.f32.f16 	%f169, %rs94;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f170, %f1, %f169;
	mul.f32 	%f171, %f1, %f168;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	ld.shared.v4.f32 	{%f172, %f173, %f174, %f175}, [%r12];
	mul.f32 	%f176, %f172, %f171;
	mul.f32 	%f177, %f173, %f170;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r165, %f177, %f176;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs95, %rs96}, %r156;
	cvt.f32.f16 	%f178, %rs95;
	cvt.f32.f16 	%f179, %rs96;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f180, %f1, %f179;
	mul.f32 	%f181, %f1, %f178;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f182, %f174, %f181;
	mul.f32 	%f183, %f175, %f180;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r166, %f183, %f182;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs97, %rs98}, %r157;
	cvt.f32.f16 	%f184, %rs97;
	cvt.f32.f16 	%f185, %rs98;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f186, %f1, %f185;
	mul.f32 	%f187, %f1, %f184;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	ld.shared.v4.f32 	{%f188, %f189, %f190, %f191}, [%r12+16];
	mul.f32 	%f192, %f187, %f188;
	mul.f32 	%f193, %f186, %f189;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r167, %f193, %f192;
	.loc	1 63 115                        // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:63:115
	mov.b32 	{%rs99, %rs100}, %r158;
	cvt.f32.f16 	%f194, %rs99;
	cvt.f32.f16 	%f195, %rs100;
	.loc	1 65 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:65:24
	mul.f32 	%f196, %f1, %f195;
	mul.f32 	%f197, %f1, %f194;
	.loc	1 67 24                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:67:24
	mul.f32 	%f198, %f197, %f190;
	mul.f32 	%f199, %f196, %f191;
	.loc	1 68 53                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:68:53
	cvt.rn.f16x2.f32 	%r168, %f199, %f198;
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd101 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	.loc	1 56 40                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:40
	add.s64 	%rd103, %rd103, 1024;
	setp.lt.u64 	%p72, %rd104, 3584;
	@%p72 bra 	$L__BB0_2;
// %bb.3:
	.loc	1 56 4                          // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:56:4
	ret;
$L__BB0_4:
	.loc	1 40 69                         // c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py:40:69
	mov.u64 	%rd71, assertMessage_0;
	cvta.global.u64 	%rd72, %rd71;
	mov.u64 	%rd73, assertFile_0;
	cvta.global.u64 	%rd74, %rd73;
	mov.u64 	%rd75, assertFunc_0;
	cvta.global.u64 	%rd76, %rd75;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd72;
	.param .b64 param1;
	st.param.b64 	[param1], %rd74;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd76;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/3k/c3kp3uisolqkxpkp44yxtd4m4gm5tvzfgnb4pfz7r37cv7lkmwh5.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 107
.b8 112
.b8 51
.b8 117
.b8 105
.b8 115
.b8 111
.b8 108
.b8 113
.b8 107
.b8 120
.b8 112
.b8 107
.b8 112
.b8 52
.b8 52
.b8 121
.b8 120
.b8 116
.b8 100
.b8 52
.b8 109
.b8 52
.b8 103
.b8 109
.b8 53
.b8 116
.b8 118
.b8 122
.b8 102
.b8 103
.b8 110
.b8 98
.b8 52
.b8 112
.b8 102
.b8 122
.b8 55
.b8 114
.b8 51
.b8 55
.b8 99
.b8 118
.b8 55
.b8 108
.b8 107
.b8 109
.b8 119
.b8 104
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
