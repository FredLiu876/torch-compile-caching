; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_mul_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 2, !dbg !11
  %11 = and i32 %10, 508, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = or disjoint i32 %12, 1, !dbg !12
  %14 = or disjoint i32 %12, 2, !dbg !12
  %15 = or disjoint i32 %12, 3, !dbg !12
  %16 = icmp slt i32 %12, %4, !dbg !13
  %17 = sdiv i32 %12, 128, !dbg !14
  %18 = mul i32 %17, 128, !dbg !15
  %.decomposed = sub i32 %12, %18, !dbg !15
  %19 = srem i32 %13, 128, !dbg !15
  %20 = srem i32 %14, 128, !dbg !15
  %21 = srem i32 %15, 128, !dbg !15
  %22 = sdiv i32 %12, 1024, !dbg !16
  %23 = shl i32 %17, 9, !dbg !17
  %24 = add i32 %23, %.decomposed, !dbg !18
  %25 = sext i32 %24 to i64, !dbg !19
  %26 = getelementptr half, ptr addrspace(1) %0, i64 %25, !dbg !19
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %16) #4, !dbg !20
  %28 = add i32 %24, 128, !dbg !21
  %29 = sext i32 %28 to i64, !dbg !22
  %30 = getelementptr half, ptr addrspace(1) %0, i64 %29, !dbg !22
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 %16) #4, !dbg !23
  %32 = add i32 %24, 256, !dbg !24
  %33 = sext i32 %32 to i64, !dbg !25
  %34 = getelementptr half, ptr addrspace(1) %0, i64 %33, !dbg !25
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 %16) #4, !dbg !26
  %36 = add i32 %24, 384, !dbg !27
  %37 = sext i32 %36 to i64, !dbg !28
  %38 = getelementptr half, ptr addrspace(1) %0, i64 %37, !dbg !28
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %38, i1 %16) #4, !dbg !29
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !30
  %40 = srem i8 %.lhs.trunc, 64, !dbg !30
  %.sext = sext i8 %40 to i32, !dbg !30
  %.lhs.trunc166 = trunc nsw i32 %19 to i8, !dbg !30
  %41 = srem i8 %.lhs.trunc166, 64, !dbg !30
  %.sext167 = sext i8 %41 to i32, !dbg !30
  %.lhs.trunc168 = trunc nsw i32 %20 to i8, !dbg !30
  %42 = srem i8 %.lhs.trunc168, 64, !dbg !30
  %.sext169 = sext i8 %42 to i32, !dbg !30
  %.lhs.trunc170 = trunc nsw i32 %21 to i8, !dbg !30
  %43 = srem i8 %.lhs.trunc170, 64, !dbg !30
  %.sext171 = sext i8 %43 to i32, !dbg !30
  %44 = mul i32 %3, %.sext, !dbg !31
  %45 = mul i32 %3, %.sext167, !dbg !31
  %46 = mul i32 %3, %.sext169, !dbg !31
  %47 = mul i32 %3, %.sext171, !dbg !31
  %48 = add i32 %44, %22, !dbg !32
  %49 = add i32 %45, %22, !dbg !32
  %50 = add i32 %46, %22, !dbg !32
  %51 = add i32 %47, %22, !dbg !32
  %52 = sext i32 %48 to i64, !dbg !33
  %53 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !33
  %54 = sext i32 %49 to i64, !dbg !33
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !33
  %56 = sext i32 %50 to i64, !dbg !33
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !33
  %58 = sext i32 %51 to i64, !dbg !33
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !33
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %16) #4, !dbg !34
  %61 = bitcast i32 %60 to float, !dbg !34
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %16) #4, !dbg !34
  %63 = bitcast i32 %62 to float, !dbg !34
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %16) #4, !dbg !34
  %65 = bitcast i32 %64 to float, !dbg !34
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %16) #4, !dbg !34
  %67 = bitcast i32 %66 to float, !dbg !34
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !35
  %68 = fmul float %61, 0x3FE45F3060000000, !dbg !35
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i = icmp eq i32 %69, 0, !dbg !35
  %70 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %68) #4, !dbg !35
  %71 = tail call i32 @llvm.nvvm.f2i.rn(float %68) #4, !dbg !35
  %.01.i = select i1 %.not.i, i32 %71, i32 %70, !dbg !35
  %72 = sitofp i32 %.01.i to float, !dbg !35
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i = icmp eq i32 %73, 0, !dbg !35
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float 0xBFF921FB40000000, float %61) #4, !dbg !35
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %72, float 0xBFF921FB40000000, float %61) #4, !dbg !35
  %.02.i = select i1 %.not15.i, float %75, float %74, !dbg !35
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i = icmp eq i32 %76, 0, !dbg !35
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float 0xBE74442D00000000, float %.02.i) #4, !dbg !35
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %72, float 0xBE74442D00000000, float %.02.i) #4, !dbg !35
  %.03.i = select i1 %.not16.i, float %78, float %77, !dbg !35
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i = icmp eq i32 %79, 0, !dbg !35
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !35
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %72, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !35
  %.04.i = select i1 %.not17.i, float %81, float %80, !dbg !35
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i = icmp eq i32 %82, 0, !dbg !35
  %83 = tail call float @llvm.nvvm.fabs.ftz.f(float %61) #4, !dbg !35
  %84 = tail call float @llvm.nvvm.fabs.f(float %61) #4, !dbg !35
  %.06.i = select i1 %.not18.i, float %84, float %83, !dbg !35
  %85 = fcmp ult float %.06.i, 1.056150e+05, !dbg !35
  br i1 %85, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !35

__nv_isinff.exit.i.i.i:                           ; preds = %6
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i = icmp eq i32 %86, 0, !dbg !35
  %.07.i = select i1 %.not19.i, float %84, float %83, !dbg !35
  %87 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !35
  br i1 %87, label %__nv_fmul_rn.exit.i.i.i, label %91, !dbg !35

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i = icmp eq i32 %88, 0, !dbg !35
  %89 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %61, float 0.000000e+00) #4, !dbg !35
  %90 = tail call float @llvm.nvvm.mul.rn.f(float %61, float 0.000000e+00) #4, !dbg !35
  %.08.i = select i1 %.not27.i, float %90, float %89, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !35

91:                                               ; preds = %__nv_isinff.exit.i.i.i
  %92 = lshr i32 %60, 23, !dbg !35
  %93 = and i32 %92, 224, !dbg !35
  %94 = add nsw i32 %93, -128, !dbg !35
  %95 = shl i32 %60, 8, !dbg !35
  %96 = or i32 %95, -2147483648, !dbg !35
  %97 = lshr exact i32 %94, 5, !dbg !35
  br label %98, !dbg !35

98:                                               ; preds = %91, %98
  %indvars.iv = phi i64 [ 0, %91 ], [ %indvars.iv.next, %98 ]
  %hi.i.i.i.0.i172 = phi i32 [ 0, %91 ], [ %103, %98 ]
  %99 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !35
  %100 = load i32, ptr addrspace(1) %99, align 4, !dbg !35
  %101 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %100, i32 %96, i32 %hi.i.i.i.0.i172) #5, !dbg !35, !srcloc !36
  %102 = extractvalue { i32, i32 } %101, 0, !dbg !35
  %103 = extractvalue { i32, i32 } %101, 1, !dbg !35
  %104 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !35
  store i32 %102, ptr %104, align 4, !dbg !35
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !35
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !35
  br i1 %exitcond.not, label %105, label %98, !dbg !35, !llvm.loop !37

105:                                              ; preds = %98
  %106 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !35
  store i32 %103, ptr %106, align 4, !dbg !35
  %107 = sub nsw i32 6, %97, !dbg !35
  %108 = sext i32 %107 to i64, !dbg !35
  %109 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %108, !dbg !35
  %110 = load i32, ptr %109, align 4, !dbg !35
  %111 = sub nsw i32 5, %97, !dbg !35
  %112 = sext i32 %111 to i64, !dbg !35
  %113 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %112, !dbg !35
  %114 = load i32, ptr %113, align 4, !dbg !35
  %115 = freeze i32 %114, !dbg !35
  %116 = and i32 %60, 260046848, !dbg !35
  %.not20.i = icmp eq i32 %116, 0, !dbg !35
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %117, !dbg !35

117:                                              ; preds = %105
  %118 = sub nsw i32 4, %97, !dbg !35
  %119 = sext i32 %118 to i64, !dbg !35
  %120 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %119, !dbg !35
  %121 = load i32, ptr %120, align 4, !dbg !35
  %122 = tail call i32 @llvm.fshl.i32(i32 %115, i32 %121, i32 %92), !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %117, %105
  %lo.i.i.i.0.i = phi i32 [ %122, %117 ], [ %115, %105 ], !dbg !35
  %123 = tail call i32 @llvm.fshl.i32(i32 %110, i32 %115, i32 %92), !dbg !35
  %124 = lshr i32 %123, 30, !dbg !35
  %125 = tail call i32 @llvm.fshl.i32(i32 %123, i32 %lo.i.i.i.0.i, i32 2), !dbg !35
  %126 = shl i32 %lo.i.i.i.0.i, 2, !dbg !35
  %127 = lshr i32 %125, 31, !dbg !35
  %128 = add nuw nsw i32 %127, %124, !dbg !35
  %129 = sub nsw i32 0, %128, !dbg !35
  %.not2123.i = icmp slt i32 %60, 0, !dbg !35
  %spec.select.i = select i1 %.not2123.i, i32 %129, i32 %128, !dbg !35
  %130 = xor i32 %125, %60, !dbg !35
  %.lobit.i = ashr i32 %125, 31, !dbg !35
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %125, !dbg !35
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %126, !dbg !35
  %131 = zext i32 %hi.i.i.i.2.i to i64, !dbg !35
  %132 = shl nuw i64 %131, 32, !dbg !35
  %133 = zext i32 %lo.i.i.i.1.i to i64, !dbg !35
  %134 = or disjoint i64 %132, %133, !dbg !35
  %135 = sitofp i64 %134 to double, !dbg !35
  %136 = fmul double %135, 0x3BF921FB54442D19, !dbg !35
  %137 = fptrunc double %136 to float, !dbg !35
  %138 = fneg float %137, !dbg !35
  %.not2526.i = icmp slt i32 %130, 0, !dbg !35
  %r.i.i.i.0.i = select i1 %.not2526.i, float %138, float %137, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !35

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %6
  %i.i.1.i = phi i32 [ %.01.i, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !35
  %t.i.i.1.i = phi float [ %.04.i, %6 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !35
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i = icmp eq i32 %139, 0, !dbg !35
  %140 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !35
  %141 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !35
  %.011.i = select i1 %.not28.i, float %141, float %140, !dbg !35
  %142 = and i32 %i.i.1.i, 1, !dbg !35
  %.not29.i = icmp eq i32 %142, 0, !dbg !35
  %143 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !35
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i = icmp eq i32 %144, 0, !dbg !35
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %143, float 0.000000e+00) #4, !dbg !35
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %143, float 0.000000e+00) #4, !dbg !35
  %.012.i = select i1 %.not30.i, float %146, float %145, !dbg !35
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !35

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i = icmp eq i32 %147, 0, !dbg !35
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !35
  %149 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i = select i1 %.not31.i, float %149, float %148, !dbg !35
  br label %__internal_fmad.exit2.i.i.i, !dbg !35

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %150 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %151 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %152 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i = icmp eq i32 %153, 0, !dbg !35
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float %.011.i, float %151) #4, !dbg !35
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %152, float %.011.i, float %151) #4, !dbg !35
  %.010.i = select i1 %.not32.i, float %155, float %154, !dbg !35
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i = icmp eq i32 %156, 0, !dbg !35
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %150) #4, !dbg !35
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %150) #4, !dbg !35
  %.09.i = select i1 %.not33.i, float %158, float %157, !dbg !35
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i = icmp eq i32 %159, 0, !dbg !35
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %143) #4, !dbg !35
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %143) #4, !dbg !35
  %.05.i = select i1 %.not34.i, float %161, float %160, !dbg !35
  %162 = and i32 %i.i.1.i, 2, !dbg !35
  %.not35.i = icmp eq i32 %162, 0, !dbg !35
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !35

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i = icmp eq i32 %163, 0, !dbg !35
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i = select i1 %.not36.i, float %165, float %164, !dbg !35
  br label %__nv_sinf.exit, !dbg !35

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !35
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !35
  %166 = fmul float %63, 0x3FE45F3060000000, !dbg !35
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i2 = icmp eq i32 %167, 0, !dbg !35
  %168 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %166) #4, !dbg !35
  %169 = tail call i32 @llvm.nvvm.f2i.rn(float %166) #4, !dbg !35
  %.01.i3 = select i1 %.not.i2, i32 %169, i32 %168, !dbg !35
  %170 = sitofp i32 %.01.i3 to float, !dbg !35
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i4 = icmp eq i32 %171, 0, !dbg !35
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float 0xBFF921FB40000000, float %63) #4, !dbg !35
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %170, float 0xBFF921FB40000000, float %63) #4, !dbg !35
  %.02.i5 = select i1 %.not15.i4, float %173, float %172, !dbg !35
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i6 = icmp eq i32 %174, 0, !dbg !35
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !35
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %170, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !35
  %.03.i7 = select i1 %.not16.i6, float %176, float %175, !dbg !35
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i8 = icmp eq i32 %177, 0, !dbg !35
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !35
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %170, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !35
  %.04.i9 = select i1 %.not17.i8, float %179, float %178, !dbg !35
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i10 = icmp eq i32 %180, 0, !dbg !35
  %181 = tail call float @llvm.nvvm.fabs.ftz.f(float %63) #4, !dbg !35
  %182 = tail call float @llvm.nvvm.fabs.f(float %63) #4, !dbg !35
  %.06.i11 = select i1 %.not18.i10, float %182, float %181, !dbg !35
  %183 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !35
  br i1 %183, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !35

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i13 = icmp eq i32 %184, 0, !dbg !35
  %.07.i14 = select i1 %.not19.i13, float %182, float %181, !dbg !35
  %185 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !35
  br i1 %185, label %__nv_fmul_rn.exit.i.i.i52, label %189, !dbg !35

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i53 = icmp eq i32 %186, 0, !dbg !35
  %187 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %63, float 0.000000e+00) #4, !dbg !35
  %188 = tail call float @llvm.nvvm.mul.rn.f(float %63, float 0.000000e+00) #4, !dbg !35
  %.08.i54 = select i1 %.not27.i53, float %188, float %187, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !35

189:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %190 = lshr i32 %62, 23, !dbg !35
  %191 = and i32 %190, 224, !dbg !35
  %192 = add nsw i32 %191, -128, !dbg !35
  %193 = shl i32 %62, 8, !dbg !35
  %194 = or i32 %193, -2147483648, !dbg !35
  %195 = lshr exact i32 %192, 5, !dbg !35
  br label %196, !dbg !35

196:                                              ; preds = %189, %196
  %indvars.iv187 = phi i64 [ 0, %189 ], [ %indvars.iv.next188, %196 ]
  %hi.i.i.i.0.i15174 = phi i32 [ 0, %189 ], [ %201, %196 ]
  %197 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv187, !dbg !35
  %198 = load i32, ptr addrspace(1) %197, align 4, !dbg !35
  %199 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %198, i32 %194, i32 %hi.i.i.i.0.i15174) #5, !dbg !35, !srcloc !36
  %200 = extractvalue { i32, i32 } %199, 0, !dbg !35
  %201 = extractvalue { i32, i32 } %199, 1, !dbg !35
  %202 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv187, !dbg !35
  store i32 %200, ptr %202, align 4, !dbg !35
  %indvars.iv.next188 = add nuw nsw i64 %indvars.iv187, 1, !dbg !35
  %exitcond189.not = icmp eq i64 %indvars.iv.next188, 6, !dbg !35
  br i1 %exitcond189.not, label %203, label %196, !dbg !35, !llvm.loop !39

203:                                              ; preds = %196
  %204 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !35
  store i32 %201, ptr %204, align 4, !dbg !35
  %205 = sub nsw i32 6, %195, !dbg !35
  %206 = sext i32 %205 to i64, !dbg !35
  %207 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %206, !dbg !35
  %208 = load i32, ptr %207, align 4, !dbg !35
  %209 = sub nsw i32 5, %195, !dbg !35
  %210 = sext i32 %209 to i64, !dbg !35
  %211 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %210, !dbg !35
  %212 = load i32, ptr %211, align 4, !dbg !35
  %213 = freeze i32 %212, !dbg !35
  %214 = and i32 %62, 260046848, !dbg !35
  %.not20.i17 = icmp eq i32 %214, 0, !dbg !35
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %215, !dbg !35

215:                                              ; preds = %203
  %216 = sub nsw i32 4, %195, !dbg !35
  %217 = sext i32 %216 to i64, !dbg !35
  %218 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %217, !dbg !35
  %219 = load i32, ptr %218, align 4, !dbg !35
  %220 = tail call i32 @llvm.fshl.i32(i32 %213, i32 %219, i32 %190), !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %215, %203
  %lo.i.i.i.0.i20 = phi i32 [ %220, %215 ], [ %213, %203 ], !dbg !35
  %221 = tail call i32 @llvm.fshl.i32(i32 %208, i32 %213, i32 %190), !dbg !35
  %222 = lshr i32 %221, 30, !dbg !35
  %223 = tail call i32 @llvm.fshl.i32(i32 %221, i32 %lo.i.i.i.0.i20, i32 2), !dbg !35
  %224 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !35
  %225 = lshr i32 %223, 31, !dbg !35
  %226 = add nuw nsw i32 %225, %222, !dbg !35
  %227 = sub nsw i32 0, %226, !dbg !35
  %.not2123.i21 = icmp slt i32 %62, 0, !dbg !35
  %spec.select.i22 = select i1 %.not2123.i21, i32 %227, i32 %226, !dbg !35
  %228 = xor i32 %223, %62, !dbg !35
  %.lobit.i23 = ashr i32 %223, 31, !dbg !35
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %223, !dbg !35
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %224, !dbg !35
  %229 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !35
  %230 = shl nuw i64 %229, 32, !dbg !35
  %231 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !35
  %232 = or disjoint i64 %230, %231, !dbg !35
  %233 = sitofp i64 %232 to double, !dbg !35
  %234 = fmul double %233, 0x3BF921FB54442D19, !dbg !35
  %235 = fptrunc double %234 to float, !dbg !35
  %236 = fneg float %235, !dbg !35
  %.not2526.i27 = icmp slt i32 %228, 0, !dbg !35
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %236, float %235, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !35

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !35
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !35
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i32 = icmp eq i32 %237, 0, !dbg !35
  %238 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !35
  %239 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !35
  %.011.i33 = select i1 %.not28.i32, float %239, float %238, !dbg !35
  %240 = and i32 %i.i.1.i30, 1, !dbg !35
  %.not29.i34 = icmp eq i32 %240, 0, !dbg !35
  %241 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !35
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i35 = icmp eq i32 %242, 0, !dbg !35
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %241, float 0.000000e+00) #4, !dbg !35
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %241, float 0.000000e+00) #4, !dbg !35
  %.012.i36 = select i1 %.not30.i35, float %244, float %243, !dbg !35
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !35

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i38 = icmp eq i32 %245, 0, !dbg !35
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !35
  %247 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i39 = select i1 %.not31.i38, float %247, float %246, !dbg !35
  br label %__internal_fmad.exit2.i.i.i40, !dbg !35

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %248 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !35
  %249 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !35
  %250 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !35
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i41 = icmp eq i32 %251, 0, !dbg !35
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %250, float %.011.i33, float %249) #4, !dbg !35
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %250, float %.011.i33, float %249) #4, !dbg !35
  %.010.i42 = select i1 %.not32.i41, float %253, float %252, !dbg !35
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i43 = icmp eq i32 %254, 0, !dbg !35
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %248) #4, !dbg !35
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %248) #4, !dbg !35
  %.09.i44 = select i1 %.not33.i43, float %256, float %255, !dbg !35
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i45 = icmp eq i32 %257, 0, !dbg !35
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %241) #4, !dbg !35
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %241) #4, !dbg !35
  %.05.i46 = select i1 %.not34.i45, float %259, float %258, !dbg !35
  %260 = and i32 %i.i.1.i30, 2, !dbg !35
  %.not35.i47 = icmp eq i32 %260, 0, !dbg !35
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !35

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i49 = icmp eq i32 %261, 0, !dbg !35
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i50 = select i1 %.not36.i49, float %263, float %262, !dbg !35
  br label %__nv_sinf.exit55, !dbg !35

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !35
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !35
  %264 = fmul float %65, 0x3FE45F3060000000, !dbg !35
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i57 = icmp eq i32 %265, 0, !dbg !35
  %266 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %264) #4, !dbg !35
  %267 = tail call i32 @llvm.nvvm.f2i.rn(float %264) #4, !dbg !35
  %.01.i58 = select i1 %.not.i57, i32 %267, i32 %266, !dbg !35
  %268 = sitofp i32 %.01.i58 to float, !dbg !35
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i59 = icmp eq i32 %269, 0, !dbg !35
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %268, float 0xBFF921FB40000000, float %65) #4, !dbg !35
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %268, float 0xBFF921FB40000000, float %65) #4, !dbg !35
  %.02.i60 = select i1 %.not15.i59, float %271, float %270, !dbg !35
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i61 = icmp eq i32 %272, 0, !dbg !35
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %268, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !35
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %268, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !35
  %.03.i62 = select i1 %.not16.i61, float %274, float %273, !dbg !35
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i63 = icmp eq i32 %275, 0, !dbg !35
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %268, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !35
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %268, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !35
  %.04.i64 = select i1 %.not17.i63, float %277, float %276, !dbg !35
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i65 = icmp eq i32 %278, 0, !dbg !35
  %279 = tail call float @llvm.nvvm.fabs.ftz.f(float %65) #4, !dbg !35
  %280 = tail call float @llvm.nvvm.fabs.f(float %65) #4, !dbg !35
  %.06.i66 = select i1 %.not18.i65, float %280, float %279, !dbg !35
  %281 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !35
  br i1 %281, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !35

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i68 = icmp eq i32 %282, 0, !dbg !35
  %.07.i69 = select i1 %.not19.i68, float %280, float %279, !dbg !35
  %283 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !35
  br i1 %283, label %__nv_fmul_rn.exit.i.i.i107, label %287, !dbg !35

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i108 = icmp eq i32 %284, 0, !dbg !35
  %285 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %65, float 0.000000e+00) #4, !dbg !35
  %286 = tail call float @llvm.nvvm.mul.rn.f(float %65, float 0.000000e+00) #4, !dbg !35
  %.08.i109 = select i1 %.not27.i108, float %286, float %285, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !35

287:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %288 = lshr i32 %64, 23, !dbg !35
  %289 = and i32 %288, 224, !dbg !35
  %290 = add nsw i32 %289, -128, !dbg !35
  %291 = shl i32 %64, 8, !dbg !35
  %292 = or i32 %291, -2147483648, !dbg !35
  %293 = lshr exact i32 %290, 5, !dbg !35
  br label %294, !dbg !35

294:                                              ; preds = %287, %294
  %indvars.iv190 = phi i64 [ 0, %287 ], [ %indvars.iv.next191, %294 ]
  %hi.i.i.i.0.i70176 = phi i32 [ 0, %287 ], [ %299, %294 ]
  %295 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv190, !dbg !35
  %296 = load i32, ptr addrspace(1) %295, align 4, !dbg !35
  %297 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %296, i32 %292, i32 %hi.i.i.i.0.i70176) #5, !dbg !35, !srcloc !36
  %298 = extractvalue { i32, i32 } %297, 0, !dbg !35
  %299 = extractvalue { i32, i32 } %297, 1, !dbg !35
  %300 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv190, !dbg !35
  store i32 %298, ptr %300, align 4, !dbg !35
  %indvars.iv.next191 = add nuw nsw i64 %indvars.iv190, 1, !dbg !35
  %exitcond192.not = icmp eq i64 %indvars.iv.next191, 6, !dbg !35
  br i1 %exitcond192.not, label %301, label %294, !dbg !35, !llvm.loop !40

301:                                              ; preds = %294
  %302 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !35
  store i32 %299, ptr %302, align 4, !dbg !35
  %303 = sub nsw i32 6, %293, !dbg !35
  %304 = sext i32 %303 to i64, !dbg !35
  %305 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %304, !dbg !35
  %306 = load i32, ptr %305, align 4, !dbg !35
  %307 = sub nsw i32 5, %293, !dbg !35
  %308 = sext i32 %307 to i64, !dbg !35
  %309 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %308, !dbg !35
  %310 = load i32, ptr %309, align 4, !dbg !35
  %311 = freeze i32 %310, !dbg !35
  %312 = and i32 %64, 260046848, !dbg !35
  %.not20.i72 = icmp eq i32 %312, 0, !dbg !35
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %313, !dbg !35

313:                                              ; preds = %301
  %314 = sub nsw i32 4, %293, !dbg !35
  %315 = sext i32 %314 to i64, !dbg !35
  %316 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %315, !dbg !35
  %317 = load i32, ptr %316, align 4, !dbg !35
  %318 = tail call i32 @llvm.fshl.i32(i32 %311, i32 %317, i32 %288), !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %313, %301
  %lo.i.i.i.0.i75 = phi i32 [ %318, %313 ], [ %311, %301 ], !dbg !35
  %319 = tail call i32 @llvm.fshl.i32(i32 %306, i32 %311, i32 %288), !dbg !35
  %320 = lshr i32 %319, 30, !dbg !35
  %321 = tail call i32 @llvm.fshl.i32(i32 %319, i32 %lo.i.i.i.0.i75, i32 2), !dbg !35
  %322 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !35
  %323 = lshr i32 %321, 31, !dbg !35
  %324 = add nuw nsw i32 %323, %320, !dbg !35
  %325 = sub nsw i32 0, %324, !dbg !35
  %.not2123.i76 = icmp slt i32 %64, 0, !dbg !35
  %spec.select.i77 = select i1 %.not2123.i76, i32 %325, i32 %324, !dbg !35
  %326 = xor i32 %321, %64, !dbg !35
  %.lobit.i78 = ashr i32 %321, 31, !dbg !35
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %321, !dbg !35
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %322, !dbg !35
  %327 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !35
  %328 = shl nuw i64 %327, 32, !dbg !35
  %329 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !35
  %330 = or disjoint i64 %328, %329, !dbg !35
  %331 = sitofp i64 %330 to double, !dbg !35
  %332 = fmul double %331, 0x3BF921FB54442D19, !dbg !35
  %333 = fptrunc double %332 to float, !dbg !35
  %334 = fneg float %333, !dbg !35
  %.not2526.i82 = icmp slt i32 %326, 0, !dbg !35
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %334, float %333, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !35

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !35
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !35
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i87 = icmp eq i32 %335, 0, !dbg !35
  %336 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !35
  %337 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !35
  %.011.i88 = select i1 %.not28.i87, float %337, float %336, !dbg !35
  %338 = and i32 %i.i.1.i85, 1, !dbg !35
  %.not29.i89 = icmp eq i32 %338, 0, !dbg !35
  %339 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !35
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i90 = icmp eq i32 %340, 0, !dbg !35
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %339, float 0.000000e+00) #4, !dbg !35
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %339, float 0.000000e+00) #4, !dbg !35
  %.012.i91 = select i1 %.not30.i90, float %342, float %341, !dbg !35
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !35

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i93 = icmp eq i32 %343, 0, !dbg !35
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !35
  %345 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i94 = select i1 %.not31.i93, float %345, float %344, !dbg !35
  br label %__internal_fmad.exit2.i.i.i95, !dbg !35

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %346 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !35
  %347 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !35
  %348 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !35
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i96 = icmp eq i32 %349, 0, !dbg !35
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %348, float %.011.i88, float %347) #4, !dbg !35
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %348, float %.011.i88, float %347) #4, !dbg !35
  %.010.i97 = select i1 %.not32.i96, float %351, float %350, !dbg !35
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i98 = icmp eq i32 %352, 0, !dbg !35
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %346) #4, !dbg !35
  %354 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %346) #4, !dbg !35
  %.09.i99 = select i1 %.not33.i98, float %354, float %353, !dbg !35
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i100 = icmp eq i32 %355, 0, !dbg !35
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %339) #4, !dbg !35
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %339) #4, !dbg !35
  %.05.i101 = select i1 %.not34.i100, float %357, float %356, !dbg !35
  %358 = and i32 %i.i.1.i85, 2, !dbg !35
  %.not35.i102 = icmp eq i32 %358, 0, !dbg !35
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !35

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i104 = icmp eq i32 %359, 0, !dbg !35
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i105 = select i1 %.not36.i104, float %361, float %360, !dbg !35
  br label %__nv_sinf.exit110, !dbg !35

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !35
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !35
  %362 = fmul float %67, 0x3FE45F3060000000, !dbg !35
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i112 = icmp eq i32 %363, 0, !dbg !35
  %364 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %362) #4, !dbg !35
  %365 = tail call i32 @llvm.nvvm.f2i.rn(float %362) #4, !dbg !35
  %.01.i113 = select i1 %.not.i112, i32 %365, i32 %364, !dbg !35
  %366 = sitofp i32 %.01.i113 to float, !dbg !35
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i114 = icmp eq i32 %367, 0, !dbg !35
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %366, float 0xBFF921FB40000000, float %67) #4, !dbg !35
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %366, float 0xBFF921FB40000000, float %67) #4, !dbg !35
  %.02.i115 = select i1 %.not15.i114, float %369, float %368, !dbg !35
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i116 = icmp eq i32 %370, 0, !dbg !35
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %366, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !35
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %366, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !35
  %.03.i117 = select i1 %.not16.i116, float %372, float %371, !dbg !35
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i118 = icmp eq i32 %373, 0, !dbg !35
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %366, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !35
  %375 = tail call float @llvm.nvvm.fma.rn.f(float %366, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !35
  %.04.i119 = select i1 %.not17.i118, float %375, float %374, !dbg !35
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i120 = icmp eq i32 %376, 0, !dbg !35
  %377 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #4, !dbg !35
  %378 = tail call float @llvm.nvvm.fabs.f(float %67) #4, !dbg !35
  %.06.i121 = select i1 %.not18.i120, float %378, float %377, !dbg !35
  %379 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !35
  br i1 %379, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !35

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i123 = icmp eq i32 %380, 0, !dbg !35
  %.07.i124 = select i1 %.not19.i123, float %378, float %377, !dbg !35
  %381 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !35
  br i1 %381, label %__nv_fmul_rn.exit.i.i.i162, label %385, !dbg !35

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i163 = icmp eq i32 %382, 0, !dbg !35
  %383 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %67, float 0.000000e+00) #4, !dbg !35
  %384 = tail call float @llvm.nvvm.mul.rn.f(float %67, float 0.000000e+00) #4, !dbg !35
  %.08.i164 = select i1 %.not27.i163, float %384, float %383, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !35

385:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %386 = lshr i32 %66, 23, !dbg !35
  %387 = and i32 %386, 224, !dbg !35
  %388 = add nsw i32 %387, -128, !dbg !35
  %389 = shl i32 %66, 8, !dbg !35
  %390 = or i32 %389, -2147483648, !dbg !35
  %391 = lshr exact i32 %388, 5, !dbg !35
  br label %392, !dbg !35

392:                                              ; preds = %385, %392
  %indvars.iv193 = phi i64 [ 0, %385 ], [ %indvars.iv.next194, %392 ]
  %hi.i.i.i.0.i125178 = phi i32 [ 0, %385 ], [ %397, %392 ]
  %393 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv193, !dbg !35
  %394 = load i32, ptr addrspace(1) %393, align 4, !dbg !35
  %395 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %394, i32 %390, i32 %hi.i.i.i.0.i125178) #5, !dbg !35, !srcloc !36
  %396 = extractvalue { i32, i32 } %395, 0, !dbg !35
  %397 = extractvalue { i32, i32 } %395, 1, !dbg !35
  %398 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv193, !dbg !35
  store i32 %396, ptr %398, align 4, !dbg !35
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1, !dbg !35
  %exitcond195.not = icmp eq i64 %indvars.iv.next194, 6, !dbg !35
  br i1 %exitcond195.not, label %399, label %392, !dbg !35, !llvm.loop !41

399:                                              ; preds = %392
  %400 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i111, i64 24, !dbg !35
  store i32 %397, ptr %400, align 4, !dbg !35
  %401 = sub nsw i32 6, %391, !dbg !35
  %402 = sext i32 %401 to i64, !dbg !35
  %403 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %402, !dbg !35
  %404 = load i32, ptr %403, align 4, !dbg !35
  %405 = sub nsw i32 5, %391, !dbg !35
  %406 = sext i32 %405 to i64, !dbg !35
  %407 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %406, !dbg !35
  %408 = load i32, ptr %407, align 4, !dbg !35
  %409 = freeze i32 %408, !dbg !35
  %410 = and i32 %66, 260046848, !dbg !35
  %.not20.i127 = icmp eq i32 %410, 0, !dbg !35
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %411, !dbg !35

411:                                              ; preds = %399
  %412 = sub nsw i32 4, %391, !dbg !35
  %413 = sext i32 %412 to i64, !dbg !35
  %414 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %413, !dbg !35
  %415 = load i32, ptr %414, align 4, !dbg !35
  %416 = tail call i32 @llvm.fshl.i32(i32 %409, i32 %415, i32 %386), !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %411, %399
  %lo.i.i.i.0.i130 = phi i32 [ %416, %411 ], [ %409, %399 ], !dbg !35
  %417 = tail call i32 @llvm.fshl.i32(i32 %404, i32 %409, i32 %386), !dbg !35
  %418 = lshr i32 %417, 30, !dbg !35
  %419 = tail call i32 @llvm.fshl.i32(i32 %417, i32 %lo.i.i.i.0.i130, i32 2), !dbg !35
  %420 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !35
  %421 = lshr i32 %419, 31, !dbg !35
  %422 = add nuw nsw i32 %421, %418, !dbg !35
  %423 = sub nsw i32 0, %422, !dbg !35
  %.not2123.i131 = icmp slt i32 %66, 0, !dbg !35
  %spec.select.i132 = select i1 %.not2123.i131, i32 %423, i32 %422, !dbg !35
  %424 = xor i32 %419, %66, !dbg !35
  %.lobit.i133 = ashr i32 %419, 31, !dbg !35
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %419, !dbg !35
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %420, !dbg !35
  %425 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !35
  %426 = shl nuw i64 %425, 32, !dbg !35
  %427 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !35
  %428 = or disjoint i64 %426, %427, !dbg !35
  %429 = sitofp i64 %428 to double, !dbg !35
  %430 = fmul double %429, 0x3BF921FB54442D19, !dbg !35
  %431 = fptrunc double %430 to float, !dbg !35
  %432 = fneg float %431, !dbg !35
  %.not2526.i137 = icmp slt i32 %424, 0, !dbg !35
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %432, float %431, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !35

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !35
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !35
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i142 = icmp eq i32 %433, 0, !dbg !35
  %434 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !35
  %435 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !35
  %.011.i143 = select i1 %.not28.i142, float %435, float %434, !dbg !35
  %436 = and i32 %i.i.1.i140, 1, !dbg !35
  %.not29.i144 = icmp eq i32 %436, 0, !dbg !35
  %437 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !35
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i145 = icmp eq i32 %438, 0, !dbg !35
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %437, float 0.000000e+00) #4, !dbg !35
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %437, float 0.000000e+00) #4, !dbg !35
  %.012.i146 = select i1 %.not30.i145, float %440, float %439, !dbg !35
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !35

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i148 = icmp eq i32 %441, 0, !dbg !35
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !35
  %443 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i149 = select i1 %.not31.i148, float %443, float %442, !dbg !35
  br label %__internal_fmad.exit2.i.i.i150, !dbg !35

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %444 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !35
  %445 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !35
  %446 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !35
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i151 = icmp eq i32 %447, 0, !dbg !35
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %446, float %.011.i143, float %445) #4, !dbg !35
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %446, float %.011.i143, float %445) #4, !dbg !35
  %.010.i152 = select i1 %.not32.i151, float %449, float %448, !dbg !35
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i153 = icmp eq i32 %450, 0, !dbg !35
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %444) #4, !dbg !35
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %444) #4, !dbg !35
  %.09.i154 = select i1 %.not33.i153, float %452, float %451, !dbg !35
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i155 = icmp eq i32 %453, 0, !dbg !35
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %437) #4, !dbg !35
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %437) #4, !dbg !35
  %.05.i156 = select i1 %.not34.i155, float %455, float %454, !dbg !35
  %456 = and i32 %i.i.1.i140, 2, !dbg !35
  %.not35.i157 = icmp eq i32 %456, 0, !dbg !35
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !35

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i159 = icmp eq i32 %457, 0, !dbg !35
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i160 = select i1 %.not36.i159, float %459, float %458, !dbg !35
  br label %__nv_sinf.exit165, !dbg !35

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !35
  %460 = extractvalue { i32, i32 } %27, 1, !dbg !20
  %461 = bitcast i32 %460 to <2 x half>, !dbg !20
  %462 = extractvalue { i32, i32 } %31, 1, !dbg !23
  %463 = bitcast i32 %462 to <2 x half>, !dbg !23
  %464 = extractvalue { i32, i32 } %35, 1, !dbg !26
  %465 = bitcast i32 %464 to <2 x half>, !dbg !26
  %466 = extractvalue { i32, i32 } %39, 1, !dbg !29
  %467 = bitcast i32 %466 to <2 x half>, !dbg !29
  %468 = extractvalue { i32, i32 } %27, 0, !dbg !20
  %469 = bitcast i32 %468 to <2 x half>, !dbg !20
  %470 = extractvalue { i32, i32 } %31, 0, !dbg !23
  %471 = bitcast i32 %470 to <2 x half>, !dbg !23
  %472 = extractvalue { i32, i32 } %35, 0, !dbg !26
  %473 = bitcast i32 %472 to <2 x half>, !dbg !26
  %474 = extractvalue { i32, i32 } %39, 0, !dbg !29
  %475 = bitcast i32 %474 to <2 x half>, !dbg !29
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !35
  %476 = sext i32 %12 to i64, !dbg !42
  %477 = getelementptr half, ptr addrspace(1) %2, i64 %476, !dbg !42
  %478 = fpext <2 x half> %469 to <2 x float>, !dbg !43
  %479 = fpext <2 x half> %471 to <2 x float>, !dbg !44
  %480 = fadd <2 x float> %478, %479, !dbg !45
  %481 = fpext <2 x half> %473 to <2 x float>, !dbg !46
  %482 = fadd <2 x float> %480, %481, !dbg !47
  %483 = fpext <2 x half> %475 to <2 x float>, !dbg !48
  %484 = fadd <2 x float> %482, %483, !dbg !49
  %485 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !50
  %486 = insertelement <2 x float> %485, float %z.i.i.0.i51, i64 1, !dbg !50
  %487 = fmul <2 x float> %484, %486, !dbg !50
  %488 = fptrunc <2 x float> %487 to <2 x half>, !dbg !51
  %489 = fpext <2 x half> %461 to <2 x float>, !dbg !43
  %490 = fpext <2 x half> %463 to <2 x float>, !dbg !44
  %491 = fadd <2 x float> %489, %490, !dbg !45
  %492 = fpext <2 x half> %465 to <2 x float>, !dbg !46
  %493 = fadd <2 x float> %491, %492, !dbg !47
  %494 = fpext <2 x half> %467 to <2 x float>, !dbg !48
  %495 = fadd <2 x float> %493, %494, !dbg !49
  %496 = insertelement <2 x float> poison, float %z.i.i.0.i106, i64 0, !dbg !50
  %497 = insertelement <2 x float> %496, float %z.i.i.0.i161, i64 1, !dbg !50
  %498 = fmul <2 x float> %495, %497, !dbg !50
  %499 = fptrunc <2 x float> %498 to <2 x half>, !dbg !51
  %500 = bitcast <2 x half> %488 to i32, !dbg !51
  %501 = bitcast <2 x half> %499 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %500, i32 %501, ptr addrspace(1) %477, i1 %16) #4, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crnc6oprka42sj7c5wh2kuihctqhia3bpcgrfvd77nq7vnlnwk35.py", directory: "/tmp/torchinductor_root/rn")
!4 = !{ptr @triton_poi_fused_mul_7, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_mul_7", linkageName: "triton_poi_fused_mul_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 21, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 22, column: 19, scope: !6)
!16 = !DILocation(line: 24, column: 19, scope: !6)
!17 = !DILocation(line: 26, column: 39, scope: !6)
!18 = !DILocation(line: 26, column: 35, scope: !6)
!19 = !DILocation(line: 26, column: 30, scope: !6)
!20 = !DILocation(line: 26, column: 44, scope: !6)
!21 = !DILocation(line: 27, column: 41, scope: !6)
!22 = !DILocation(line: 27, column: 30, scope: !6)
!23 = !DILocation(line: 27, column: 50, scope: !6)
!24 = !DILocation(line: 28, column: 41, scope: !6)
!25 = !DILocation(line: 28, column: 30, scope: !6)
!26 = !DILocation(line: 28, column: 50, scope: !6)
!27 = !DILocation(line: 29, column: 41, scope: !6)
!28 = !DILocation(line: 29, column: 30, scope: !6)
!29 = !DILocation(line: 29, column: 50, scope: !6)
!30 = !DILocation(line: 30, column: 46, scope: !6)
!31 = !DILocation(line: 30, column: 41, scope: !6)
!32 = !DILocation(line: 30, column: 35, scope: !6)
!33 = !DILocation(line: 30, column: 30, scope: !6)
!34 = !DILocation(line: 30, column: 53, scope: !6)
!35 = !DILocation(line: 34, column: 23, scope: !6)
!36 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.unroll.count", i32 1}
!39 = distinct !{!39, !38}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !38}
!42 = !DILocation(line: 39, column: 25, scope: !6)
!43 = !DILocation(line: 26, column: 54, scope: !6)
!44 = !DILocation(line: 27, column: 60, scope: !6)
!45 = !DILocation(line: 31, column: 18, scope: !6)
!46 = !DILocation(line: 28, column: 60, scope: !6)
!47 = !DILocation(line: 32, column: 18, scope: !6)
!48 = !DILocation(line: 29, column: 60, scope: !6)
!49 = !DILocation(line: 33, column: 18, scope: !6)
!50 = !DILocation(line: 38, column: 19, scope: !6)
!51 = !DILocation(line: 39, column: 37, scope: !6)
!52 = !DILocation(line: 39, column: 4, scope: !6)
