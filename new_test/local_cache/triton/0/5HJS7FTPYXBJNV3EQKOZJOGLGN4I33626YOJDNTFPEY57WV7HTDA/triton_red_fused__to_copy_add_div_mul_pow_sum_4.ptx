//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_div_mul_pow_sum_4 // -- Begin function triton_red_fused__to_copy_add_div_mul_pow_sum_4
                                        // @triton_red_fused__to_copy_add_div_mul_pow_sum_4
.visible .entry triton_red_fused__to_copy_add_div_mul_pow_sum_4(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_5,
	.param .u32 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_6,
	.param .u32 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<30>;
	.reg .b32 	%r<27>;
	.reg .f32 	%f<38>;
	.reg .b64 	%rd<55>;
	.loc	1 18 0                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:18:0

// %bb.0:
	ld.param.u64 	%rd25, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_5];
	ld.param.u64 	%rd24, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_4];
	ld.param.u64 	%rd23, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_3];
	ld.param.u64 	%rd22, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_2];
	ld.param.u64 	%rd21, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:22:28
	mov.u32 	%r4, %ctaid.x;
	.loc	1 22 33                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:22:33
	shl.b32 	%r5, %r4, 2;
	.loc	1 23 44                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r6, %r1, 3, 2;
	.loc	1 23 23                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:23:23
	or.b32  	%r7, %r6, %r5;
	ld.param.u32 	%r8, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_6];
	.loc	1 24 21                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:24:21
	setp.lt.s32 	%p13, %r7, %r8;
	.loc	1 25 37                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:25:37
	and.b32  	%r10, %r1, 7;
	.loc	1 35 46                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:35:46
	shl.b32 	%r11, %r7, 12;
	.loc	1 29 40                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:29:40
	or.b32  	%r3, %r10, %r11;
	cvt.u64.u32 	%rd1, %r10;
	shl.b64 	%rd52, %rd1, 1;
	@%p13 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %.split.us.preheader
	add.s64 	%rd48, %rd23, %rd52;
	mov.f32 	%f37, 0f00000000;
	mov.b64 	%rd49, -8;
$L__BB0_4:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:0:40
	add.s64 	%rd49, %rd49, 8;
	cvt.u32.u64 	%r14, %rd49;
	or.b32  	%r15, %r3, %r14;
	.loc	1 35 34                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:35:34
	mul.wide.s32 	%rd37, %r15, 2;
	add.s64 	%rd33, %rd21, %rd37;
	mov.b16 	%rs10, 0;
	mov.pred 	%p8, -1;
	.loc	1 35 51                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:35:51
	// begin inline asm
	mov.u16 %rs9, %rs10;
	@%p8 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 35 112                        // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:35:112
	cvt.f32.f16 	%f8, %rs9;
	.loc	1 36 34                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:36:34
	add.s64 	%rd34, %rd22, %rd37;
	.loc	1 36 51                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:36:51
	// begin inline asm
	mov.u16 %rs11, %rs10;
	@%p8 ld.global.L1::evict_last.b16 { %rs11 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 36 112                        // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:36:112
	cvt.f32.f16 	%f9, %rs11;
	.loc	1 37 41                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:37:41
	// begin inline asm
	mov.u16 %rs13, %rs10;
	@%p8 ld.global.L1::evict_last.b16 { %rs13 }, [ %rd48 + 0 ];
	// end inline asm
	.loc	1 37 94                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:37:94
	cvt.f32.f16 	%f10, %rs13;
	.loc	1 38 34                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:38:34
	add.s64 	%rd36, %rd24, %rd37;
	.loc	1 38 51                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:38:51
	// begin inline asm
	mov.u16 %rs15, %rs10;
	@%p8 ld.global.L1::evict_last.b16 { %rs15 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 38 112                        // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:38:112
	cvt.f32.f16 	%f11, %rs15;
	.loc	1 39 22                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:39:22
	add.f32 	%f12, %f8, %f9;
	.loc	1 40 22                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:40:22
	mul.f32 	%f13, %f12, %f10;
	.loc	1 45 25                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:45:25
	fma.rn.f32 	%f37, %f13, %f11, %f37;
	.loc	1 29 40                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:29:40
	add.s64 	%rd48, %rd48, 16;
	setp.lt.u64 	%p12, %rd49, 4088;
	@%p12 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_5;
$L__BB0_1:                              // %.split.preheader
	add.s64 	%rd50, %rd23, %rd52;
	mov.b64 	%rd51, -8;
$L__BB0_2:                              // %.split
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:0:40
	add.s64 	%rd51, %rd51, 8;
	cvt.u32.u64 	%r12, %rd51;
	or.b32  	%r13, %r3, %r12;
	.loc	1 35 34                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:35:34
	mul.wide.s32 	%rd31, %r13, 2;
	add.s64 	%rd27, %rd21, %rd31;
	mov.b16 	%rs2, 0;
	mov.pred 	%p3, 0;
	.loc	1 35 51                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:35:51
	// begin inline asm
	mov.u16 %rs1, %rs2;
	@%p3 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 36 34                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:36:34
	add.s64 	%rd28, %rd22, %rd31;
	.loc	1 36 51                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:36:51
	// begin inline asm
	mov.u16 %rs3, %rs2;
	@%p3 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd28 + 0 ];
	// end inline asm
	mov.pred 	%p5, -1;
	.loc	1 37 41                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:37:41
	// begin inline asm
	mov.u16 %rs5, %rs2;
	@%p5 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd50 + 0 ];
	// end inline asm
	.loc	1 38 34                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:38:34
	add.s64 	%rd30, %rd24, %rd31;
	.loc	1 38 51                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:38:51
	// begin inline asm
	mov.u16 %rs7, %rs2;
	@%p3 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 29 40                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:29:40
	add.s64 	%rd50, %rd50, 16;
	setp.lt.u64 	%p7, %rd51, 4088;
	mov.f32 	%f37, 0f00000000;
	@%p7 bra 	$L__BB0_2;
$L__BB0_5:                              // %.split3.us
	.loc	1 0 40                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:0:40
	ld.param.u64 	%rd20, [triton_red_fused__to_copy_add_div_mul_pow_sum_4_param_0];
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r17, %f37;
	shfl.sync.bfly.b32	%r18, %r17, 4, 31, -1;
	mov.b32 	%f14, %r18;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f37, %f14;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r19, %f15;
	shfl.sync.bfly.b32	%r20, %r19, 2, 31, -1;
	mov.b32 	%f16, %r20;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r21, %f17;
	shfl.sync.bfly.b32	%r22, %r21, 1, 31, -1;
	mov.b32 	%f18, %r22;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
$L__tmp2:
	.loc	1 48 31                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:48:31
	mul.wide.s32 	%rd40, %r7, 4;
	add.s64 	%rd38, %rd25, %rd40;
	.loc	1 48 36                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:48:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r16 }, [ %rd38 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r16;
	.loc	1 65 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:65:24
	mul.f32 	%f20, %f19, 0f3F000000;
	.loc	1 66 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:66:24
	mul.f32 	%f21, %f4, %f4;
	.loc	1 67 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:67:24
	mul.f32 	%f22, %f21, %f4;
	.loc	1 68 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:68:24
	mul.f32 	%f23, %f20, %f22;
	.loc	1 70 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:70:24
	mul.f32 	%f5, %f23, 0f39800000;
	and.b32  	%r23, %r1, 32;
	setp.eq.s32 	%p14, %r23, 0;
	and.pred  	%p20, %p14, %p13;
	.loc	1 49 40                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:49:40
	add.s64 	%rd53, %rd23, %rd52;
	mov.b64 	%rd54, -8;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:0:40
	add.s64 	%rd54, %rd54, 8;
	cvt.u32.u64 	%r24, %rd54;
	or.b32  	%r25, %r3, %r24;
	.loc	1 55 39                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:55:39
	mul.wide.s32 	%rd47, %r25, 2;
	add.s64 	%rd41, %rd20, %rd47;
	mov.b16 	%rs18, 0;
	.loc	1 55 56                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:55:56
	// begin inline asm
	mov.u16 %rs17, %rs18;
	@%p13 ld.global.L1::evict_first.b16 { %rs17 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 55 118                        // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:55:118
	cvt.f32.f16 	%f24, %rs17;
	.loc	1 56 35                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:56:35
	add.s64 	%rd42, %rd21, %rd47;
	.loc	1 56 52                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:56:52
	// begin inline asm
	mov.u16 %rs19, %rs18;
	@%p13 ld.global.L1::evict_first.b16 { %rs19 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 56 114                        // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:56:114
	cvt.f32.f16 	%f25, %rs19;
	.loc	1 57 35                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:57:35
	add.s64 	%rd43, %rd22, %rd47;
	.loc	1 57 52                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:57:52
	// begin inline asm
	mov.u16 %rs21, %rs18;
	@%p13 ld.global.L1::evict_first.b16 { %rs21 }, [ %rd43 + 0 ];
	// end inline asm
	.loc	1 57 114                        // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:57:114
	cvt.f32.f16 	%f26, %rs21;
	mov.pred 	%p18, -1;
	.loc	1 58 42                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:58:42
	// begin inline asm
	mov.u16 %rs23, %rs18;
	@%p18 ld.global.L1::evict_last.b16 { %rs23 }, [ %rd53 + 0 ];
	// end inline asm
	.loc	1 59 35                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:59:35
	add.s64 	%rd45, %rd24, %rd47;
	.loc	1 59 52                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:59:52
	// begin inline asm
	mov.u16 %rs25, %rs18;
	@%p13 ld.global.L1::evict_first.b16 { %rs25 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 60 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:60:24
	add.f32 	%f27, %f25, %f26;
	.loc	1 58 42                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:58:42
	mov.b32 	%r26, {%rs23, %rs25};
	.loc	1 58 95                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:58:95
	mov.b32 	{%rs28, %rs29}, %r26;
	cvt.f32.f16 	%f28, %rs29;
	cvt.f32.f16 	%f29, %rs28;
	.loc	1 61 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:61:24
	mul.f32 	%f30, %f27, %f29;
	add.f32 	%f31, %f28, %f28;
	.loc	1 63 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:63:24
	mul.f32 	%f32, %f31, %f5;
	.loc	1 75 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:75:24
	neg.f32 	%f33, %f32;
	fma.rn.f32 	%f34, %f30, %f4, %f33;
	.loc	1 77 24                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:77:24
	add.f32 	%f35, %f34, %f24;
	.loc	1 78 56                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:78:56
	cvt.rn.f16.f32 	%rs27, %f35;
	// begin inline asm
	@%p20 st.global.b16 [ %rd41 + 0 ], { %rs27 };
	// end inline asm
	.loc	1 49 40                         // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:49:40
	add.s64 	%rd53, %rd53, 16;
	setp.lt.u64 	%p21, %rd54, 4088;
	@%p21 bra 	$L__BB0_6;
// %bb.7:
	.loc	1 49 4                          // ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/cr/ccr6kpecjjvjczb635rxg7suvuumsc74vqgkqqcpdj2b5fxdchar.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 201                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 114
.b8 54
.b8 107
.b8 112
.b8 101
.b8 99
.b8 106
.b8 106
.b8 118
.b8 106
.b8 99
.b8 122
.b8 98
.b8 54
.b8 51
.b8 53
.b8 114
.b8 120
.b8 103
.b8 55
.b8 115
.b8 117
.b8 118
.b8 117
.b8 117
.b8 109
.b8 115
.b8 99
.b8 55
.b8 52
.b8 118
.b8 113
.b8 103
.b8 107
.b8 113
.b8 113
.b8 99
.b8 112
.b8 100
.b8 106
.b8 50
.b8 98
.b8 53
.b8 102
.b8 120
.b8 100
.b8 99
.b8 104
.b8 97
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 99
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x32 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb3:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
