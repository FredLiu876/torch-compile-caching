//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_6,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<63>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<27>;
	.loc	1 18 0                          // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:18:0

// %bb.0:
	ld.param.u32 	%r11, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_6];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_5];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_4];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_3];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_2];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_1];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_8_param_0];
$L__tmp0:
	.loc	1 22 28                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:22:28
	mov.u32 	%r13, %ctaid.x;
	.loc	1 22 33                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:22:33
	shl.b32 	%r1, %r13, 2;
	.loc	1 23 44                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 4, 2;
	.loc	1 23 23                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:23:23
	or.b32  	%r4, %r3, %r1;
	.loc	1 25 37                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:25:37
	shl.b32 	%r14, %r2, 2;
	and.b32  	%r5, %r14, 60;
	.loc	1 35 46                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:35:46
	shl.b32 	%r15, %r4, 12;
	or.b32  	%r6, %r15, %r5;
	mov.f32 	%f71, 0f00000000;
	mov.b32 	%r62, -64;
	setp.lt.s32 	%p1, %r4, %r11;
	mov.f32 	%f72, %f71;
	mov.f32 	%f73, %f71;
	mov.f32 	%f74, %f71;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:35:41
	add.s32 	%r62, %r62, 64;
	or.b32  	%r30, %r6, %r62;
	.loc	1 35 34                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:35:34
	mul.wide.s32 	%rd16, %r30, 2;
	add.s64 	%rd12, %rd8, %rd16;
	mov.b32 	%r18, 0;
	.loc	1 35 51                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:35:51
	// begin inline asm
	mov.u32 %r16, %r18;
	mov.u32 %r17, %r18;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r16, %r17 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 36 34                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:36:34
	add.s64 	%rd13, %rd9, %rd16;
	.loc	1 36 51                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:36:51
	// begin inline asm
	mov.u32 %r20, %r18;
	mov.u32 %r21, %r18;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r20, %r21 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 37 38                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:37:38
	add.s64 	%rd14, %rd6, %rd16;
	.loc	1 37 55                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:37:55
	// begin inline asm
	mov.u32 %r24, %r18;
	mov.u32 %r25, %r18;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r24, %r25 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 35 113                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:35:113
	mov.b32 	{%rs1, %rs2}, %r16;
	cvt.f32.f16 	%f12, %rs2;
	cvt.f32.f16 	%f13, %rs1;
	.loc	1 36 113                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:36:113
	mov.b32 	{%rs3, %rs4}, %r20;
	cvt.f32.f16 	%f14, %rs4;
	cvt.f32.f16 	%f15, %rs3;
	.loc	1 37 117                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:37:117
	mov.b32 	{%rs5, %rs6}, %r24;
	cvt.f32.f16 	%f16, %rs5;
	cvt.f32.f16 	%f17, %rs6;
	.loc	1 38 22                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:38:22
	add.f32 	%f18, %f13, %f15;
	add.f32 	%f19, %f12, %f14;
	.loc	1 39 22                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:39:22
	add.f32 	%f20, %f19, %f17;
	add.f32 	%f21, %f18, %f16;
	.loc	1 43 23                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:43:23
	fma.rn.f32 	%f22, %f21, %f21, %f71;
	fma.rn.f32 	%f23, %f20, %f20, %f72;
	.loc	1 44 48                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:44:48
	selp.f32 	%f71, %f22, %f71, %p1;
	selp.f32 	%f72, %f23, %f72, %p1;
	.loc	1 45 55                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:45:55
	cvt.rn.f16x2.f32 	%r28, %f20, %f21;
	.loc	1 35 113                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:35:113
	mov.b32 	{%rs7, %rs8}, %r17;
	cvt.f32.f16 	%f24, %rs8;
	cvt.f32.f16 	%f25, %rs7;
	.loc	1 36 113                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:36:113
	mov.b32 	{%rs9, %rs10}, %r21;
	cvt.f32.f16 	%f26, %rs10;
	cvt.f32.f16 	%f27, %rs9;
	.loc	1 37 117                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:37:117
	mov.b32 	{%rs11, %rs12}, %r25;
	cvt.f32.f16 	%f28, %rs11;
	cvt.f32.f16 	%f29, %rs12;
	.loc	1 38 22                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:38:22
	add.f32 	%f30, %f25, %f27;
	add.f32 	%f31, %f24, %f26;
	.loc	1 39 22                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:39:22
	add.f32 	%f32, %f31, %f29;
	add.f32 	%f33, %f30, %f28;
	.loc	1 43 23                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:43:23
	fma.rn.f32 	%f34, %f33, %f33, %f73;
	fma.rn.f32 	%f35, %f32, %f32, %f74;
	.loc	1 44 48                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:44:48
	selp.f32 	%f73, %f34, %f73, %p1;
	selp.f32 	%f74, %f35, %f74, %p1;
	.loc	1 45 55                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:45:55
	cvt.rn.f16x2.f32 	%r29, %f32, %f33;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd14 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 29 40                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:29:40
	setp.lt.u32 	%p5, %r62, 4032;
	@%p5 bra 	$L__BB0_1;
// %bb.2:                               // %__nv_rsqrtf.exit
	.loc	1 23 44                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:23:44
	and.b32  	%r34, %r2, 3;
	.loc	1 23 23                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:23:23
	or.b32  	%r35, %r1, %r34;
	.loc	1 24 21                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:24:21
	setp.lt.s32 	%p8, %r35, %r11;
	.loc	1 25 37                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:25:37
	and.b32  	%r36, %r2, 63;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f71, %f72;
	add.f32 	%f37, %f73, %f36;
	add.f32 	%f38, %f74, %f37;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r37, %f38;
	shfl.sync.bfly.b32	%r38, %r37, 8, 31, -1;
	mov.b32 	%f39, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r39, %f40;
	shfl.sync.bfly.b32	%r40, %r39, 4, 31, -1;
	mov.b32 	%f41, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r41, %f42;
	shfl.sync.bfly.b32	%r42, %r41, 2, 31, -1;
	mov.b32 	%f43, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r43, %f44;
	shfl.sync.bfly.b32	%r44, %r43, 1, 31, -1;
	mov.b32 	%f45, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
$L__tmp2:
	.loc	1 51 28                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:51:28
	shl.b32 	%r45, %r3, 2;
	mov.u32 	%r46, global_smem;
	add.s32 	%r31, %r46, %r45;
	mov.b32 	%r32, %f46;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r47, %r34, 2;
	add.s32 	%r48, %r46, %r47;
	ld.shared.f32 	%f47, [%r48];
	mov.f32 	%f48, 0f45800000;
	.loc	1 48 20                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:48:20
	div.full.f32 	%f49, %f47, %f48;
	div.full.f32 	%f50, %f46, %f48;
	.loc	1 50 20                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:50:20
	add.f32 	%f51, %f49, 0f3727C5AC;
	add.f32 	%f52, %f50, 0f3727C5AC;
	.loc	1 51 28                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:51:28
	rsqrt.approx.ftz.f32 	%f53, %f51;
	rsqrt.approx.ftz.f32 	%f9, %f52;
	.loc	1 52 4                          // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:52:4
	bar.sync 	0;
	.loc	1 53 28                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:53:28
	mul.wide.s32 	%rd19, %r35, 4;
	add.s64 	%rd17, %rd7, %rd19;
	.loc	1 53 40                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:53:40
	and.b32  	%r49, %r2, 60;
	setp.eq.s32 	%p9, %r49, 0;
	mov.b32 	%r33, %f53;
	and.pred  	%p7, %p9, %p8;
	// begin inline asm
	@%p7 st.global.b32 [ %rd17 + 0 ], { %r33 };
	// end inline asm
	shl.b32 	%r50, %r36, 2;
	add.s32 	%r56, %r46, %r50;
	shl.b32 	%r51, %r5, 2;
	add.s32 	%r10, %r46, %r51;
	.loc	1 54 40                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:54:40
	mul.wide.u32 	%rd20, %r36, 2;
	add.s64 	%rd25, %rd10, %rd20;
	mov.b64 	%rd26, -64;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:0:40
	mov.b16 	%rs14, 0;
	.loc	1 60 42                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:60:42
	// begin inline asm
	mov.u16 %rs13, %rs14;
	@%p10 ld.global.L1::evict_last.b16 { %rs13 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 60 95                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:60:95
	cvt.f32.f16 	%f54, %rs13;
	.loc	1 61 46                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:61:46
	add.s64 	%rd26, %rd26, 64;
	cvt.u32.u64 	%r60, %rd26;
	or.b32  	%r61, %r6, %r60;
	.loc	1 61 39                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:61:39
	mul.wide.s32 	%rd24, %r61, 2;
	add.s64 	%rd22, %rd6, %rd24;
	mov.b32 	%r54, 0;
	.loc	1 61 56                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:61:56
	// begin inline asm
	mov.u32 %r52, %r54;
	mov.u32 %r53, %r54;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r52, %r53 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 65 24                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:65:24
	bar.sync 	0;
	mov.b32 	%r57, %f54;
	// begin inline asm
	@%p10 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	.loc	1 66 29                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:66:29
	add.s64 	%rd23, %rd11, %rd24;
	.loc	1 61 118                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:61:118
	mov.b32 	{%rs15, %rs16}, %r52;
	cvt.f32.f16 	%f55, %rs15;
	cvt.f32.f16 	%f56, %rs16;
	.loc	1 63 24                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:63:24
	mul.f32 	%f57, %f9, %f56;
	mul.f32 	%f58, %f9, %f55;
	.loc	1 65 24                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:65:24
	ld.shared.v4.f32 	{%f59, %f60, %f61, %f62}, [%r10];
	mul.f32 	%f63, %f59, %f58;
	mul.f32 	%f64, %f60, %f57;
	.loc	1 66 53                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:66:53
	cvt.rn.f16x2.f32 	%r58, %f64, %f63;
	.loc	1 61 118                        // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:61:118
	mov.b32 	{%rs17, %rs18}, %r53;
	cvt.f32.f16 	%f65, %rs17;
	cvt.f32.f16 	%f66, %rs18;
	.loc	1 63 24                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:63:24
	mul.f32 	%f67, %f9, %f66;
	mul.f32 	%f68, %f9, %f65;
	.loc	1 65 24                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:65:24
	mul.f32 	%f69, %f61, %f68;
	mul.f32 	%f70, %f62, %f67;
	.loc	1 66 53                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:66:53
	cvt.rn.f16x2.f32 	%r59, %f70, %f69;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd23 + 0 ], { %r58, %r59 };
	// end inline asm
	.loc	1 54 40                         // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:54:40
	add.s64 	%rd25, %rd25, 128;
	setp.lt.u64 	%p14, %rd26, 4032;
	@%p14 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 54 4                          // cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py:54:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/jj/cjjwjnmyb5ylskx6e3eg4yueoaqwlte7kuhtcnu2a4ncpavggv5i.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 106
.b8 119
.b8 106
.b8 110
.b8 109
.b8 121
.b8 98
.b8 53
.b8 121
.b8 108
.b8 115
.b8 107
.b8 120
.b8 54
.b8 101
.b8 51
.b8 101
.b8 103
.b8 52
.b8 121
.b8 117
.b8 101
.b8 111
.b8 97
.b8 113
.b8 119
.b8 108
.b8 116
.b8 101
.b8 55
.b8 107
.b8 117
.b8 104
.b8 116
.b8 99
.b8 110
.b8 117
.b8 50
.b8 97
.b8 52
.b8 110
.b8 99
.b8 112
.b8 97
.b8 118
.b8 103
.b8 103
.b8 118
.b8 53
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
