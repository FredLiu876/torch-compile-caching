; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_mul_silu_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr !dbg !6 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %7 = shl i32 %6, 9, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = shl i32 %8, 2, !dbg !11
  %10 = and i32 %9, 508, !dbg !11
  %11 = or disjoint i32 %10, %7, !dbg !12
  %12 = icmp slt i32 %11, %3, !dbg !13
  %13 = sext i32 %11 to i64, !dbg !14
  %14 = getelementptr half, ptr addrspace(1) %0, i64 %13, !dbg !14
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %12) #2, !dbg !15
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15
  %17 = bitcast i32 %16 to <2 x half>, !dbg !15
  %18 = extractvalue { i32, i32 } %15, 1, !dbg !15
  %19 = bitcast i32 %18 to <2 x half>, !dbg !15
  %20 = getelementptr half, ptr addrspace(1) %1, i64 %13, !dbg !16
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %12) #2, !dbg !17
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !17
  %23 = bitcast i32 %22 to <2 x half>, !dbg !17
  %24 = extractvalue { i32, i32 } %21, 1, !dbg !17
  %25 = bitcast i32 %24 to <2 x half>, !dbg !17
  %26 = getelementptr half, ptr addrspace(1) %2, i64 %13, !dbg !18
  %27 = fpext <2 x half> %17 to <2 x float>, !dbg !19
  %28 = fpext <2 x half> %23 to <2 x float>, !dbg !20
  %29 = extractelement <2 x float> %27, i64 0, !dbg !21
  %30 = fsub float 0.000000e+00, %29, !dbg !21
  %31 = extractelement <2 x float> %27, i64 1, !dbg !21
  %32 = fsub float 0.000000e+00, %31, !dbg !21
  %33 = fmul float %30, 0x3FF7154760000000, !dbg !25
  %34 = tail call float @llvm.nvvm.ex2.approx.f(float %33), !dbg !25
  %35 = fmul float %32, 0x3FF7154760000000, !dbg !25
  %36 = tail call float @llvm.nvvm.ex2.approx.f(float %35), !dbg !25
  %37 = fadd float %34, 1.000000e+00, !dbg !26
  %38 = fadd float %36, 1.000000e+00, !dbg !26
  %39 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %37), !dbg !27
  %40 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %38), !dbg !27
  %41 = insertelement <2 x float> poison, float %39, i64 0, !dbg !28
  %42 = insertelement <2 x float> %41, float %40, i64 1, !dbg !28
  %43 = fmul <2 x float> %42, %27, !dbg !28
  %44 = fmul <2 x float> %43, %28, !dbg !29
  %45 = fptrunc <2 x float> %44 to <2 x half>, !dbg !30
  %46 = fpext <2 x half> %19 to <2 x float>, !dbg !19
  %47 = fpext <2 x half> %25 to <2 x float>, !dbg !20
  %48 = extractelement <2 x float> %46, i64 0, !dbg !21
  %49 = fsub float 0.000000e+00, %48, !dbg !21
  %50 = extractelement <2 x float> %46, i64 1, !dbg !21
  %51 = fsub float 0.000000e+00, %50, !dbg !21
  %52 = fmul float %49, 0x3FF7154760000000, !dbg !25
  %53 = tail call float @llvm.nvvm.ex2.approx.f(float %52), !dbg !25
  %54 = fmul float %51, 0x3FF7154760000000, !dbg !25
  %55 = tail call float @llvm.nvvm.ex2.approx.f(float %54), !dbg !25
  %56 = fadd float %53, 1.000000e+00, !dbg !26
  %57 = fadd float %55, 1.000000e+00, !dbg !26
  %58 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %56), !dbg !27
  %59 = tail call float @llvm.nvvm.div.full(float 1.000000e+00, float %57), !dbg !27
  %60 = insertelement <2 x float> poison, float %58, i64 0, !dbg !28
  %61 = insertelement <2 x float> %60, float %59, i64 1, !dbg !28
  %62 = fmul <2 x float> %61, %46, !dbg !28
  %63 = fmul <2 x float> %62, %47, !dbg !29
  %64 = fptrunc <2 x float> %63 to <2 x half>, !dbg !30
  %65 = bitcast <2 x half> %45 to i32, !dbg !30
  %66 = bitcast <2 x half> %64 to i32, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %65, i32 %66, ptr addrspace(1) %26, i1 %12) #2, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czlnnli5wdnzsq3xf3gaijpvc6mijjwympjjhftw2jsmqxb4oqpa.py", directory: "./local_cache/zl")
!4 = !{ptr @triton_poi_fused_mul_silu_7, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_mul_silu_7", linkageName: "triton_poi_fused_mul_silu_7", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 21, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 30, scope: !6)
!15 = !DILocation(line: 23, column: 35, scope: !6)
!16 = !DILocation(line: 24, column: 30, scope: !6)
!17 = !DILocation(line: 24, column: 35, scope: !6)
!18 = !DILocation(line: 30, column: 25, scope: !6)
!19 = !DILocation(line: 23, column: 45, scope: !6)
!20 = !DILocation(line: 24, column: 45, scope: !6)
!21 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !6, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language")
!24 = !DILocation(line: 26, column: 22, scope: !6)
!25 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 27, column: 18, scope: !6)
!29 = !DILocation(line: 29, column: 18, scope: !6)
!30 = !DILocation(line: 30, column: 36, scope: !6)
!31 = !DILocation(line: 30, column: 4, scope: !6)
