//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_mul_sum_1 // -- Begin function triton_red_fused__to_copy_mul_sum_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_mul_sum_1
.visible .entry triton_red_fused__to_copy_mul_sum_1(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_3,
	.param .u32 triton_red_fused__to_copy_mul_sum_1_param_4,
	.param .u32 triton_red_fused__to_copy_mul_sum_1_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_mul_sum_1_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<101>;
	.reg .f32 	%f<78>;
	.reg .b64 	%rd<15>;
	.loc	1 18 0                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_mul_sum_1_param_5];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_mul_sum_1_param_3];
$L__tmp0:
	.loc	1 22 28                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:22:33
	shl.b32 	%r1, %r11, 3;
	.loc	1 23 44                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 2;
	and.b32  	%r3, %r12, 4;
	.loc	1 29 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:29:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f74, 0f00000000;
	mov.f32 	%f75, %f74;
	mov.f32 	%f76, %f74;
	mov.f32 	%f77, %f74;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:0:40
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_mul_sum_1_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_mul_sum_1_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_mul_sum_1_param_0];
	bfe.u32 	%r4, %r2, 1, 6;
	.loc	1 29 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:29:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r99, %r15, %r3;
	mov.b32 	%r18, 0;
	mov.f32 	%f74, 0f00000000;
	mov.f32 	%f75, %f74;
	mov.f32 	%f76, %f74;
	mov.f32 	%f77, %f74;
	mov.u32 	%r100, %r18;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 31 29                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:31:29
	add.s32 	%r32, %r4, %r100;
	setp.lt.s32 	%p2, %r32, %r10;
	.loc	1 35 34                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:35:34
	mul.wide.s32 	%rd11, %r99, 2;
	add.s64 	%rd5, %rd1, %rd11;
	.loc	1 35 51                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:35:51
	// begin inline asm
	mov.u32 %r16, %r18;
	mov.u32 %r17, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r16, %r17 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r16;
	mov.b32 	{%rs3, %rs4}, %r17;
	.loc	1 35 105                        // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:35:105
	cvt.f32.f16 	%f15, %rs1;
	cvt.f32.f16 	%f16, %rs2;
	cvt.f32.f16 	%f17, %rs3;
	cvt.f32.f16 	%f18, %rs4;
	.loc	1 36 34                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:36:34
	add.s64 	%rd6, %rd2, %rd11;
	.loc	1 36 51                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:36:51
	// begin inline asm
	mov.u32 %r20, %r18;
	mov.u32 %r21, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r20, %r21 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs5, %rs6}, %r20;
	mov.b32 	{%rs7, %rs8}, %r21;
	.loc	1 36 105                        // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:36:105
	cvt.f32.f16 	%f19, %rs5;
	cvt.f32.f16 	%f20, %rs6;
	cvt.f32.f16 	%f21, %rs7;
	cvt.f32.f16 	%f22, %rs8;
	.loc	1 37 34                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:37:34
	mul.wide.s32 	%rd12, %r32, 4;
	add.s64 	%rd7, %rd3, %rd12;
	.loc	1 37 41                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:37:41
	// begin inline asm
	mov.u32 %r24, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r24 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r26 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r28 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r30;
	.loc	1 39 22                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:39:22
	mul.f32 	%f24, %f19, %f23;
	mul.f32 	%f25, %f20, %f23;
	mul.f32 	%f26, %f21, %f23;
	mul.f32 	%f27, %f22, %f23;
	.loc	1 43 23                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:43:23
	fma.rn.f32 	%f28, %f24, %f15, %f74;
	fma.rn.f32 	%f29, %f25, %f16, %f75;
	fma.rn.f32 	%f30, %f26, %f17, %f76;
	fma.rn.f32 	%f31, %f27, %f18, %f77;
	.loc	1 44 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:44:40
	selp.f32 	%f74, %f28, %f74, %p2;
	selp.f32 	%f75, %f29, %f75, %p2;
	selp.f32 	%f76, %f30, %f76, %p2;
	selp.f32 	%f77, %f31, %f77, %p2;
	.loc	1 29 40                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:29:40
	add.s32 	%r100, %r100, 64;
	add.s32 	%r99, %r99, 262144;
	setp.lt.s32 	%p8, %r100, %r10;
	@%p8 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:23:44
	and.b32  	%r50, %r2, 30;
	and.b32  	%r51, %r2, 7;
	.loc	1 23 23                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:23:23
	or.b32  	%r52, %r1, %r51;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r53, %f74;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f32, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f74, %f32;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r55, %f33;
	shfl.sync.bfly.b32	%r56, %r55, 8, 31, -1;
	mov.b32 	%f34, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f35;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f36, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r59, %f37;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f38, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f75;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f40, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f75, %f40;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r63, %f41;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f42, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r65, %f43;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f44, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r67, %f45;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f46, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r69, %f76;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f48, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f76, %f48;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r71, %f49;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f50, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r73, %f51;
	shfl.sync.bfly.b32	%r74, %r73, 4, 31, -1;
	mov.b32 	%f52, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r75, %f53;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f54, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r77, %f77;
	shfl.sync.bfly.b32	%r78, %r77, 16, 31, -1;
	mov.b32 	%f56, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f77, %f56;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r79, %f57;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f58, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r81, %f59;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f60, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r83, %f61;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f62, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p9, %r50, 0;
	shr.u32 	%r85, %r2, 3;
	and.b32  	%r86, %r85, 12;
	shl.b32 	%r87, %r3, 4;
	or.b32  	%r88, %r87, %r86;
	mov.u32 	%r89, global_smem;
	add.s32 	%r33, %r89, %r88;
	mov.b32 	%r34, %f39;
	// begin inline asm
	@%p9 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r33, 16;
	mov.b32 	%r36, %f47;
	// begin inline asm
	@%p9 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r33, 32;
	mov.b32 	%r38, %f55;
	// begin inline asm
	@%p9 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r33, 48;
	mov.b32 	%r40, %f63;
	// begin inline asm
	@%p9 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r2, 32;
	add.s32 	%r42, %r89, %r12;
	// begin inline asm
	@%p13 ld.shared.b32 %r41, [ %r42 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r41;
	shfl.sync.bfly.b32	%r91, %r41, 2, 31, -1;
	mov.b32 	%f65, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r92, %f66;
	shfl.sync.bfly.b32	%r93, %r92, 1, 31, -1;
	mov.b32 	%f67, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r94, %r2, 3;
	setp.eq.s32 	%p17, %r94, 0;
	and.pred  	%p14, %p13, %p17;
	mov.b32 	%r44, %f68;
	// begin inline asm
	@%p14 st.shared.b32 [ %r42 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r95, %r89, %r87;
	ld.shared.u32 	%r46, [%r95];
	ld.shared.u32 	%r47, [%r95+16];
	ld.shared.u32 	%r48, [%r95+32];
	ld.shared.u32 	%r49, [%r95+48];
$L__tmp2:
	.loc	1 46 36                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:36
	bar.sync 	0;
	mad.lo.s32 	%r45, %r3, -12, %r95;
	mov.pred 	%p15, -1;
	// begin inline asm
	@%p15 st.shared.v4.b32 [ %r45 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r96, %r51, 2;
	add.s32 	%r97, %r89, %r96;
	ld.shared.f32 	%f69, [%r97];
	.loc	1 46 25                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:25
	mul.wide.s32 	%rd14, %r52, 2;
	add.s64 	%rd13, %rd4, %rd14;
	.loc	1 46 36                         // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:36
	cvt.rn.f16.f32 	%rs9, %f69;
	and.b32  	%r98, %r2, 120;
	setp.eq.s32 	%p16, %r98, 0;
	// begin inline asm
	@%p16 st.global.b16 [ %rd13 + 0 ], { %rs9 };
	// end inline asm
	.loc	1 46 4                          // co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py:46:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/o4/co4nmxvvabannmoyltgvv474a5vyv6vjk2hrq3xz5okm532j7cpu.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 189                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 52
.b8 110
.b8 109
.b8 120
.b8 118
.b8 118
.b8 97
.b8 98
.b8 97
.b8 110
.b8 110
.b8 109
.b8 111
.b8 121
.b8 108
.b8 116
.b8 103
.b8 118
.b8 118
.b8 52
.b8 55
.b8 52
.b8 97
.b8 53
.b8 118
.b8 121
.b8 118
.b8 54
.b8 118
.b8 106
.b8 107
.b8 50
.b8 104
.b8 114
.b8 113
.b8 51
.b8 120
.b8 122
.b8 53
.b8 111
.b8 107
.b8 109
.b8 53
.b8 51
.b8 50
.b8 106
.b8 55
.b8 99
.b8 112
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 111
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
