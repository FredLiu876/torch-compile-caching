; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_add_cat_clone_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, ptr addrspace(1) readnone captures(none) %5) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i769 = alloca [7 x i32], align 4
  %result.i.i.i.i714 = alloca [7 x i32], align 4
  %result.i.i.i.i659 = alloca [7 x i32], align 4
  %result.i.i.i.i604 = alloca [7 x i32], align 4
  %result.i.i.i.i549 = alloca [7 x i32], align 4
  %result.i.i.i.i494 = alloca [7 x i32], align 4
  %result.i.i.i.i439 = alloca [7 x i32], align 4
  %result.i.i.i.i386 = alloca [7 x i32], align 4
  %result.i.i.i.i331 = alloca [7 x i32], align 4
  %result.i.i.i.i276 = alloca [7 x i32], align 4
  %result.i.i.i.i221 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %8 = shl i32 %7, 10, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = shl i32 %9, 3, !dbg !11
  %11 = and i32 %10, 1016, !dbg !11
  %12 = or disjoint i32 %11, %8, !dbg !12
  %13 = or disjoint i32 %12, 1, !dbg !12
  %14 = or disjoint i32 %12, 2, !dbg !12
  %15 = or disjoint i32 %12, 3, !dbg !12
  %16 = or disjoint i32 %12, 4, !dbg !12
  %17 = or disjoint i32 %12, 5, !dbg !12
  %18 = or disjoint i32 %12, 6, !dbg !12
  %19 = or disjoint i32 %12, 7, !dbg !12
  %20 = sdiv i32 %12, 128, !dbg !13
  %21 = mul i32 %20, 128, !dbg !14
  %.decomposed = sub i32 %12, %21, !dbg !14
  %22 = srem i32 %13, 128, !dbg !14
  %23 = srem i32 %14, 128, !dbg !14
  %24 = srem i32 %15, 128, !dbg !14
  %25 = srem i32 %16, 128, !dbg !14
  %26 = srem i32 %17, 128, !dbg !14
  %27 = srem i32 %18, 128, !dbg !14
  %28 = srem i32 %19, 128, !dbg !14
  %29 = sdiv i32 %12, 4096, !dbg !15
  %30 = sext i32 %12 to i64, !dbg !16
  %31 = getelementptr half, ptr addrspace(1) %0, i64 %30, !dbg !16
  %32 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %31) #4, !dbg !17
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !18
  %33 = srem i8 %.lhs.trunc, 64, !dbg !18
  %.sext = sext i8 %33 to i32, !dbg !18
  %.lhs.trunc824 = trunc nsw i32 %22 to i8, !dbg !18
  %34 = srem i8 %.lhs.trunc824, 64, !dbg !18
  %.sext825 = sext i8 %34 to i32, !dbg !18
  %.lhs.trunc826 = trunc nsw i32 %23 to i8, !dbg !18
  %35 = srem i8 %.lhs.trunc826, 64, !dbg !18
  %.sext827 = sext i8 %35 to i32, !dbg !18
  %.lhs.trunc828 = trunc nsw i32 %24 to i8, !dbg !18
  %36 = srem i8 %.lhs.trunc828, 64, !dbg !18
  %.sext829 = sext i8 %36 to i32, !dbg !18
  %.lhs.trunc830 = trunc nsw i32 %25 to i8, !dbg !18
  %37 = srem i8 %.lhs.trunc830, 64, !dbg !18
  %.sext831 = sext i8 %37 to i32, !dbg !18
  %.lhs.trunc832 = trunc nsw i32 %26 to i8, !dbg !18
  %38 = srem i8 %.lhs.trunc832, 64, !dbg !18
  %.sext833 = sext i8 %38 to i32, !dbg !18
  %.lhs.trunc834 = trunc nsw i32 %27 to i8, !dbg !18
  %39 = srem i8 %.lhs.trunc834, 64, !dbg !18
  %.sext835 = sext i8 %39 to i32, !dbg !18
  %.lhs.trunc836 = trunc nsw i32 %28 to i8, !dbg !18
  %40 = srem i8 %.lhs.trunc836, 64, !dbg !18
  %.sext837 = sext i8 %40 to i32, !dbg !18
  %41 = mul i32 %3, %.sext, !dbg !19
  %42 = mul i32 %3, %.sext825, !dbg !19
  %43 = mul i32 %3, %.sext827, !dbg !19
  %44 = mul i32 %3, %.sext829, !dbg !19
  %45 = mul i32 %3, %.sext831, !dbg !19
  %46 = mul i32 %3, %.sext833, !dbg !19
  %47 = mul i32 %3, %.sext835, !dbg !19
  %48 = mul i32 %3, %.sext837, !dbg !19
  %49 = add i32 %41, %29, !dbg !20
  %50 = add i32 %42, %29, !dbg !20
  %51 = add i32 %43, %29, !dbg !20
  %52 = add i32 %44, %29, !dbg !20
  %53 = add i32 %45, %29, !dbg !20
  %54 = add i32 %46, %29, !dbg !20
  %55 = add i32 %47, %29, !dbg !20
  %56 = add i32 %48, %29, !dbg !20
  %57 = sext i32 %49 to i64, !dbg !21
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !21
  %59 = sext i32 %50 to i64, !dbg !21
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !21
  %61 = sext i32 %51 to i64, !dbg !21
  %62 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !21
  %63 = sext i32 %52 to i64, !dbg !21
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !21
  %65 = sext i32 %53 to i64, !dbg !21
  %66 = getelementptr float, ptr addrspace(1) %1, i64 %65, !dbg !21
  %67 = sext i32 %54 to i64, !dbg !21
  %68 = getelementptr float, ptr addrspace(1) %1, i64 %67, !dbg !21
  %69 = sext i32 %55 to i64, !dbg !21
  %70 = getelementptr float, ptr addrspace(1) %1, i64 %69, !dbg !21
  %71 = sext i32 %56 to i64, !dbg !21
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !21
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %58) #4, !dbg !22
  %74 = bitcast i32 %73 to float, !dbg !22
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %60) #4, !dbg !22
  %76 = bitcast i32 %75 to float, !dbg !22
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %62) #4, !dbg !22
  %78 = bitcast i32 %77 to float, !dbg !22
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %64) #4, !dbg !22
  %80 = bitcast i32 %79 to float, !dbg !22
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %66) #4, !dbg !22
  %82 = bitcast i32 %81 to float, !dbg !22
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %68) #4, !dbg !22
  %84 = bitcast i32 %83 to float, !dbg !22
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %70) #4, !dbg !22
  %86 = bitcast i32 %85 to float, !dbg !22
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %72) #4, !dbg !22
  %88 = bitcast i32 %87 to float, !dbg !22
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !23
  %89 = fmul float %74, 0x3FE45F3060000000, !dbg !23
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i387 = icmp eq i32 %90, 0, !dbg !23
  %91 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %89) #4, !dbg !23
  %92 = tail call i32 @llvm.nvvm.f2i.rn(float %89) #4, !dbg !23
  %.01.i388 = select i1 %.not.i387, i32 %92, i32 %91, !dbg !23
  %93 = sitofp i32 %.01.i388 to float, !dbg !23
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i389 = icmp eq i32 %94, 0, !dbg !23
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float 0xBFF921FB40000000, float %74) #4, !dbg !23
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %93, float 0xBFF921FB40000000, float %74) #4, !dbg !23
  %.02.i390 = select i1 %.not15.i389, float %96, float %95, !dbg !23
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i391 = icmp eq i32 %97, 0, !dbg !23
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float 0xBE74442D00000000, float %.02.i390) #4, !dbg !23
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %93, float 0xBE74442D00000000, float %.02.i390) #4, !dbg !23
  %.03.i392 = select i1 %.not16.i391, float %99, float %98, !dbg !23
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i393 = icmp eq i32 %100, 0, !dbg !23
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float 0xBCF84698A0000000, float %.03.i392) #4, !dbg !23
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %93, float 0xBCF84698A0000000, float %.03.i392) #4, !dbg !23
  %.04.i394 = select i1 %.not17.i393, float %102, float %101, !dbg !23
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i395 = icmp eq i32 %103, 0, !dbg !23
  %104 = tail call float @llvm.nvvm.fabs.ftz.f(float %74) #4, !dbg !23
  %105 = tail call float @llvm.nvvm.fabs.f(float %74) #4, !dbg !23
  %.06.i396 = select i1 %.not18.i395, float %105, float %104, !dbg !23
  %106 = fcmp ult float %.06.i396, 1.056150e+05, !dbg !23
  br i1 %106, label %__internal_trig_reduction_kernel.exit.i.i414, label %__nv_isinff.exit.i.i.i397, !dbg !23

__nv_isinff.exit.i.i.i397:                        ; preds = %6
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i398 = icmp eq i32 %107, 0, !dbg !23
  %.07.i399 = select i1 %.not19.i398, float %105, float %104, !dbg !23
  %108 = fcmp oeq float %.07.i399, 0x7FF0000000000000, !dbg !23
  br i1 %108, label %__nv_fmul_rn.exit.i.i.i436, label %112, !dbg !23

__nv_fmul_rn.exit.i.i.i436:                       ; preds = %__nv_isinff.exit.i.i.i397
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i437 = icmp eq i32 %109, 0, !dbg !23
  %110 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %74, float 0.000000e+00) #4, !dbg !23
  %111 = tail call float @llvm.nvvm.mul.rn.f(float %74, float 0.000000e+00) #4, !dbg !23
  %.08.i438 = select i1 %.not27.i437, float %111, float %110, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !23

112:                                              ; preds = %__nv_isinff.exit.i.i.i397
  %113 = lshr i32 %73, 23, !dbg !23
  %114 = and i32 %113, 224, !dbg !23
  %115 = add nsw i32 %114, -128, !dbg !23
  %116 = shl i32 %73, 8, !dbg !23
  %117 = or i32 %116, -2147483648, !dbg !23
  %118 = lshr exact i32 %115, 5, !dbg !23
  br label %119, !dbg !23

119:                                              ; preds = %112, %119
  %indvars.iv = phi i64 [ 0, %112 ], [ %indvars.iv.next, %119 ]
  %hi.i.i.i.0.i400838 = phi i32 [ 0, %112 ], [ %124, %119 ]
  %120 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !23
  %121 = load i32, ptr addrspace(1) %120, align 4, !dbg !23
  %122 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %121, i32 %117, i32 %hi.i.i.i.0.i400838) #5, !dbg !23, !srcloc !24
  %123 = extractvalue { i32, i32 } %122, 0, !dbg !23
  %124 = extractvalue { i32, i32 } %122, 1, !dbg !23
  %125 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %indvars.iv, !dbg !23
  store i32 %123, ptr %125, align 4, !dbg !23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !23
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !23
  br i1 %exitcond.not, label %126, label %119, !dbg !23, !llvm.loop !25

126:                                              ; preds = %119
  %127 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i386, i64 24, !dbg !23
  store i32 %124, ptr %127, align 4, !dbg !23
  %128 = sub nsw i32 6, %118, !dbg !23
  %129 = sext i32 %128 to i64, !dbg !23
  %130 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %129, !dbg !23
  %131 = load i32, ptr %130, align 4, !dbg !23
  %132 = sub nsw i32 5, %118, !dbg !23
  %133 = sext i32 %132 to i64, !dbg !23
  %134 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %133, !dbg !23
  %135 = load i32, ptr %134, align 4, !dbg !23
  %136 = freeze i32 %135, !dbg !23
  %137 = and i32 %73, 260046848, !dbg !23
  %.not20.i402 = icmp eq i32 %137, 0, !dbg !23
  br i1 %.not20.i402, label %__internal_trig_reduction_slowpath.exit.i.i.i403, label %138, !dbg !23

138:                                              ; preds = %126
  %139 = sub nsw i32 4, %118, !dbg !23
  %140 = sext i32 %139 to i64, !dbg !23
  %141 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %140, !dbg !23
  %142 = load i32, ptr %141, align 4, !dbg !23
  %143 = tail call i32 @llvm.fshl.i32(i32 %136, i32 %142, i32 %113), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i403, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i403: ; preds = %138, %126
  %lo.i.i.i.0.i405 = phi i32 [ %143, %138 ], [ %136, %126 ], !dbg !23
  %144 = tail call i32 @llvm.fshl.i32(i32 %131, i32 %136, i32 %113), !dbg !23
  %145 = lshr i32 %144, 30, !dbg !23
  %146 = tail call i32 @llvm.fshl.i32(i32 %144, i32 %lo.i.i.i.0.i405, i32 2), !dbg !23
  %147 = shl i32 %lo.i.i.i.0.i405, 2, !dbg !23
  %148 = lshr i32 %146, 31, !dbg !23
  %149 = add nuw nsw i32 %148, %145, !dbg !23
  %150 = sub nsw i32 0, %149, !dbg !23
  %.not2123.i406 = icmp slt i32 %73, 0, !dbg !23
  %spec.select.i407 = select i1 %.not2123.i406, i32 %150, i32 %149, !dbg !23
  %151 = xor i32 %146, %73, !dbg !23
  %.lobit.i408 = ashr i32 %146, 31, !dbg !23
  %hi.i.i.i.2.i409 = xor i32 %.lobit.i408, %146, !dbg !23
  %lo.i.i.i.1.i411 = xor i32 %.lobit.i408, %147, !dbg !23
  %152 = zext i32 %hi.i.i.i.2.i409 to i64, !dbg !23
  %153 = shl nuw i64 %152, 32, !dbg !23
  %154 = zext i32 %lo.i.i.i.1.i411 to i64, !dbg !23
  %155 = or disjoint i64 %153, %154, !dbg !23
  %156 = sitofp i64 %155 to double, !dbg !23
  %157 = fmul double %156, 0x3BF921FB54442D19, !dbg !23
  %158 = fptrunc double %157 to float, !dbg !23
  %159 = fneg float %158, !dbg !23
  %.not2526.i412 = icmp slt i32 %151, 0, !dbg !23
  %r.i.i.i.0.i413 = select i1 %.not2526.i412, float %159, float %158, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !23

__internal_trig_reduction_kernel.exit.i.i414:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i403, %__nv_fmul_rn.exit.i.i.i436, %6
  %i.i.1.i415 = phi i32 [ %.01.i388, %6 ], [ 0, %__nv_fmul_rn.exit.i.i.i436 ], [ %spec.select.i407, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !23
  %t.i.i.1.i416 = phi float [ %.04.i394, %6 ], [ %.08.i438, %__nv_fmul_rn.exit.i.i.i436 ], [ %r.i.i.i.0.i413, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !23
  %160 = add i32 %i.i.1.i415, 1, !dbg !23
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i417 = icmp eq i32 %161, 0, !dbg !23
  %162 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #4, !dbg !23
  %163 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #4, !dbg !23
  %.011.i418 = select i1 %.not28.i417, float %163, float %162, !dbg !23
  %164 = and i32 %i.i.1.i415, 1, !dbg !23
  %.not29.not.i = icmp eq i32 %164, 0, !dbg !23
  %165 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i416, !dbg !23
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i419 = icmp eq i32 %166, 0, !dbg !23
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i418, float %165, float 0.000000e+00) #4, !dbg !23
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i418, float %165, float 0.000000e+00) #4, !dbg !23
  %.012.i420 = select i1 %.not30.i419, float %168, float %167, !dbg !23
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i433, label %__internal_fmad.exit2.i.i.i421, !dbg !23

__internal_fmad.exit1.i.i.i433:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i414
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i434 = icmp eq i32 %169, 0, !dbg !23
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #4, !dbg !23
  %171 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i435 = select i1 %.not31.i434, float %171, float %170, !dbg !23
  br label %__internal_fmad.exit2.i.i.i421, !dbg !23

__internal_fmad.exit2.i.i.i421:                   ; preds = %__internal_fmad.exit1.i.i.i433, %__internal_trig_reduction_kernel.exit.i.i414
  %172 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i433 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !23
  %173 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i433 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !23
  %174 = phi float [ %.013.i435, %__internal_fmad.exit1.i.i.i433 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !23
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i422 = icmp eq i32 %175, 0, !dbg !23
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %174, float %.011.i418, float %173) #4, !dbg !23
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %174, float %.011.i418, float %173) #4, !dbg !23
  %.010.i423 = select i1 %.not32.i422, float %177, float %176, !dbg !23
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i424 = icmp eq i32 %178, 0, !dbg !23
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i423, float %.011.i418, float %172) #4, !dbg !23
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i423, float %.011.i418, float %172) #4, !dbg !23
  %.09.i425 = select i1 %.not33.i424, float %180, float %179, !dbg !23
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i426 = icmp eq i32 %181, 0, !dbg !23
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i425, float %.012.i420, float %165) #4, !dbg !23
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i425, float %.012.i420, float %165) #4, !dbg !23
  %.05.i427 = select i1 %.not34.i426, float %183, float %182, !dbg !23
  %184 = and i32 %160, 2, !dbg !23
  %.not35.i428 = icmp eq i32 %184, 0, !dbg !23
  br i1 %.not35.i428, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i429, !dbg !23

__internal_fmad.exit5.i.i.i429:                   ; preds = %__internal_fmad.exit2.i.i.i421
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i430 = icmp eq i32 %185, 0, !dbg !23
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i431 = select i1 %.not36.i430, float %187, float %186, !dbg !23
  br label %__nv_cosf.exit, !dbg !23

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i421, %__internal_fmad.exit5.i.i.i429
  %z.i.i.0.i432 = phi float [ %.0.i431, %__internal_fmad.exit5.i.i.i429 ], [ %.05.i427, %__internal_fmad.exit2.i.i.i421 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !23
  %188 = fmul float %76, 0x3FE45F3060000000, !dbg !23
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i440 = icmp eq i32 %189, 0, !dbg !23
  %190 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %188) #4, !dbg !23
  %191 = tail call i32 @llvm.nvvm.f2i.rn(float %188) #4, !dbg !23
  %.01.i441 = select i1 %.not.i440, i32 %191, i32 %190, !dbg !23
  %192 = sitofp i32 %.01.i441 to float, !dbg !23
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i442 = icmp eq i32 %193, 0, !dbg !23
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %192, float 0xBFF921FB40000000, float %76) #4, !dbg !23
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %192, float 0xBFF921FB40000000, float %76) #4, !dbg !23
  %.02.i443 = select i1 %.not15.i442, float %195, float %194, !dbg !23
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i444 = icmp eq i32 %196, 0, !dbg !23
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %192, float 0xBE74442D00000000, float %.02.i443) #4, !dbg !23
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %192, float 0xBE74442D00000000, float %.02.i443) #4, !dbg !23
  %.03.i445 = select i1 %.not16.i444, float %198, float %197, !dbg !23
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i446 = icmp eq i32 %199, 0, !dbg !23
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %192, float 0xBCF84698A0000000, float %.03.i445) #4, !dbg !23
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %192, float 0xBCF84698A0000000, float %.03.i445) #4, !dbg !23
  %.04.i447 = select i1 %.not17.i446, float %201, float %200, !dbg !23
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i448 = icmp eq i32 %202, 0, !dbg !23
  %203 = tail call float @llvm.nvvm.fabs.ftz.f(float %76) #4, !dbg !23
  %204 = tail call float @llvm.nvvm.fabs.f(float %76) #4, !dbg !23
  %.06.i449 = select i1 %.not18.i448, float %204, float %203, !dbg !23
  %205 = fcmp ult float %.06.i449, 1.056150e+05, !dbg !23
  br i1 %205, label %__internal_trig_reduction_kernel.exit.i.i467, label %__nv_isinff.exit.i.i.i450, !dbg !23

__nv_isinff.exit.i.i.i450:                        ; preds = %__nv_cosf.exit
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i451 = icmp eq i32 %206, 0, !dbg !23
  %.07.i452 = select i1 %.not19.i451, float %204, float %203, !dbg !23
  %207 = fcmp oeq float %.07.i452, 0x7FF0000000000000, !dbg !23
  br i1 %207, label %__nv_fmul_rn.exit.i.i.i490, label %211, !dbg !23

__nv_fmul_rn.exit.i.i.i490:                       ; preds = %__nv_isinff.exit.i.i.i450
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i491 = icmp eq i32 %208, 0, !dbg !23
  %209 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %76, float 0.000000e+00) #4, !dbg !23
  %210 = tail call float @llvm.nvvm.mul.rn.f(float %76, float 0.000000e+00) #4, !dbg !23
  %.08.i492 = select i1 %.not27.i491, float %210, float %209, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !23

211:                                              ; preds = %__nv_isinff.exit.i.i.i450
  %212 = lshr i32 %75, 23, !dbg !23
  %213 = and i32 %212, 224, !dbg !23
  %214 = add nsw i32 %213, -128, !dbg !23
  %215 = shl i32 %75, 8, !dbg !23
  %216 = or i32 %215, -2147483648, !dbg !23
  %217 = lshr exact i32 %214, 5, !dbg !23
  br label %218, !dbg !23

218:                                              ; preds = %211, %218
  %indvars.iv901 = phi i64 [ 0, %211 ], [ %indvars.iv.next902, %218 ]
  %hi.i.i.i.0.i453840 = phi i32 [ 0, %211 ], [ %223, %218 ]
  %219 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv901, !dbg !23
  %220 = load i32, ptr addrspace(1) %219, align 4, !dbg !23
  %221 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %220, i32 %216, i32 %hi.i.i.i.0.i453840) #5, !dbg !23, !srcloc !24
  %222 = extractvalue { i32, i32 } %221, 0, !dbg !23
  %223 = extractvalue { i32, i32 } %221, 1, !dbg !23
  %224 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %indvars.iv901, !dbg !23
  store i32 %222, ptr %224, align 4, !dbg !23
  %indvars.iv.next902 = add nuw nsw i64 %indvars.iv901, 1, !dbg !23
  %exitcond903.not = icmp eq i64 %indvars.iv.next902, 6, !dbg !23
  br i1 %exitcond903.not, label %225, label %218, !dbg !23, !llvm.loop !27

225:                                              ; preds = %218
  %226 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i439, i64 24, !dbg !23
  store i32 %223, ptr %226, align 4, !dbg !23
  %227 = sub nsw i32 6, %217, !dbg !23
  %228 = sext i32 %227 to i64, !dbg !23
  %229 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %228, !dbg !23
  %230 = load i32, ptr %229, align 4, !dbg !23
  %231 = sub nsw i32 5, %217, !dbg !23
  %232 = sext i32 %231 to i64, !dbg !23
  %233 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %232, !dbg !23
  %234 = load i32, ptr %233, align 4, !dbg !23
  %235 = freeze i32 %234, !dbg !23
  %236 = and i32 %75, 260046848, !dbg !23
  %.not20.i455 = icmp eq i32 %236, 0, !dbg !23
  br i1 %.not20.i455, label %__internal_trig_reduction_slowpath.exit.i.i.i456, label %237, !dbg !23

237:                                              ; preds = %225
  %238 = sub nsw i32 4, %217, !dbg !23
  %239 = sext i32 %238 to i64, !dbg !23
  %240 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %239, !dbg !23
  %241 = load i32, ptr %240, align 4, !dbg !23
  %242 = tail call i32 @llvm.fshl.i32(i32 %235, i32 %241, i32 %212), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i456, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i456: ; preds = %237, %225
  %lo.i.i.i.0.i458 = phi i32 [ %242, %237 ], [ %235, %225 ], !dbg !23
  %243 = tail call i32 @llvm.fshl.i32(i32 %230, i32 %235, i32 %212), !dbg !23
  %244 = lshr i32 %243, 30, !dbg !23
  %245 = tail call i32 @llvm.fshl.i32(i32 %243, i32 %lo.i.i.i.0.i458, i32 2), !dbg !23
  %246 = shl i32 %lo.i.i.i.0.i458, 2, !dbg !23
  %247 = lshr i32 %245, 31, !dbg !23
  %248 = add nuw nsw i32 %247, %244, !dbg !23
  %249 = sub nsw i32 0, %248, !dbg !23
  %.not2123.i459 = icmp slt i32 %75, 0, !dbg !23
  %spec.select.i460 = select i1 %.not2123.i459, i32 %249, i32 %248, !dbg !23
  %250 = xor i32 %245, %75, !dbg !23
  %.lobit.i461 = ashr i32 %245, 31, !dbg !23
  %hi.i.i.i.2.i462 = xor i32 %.lobit.i461, %245, !dbg !23
  %lo.i.i.i.1.i464 = xor i32 %.lobit.i461, %246, !dbg !23
  %251 = zext i32 %hi.i.i.i.2.i462 to i64, !dbg !23
  %252 = shl nuw i64 %251, 32, !dbg !23
  %253 = zext i32 %lo.i.i.i.1.i464 to i64, !dbg !23
  %254 = or disjoint i64 %252, %253, !dbg !23
  %255 = sitofp i64 %254 to double, !dbg !23
  %256 = fmul double %255, 0x3BF921FB54442D19, !dbg !23
  %257 = fptrunc double %256 to float, !dbg !23
  %258 = fneg float %257, !dbg !23
  %.not2526.i465 = icmp slt i32 %250, 0, !dbg !23
  %r.i.i.i.0.i466 = select i1 %.not2526.i465, float %258, float %257, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !23

__internal_trig_reduction_kernel.exit.i.i467:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i456, %__nv_fmul_rn.exit.i.i.i490, %__nv_cosf.exit
  %i.i.1.i468 = phi i32 [ %.01.i441, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i490 ], [ %spec.select.i460, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !23
  %t.i.i.1.i469 = phi float [ %.04.i447, %__nv_cosf.exit ], [ %.08.i492, %__nv_fmul_rn.exit.i.i.i490 ], [ %r.i.i.i.0.i466, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !23
  %259 = add i32 %i.i.1.i468, 1, !dbg !23
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i470 = icmp eq i32 %260, 0, !dbg !23
  %261 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #4, !dbg !23
  %262 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #4, !dbg !23
  %.011.i471 = select i1 %.not28.i470, float %262, float %261, !dbg !23
  %263 = and i32 %i.i.1.i468, 1, !dbg !23
  %.not29.not.i472 = icmp eq i32 %263, 0, !dbg !23
  %264 = select i1 %.not29.not.i472, float 1.000000e+00, float %t.i.i.1.i469, !dbg !23
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i473 = icmp eq i32 %265, 0, !dbg !23
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i471, float %264, float 0.000000e+00) #4, !dbg !23
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i471, float %264, float 0.000000e+00) #4, !dbg !23
  %.012.i474 = select i1 %.not30.i473, float %267, float %266, !dbg !23
  br i1 %.not29.not.i472, label %__internal_fmad.exit1.i.i.i487, label %__internal_fmad.exit2.i.i.i475, !dbg !23

__internal_fmad.exit1.i.i.i487:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i467
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i488 = icmp eq i32 %268, 0, !dbg !23
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #4, !dbg !23
  %270 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i489 = select i1 %.not31.i488, float %270, float %269, !dbg !23
  br label %__internal_fmad.exit2.i.i.i475, !dbg !23

__internal_fmad.exit2.i.i.i475:                   ; preds = %__internal_fmad.exit1.i.i.i487, %__internal_trig_reduction_kernel.exit.i.i467
  %271 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i487 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !23
  %272 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i487 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !23
  %273 = phi float [ %.013.i489, %__internal_fmad.exit1.i.i.i487 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !23
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i476 = icmp eq i32 %274, 0, !dbg !23
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %273, float %.011.i471, float %272) #4, !dbg !23
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %273, float %.011.i471, float %272) #4, !dbg !23
  %.010.i477 = select i1 %.not32.i476, float %276, float %275, !dbg !23
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i478 = icmp eq i32 %277, 0, !dbg !23
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i477, float %.011.i471, float %271) #4, !dbg !23
  %279 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i477, float %.011.i471, float %271) #4, !dbg !23
  %.09.i479 = select i1 %.not33.i478, float %279, float %278, !dbg !23
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i480 = icmp eq i32 %280, 0, !dbg !23
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i479, float %.012.i474, float %264) #4, !dbg !23
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i479, float %.012.i474, float %264) #4, !dbg !23
  %.05.i481 = select i1 %.not34.i480, float %282, float %281, !dbg !23
  %283 = and i32 %259, 2, !dbg !23
  %.not35.i482 = icmp eq i32 %283, 0, !dbg !23
  br i1 %.not35.i482, label %__nv_cosf.exit493, label %__internal_fmad.exit5.i.i.i483, !dbg !23

__internal_fmad.exit5.i.i.i483:                   ; preds = %__internal_fmad.exit2.i.i.i475
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i484 = icmp eq i32 %284, 0, !dbg !23
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i485 = select i1 %.not36.i484, float %286, float %285, !dbg !23
  br label %__nv_cosf.exit493, !dbg !23

__nv_cosf.exit493:                                ; preds = %__internal_fmad.exit2.i.i.i475, %__internal_fmad.exit5.i.i.i483
  %z.i.i.0.i486 = phi float [ %.0.i485, %__internal_fmad.exit5.i.i.i483 ], [ %.05.i481, %__internal_fmad.exit2.i.i.i475 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !23
  %287 = fmul float %78, 0x3FE45F3060000000, !dbg !23
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i495 = icmp eq i32 %288, 0, !dbg !23
  %289 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %287) #4, !dbg !23
  %290 = tail call i32 @llvm.nvvm.f2i.rn(float %287) #4, !dbg !23
  %.01.i496 = select i1 %.not.i495, i32 %290, i32 %289, !dbg !23
  %291 = sitofp i32 %.01.i496 to float, !dbg !23
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i497 = icmp eq i32 %292, 0, !dbg !23
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %291, float 0xBFF921FB40000000, float %78) #4, !dbg !23
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %291, float 0xBFF921FB40000000, float %78) #4, !dbg !23
  %.02.i498 = select i1 %.not15.i497, float %294, float %293, !dbg !23
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i499 = icmp eq i32 %295, 0, !dbg !23
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %291, float 0xBE74442D00000000, float %.02.i498) #4, !dbg !23
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %291, float 0xBE74442D00000000, float %.02.i498) #4, !dbg !23
  %.03.i500 = select i1 %.not16.i499, float %297, float %296, !dbg !23
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i501 = icmp eq i32 %298, 0, !dbg !23
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %291, float 0xBCF84698A0000000, float %.03.i500) #4, !dbg !23
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %291, float 0xBCF84698A0000000, float %.03.i500) #4, !dbg !23
  %.04.i502 = select i1 %.not17.i501, float %300, float %299, !dbg !23
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i503 = icmp eq i32 %301, 0, !dbg !23
  %302 = tail call float @llvm.nvvm.fabs.ftz.f(float %78) #4, !dbg !23
  %303 = tail call float @llvm.nvvm.fabs.f(float %78) #4, !dbg !23
  %.06.i504 = select i1 %.not18.i503, float %303, float %302, !dbg !23
  %304 = fcmp ult float %.06.i504, 1.056150e+05, !dbg !23
  br i1 %304, label %__internal_trig_reduction_kernel.exit.i.i522, label %__nv_isinff.exit.i.i.i505, !dbg !23

__nv_isinff.exit.i.i.i505:                        ; preds = %__nv_cosf.exit493
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i506 = icmp eq i32 %305, 0, !dbg !23
  %.07.i507 = select i1 %.not19.i506, float %303, float %302, !dbg !23
  %306 = fcmp oeq float %.07.i507, 0x7FF0000000000000, !dbg !23
  br i1 %306, label %__nv_fmul_rn.exit.i.i.i545, label %310, !dbg !23

__nv_fmul_rn.exit.i.i.i545:                       ; preds = %__nv_isinff.exit.i.i.i505
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i546 = icmp eq i32 %307, 0, !dbg !23
  %308 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %78, float 0.000000e+00) #4, !dbg !23
  %309 = tail call float @llvm.nvvm.mul.rn.f(float %78, float 0.000000e+00) #4, !dbg !23
  %.08.i547 = select i1 %.not27.i546, float %309, float %308, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !23

310:                                              ; preds = %__nv_isinff.exit.i.i.i505
  %311 = lshr i32 %77, 23, !dbg !23
  %312 = and i32 %311, 224, !dbg !23
  %313 = add nsw i32 %312, -128, !dbg !23
  %314 = shl i32 %77, 8, !dbg !23
  %315 = or i32 %314, -2147483648, !dbg !23
  %316 = lshr exact i32 %313, 5, !dbg !23
  br label %317, !dbg !23

317:                                              ; preds = %310, %317
  %indvars.iv904 = phi i64 [ 0, %310 ], [ %indvars.iv.next905, %317 ]
  %hi.i.i.i.0.i508842 = phi i32 [ 0, %310 ], [ %322, %317 ]
  %318 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv904, !dbg !23
  %319 = load i32, ptr addrspace(1) %318, align 4, !dbg !23
  %320 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %319, i32 %315, i32 %hi.i.i.i.0.i508842) #5, !dbg !23, !srcloc !24
  %321 = extractvalue { i32, i32 } %320, 0, !dbg !23
  %322 = extractvalue { i32, i32 } %320, 1, !dbg !23
  %323 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %indvars.iv904, !dbg !23
  store i32 %321, ptr %323, align 4, !dbg !23
  %indvars.iv.next905 = add nuw nsw i64 %indvars.iv904, 1, !dbg !23
  %exitcond906.not = icmp eq i64 %indvars.iv.next905, 6, !dbg !23
  br i1 %exitcond906.not, label %324, label %317, !dbg !23, !llvm.loop !28

324:                                              ; preds = %317
  %325 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i494, i64 24, !dbg !23
  store i32 %322, ptr %325, align 4, !dbg !23
  %326 = sub nsw i32 6, %316, !dbg !23
  %327 = sext i32 %326 to i64, !dbg !23
  %328 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %327, !dbg !23
  %329 = load i32, ptr %328, align 4, !dbg !23
  %330 = sub nsw i32 5, %316, !dbg !23
  %331 = sext i32 %330 to i64, !dbg !23
  %332 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %331, !dbg !23
  %333 = load i32, ptr %332, align 4, !dbg !23
  %334 = freeze i32 %333, !dbg !23
  %335 = and i32 %77, 260046848, !dbg !23
  %.not20.i510 = icmp eq i32 %335, 0, !dbg !23
  br i1 %.not20.i510, label %__internal_trig_reduction_slowpath.exit.i.i.i511, label %336, !dbg !23

336:                                              ; preds = %324
  %337 = sub nsw i32 4, %316, !dbg !23
  %338 = sext i32 %337 to i64, !dbg !23
  %339 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %338, !dbg !23
  %340 = load i32, ptr %339, align 4, !dbg !23
  %341 = tail call i32 @llvm.fshl.i32(i32 %334, i32 %340, i32 %311), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i511, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i511: ; preds = %336, %324
  %lo.i.i.i.0.i513 = phi i32 [ %341, %336 ], [ %334, %324 ], !dbg !23
  %342 = tail call i32 @llvm.fshl.i32(i32 %329, i32 %334, i32 %311), !dbg !23
  %343 = lshr i32 %342, 30, !dbg !23
  %344 = tail call i32 @llvm.fshl.i32(i32 %342, i32 %lo.i.i.i.0.i513, i32 2), !dbg !23
  %345 = shl i32 %lo.i.i.i.0.i513, 2, !dbg !23
  %346 = lshr i32 %344, 31, !dbg !23
  %347 = add nuw nsw i32 %346, %343, !dbg !23
  %348 = sub nsw i32 0, %347, !dbg !23
  %.not2123.i514 = icmp slt i32 %77, 0, !dbg !23
  %spec.select.i515 = select i1 %.not2123.i514, i32 %348, i32 %347, !dbg !23
  %349 = xor i32 %344, %77, !dbg !23
  %.lobit.i516 = ashr i32 %344, 31, !dbg !23
  %hi.i.i.i.2.i517 = xor i32 %.lobit.i516, %344, !dbg !23
  %lo.i.i.i.1.i519 = xor i32 %.lobit.i516, %345, !dbg !23
  %350 = zext i32 %hi.i.i.i.2.i517 to i64, !dbg !23
  %351 = shl nuw i64 %350, 32, !dbg !23
  %352 = zext i32 %lo.i.i.i.1.i519 to i64, !dbg !23
  %353 = or disjoint i64 %351, %352, !dbg !23
  %354 = sitofp i64 %353 to double, !dbg !23
  %355 = fmul double %354, 0x3BF921FB54442D19, !dbg !23
  %356 = fptrunc double %355 to float, !dbg !23
  %357 = fneg float %356, !dbg !23
  %.not2526.i520 = icmp slt i32 %349, 0, !dbg !23
  %r.i.i.i.0.i521 = select i1 %.not2526.i520, float %357, float %356, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !23

__internal_trig_reduction_kernel.exit.i.i522:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i511, %__nv_fmul_rn.exit.i.i.i545, %__nv_cosf.exit493
  %i.i.1.i523 = phi i32 [ %.01.i496, %__nv_cosf.exit493 ], [ 0, %__nv_fmul_rn.exit.i.i.i545 ], [ %spec.select.i515, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !23
  %t.i.i.1.i524 = phi float [ %.04.i502, %__nv_cosf.exit493 ], [ %.08.i547, %__nv_fmul_rn.exit.i.i.i545 ], [ %r.i.i.i.0.i521, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !23
  %358 = add i32 %i.i.1.i523, 1, !dbg !23
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i525 = icmp eq i32 %359, 0, !dbg !23
  %360 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #4, !dbg !23
  %361 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #4, !dbg !23
  %.011.i526 = select i1 %.not28.i525, float %361, float %360, !dbg !23
  %362 = and i32 %i.i.1.i523, 1, !dbg !23
  %.not29.not.i527 = icmp eq i32 %362, 0, !dbg !23
  %363 = select i1 %.not29.not.i527, float 1.000000e+00, float %t.i.i.1.i524, !dbg !23
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i528 = icmp eq i32 %364, 0, !dbg !23
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i526, float %363, float 0.000000e+00) #4, !dbg !23
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i526, float %363, float 0.000000e+00) #4, !dbg !23
  %.012.i529 = select i1 %.not30.i528, float %366, float %365, !dbg !23
  br i1 %.not29.not.i527, label %__internal_fmad.exit1.i.i.i542, label %__internal_fmad.exit2.i.i.i530, !dbg !23

__internal_fmad.exit1.i.i.i542:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i522
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i543 = icmp eq i32 %367, 0, !dbg !23
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #4, !dbg !23
  %369 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i544 = select i1 %.not31.i543, float %369, float %368, !dbg !23
  br label %__internal_fmad.exit2.i.i.i530, !dbg !23

__internal_fmad.exit2.i.i.i530:                   ; preds = %__internal_fmad.exit1.i.i.i542, %__internal_trig_reduction_kernel.exit.i.i522
  %370 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i542 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !23
  %371 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i542 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !23
  %372 = phi float [ %.013.i544, %__internal_fmad.exit1.i.i.i542 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !23
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i531 = icmp eq i32 %373, 0, !dbg !23
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %372, float %.011.i526, float %371) #4, !dbg !23
  %375 = tail call float @llvm.nvvm.fma.rn.f(float %372, float %.011.i526, float %371) #4, !dbg !23
  %.010.i532 = select i1 %.not32.i531, float %375, float %374, !dbg !23
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i533 = icmp eq i32 %376, 0, !dbg !23
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i532, float %.011.i526, float %370) #4, !dbg !23
  %378 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i532, float %.011.i526, float %370) #4, !dbg !23
  %.09.i534 = select i1 %.not33.i533, float %378, float %377, !dbg !23
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i535 = icmp eq i32 %379, 0, !dbg !23
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i534, float %.012.i529, float %363) #4, !dbg !23
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i534, float %.012.i529, float %363) #4, !dbg !23
  %.05.i536 = select i1 %.not34.i535, float %381, float %380, !dbg !23
  %382 = and i32 %358, 2, !dbg !23
  %.not35.i537 = icmp eq i32 %382, 0, !dbg !23
  br i1 %.not35.i537, label %__nv_cosf.exit548, label %__internal_fmad.exit5.i.i.i538, !dbg !23

__internal_fmad.exit5.i.i.i538:                   ; preds = %__internal_fmad.exit2.i.i.i530
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i539 = icmp eq i32 %383, 0, !dbg !23
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i540 = select i1 %.not36.i539, float %385, float %384, !dbg !23
  br label %__nv_cosf.exit548, !dbg !23

__nv_cosf.exit548:                                ; preds = %__internal_fmad.exit2.i.i.i530, %__internal_fmad.exit5.i.i.i538
  %z.i.i.0.i541 = phi float [ %.0.i540, %__internal_fmad.exit5.i.i.i538 ], [ %.05.i536, %__internal_fmad.exit2.i.i.i530 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !23
  %386 = fmul float %80, 0x3FE45F3060000000, !dbg !23
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i550 = icmp eq i32 %387, 0, !dbg !23
  %388 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %386) #4, !dbg !23
  %389 = tail call i32 @llvm.nvvm.f2i.rn(float %386) #4, !dbg !23
  %.01.i551 = select i1 %.not.i550, i32 %389, i32 %388, !dbg !23
  %390 = sitofp i32 %.01.i551 to float, !dbg !23
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i552 = icmp eq i32 %391, 0, !dbg !23
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %390, float 0xBFF921FB40000000, float %80) #4, !dbg !23
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %390, float 0xBFF921FB40000000, float %80) #4, !dbg !23
  %.02.i553 = select i1 %.not15.i552, float %393, float %392, !dbg !23
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i554 = icmp eq i32 %394, 0, !dbg !23
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %390, float 0xBE74442D00000000, float %.02.i553) #4, !dbg !23
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %390, float 0xBE74442D00000000, float %.02.i553) #4, !dbg !23
  %.03.i555 = select i1 %.not16.i554, float %396, float %395, !dbg !23
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i556 = icmp eq i32 %397, 0, !dbg !23
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %390, float 0xBCF84698A0000000, float %.03.i555) #4, !dbg !23
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %390, float 0xBCF84698A0000000, float %.03.i555) #4, !dbg !23
  %.04.i557 = select i1 %.not17.i556, float %399, float %398, !dbg !23
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i558 = icmp eq i32 %400, 0, !dbg !23
  %401 = tail call float @llvm.nvvm.fabs.ftz.f(float %80) #4, !dbg !23
  %402 = tail call float @llvm.nvvm.fabs.f(float %80) #4, !dbg !23
  %.06.i559 = select i1 %.not18.i558, float %402, float %401, !dbg !23
  %403 = fcmp ult float %.06.i559, 1.056150e+05, !dbg !23
  br i1 %403, label %__internal_trig_reduction_kernel.exit.i.i577, label %__nv_isinff.exit.i.i.i560, !dbg !23

__nv_isinff.exit.i.i.i560:                        ; preds = %__nv_cosf.exit548
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i561 = icmp eq i32 %404, 0, !dbg !23
  %.07.i562 = select i1 %.not19.i561, float %402, float %401, !dbg !23
  %405 = fcmp oeq float %.07.i562, 0x7FF0000000000000, !dbg !23
  br i1 %405, label %__nv_fmul_rn.exit.i.i.i600, label %409, !dbg !23

__nv_fmul_rn.exit.i.i.i600:                       ; preds = %__nv_isinff.exit.i.i.i560
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i601 = icmp eq i32 %406, 0, !dbg !23
  %407 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %80, float 0.000000e+00) #4, !dbg !23
  %408 = tail call float @llvm.nvvm.mul.rn.f(float %80, float 0.000000e+00) #4, !dbg !23
  %.08.i602 = select i1 %.not27.i601, float %408, float %407, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !23

409:                                              ; preds = %__nv_isinff.exit.i.i.i560
  %410 = lshr i32 %79, 23, !dbg !23
  %411 = and i32 %410, 224, !dbg !23
  %412 = add nsw i32 %411, -128, !dbg !23
  %413 = shl i32 %79, 8, !dbg !23
  %414 = or i32 %413, -2147483648, !dbg !23
  %415 = lshr exact i32 %412, 5, !dbg !23
  br label %416, !dbg !23

416:                                              ; preds = %409, %416
  %indvars.iv907 = phi i64 [ 0, %409 ], [ %indvars.iv.next908, %416 ]
  %hi.i.i.i.0.i563844 = phi i32 [ 0, %409 ], [ %421, %416 ]
  %417 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv907, !dbg !23
  %418 = load i32, ptr addrspace(1) %417, align 4, !dbg !23
  %419 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %418, i32 %414, i32 %hi.i.i.i.0.i563844) #5, !dbg !23, !srcloc !24
  %420 = extractvalue { i32, i32 } %419, 0, !dbg !23
  %421 = extractvalue { i32, i32 } %419, 1, !dbg !23
  %422 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %indvars.iv907, !dbg !23
  store i32 %420, ptr %422, align 4, !dbg !23
  %indvars.iv.next908 = add nuw nsw i64 %indvars.iv907, 1, !dbg !23
  %exitcond909.not = icmp eq i64 %indvars.iv.next908, 6, !dbg !23
  br i1 %exitcond909.not, label %423, label %416, !dbg !23, !llvm.loop !29

423:                                              ; preds = %416
  %424 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i549, i64 24, !dbg !23
  store i32 %421, ptr %424, align 4, !dbg !23
  %425 = sub nsw i32 6, %415, !dbg !23
  %426 = sext i32 %425 to i64, !dbg !23
  %427 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %426, !dbg !23
  %428 = load i32, ptr %427, align 4, !dbg !23
  %429 = sub nsw i32 5, %415, !dbg !23
  %430 = sext i32 %429 to i64, !dbg !23
  %431 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %430, !dbg !23
  %432 = load i32, ptr %431, align 4, !dbg !23
  %433 = freeze i32 %432, !dbg !23
  %434 = and i32 %79, 260046848, !dbg !23
  %.not20.i565 = icmp eq i32 %434, 0, !dbg !23
  br i1 %.not20.i565, label %__internal_trig_reduction_slowpath.exit.i.i.i566, label %435, !dbg !23

435:                                              ; preds = %423
  %436 = sub nsw i32 4, %415, !dbg !23
  %437 = sext i32 %436 to i64, !dbg !23
  %438 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %437, !dbg !23
  %439 = load i32, ptr %438, align 4, !dbg !23
  %440 = tail call i32 @llvm.fshl.i32(i32 %433, i32 %439, i32 %410), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i566, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i566: ; preds = %435, %423
  %lo.i.i.i.0.i568 = phi i32 [ %440, %435 ], [ %433, %423 ], !dbg !23
  %441 = tail call i32 @llvm.fshl.i32(i32 %428, i32 %433, i32 %410), !dbg !23
  %442 = lshr i32 %441, 30, !dbg !23
  %443 = tail call i32 @llvm.fshl.i32(i32 %441, i32 %lo.i.i.i.0.i568, i32 2), !dbg !23
  %444 = shl i32 %lo.i.i.i.0.i568, 2, !dbg !23
  %445 = lshr i32 %443, 31, !dbg !23
  %446 = add nuw nsw i32 %445, %442, !dbg !23
  %447 = sub nsw i32 0, %446, !dbg !23
  %.not2123.i569 = icmp slt i32 %79, 0, !dbg !23
  %spec.select.i570 = select i1 %.not2123.i569, i32 %447, i32 %446, !dbg !23
  %448 = xor i32 %443, %79, !dbg !23
  %.lobit.i571 = ashr i32 %443, 31, !dbg !23
  %hi.i.i.i.2.i572 = xor i32 %.lobit.i571, %443, !dbg !23
  %lo.i.i.i.1.i574 = xor i32 %.lobit.i571, %444, !dbg !23
  %449 = zext i32 %hi.i.i.i.2.i572 to i64, !dbg !23
  %450 = shl nuw i64 %449, 32, !dbg !23
  %451 = zext i32 %lo.i.i.i.1.i574 to i64, !dbg !23
  %452 = or disjoint i64 %450, %451, !dbg !23
  %453 = sitofp i64 %452 to double, !dbg !23
  %454 = fmul double %453, 0x3BF921FB54442D19, !dbg !23
  %455 = fptrunc double %454 to float, !dbg !23
  %456 = fneg float %455, !dbg !23
  %.not2526.i575 = icmp slt i32 %448, 0, !dbg !23
  %r.i.i.i.0.i576 = select i1 %.not2526.i575, float %456, float %455, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !23

__internal_trig_reduction_kernel.exit.i.i577:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i566, %__nv_fmul_rn.exit.i.i.i600, %__nv_cosf.exit548
  %i.i.1.i578 = phi i32 [ %.01.i551, %__nv_cosf.exit548 ], [ 0, %__nv_fmul_rn.exit.i.i.i600 ], [ %spec.select.i570, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !23
  %t.i.i.1.i579 = phi float [ %.04.i557, %__nv_cosf.exit548 ], [ %.08.i602, %__nv_fmul_rn.exit.i.i.i600 ], [ %r.i.i.i.0.i576, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !23
  %457 = add i32 %i.i.1.i578, 1, !dbg !23
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i580 = icmp eq i32 %458, 0, !dbg !23
  %459 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #4, !dbg !23
  %460 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #4, !dbg !23
  %.011.i581 = select i1 %.not28.i580, float %460, float %459, !dbg !23
  %461 = and i32 %i.i.1.i578, 1, !dbg !23
  %.not29.not.i582 = icmp eq i32 %461, 0, !dbg !23
  %462 = select i1 %.not29.not.i582, float 1.000000e+00, float %t.i.i.1.i579, !dbg !23
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i583 = icmp eq i32 %463, 0, !dbg !23
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i581, float %462, float 0.000000e+00) #4, !dbg !23
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i581, float %462, float 0.000000e+00) #4, !dbg !23
  %.012.i584 = select i1 %.not30.i583, float %465, float %464, !dbg !23
  br i1 %.not29.not.i582, label %__internal_fmad.exit1.i.i.i597, label %__internal_fmad.exit2.i.i.i585, !dbg !23

__internal_fmad.exit1.i.i.i597:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i577
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i598 = icmp eq i32 %466, 0, !dbg !23
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #4, !dbg !23
  %468 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i599 = select i1 %.not31.i598, float %468, float %467, !dbg !23
  br label %__internal_fmad.exit2.i.i.i585, !dbg !23

__internal_fmad.exit2.i.i.i585:                   ; preds = %__internal_fmad.exit1.i.i.i597, %__internal_trig_reduction_kernel.exit.i.i577
  %469 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i597 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !23
  %470 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i597 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !23
  %471 = phi float [ %.013.i599, %__internal_fmad.exit1.i.i.i597 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !23
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i586 = icmp eq i32 %472, 0, !dbg !23
  %473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %471, float %.011.i581, float %470) #4, !dbg !23
  %474 = tail call float @llvm.nvvm.fma.rn.f(float %471, float %.011.i581, float %470) #4, !dbg !23
  %.010.i587 = select i1 %.not32.i586, float %474, float %473, !dbg !23
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i588 = icmp eq i32 %475, 0, !dbg !23
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i587, float %.011.i581, float %469) #4, !dbg !23
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i587, float %.011.i581, float %469) #4, !dbg !23
  %.09.i589 = select i1 %.not33.i588, float %477, float %476, !dbg !23
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i590 = icmp eq i32 %478, 0, !dbg !23
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i589, float %.012.i584, float %462) #4, !dbg !23
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i589, float %.012.i584, float %462) #4, !dbg !23
  %.05.i591 = select i1 %.not34.i590, float %480, float %479, !dbg !23
  %481 = and i32 %457, 2, !dbg !23
  %.not35.i592 = icmp eq i32 %481, 0, !dbg !23
  br i1 %.not35.i592, label %__nv_cosf.exit603, label %__internal_fmad.exit5.i.i.i593, !dbg !23

__internal_fmad.exit5.i.i.i593:                   ; preds = %__internal_fmad.exit2.i.i.i585
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i594 = icmp eq i32 %482, 0, !dbg !23
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i595 = select i1 %.not36.i594, float %484, float %483, !dbg !23
  br label %__nv_cosf.exit603, !dbg !23

__nv_cosf.exit603:                                ; preds = %__internal_fmad.exit2.i.i.i585, %__internal_fmad.exit5.i.i.i593
  %z.i.i.0.i596 = phi float [ %.0.i595, %__internal_fmad.exit5.i.i.i593 ], [ %.05.i591, %__internal_fmad.exit2.i.i.i585 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !23
  %485 = fmul float %82, 0x3FE45F3060000000, !dbg !23
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i605 = icmp eq i32 %486, 0, !dbg !23
  %487 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %485) #4, !dbg !23
  %488 = tail call i32 @llvm.nvvm.f2i.rn(float %485) #4, !dbg !23
  %.01.i606 = select i1 %.not.i605, i32 %488, i32 %487, !dbg !23
  %489 = sitofp i32 %.01.i606 to float, !dbg !23
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i607 = icmp eq i32 %490, 0, !dbg !23
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %489, float 0xBFF921FB40000000, float %82) #4, !dbg !23
  %492 = tail call float @llvm.nvvm.fma.rn.f(float %489, float 0xBFF921FB40000000, float %82) #4, !dbg !23
  %.02.i608 = select i1 %.not15.i607, float %492, float %491, !dbg !23
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i609 = icmp eq i32 %493, 0, !dbg !23
  %494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %489, float 0xBE74442D00000000, float %.02.i608) #4, !dbg !23
  %495 = tail call float @llvm.nvvm.fma.rn.f(float %489, float 0xBE74442D00000000, float %.02.i608) #4, !dbg !23
  %.03.i610 = select i1 %.not16.i609, float %495, float %494, !dbg !23
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i611 = icmp eq i32 %496, 0, !dbg !23
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %489, float 0xBCF84698A0000000, float %.03.i610) #4, !dbg !23
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %489, float 0xBCF84698A0000000, float %.03.i610) #4, !dbg !23
  %.04.i612 = select i1 %.not17.i611, float %498, float %497, !dbg !23
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i613 = icmp eq i32 %499, 0, !dbg !23
  %500 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #4, !dbg !23
  %501 = tail call float @llvm.nvvm.fabs.f(float %82) #4, !dbg !23
  %.06.i614 = select i1 %.not18.i613, float %501, float %500, !dbg !23
  %502 = fcmp ult float %.06.i614, 1.056150e+05, !dbg !23
  br i1 %502, label %__internal_trig_reduction_kernel.exit.i.i632, label %__nv_isinff.exit.i.i.i615, !dbg !23

__nv_isinff.exit.i.i.i615:                        ; preds = %__nv_cosf.exit603
  %503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i616 = icmp eq i32 %503, 0, !dbg !23
  %.07.i617 = select i1 %.not19.i616, float %501, float %500, !dbg !23
  %504 = fcmp oeq float %.07.i617, 0x7FF0000000000000, !dbg !23
  br i1 %504, label %__nv_fmul_rn.exit.i.i.i655, label %508, !dbg !23

__nv_fmul_rn.exit.i.i.i655:                       ; preds = %__nv_isinff.exit.i.i.i615
  %505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i656 = icmp eq i32 %505, 0, !dbg !23
  %506 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %82, float 0.000000e+00) #4, !dbg !23
  %507 = tail call float @llvm.nvvm.mul.rn.f(float %82, float 0.000000e+00) #4, !dbg !23
  %.08.i657 = select i1 %.not27.i656, float %507, float %506, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !23

508:                                              ; preds = %__nv_isinff.exit.i.i.i615
  %509 = lshr i32 %81, 23, !dbg !23
  %510 = and i32 %509, 224, !dbg !23
  %511 = add nsw i32 %510, -128, !dbg !23
  %512 = shl i32 %81, 8, !dbg !23
  %513 = or i32 %512, -2147483648, !dbg !23
  %514 = lshr exact i32 %511, 5, !dbg !23
  br label %515, !dbg !23

515:                                              ; preds = %508, %515
  %indvars.iv910 = phi i64 [ 0, %508 ], [ %indvars.iv.next911, %515 ]
  %hi.i.i.i.0.i618846 = phi i32 [ 0, %508 ], [ %520, %515 ]
  %516 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv910, !dbg !23
  %517 = load i32, ptr addrspace(1) %516, align 4, !dbg !23
  %518 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %517, i32 %513, i32 %hi.i.i.i.0.i618846) #5, !dbg !23, !srcloc !24
  %519 = extractvalue { i32, i32 } %518, 0, !dbg !23
  %520 = extractvalue { i32, i32 } %518, 1, !dbg !23
  %521 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %indvars.iv910, !dbg !23
  store i32 %519, ptr %521, align 4, !dbg !23
  %indvars.iv.next911 = add nuw nsw i64 %indvars.iv910, 1, !dbg !23
  %exitcond912.not = icmp eq i64 %indvars.iv.next911, 6, !dbg !23
  br i1 %exitcond912.not, label %522, label %515, !dbg !23, !llvm.loop !30

522:                                              ; preds = %515
  %523 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i604, i64 24, !dbg !23
  store i32 %520, ptr %523, align 4, !dbg !23
  %524 = sub nsw i32 6, %514, !dbg !23
  %525 = sext i32 %524 to i64, !dbg !23
  %526 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %525, !dbg !23
  %527 = load i32, ptr %526, align 4, !dbg !23
  %528 = sub nsw i32 5, %514, !dbg !23
  %529 = sext i32 %528 to i64, !dbg !23
  %530 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %529, !dbg !23
  %531 = load i32, ptr %530, align 4, !dbg !23
  %532 = freeze i32 %531, !dbg !23
  %533 = and i32 %81, 260046848, !dbg !23
  %.not20.i620 = icmp eq i32 %533, 0, !dbg !23
  br i1 %.not20.i620, label %__internal_trig_reduction_slowpath.exit.i.i.i621, label %534, !dbg !23

534:                                              ; preds = %522
  %535 = sub nsw i32 4, %514, !dbg !23
  %536 = sext i32 %535 to i64, !dbg !23
  %537 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %536, !dbg !23
  %538 = load i32, ptr %537, align 4, !dbg !23
  %539 = tail call i32 @llvm.fshl.i32(i32 %532, i32 %538, i32 %509), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i621, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i621: ; preds = %534, %522
  %lo.i.i.i.0.i623 = phi i32 [ %539, %534 ], [ %532, %522 ], !dbg !23
  %540 = tail call i32 @llvm.fshl.i32(i32 %527, i32 %532, i32 %509), !dbg !23
  %541 = lshr i32 %540, 30, !dbg !23
  %542 = tail call i32 @llvm.fshl.i32(i32 %540, i32 %lo.i.i.i.0.i623, i32 2), !dbg !23
  %543 = shl i32 %lo.i.i.i.0.i623, 2, !dbg !23
  %544 = lshr i32 %542, 31, !dbg !23
  %545 = add nuw nsw i32 %544, %541, !dbg !23
  %546 = sub nsw i32 0, %545, !dbg !23
  %.not2123.i624 = icmp slt i32 %81, 0, !dbg !23
  %spec.select.i625 = select i1 %.not2123.i624, i32 %546, i32 %545, !dbg !23
  %547 = xor i32 %542, %81, !dbg !23
  %.lobit.i626 = ashr i32 %542, 31, !dbg !23
  %hi.i.i.i.2.i627 = xor i32 %.lobit.i626, %542, !dbg !23
  %lo.i.i.i.1.i629 = xor i32 %.lobit.i626, %543, !dbg !23
  %548 = zext i32 %hi.i.i.i.2.i627 to i64, !dbg !23
  %549 = shl nuw i64 %548, 32, !dbg !23
  %550 = zext i32 %lo.i.i.i.1.i629 to i64, !dbg !23
  %551 = or disjoint i64 %549, %550, !dbg !23
  %552 = sitofp i64 %551 to double, !dbg !23
  %553 = fmul double %552, 0x3BF921FB54442D19, !dbg !23
  %554 = fptrunc double %553 to float, !dbg !23
  %555 = fneg float %554, !dbg !23
  %.not2526.i630 = icmp slt i32 %547, 0, !dbg !23
  %r.i.i.i.0.i631 = select i1 %.not2526.i630, float %555, float %554, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !23

__internal_trig_reduction_kernel.exit.i.i632:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i621, %__nv_fmul_rn.exit.i.i.i655, %__nv_cosf.exit603
  %i.i.1.i633 = phi i32 [ %.01.i606, %__nv_cosf.exit603 ], [ 0, %__nv_fmul_rn.exit.i.i.i655 ], [ %spec.select.i625, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !23
  %t.i.i.1.i634 = phi float [ %.04.i612, %__nv_cosf.exit603 ], [ %.08.i657, %__nv_fmul_rn.exit.i.i.i655 ], [ %r.i.i.i.0.i631, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !23
  %556 = add i32 %i.i.1.i633, 1, !dbg !23
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i635 = icmp eq i32 %557, 0, !dbg !23
  %558 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #4, !dbg !23
  %559 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #4, !dbg !23
  %.011.i636 = select i1 %.not28.i635, float %559, float %558, !dbg !23
  %560 = and i32 %i.i.1.i633, 1, !dbg !23
  %.not29.not.i637 = icmp eq i32 %560, 0, !dbg !23
  %561 = select i1 %.not29.not.i637, float 1.000000e+00, float %t.i.i.1.i634, !dbg !23
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i638 = icmp eq i32 %562, 0, !dbg !23
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i636, float %561, float 0.000000e+00) #4, !dbg !23
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i636, float %561, float 0.000000e+00) #4, !dbg !23
  %.012.i639 = select i1 %.not30.i638, float %564, float %563, !dbg !23
  br i1 %.not29.not.i637, label %__internal_fmad.exit1.i.i.i652, label %__internal_fmad.exit2.i.i.i640, !dbg !23

__internal_fmad.exit1.i.i.i652:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i632
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i653 = icmp eq i32 %565, 0, !dbg !23
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #4, !dbg !23
  %567 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i654 = select i1 %.not31.i653, float %567, float %566, !dbg !23
  br label %__internal_fmad.exit2.i.i.i640, !dbg !23

__internal_fmad.exit2.i.i.i640:                   ; preds = %__internal_fmad.exit1.i.i.i652, %__internal_trig_reduction_kernel.exit.i.i632
  %568 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i652 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !23
  %569 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i652 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !23
  %570 = phi float [ %.013.i654, %__internal_fmad.exit1.i.i.i652 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !23
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i641 = icmp eq i32 %571, 0, !dbg !23
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %570, float %.011.i636, float %569) #4, !dbg !23
  %573 = tail call float @llvm.nvvm.fma.rn.f(float %570, float %.011.i636, float %569) #4, !dbg !23
  %.010.i642 = select i1 %.not32.i641, float %573, float %572, !dbg !23
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i643 = icmp eq i32 %574, 0, !dbg !23
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i642, float %.011.i636, float %568) #4, !dbg !23
  %576 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i642, float %.011.i636, float %568) #4, !dbg !23
  %.09.i644 = select i1 %.not33.i643, float %576, float %575, !dbg !23
  %577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i645 = icmp eq i32 %577, 0, !dbg !23
  %578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i644, float %.012.i639, float %561) #4, !dbg !23
  %579 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i644, float %.012.i639, float %561) #4, !dbg !23
  %.05.i646 = select i1 %.not34.i645, float %579, float %578, !dbg !23
  %580 = and i32 %556, 2, !dbg !23
  %.not35.i647 = icmp eq i32 %580, 0, !dbg !23
  br i1 %.not35.i647, label %__nv_cosf.exit658, label %__internal_fmad.exit5.i.i.i648, !dbg !23

__internal_fmad.exit5.i.i.i648:                   ; preds = %__internal_fmad.exit2.i.i.i640
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i649 = icmp eq i32 %581, 0, !dbg !23
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i650 = select i1 %.not36.i649, float %583, float %582, !dbg !23
  br label %__nv_cosf.exit658, !dbg !23

__nv_cosf.exit658:                                ; preds = %__internal_fmad.exit2.i.i.i640, %__internal_fmad.exit5.i.i.i648
  %z.i.i.0.i651 = phi float [ %.0.i650, %__internal_fmad.exit5.i.i.i648 ], [ %.05.i646, %__internal_fmad.exit2.i.i.i640 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !23
  %584 = fmul float %84, 0x3FE45F3060000000, !dbg !23
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i660 = icmp eq i32 %585, 0, !dbg !23
  %586 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %584) #4, !dbg !23
  %587 = tail call i32 @llvm.nvvm.f2i.rn(float %584) #4, !dbg !23
  %.01.i661 = select i1 %.not.i660, i32 %587, i32 %586, !dbg !23
  %588 = sitofp i32 %.01.i661 to float, !dbg !23
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i662 = icmp eq i32 %589, 0, !dbg !23
  %590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %588, float 0xBFF921FB40000000, float %84) #4, !dbg !23
  %591 = tail call float @llvm.nvvm.fma.rn.f(float %588, float 0xBFF921FB40000000, float %84) #4, !dbg !23
  %.02.i663 = select i1 %.not15.i662, float %591, float %590, !dbg !23
  %592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i664 = icmp eq i32 %592, 0, !dbg !23
  %593 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %588, float 0xBE74442D00000000, float %.02.i663) #4, !dbg !23
  %594 = tail call float @llvm.nvvm.fma.rn.f(float %588, float 0xBE74442D00000000, float %.02.i663) #4, !dbg !23
  %.03.i665 = select i1 %.not16.i664, float %594, float %593, !dbg !23
  %595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i666 = icmp eq i32 %595, 0, !dbg !23
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %588, float 0xBCF84698A0000000, float %.03.i665) #4, !dbg !23
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %588, float 0xBCF84698A0000000, float %.03.i665) #4, !dbg !23
  %.04.i667 = select i1 %.not17.i666, float %597, float %596, !dbg !23
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i668 = icmp eq i32 %598, 0, !dbg !23
  %599 = tail call float @llvm.nvvm.fabs.ftz.f(float %84) #4, !dbg !23
  %600 = tail call float @llvm.nvvm.fabs.f(float %84) #4, !dbg !23
  %.06.i669 = select i1 %.not18.i668, float %600, float %599, !dbg !23
  %601 = fcmp ult float %.06.i669, 1.056150e+05, !dbg !23
  br i1 %601, label %__internal_trig_reduction_kernel.exit.i.i687, label %__nv_isinff.exit.i.i.i670, !dbg !23

__nv_isinff.exit.i.i.i670:                        ; preds = %__nv_cosf.exit658
  %602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i671 = icmp eq i32 %602, 0, !dbg !23
  %.07.i672 = select i1 %.not19.i671, float %600, float %599, !dbg !23
  %603 = fcmp oeq float %.07.i672, 0x7FF0000000000000, !dbg !23
  br i1 %603, label %__nv_fmul_rn.exit.i.i.i710, label %607, !dbg !23

__nv_fmul_rn.exit.i.i.i710:                       ; preds = %__nv_isinff.exit.i.i.i670
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i711 = icmp eq i32 %604, 0, !dbg !23
  %605 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %84, float 0.000000e+00) #4, !dbg !23
  %606 = tail call float @llvm.nvvm.mul.rn.f(float %84, float 0.000000e+00) #4, !dbg !23
  %.08.i712 = select i1 %.not27.i711, float %606, float %605, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !23

607:                                              ; preds = %__nv_isinff.exit.i.i.i670
  %608 = lshr i32 %83, 23, !dbg !23
  %609 = and i32 %608, 224, !dbg !23
  %610 = add nsw i32 %609, -128, !dbg !23
  %611 = shl i32 %83, 8, !dbg !23
  %612 = or i32 %611, -2147483648, !dbg !23
  %613 = lshr exact i32 %610, 5, !dbg !23
  br label %614, !dbg !23

614:                                              ; preds = %607, %614
  %indvars.iv913 = phi i64 [ 0, %607 ], [ %indvars.iv.next914, %614 ]
  %hi.i.i.i.0.i673848 = phi i32 [ 0, %607 ], [ %619, %614 ]
  %615 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv913, !dbg !23
  %616 = load i32, ptr addrspace(1) %615, align 4, !dbg !23
  %617 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %616, i32 %612, i32 %hi.i.i.i.0.i673848) #5, !dbg !23, !srcloc !24
  %618 = extractvalue { i32, i32 } %617, 0, !dbg !23
  %619 = extractvalue { i32, i32 } %617, 1, !dbg !23
  %620 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %indvars.iv913, !dbg !23
  store i32 %618, ptr %620, align 4, !dbg !23
  %indvars.iv.next914 = add nuw nsw i64 %indvars.iv913, 1, !dbg !23
  %exitcond915.not = icmp eq i64 %indvars.iv.next914, 6, !dbg !23
  br i1 %exitcond915.not, label %621, label %614, !dbg !23, !llvm.loop !31

621:                                              ; preds = %614
  %622 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i659, i64 24, !dbg !23
  store i32 %619, ptr %622, align 4, !dbg !23
  %623 = sub nsw i32 6, %613, !dbg !23
  %624 = sext i32 %623 to i64, !dbg !23
  %625 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %624, !dbg !23
  %626 = load i32, ptr %625, align 4, !dbg !23
  %627 = sub nsw i32 5, %613, !dbg !23
  %628 = sext i32 %627 to i64, !dbg !23
  %629 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %628, !dbg !23
  %630 = load i32, ptr %629, align 4, !dbg !23
  %631 = freeze i32 %630, !dbg !23
  %632 = and i32 %83, 260046848, !dbg !23
  %.not20.i675 = icmp eq i32 %632, 0, !dbg !23
  br i1 %.not20.i675, label %__internal_trig_reduction_slowpath.exit.i.i.i676, label %633, !dbg !23

633:                                              ; preds = %621
  %634 = sub nsw i32 4, %613, !dbg !23
  %635 = sext i32 %634 to i64, !dbg !23
  %636 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %635, !dbg !23
  %637 = load i32, ptr %636, align 4, !dbg !23
  %638 = tail call i32 @llvm.fshl.i32(i32 %631, i32 %637, i32 %608), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i676, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i676: ; preds = %633, %621
  %lo.i.i.i.0.i678 = phi i32 [ %638, %633 ], [ %631, %621 ], !dbg !23
  %639 = tail call i32 @llvm.fshl.i32(i32 %626, i32 %631, i32 %608), !dbg !23
  %640 = lshr i32 %639, 30, !dbg !23
  %641 = tail call i32 @llvm.fshl.i32(i32 %639, i32 %lo.i.i.i.0.i678, i32 2), !dbg !23
  %642 = shl i32 %lo.i.i.i.0.i678, 2, !dbg !23
  %643 = lshr i32 %641, 31, !dbg !23
  %644 = add nuw nsw i32 %643, %640, !dbg !23
  %645 = sub nsw i32 0, %644, !dbg !23
  %.not2123.i679 = icmp slt i32 %83, 0, !dbg !23
  %spec.select.i680 = select i1 %.not2123.i679, i32 %645, i32 %644, !dbg !23
  %646 = xor i32 %641, %83, !dbg !23
  %.lobit.i681 = ashr i32 %641, 31, !dbg !23
  %hi.i.i.i.2.i682 = xor i32 %.lobit.i681, %641, !dbg !23
  %lo.i.i.i.1.i684 = xor i32 %.lobit.i681, %642, !dbg !23
  %647 = zext i32 %hi.i.i.i.2.i682 to i64, !dbg !23
  %648 = shl nuw i64 %647, 32, !dbg !23
  %649 = zext i32 %lo.i.i.i.1.i684 to i64, !dbg !23
  %650 = or disjoint i64 %648, %649, !dbg !23
  %651 = sitofp i64 %650 to double, !dbg !23
  %652 = fmul double %651, 0x3BF921FB54442D19, !dbg !23
  %653 = fptrunc double %652 to float, !dbg !23
  %654 = fneg float %653, !dbg !23
  %.not2526.i685 = icmp slt i32 %646, 0, !dbg !23
  %r.i.i.i.0.i686 = select i1 %.not2526.i685, float %654, float %653, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !23

__internal_trig_reduction_kernel.exit.i.i687:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i676, %__nv_fmul_rn.exit.i.i.i710, %__nv_cosf.exit658
  %i.i.1.i688 = phi i32 [ %.01.i661, %__nv_cosf.exit658 ], [ 0, %__nv_fmul_rn.exit.i.i.i710 ], [ %spec.select.i680, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !23
  %t.i.i.1.i689 = phi float [ %.04.i667, %__nv_cosf.exit658 ], [ %.08.i712, %__nv_fmul_rn.exit.i.i.i710 ], [ %r.i.i.i.0.i686, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !23
  %655 = add i32 %i.i.1.i688, 1, !dbg !23
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i690 = icmp eq i32 %656, 0, !dbg !23
  %657 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #4, !dbg !23
  %658 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #4, !dbg !23
  %.011.i691 = select i1 %.not28.i690, float %658, float %657, !dbg !23
  %659 = and i32 %i.i.1.i688, 1, !dbg !23
  %.not29.not.i692 = icmp eq i32 %659, 0, !dbg !23
  %660 = select i1 %.not29.not.i692, float 1.000000e+00, float %t.i.i.1.i689, !dbg !23
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i693 = icmp eq i32 %661, 0, !dbg !23
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i691, float %660, float 0.000000e+00) #4, !dbg !23
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i691, float %660, float 0.000000e+00) #4, !dbg !23
  %.012.i694 = select i1 %.not30.i693, float %663, float %662, !dbg !23
  br i1 %.not29.not.i692, label %__internal_fmad.exit1.i.i.i707, label %__internal_fmad.exit2.i.i.i695, !dbg !23

__internal_fmad.exit1.i.i.i707:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i687
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i708 = icmp eq i32 %664, 0, !dbg !23
  %665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #4, !dbg !23
  %666 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i709 = select i1 %.not31.i708, float %666, float %665, !dbg !23
  br label %__internal_fmad.exit2.i.i.i695, !dbg !23

__internal_fmad.exit2.i.i.i695:                   ; preds = %__internal_fmad.exit1.i.i.i707, %__internal_trig_reduction_kernel.exit.i.i687
  %667 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i707 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !23
  %668 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i707 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !23
  %669 = phi float [ %.013.i709, %__internal_fmad.exit1.i.i.i707 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !23
  %670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i696 = icmp eq i32 %670, 0, !dbg !23
  %671 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %669, float %.011.i691, float %668) #4, !dbg !23
  %672 = tail call float @llvm.nvvm.fma.rn.f(float %669, float %.011.i691, float %668) #4, !dbg !23
  %.010.i697 = select i1 %.not32.i696, float %672, float %671, !dbg !23
  %673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i698 = icmp eq i32 %673, 0, !dbg !23
  %674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i697, float %.011.i691, float %667) #4, !dbg !23
  %675 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i697, float %.011.i691, float %667) #4, !dbg !23
  %.09.i699 = select i1 %.not33.i698, float %675, float %674, !dbg !23
  %676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i700 = icmp eq i32 %676, 0, !dbg !23
  %677 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i699, float %.012.i694, float %660) #4, !dbg !23
  %678 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i699, float %.012.i694, float %660) #4, !dbg !23
  %.05.i701 = select i1 %.not34.i700, float %678, float %677, !dbg !23
  %679 = and i32 %655, 2, !dbg !23
  %.not35.i702 = icmp eq i32 %679, 0, !dbg !23
  br i1 %.not35.i702, label %__nv_cosf.exit713, label %__internal_fmad.exit5.i.i.i703, !dbg !23

__internal_fmad.exit5.i.i.i703:                   ; preds = %__internal_fmad.exit2.i.i.i695
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i704 = icmp eq i32 %680, 0, !dbg !23
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i705 = select i1 %.not36.i704, float %682, float %681, !dbg !23
  br label %__nv_cosf.exit713, !dbg !23

__nv_cosf.exit713:                                ; preds = %__internal_fmad.exit2.i.i.i695, %__internal_fmad.exit5.i.i.i703
  %z.i.i.0.i706 = phi float [ %.0.i705, %__internal_fmad.exit5.i.i.i703 ], [ %.05.i701, %__internal_fmad.exit2.i.i.i695 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !23
  %683 = fmul float %86, 0x3FE45F3060000000, !dbg !23
  %684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i715 = icmp eq i32 %684, 0, !dbg !23
  %685 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %683) #4, !dbg !23
  %686 = tail call i32 @llvm.nvvm.f2i.rn(float %683) #4, !dbg !23
  %.01.i716 = select i1 %.not.i715, i32 %686, i32 %685, !dbg !23
  %687 = sitofp i32 %.01.i716 to float, !dbg !23
  %688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i717 = icmp eq i32 %688, 0, !dbg !23
  %689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %687, float 0xBFF921FB40000000, float %86) #4, !dbg !23
  %690 = tail call float @llvm.nvvm.fma.rn.f(float %687, float 0xBFF921FB40000000, float %86) #4, !dbg !23
  %.02.i718 = select i1 %.not15.i717, float %690, float %689, !dbg !23
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i719 = icmp eq i32 %691, 0, !dbg !23
  %692 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %687, float 0xBE74442D00000000, float %.02.i718) #4, !dbg !23
  %693 = tail call float @llvm.nvvm.fma.rn.f(float %687, float 0xBE74442D00000000, float %.02.i718) #4, !dbg !23
  %.03.i720 = select i1 %.not16.i719, float %693, float %692, !dbg !23
  %694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i721 = icmp eq i32 %694, 0, !dbg !23
  %695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %687, float 0xBCF84698A0000000, float %.03.i720) #4, !dbg !23
  %696 = tail call float @llvm.nvvm.fma.rn.f(float %687, float 0xBCF84698A0000000, float %.03.i720) #4, !dbg !23
  %.04.i722 = select i1 %.not17.i721, float %696, float %695, !dbg !23
  %697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i723 = icmp eq i32 %697, 0, !dbg !23
  %698 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #4, !dbg !23
  %699 = tail call float @llvm.nvvm.fabs.f(float %86) #4, !dbg !23
  %.06.i724 = select i1 %.not18.i723, float %699, float %698, !dbg !23
  %700 = fcmp ult float %.06.i724, 1.056150e+05, !dbg !23
  br i1 %700, label %__internal_trig_reduction_kernel.exit.i.i742, label %__nv_isinff.exit.i.i.i725, !dbg !23

__nv_isinff.exit.i.i.i725:                        ; preds = %__nv_cosf.exit713
  %701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i726 = icmp eq i32 %701, 0, !dbg !23
  %.07.i727 = select i1 %.not19.i726, float %699, float %698, !dbg !23
  %702 = fcmp oeq float %.07.i727, 0x7FF0000000000000, !dbg !23
  br i1 %702, label %__nv_fmul_rn.exit.i.i.i765, label %706, !dbg !23

__nv_fmul_rn.exit.i.i.i765:                       ; preds = %__nv_isinff.exit.i.i.i725
  %703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i766 = icmp eq i32 %703, 0, !dbg !23
  %704 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %86, float 0.000000e+00) #4, !dbg !23
  %705 = tail call float @llvm.nvvm.mul.rn.f(float %86, float 0.000000e+00) #4, !dbg !23
  %.08.i767 = select i1 %.not27.i766, float %705, float %704, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !23

706:                                              ; preds = %__nv_isinff.exit.i.i.i725
  %707 = lshr i32 %85, 23, !dbg !23
  %708 = and i32 %707, 224, !dbg !23
  %709 = add nsw i32 %708, -128, !dbg !23
  %710 = shl i32 %85, 8, !dbg !23
  %711 = or i32 %710, -2147483648, !dbg !23
  %712 = lshr exact i32 %709, 5, !dbg !23
  br label %713, !dbg !23

713:                                              ; preds = %706, %713
  %indvars.iv916 = phi i64 [ 0, %706 ], [ %indvars.iv.next917, %713 ]
  %hi.i.i.i.0.i728850 = phi i32 [ 0, %706 ], [ %718, %713 ]
  %714 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv916, !dbg !23
  %715 = load i32, ptr addrspace(1) %714, align 4, !dbg !23
  %716 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %715, i32 %711, i32 %hi.i.i.i.0.i728850) #5, !dbg !23, !srcloc !24
  %717 = extractvalue { i32, i32 } %716, 0, !dbg !23
  %718 = extractvalue { i32, i32 } %716, 1, !dbg !23
  %719 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %indvars.iv916, !dbg !23
  store i32 %717, ptr %719, align 4, !dbg !23
  %indvars.iv.next917 = add nuw nsw i64 %indvars.iv916, 1, !dbg !23
  %exitcond918.not = icmp eq i64 %indvars.iv.next917, 6, !dbg !23
  br i1 %exitcond918.not, label %720, label %713, !dbg !23, !llvm.loop !32

720:                                              ; preds = %713
  %721 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i714, i64 24, !dbg !23
  store i32 %718, ptr %721, align 4, !dbg !23
  %722 = sub nsw i32 6, %712, !dbg !23
  %723 = sext i32 %722 to i64, !dbg !23
  %724 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %723, !dbg !23
  %725 = load i32, ptr %724, align 4, !dbg !23
  %726 = sub nsw i32 5, %712, !dbg !23
  %727 = sext i32 %726 to i64, !dbg !23
  %728 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %727, !dbg !23
  %729 = load i32, ptr %728, align 4, !dbg !23
  %730 = freeze i32 %729, !dbg !23
  %731 = and i32 %85, 260046848, !dbg !23
  %.not20.i730 = icmp eq i32 %731, 0, !dbg !23
  br i1 %.not20.i730, label %__internal_trig_reduction_slowpath.exit.i.i.i731, label %732, !dbg !23

732:                                              ; preds = %720
  %733 = sub nsw i32 4, %712, !dbg !23
  %734 = sext i32 %733 to i64, !dbg !23
  %735 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %734, !dbg !23
  %736 = load i32, ptr %735, align 4, !dbg !23
  %737 = tail call i32 @llvm.fshl.i32(i32 %730, i32 %736, i32 %707), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i731, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i731: ; preds = %732, %720
  %lo.i.i.i.0.i733 = phi i32 [ %737, %732 ], [ %730, %720 ], !dbg !23
  %738 = tail call i32 @llvm.fshl.i32(i32 %725, i32 %730, i32 %707), !dbg !23
  %739 = lshr i32 %738, 30, !dbg !23
  %740 = tail call i32 @llvm.fshl.i32(i32 %738, i32 %lo.i.i.i.0.i733, i32 2), !dbg !23
  %741 = shl i32 %lo.i.i.i.0.i733, 2, !dbg !23
  %742 = lshr i32 %740, 31, !dbg !23
  %743 = add nuw nsw i32 %742, %739, !dbg !23
  %744 = sub nsw i32 0, %743, !dbg !23
  %.not2123.i734 = icmp slt i32 %85, 0, !dbg !23
  %spec.select.i735 = select i1 %.not2123.i734, i32 %744, i32 %743, !dbg !23
  %745 = xor i32 %740, %85, !dbg !23
  %.lobit.i736 = ashr i32 %740, 31, !dbg !23
  %hi.i.i.i.2.i737 = xor i32 %.lobit.i736, %740, !dbg !23
  %lo.i.i.i.1.i739 = xor i32 %.lobit.i736, %741, !dbg !23
  %746 = zext i32 %hi.i.i.i.2.i737 to i64, !dbg !23
  %747 = shl nuw i64 %746, 32, !dbg !23
  %748 = zext i32 %lo.i.i.i.1.i739 to i64, !dbg !23
  %749 = or disjoint i64 %747, %748, !dbg !23
  %750 = sitofp i64 %749 to double, !dbg !23
  %751 = fmul double %750, 0x3BF921FB54442D19, !dbg !23
  %752 = fptrunc double %751 to float, !dbg !23
  %753 = fneg float %752, !dbg !23
  %.not2526.i740 = icmp slt i32 %745, 0, !dbg !23
  %r.i.i.i.0.i741 = select i1 %.not2526.i740, float %753, float %752, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !23

__internal_trig_reduction_kernel.exit.i.i742:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i731, %__nv_fmul_rn.exit.i.i.i765, %__nv_cosf.exit713
  %i.i.1.i743 = phi i32 [ %.01.i716, %__nv_cosf.exit713 ], [ 0, %__nv_fmul_rn.exit.i.i.i765 ], [ %spec.select.i735, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !23
  %t.i.i.1.i744 = phi float [ %.04.i722, %__nv_cosf.exit713 ], [ %.08.i767, %__nv_fmul_rn.exit.i.i.i765 ], [ %r.i.i.i.0.i741, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !23
  %754 = add i32 %i.i.1.i743, 1, !dbg !23
  %755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i745 = icmp eq i32 %755, 0, !dbg !23
  %756 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #4, !dbg !23
  %757 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #4, !dbg !23
  %.011.i746 = select i1 %.not28.i745, float %757, float %756, !dbg !23
  %758 = and i32 %i.i.1.i743, 1, !dbg !23
  %.not29.not.i747 = icmp eq i32 %758, 0, !dbg !23
  %759 = select i1 %.not29.not.i747, float 1.000000e+00, float %t.i.i.1.i744, !dbg !23
  %760 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i748 = icmp eq i32 %760, 0, !dbg !23
  %761 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i746, float %759, float 0.000000e+00) #4, !dbg !23
  %762 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i746, float %759, float 0.000000e+00) #4, !dbg !23
  %.012.i749 = select i1 %.not30.i748, float %762, float %761, !dbg !23
  br i1 %.not29.not.i747, label %__internal_fmad.exit1.i.i.i762, label %__internal_fmad.exit2.i.i.i750, !dbg !23

__internal_fmad.exit1.i.i.i762:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i742
  %763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i763 = icmp eq i32 %763, 0, !dbg !23
  %764 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #4, !dbg !23
  %765 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i764 = select i1 %.not31.i763, float %765, float %764, !dbg !23
  br label %__internal_fmad.exit2.i.i.i750, !dbg !23

__internal_fmad.exit2.i.i.i750:                   ; preds = %__internal_fmad.exit1.i.i.i762, %__internal_trig_reduction_kernel.exit.i.i742
  %766 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i762 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !23
  %767 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i762 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !23
  %768 = phi float [ %.013.i764, %__internal_fmad.exit1.i.i.i762 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !23
  %769 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i751 = icmp eq i32 %769, 0, !dbg !23
  %770 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %768, float %.011.i746, float %767) #4, !dbg !23
  %771 = tail call float @llvm.nvvm.fma.rn.f(float %768, float %.011.i746, float %767) #4, !dbg !23
  %.010.i752 = select i1 %.not32.i751, float %771, float %770, !dbg !23
  %772 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i753 = icmp eq i32 %772, 0, !dbg !23
  %773 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i752, float %.011.i746, float %766) #4, !dbg !23
  %774 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i752, float %.011.i746, float %766) #4, !dbg !23
  %.09.i754 = select i1 %.not33.i753, float %774, float %773, !dbg !23
  %775 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i755 = icmp eq i32 %775, 0, !dbg !23
  %776 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i754, float %.012.i749, float %759) #4, !dbg !23
  %777 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i754, float %.012.i749, float %759) #4, !dbg !23
  %.05.i756 = select i1 %.not34.i755, float %777, float %776, !dbg !23
  %778 = and i32 %754, 2, !dbg !23
  %.not35.i757 = icmp eq i32 %778, 0, !dbg !23
  br i1 %.not35.i757, label %__nv_cosf.exit768, label %__internal_fmad.exit5.i.i.i758, !dbg !23

__internal_fmad.exit5.i.i.i758:                   ; preds = %__internal_fmad.exit2.i.i.i750
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i759 = icmp eq i32 %779, 0, !dbg !23
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %781 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i760 = select i1 %.not36.i759, float %781, float %780, !dbg !23
  br label %__nv_cosf.exit768, !dbg !23

__nv_cosf.exit768:                                ; preds = %__internal_fmad.exit2.i.i.i750, %__internal_fmad.exit5.i.i.i758
  %z.i.i.0.i761 = phi float [ %.0.i760, %__internal_fmad.exit5.i.i.i758 ], [ %.05.i756, %__internal_fmad.exit2.i.i.i750 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !23
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !23
  %782 = fmul float %88, 0x3FE45F3060000000, !dbg !23
  %783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i770 = icmp eq i32 %783, 0, !dbg !23
  %784 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %782) #4, !dbg !23
  %785 = tail call i32 @llvm.nvvm.f2i.rn(float %782) #4, !dbg !23
  %.01.i771 = select i1 %.not.i770, i32 %785, i32 %784, !dbg !23
  %786 = sitofp i32 %.01.i771 to float, !dbg !23
  %787 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not15.i772 = icmp eq i32 %787, 0, !dbg !23
  %788 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %786, float 0xBFF921FB40000000, float %88) #4, !dbg !23
  %789 = tail call float @llvm.nvvm.fma.rn.f(float %786, float 0xBFF921FB40000000, float %88) #4, !dbg !23
  %.02.i773 = select i1 %.not15.i772, float %789, float %788, !dbg !23
  %790 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not16.i774 = icmp eq i32 %790, 0, !dbg !23
  %791 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %786, float 0xBE74442D00000000, float %.02.i773) #4, !dbg !23
  %792 = tail call float @llvm.nvvm.fma.rn.f(float %786, float 0xBE74442D00000000, float %.02.i773) #4, !dbg !23
  %.03.i775 = select i1 %.not16.i774, float %792, float %791, !dbg !23
  %793 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not17.i776 = icmp eq i32 %793, 0, !dbg !23
  %794 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %786, float 0xBCF84698A0000000, float %.03.i775) #4, !dbg !23
  %795 = tail call float @llvm.nvvm.fma.rn.f(float %786, float 0xBCF84698A0000000, float %.03.i775) #4, !dbg !23
  %.04.i777 = select i1 %.not17.i776, float %795, float %794, !dbg !23
  %796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not18.i778 = icmp eq i32 %796, 0, !dbg !23
  %797 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !23
  %798 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !23
  %.06.i779 = select i1 %.not18.i778, float %798, float %797, !dbg !23
  %799 = fcmp ult float %.06.i779, 1.056150e+05, !dbg !23
  br i1 %799, label %__internal_trig_reduction_kernel.exit.i.i797, label %__nv_isinff.exit.i.i.i780, !dbg !23

__nv_isinff.exit.i.i.i780:                        ; preds = %__nv_cosf.exit768
  %800 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not19.i781 = icmp eq i32 %800, 0, !dbg !23
  %.07.i782 = select i1 %.not19.i781, float %798, float %797, !dbg !23
  %801 = fcmp oeq float %.07.i782, 0x7FF0000000000000, !dbg !23
  br i1 %801, label %__nv_fmul_rn.exit.i.i.i820, label %805, !dbg !23

__nv_fmul_rn.exit.i.i.i820:                       ; preds = %__nv_isinff.exit.i.i.i780
  %802 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not27.i821 = icmp eq i32 %802, 0, !dbg !23
  %803 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %88, float 0.000000e+00) #4, !dbg !23
  %804 = tail call float @llvm.nvvm.mul.rn.f(float %88, float 0.000000e+00) #4, !dbg !23
  %.08.i822 = select i1 %.not27.i821, float %804, float %803, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !23

805:                                              ; preds = %__nv_isinff.exit.i.i.i780
  %806 = lshr i32 %87, 23, !dbg !23
  %807 = and i32 %806, 224, !dbg !23
  %808 = add nsw i32 %807, -128, !dbg !23
  %809 = shl i32 %87, 8, !dbg !23
  %810 = or i32 %809, -2147483648, !dbg !23
  %811 = lshr exact i32 %808, 5, !dbg !23
  br label %812, !dbg !23

812:                                              ; preds = %805, %812
  %indvars.iv919 = phi i64 [ 0, %805 ], [ %indvars.iv.next920, %812 ]
  %hi.i.i.i.0.i783852 = phi i32 [ 0, %805 ], [ %817, %812 ]
  %813 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv919, !dbg !23
  %814 = load i32, ptr addrspace(1) %813, align 4, !dbg !23
  %815 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %814, i32 %810, i32 %hi.i.i.i.0.i783852) #5, !dbg !23, !srcloc !24
  %816 = extractvalue { i32, i32 } %815, 0, !dbg !23
  %817 = extractvalue { i32, i32 } %815, 1, !dbg !23
  %818 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %indvars.iv919, !dbg !23
  store i32 %816, ptr %818, align 4, !dbg !23
  %indvars.iv.next920 = add nuw nsw i64 %indvars.iv919, 1, !dbg !23
  %exitcond921.not = icmp eq i64 %indvars.iv.next920, 6, !dbg !23
  br i1 %exitcond921.not, label %819, label %812, !dbg !23, !llvm.loop !33

819:                                              ; preds = %812
  %820 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i769, i64 24, !dbg !23
  store i32 %817, ptr %820, align 4, !dbg !23
  %821 = sub nsw i32 6, %811, !dbg !23
  %822 = sext i32 %821 to i64, !dbg !23
  %823 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %822, !dbg !23
  %824 = load i32, ptr %823, align 4, !dbg !23
  %825 = sub nsw i32 5, %811, !dbg !23
  %826 = sext i32 %825 to i64, !dbg !23
  %827 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %826, !dbg !23
  %828 = load i32, ptr %827, align 4, !dbg !23
  %829 = freeze i32 %828, !dbg !23
  %830 = and i32 %87, 260046848, !dbg !23
  %.not20.i785 = icmp eq i32 %830, 0, !dbg !23
  br i1 %.not20.i785, label %__internal_trig_reduction_slowpath.exit.i.i.i786, label %831, !dbg !23

831:                                              ; preds = %819
  %832 = sub nsw i32 4, %811, !dbg !23
  %833 = sext i32 %832 to i64, !dbg !23
  %834 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %833, !dbg !23
  %835 = load i32, ptr %834, align 4, !dbg !23
  %836 = tail call i32 @llvm.fshl.i32(i32 %829, i32 %835, i32 %806), !dbg !23
  br label %__internal_trig_reduction_slowpath.exit.i.i.i786, !dbg !23

__internal_trig_reduction_slowpath.exit.i.i.i786: ; preds = %831, %819
  %lo.i.i.i.0.i788 = phi i32 [ %836, %831 ], [ %829, %819 ], !dbg !23
  %837 = tail call i32 @llvm.fshl.i32(i32 %824, i32 %829, i32 %806), !dbg !23
  %838 = lshr i32 %837, 30, !dbg !23
  %839 = tail call i32 @llvm.fshl.i32(i32 %837, i32 %lo.i.i.i.0.i788, i32 2), !dbg !23
  %840 = shl i32 %lo.i.i.i.0.i788, 2, !dbg !23
  %841 = lshr i32 %839, 31, !dbg !23
  %842 = add nuw nsw i32 %841, %838, !dbg !23
  %843 = sub nsw i32 0, %842, !dbg !23
  %.not2123.i789 = icmp slt i32 %87, 0, !dbg !23
  %spec.select.i790 = select i1 %.not2123.i789, i32 %843, i32 %842, !dbg !23
  %844 = xor i32 %839, %87, !dbg !23
  %.lobit.i791 = ashr i32 %839, 31, !dbg !23
  %hi.i.i.i.2.i792 = xor i32 %.lobit.i791, %839, !dbg !23
  %lo.i.i.i.1.i794 = xor i32 %.lobit.i791, %840, !dbg !23
  %845 = zext i32 %hi.i.i.i.2.i792 to i64, !dbg !23
  %846 = shl nuw i64 %845, 32, !dbg !23
  %847 = zext i32 %lo.i.i.i.1.i794 to i64, !dbg !23
  %848 = or disjoint i64 %846, %847, !dbg !23
  %849 = sitofp i64 %848 to double, !dbg !23
  %850 = fmul double %849, 0x3BF921FB54442D19, !dbg !23
  %851 = fptrunc double %850 to float, !dbg !23
  %852 = fneg float %851, !dbg !23
  %.not2526.i795 = icmp slt i32 %844, 0, !dbg !23
  %r.i.i.i.0.i796 = select i1 %.not2526.i795, float %852, float %851, !dbg !23
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !23

__internal_trig_reduction_kernel.exit.i.i797:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i786, %__nv_fmul_rn.exit.i.i.i820, %__nv_cosf.exit768
  %i.i.1.i798 = phi i32 [ %.01.i771, %__nv_cosf.exit768 ], [ 0, %__nv_fmul_rn.exit.i.i.i820 ], [ %spec.select.i790, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !23
  %t.i.i.1.i799 = phi float [ %.04.i777, %__nv_cosf.exit768 ], [ %.08.i822, %__nv_fmul_rn.exit.i.i.i820 ], [ %r.i.i.i.0.i796, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !23
  %853 = add i32 %i.i.1.i798, 1, !dbg !23
  %854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not28.i800 = icmp eq i32 %854, 0, !dbg !23
  %855 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #4, !dbg !23
  %856 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #4, !dbg !23
  %.011.i801 = select i1 %.not28.i800, float %856, float %855, !dbg !23
  %857 = and i32 %i.i.1.i798, 1, !dbg !23
  %.not29.not.i802 = icmp eq i32 %857, 0, !dbg !23
  %858 = select i1 %.not29.not.i802, float 1.000000e+00, float %t.i.i.1.i799, !dbg !23
  %859 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not30.i803 = icmp eq i32 %859, 0, !dbg !23
  %860 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i801, float %858, float 0.000000e+00) #4, !dbg !23
  %861 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i801, float %858, float 0.000000e+00) #4, !dbg !23
  %.012.i804 = select i1 %.not30.i803, float %861, float %860, !dbg !23
  br i1 %.not29.not.i802, label %__internal_fmad.exit1.i.i.i817, label %__internal_fmad.exit2.i.i.i805, !dbg !23

__internal_fmad.exit1.i.i.i817:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i797
  %862 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not31.i818 = icmp eq i32 %862, 0, !dbg !23
  %863 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #4, !dbg !23
  %864 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #4, !dbg !23
  %.013.i819 = select i1 %.not31.i818, float %864, float %863, !dbg !23
  br label %__internal_fmad.exit2.i.i.i805, !dbg !23

__internal_fmad.exit2.i.i.i805:                   ; preds = %__internal_fmad.exit1.i.i.i817, %__internal_trig_reduction_kernel.exit.i.i797
  %865 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i817 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !23
  %866 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i817 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !23
  %867 = phi float [ %.013.i819, %__internal_fmad.exit1.i.i.i817 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !23
  %868 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not32.i806 = icmp eq i32 %868, 0, !dbg !23
  %869 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %867, float %.011.i801, float %866) #4, !dbg !23
  %870 = tail call float @llvm.nvvm.fma.rn.f(float %867, float %.011.i801, float %866) #4, !dbg !23
  %.010.i807 = select i1 %.not32.i806, float %870, float %869, !dbg !23
  %871 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not33.i808 = icmp eq i32 %871, 0, !dbg !23
  %872 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i807, float %.011.i801, float %865) #4, !dbg !23
  %873 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i807, float %.011.i801, float %865) #4, !dbg !23
  %.09.i809 = select i1 %.not33.i808, float %873, float %872, !dbg !23
  %874 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not34.i810 = icmp eq i32 %874, 0, !dbg !23
  %875 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i809, float %.012.i804, float %858) #4, !dbg !23
  %876 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i809, float %.012.i804, float %858) #4, !dbg !23
  %.05.i811 = select i1 %.not34.i810, float %876, float %875, !dbg !23
  %877 = and i32 %853, 2, !dbg !23
  %.not35.i812 = icmp eq i32 %877, 0, !dbg !23
  br i1 %.not35.i812, label %__nv_cosf.exit823, label %__internal_fmad.exit5.i.i.i813, !dbg !23

__internal_fmad.exit5.i.i.i813:                   ; preds = %__internal_fmad.exit2.i.i.i805
  %878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not36.i814 = icmp eq i32 %878, 0, !dbg !23
  %879 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %880 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #4, !dbg !23
  %.0.i815 = select i1 %.not36.i814, float %880, float %879, !dbg !23
  br label %__nv_cosf.exit823, !dbg !23

__nv_cosf.exit823:                                ; preds = %__internal_fmad.exit2.i.i.i805, %__internal_fmad.exit5.i.i.i813
  %z.i.i.0.i816 = phi float [ %.0.i815, %__internal_fmad.exit5.i.i.i813 ], [ %.05.i811, %__internal_fmad.exit2.i.i.i805 ], !dbg !23
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !23
  %881 = icmp slt i32 %.decomposed, 64, !dbg !34
  %882 = shl nsw i32 %20, 7, !dbg !35
  %883 = add nsw i32 %.decomposed, 64, !dbg !36
  %884 = add i32 %883, %882, !dbg !37
  %885 = sext i32 %884 to i64, !dbg !38
  %886 = getelementptr half, ptr addrspace(1) %0, i64 %885, !dbg !38
  %887 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %886, i1 %881) #4, !dbg !39
  %888 = icmp sgt i32 %.decomposed, 63, !dbg !40
  %889 = add nsw i32 %.decomposed, -64, !dbg !41
  %890 = add i32 %889, %882, !dbg !42
  %891 = sext i32 %890 to i64, !dbg !43
  %892 = getelementptr half, ptr addrspace(1) %0, i64 %891, !dbg !43
  %893 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %892, i1 %888) #4, !dbg !44
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !45
  %894 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i = icmp eq i32 %894, 0, !dbg !45
  %.01.i = select i1 %.not.i, i32 %92, i32 %91, !dbg !45
  %895 = sitofp i32 %.01.i to float, !dbg !45
  %896 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i = icmp eq i32 %896, 0, !dbg !45
  %897 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %895, float 0xBFF921FB40000000, float %74) #4, !dbg !45
  %898 = tail call float @llvm.nvvm.fma.rn.f(float %895, float 0xBFF921FB40000000, float %74) #4, !dbg !45
  %.02.i = select i1 %.not15.i, float %898, float %897, !dbg !45
  %899 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i = icmp eq i32 %899, 0, !dbg !45
  %900 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %895, float 0xBE74442D00000000, float %.02.i) #4, !dbg !45
  %901 = tail call float @llvm.nvvm.fma.rn.f(float %895, float 0xBE74442D00000000, float %.02.i) #4, !dbg !45
  %.03.i = select i1 %.not16.i, float %901, float %900, !dbg !45
  %902 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i = icmp eq i32 %902, 0, !dbg !45
  %903 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %895, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !45
  %904 = tail call float @llvm.nvvm.fma.rn.f(float %895, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !45
  %.04.i = select i1 %.not17.i, float %904, float %903, !dbg !45
  %905 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i = icmp eq i32 %905, 0, !dbg !45
  %.06.i = select i1 %.not18.i, float %105, float %104, !dbg !45
  %906 = fcmp ult float %.06.i, 1.056150e+05, !dbg !45
  br i1 %906, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !45

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit823
  %907 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i = icmp eq i32 %907, 0, !dbg !45
  %.07.i = select i1 %.not19.i, float %105, float %104, !dbg !45
  %908 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !45
  br i1 %908, label %__nv_fmul_rn.exit.i.i.i, label %912, !dbg !45

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %909 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i = icmp eq i32 %909, 0, !dbg !45
  %910 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %74, float 0.000000e+00) #4, !dbg !45
  %911 = tail call float @llvm.nvvm.mul.rn.f(float %74, float 0.000000e+00) #4, !dbg !45
  %.08.i = select i1 %.not27.i, float %911, float %910, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !45

912:                                              ; preds = %__nv_isinff.exit.i.i.i
  %913 = lshr i32 %73, 23, !dbg !45
  %914 = and i32 %913, 224, !dbg !45
  %915 = add nsw i32 %914, -128, !dbg !45
  %916 = shl i32 %73, 8, !dbg !45
  %917 = or i32 %916, -2147483648, !dbg !45
  %918 = lshr exact i32 %915, 5, !dbg !45
  br label %919, !dbg !45

919:                                              ; preds = %912, %919
  %indvars.iv922 = phi i64 [ 0, %912 ], [ %indvars.iv.next923, %919 ]
  %hi.i.i.i.0.i854 = phi i32 [ 0, %912 ], [ %924, %919 ]
  %920 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv922, !dbg !45
  %921 = load i32, ptr addrspace(1) %920, align 4, !dbg !45
  %922 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %921, i32 %917, i32 %hi.i.i.i.0.i854) #5, !dbg !45, !srcloc !24
  %923 = extractvalue { i32, i32 } %922, 0, !dbg !45
  %924 = extractvalue { i32, i32 } %922, 1, !dbg !45
  %925 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv922, !dbg !45
  store i32 %923, ptr %925, align 4, !dbg !45
  %indvars.iv.next923 = add nuw nsw i64 %indvars.iv922, 1, !dbg !45
  %exitcond924.not = icmp eq i64 %indvars.iv.next923, 6, !dbg !45
  br i1 %exitcond924.not, label %926, label %919, !dbg !45, !llvm.loop !46

926:                                              ; preds = %919
  %927 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !45
  store i32 %924, ptr %927, align 4, !dbg !45
  %928 = sub nsw i32 6, %918, !dbg !45
  %929 = sext i32 %928 to i64, !dbg !45
  %930 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %929, !dbg !45
  %931 = load i32, ptr %930, align 4, !dbg !45
  %932 = sub nsw i32 5, %918, !dbg !45
  %933 = sext i32 %932 to i64, !dbg !45
  %934 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %933, !dbg !45
  %935 = load i32, ptr %934, align 4, !dbg !45
  %936 = freeze i32 %935, !dbg !45
  %937 = and i32 %73, 260046848, !dbg !45
  %.not20.i = icmp eq i32 %937, 0, !dbg !45
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %938, !dbg !45

938:                                              ; preds = %926
  %939 = sub nsw i32 4, %918, !dbg !45
  %940 = sext i32 %939 to i64, !dbg !45
  %941 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %940, !dbg !45
  %942 = load i32, ptr %941, align 4, !dbg !45
  %943 = tail call i32 @llvm.fshl.i32(i32 %936, i32 %942, i32 %913), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %938, %926
  %lo.i.i.i.0.i = phi i32 [ %943, %938 ], [ %936, %926 ], !dbg !45
  %944 = tail call i32 @llvm.fshl.i32(i32 %931, i32 %936, i32 %913), !dbg !45
  %945 = lshr i32 %944, 30, !dbg !45
  %946 = tail call i32 @llvm.fshl.i32(i32 %944, i32 %lo.i.i.i.0.i, i32 2), !dbg !45
  %947 = shl i32 %lo.i.i.i.0.i, 2, !dbg !45
  %948 = lshr i32 %946, 31, !dbg !45
  %949 = add nuw nsw i32 %948, %945, !dbg !45
  %950 = sub nsw i32 0, %949, !dbg !45
  %.not2123.i = icmp slt i32 %73, 0, !dbg !45
  %spec.select.i = select i1 %.not2123.i, i32 %950, i32 %949, !dbg !45
  %951 = xor i32 %946, %73, !dbg !45
  %.lobit.i = ashr i32 %946, 31, !dbg !45
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %946, !dbg !45
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %947, !dbg !45
  %952 = zext i32 %hi.i.i.i.2.i to i64, !dbg !45
  %953 = shl nuw i64 %952, 32, !dbg !45
  %954 = zext i32 %lo.i.i.i.1.i to i64, !dbg !45
  %955 = or disjoint i64 %953, %954, !dbg !45
  %956 = sitofp i64 %955 to double, !dbg !45
  %957 = fmul double %956, 0x3BF921FB54442D19, !dbg !45
  %958 = fptrunc double %957 to float, !dbg !45
  %959 = fneg float %958, !dbg !45
  %.not2526.i = icmp slt i32 %951, 0, !dbg !45
  %r.i.i.i.0.i = select i1 %.not2526.i, float %959, float %958, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !45

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit823
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit823 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !45
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit823 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !45
  %960 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i = icmp eq i32 %960, 0, !dbg !45
  %961 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !45
  %962 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !45
  %.011.i = select i1 %.not28.i, float %962, float %961, !dbg !45
  %963 = and i32 %i.i.1.i, 1, !dbg !45
  %.not29.i = icmp eq i32 %963, 0, !dbg !45
  %964 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !45
  %965 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i = icmp eq i32 %965, 0, !dbg !45
  %966 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %964, float 0.000000e+00) #4, !dbg !45
  %967 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %964, float 0.000000e+00) #4, !dbg !45
  %.012.i = select i1 %.not30.i, float %967, float %966, !dbg !45
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !45

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %968 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i = icmp eq i32 %968, 0, !dbg !45
  %969 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !45
  %970 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i = select i1 %.not31.i, float %970, float %969, !dbg !45
  br label %__internal_fmad.exit2.i.i.i, !dbg !45

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %971 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %972 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %973 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %974 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i = icmp eq i32 %974, 0, !dbg !45
  %975 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %973, float %.011.i, float %972) #4, !dbg !45
  %976 = tail call float @llvm.nvvm.fma.rn.f(float %973, float %.011.i, float %972) #4, !dbg !45
  %.010.i = select i1 %.not32.i, float %976, float %975, !dbg !45
  %977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i = icmp eq i32 %977, 0, !dbg !45
  %978 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %971) #4, !dbg !45
  %979 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %971) #4, !dbg !45
  %.09.i = select i1 %.not33.i, float %979, float %978, !dbg !45
  %980 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i = icmp eq i32 %980, 0, !dbg !45
  %981 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %964) #4, !dbg !45
  %982 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %964) #4, !dbg !45
  %.05.i = select i1 %.not34.i, float %982, float %981, !dbg !45
  %983 = and i32 %i.i.1.i, 2, !dbg !45
  %.not35.i = icmp eq i32 %983, 0, !dbg !45
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !45

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %984 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i = icmp eq i32 %984, 0, !dbg !45
  %985 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %986 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i = select i1 %.not36.i, float %986, float %985, !dbg !45
  br label %__nv_sinf.exit, !dbg !45

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !45
  %987 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i2 = icmp eq i32 %987, 0, !dbg !45
  %.01.i3 = select i1 %.not.i2, i32 %191, i32 %190, !dbg !45
  %988 = sitofp i32 %.01.i3 to float, !dbg !45
  %989 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i4 = icmp eq i32 %989, 0, !dbg !45
  %990 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %988, float 0xBFF921FB40000000, float %76) #4, !dbg !45
  %991 = tail call float @llvm.nvvm.fma.rn.f(float %988, float 0xBFF921FB40000000, float %76) #4, !dbg !45
  %.02.i5 = select i1 %.not15.i4, float %991, float %990, !dbg !45
  %992 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i6 = icmp eq i32 %992, 0, !dbg !45
  %993 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %988, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !45
  %994 = tail call float @llvm.nvvm.fma.rn.f(float %988, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !45
  %.03.i7 = select i1 %.not16.i6, float %994, float %993, !dbg !45
  %995 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i8 = icmp eq i32 %995, 0, !dbg !45
  %996 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %988, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !45
  %997 = tail call float @llvm.nvvm.fma.rn.f(float %988, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !45
  %.04.i9 = select i1 %.not17.i8, float %997, float %996, !dbg !45
  %998 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i10 = icmp eq i32 %998, 0, !dbg !45
  %.06.i11 = select i1 %.not18.i10, float %204, float %203, !dbg !45
  %999 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !45
  br i1 %999, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !45

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %1000 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i13 = icmp eq i32 %1000, 0, !dbg !45
  %.07.i14 = select i1 %.not19.i13, float %204, float %203, !dbg !45
  %1001 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !45
  br i1 %1001, label %__nv_fmul_rn.exit.i.i.i52, label %1005, !dbg !45

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %1002 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i53 = icmp eq i32 %1002, 0, !dbg !45
  %1003 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %76, float 0.000000e+00) #4, !dbg !45
  %1004 = tail call float @llvm.nvvm.mul.rn.f(float %76, float 0.000000e+00) #4, !dbg !45
  %.08.i54 = select i1 %.not27.i53, float %1004, float %1003, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !45

1005:                                             ; preds = %__nv_isinff.exit.i.i.i12
  %1006 = lshr i32 %75, 23, !dbg !45
  %1007 = and i32 %1006, 224, !dbg !45
  %1008 = add nsw i32 %1007, -128, !dbg !45
  %1009 = shl i32 %75, 8, !dbg !45
  %1010 = or i32 %1009, -2147483648, !dbg !45
  %1011 = lshr exact i32 %1008, 5, !dbg !45
  br label %1012, !dbg !45

1012:                                             ; preds = %1005, %1012
  %indvars.iv925 = phi i64 [ 0, %1005 ], [ %indvars.iv.next926, %1012 ]
  %hi.i.i.i.0.i15856 = phi i32 [ 0, %1005 ], [ %1017, %1012 ]
  %1013 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv925, !dbg !45
  %1014 = load i32, ptr addrspace(1) %1013, align 4, !dbg !45
  %1015 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1014, i32 %1010, i32 %hi.i.i.i.0.i15856) #5, !dbg !45, !srcloc !24
  %1016 = extractvalue { i32, i32 } %1015, 0, !dbg !45
  %1017 = extractvalue { i32, i32 } %1015, 1, !dbg !45
  %1018 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv925, !dbg !45
  store i32 %1016, ptr %1018, align 4, !dbg !45
  %indvars.iv.next926 = add nuw nsw i64 %indvars.iv925, 1, !dbg !45
  %exitcond927.not = icmp eq i64 %indvars.iv.next926, 6, !dbg !45
  br i1 %exitcond927.not, label %1019, label %1012, !dbg !45, !llvm.loop !47

1019:                                             ; preds = %1012
  %1020 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !45
  store i32 %1017, ptr %1020, align 4, !dbg !45
  %1021 = sub nsw i32 6, %1011, !dbg !45
  %1022 = sext i32 %1021 to i64, !dbg !45
  %1023 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %1022, !dbg !45
  %1024 = load i32, ptr %1023, align 4, !dbg !45
  %1025 = sub nsw i32 5, %1011, !dbg !45
  %1026 = sext i32 %1025 to i64, !dbg !45
  %1027 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %1026, !dbg !45
  %1028 = load i32, ptr %1027, align 4, !dbg !45
  %1029 = freeze i32 %1028, !dbg !45
  %1030 = and i32 %75, 260046848, !dbg !45
  %.not20.i17 = icmp eq i32 %1030, 0, !dbg !45
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %1031, !dbg !45

1031:                                             ; preds = %1019
  %1032 = sub nsw i32 4, %1011, !dbg !45
  %1033 = sext i32 %1032 to i64, !dbg !45
  %1034 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %1033, !dbg !45
  %1035 = load i32, ptr %1034, align 4, !dbg !45
  %1036 = tail call i32 @llvm.fshl.i32(i32 %1029, i32 %1035, i32 %1006), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %1031, %1019
  %lo.i.i.i.0.i20 = phi i32 [ %1036, %1031 ], [ %1029, %1019 ], !dbg !45
  %1037 = tail call i32 @llvm.fshl.i32(i32 %1024, i32 %1029, i32 %1006), !dbg !45
  %1038 = lshr i32 %1037, 30, !dbg !45
  %1039 = tail call i32 @llvm.fshl.i32(i32 %1037, i32 %lo.i.i.i.0.i20, i32 2), !dbg !45
  %1040 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !45
  %1041 = lshr i32 %1039, 31, !dbg !45
  %1042 = add nuw nsw i32 %1041, %1038, !dbg !45
  %1043 = sub nsw i32 0, %1042, !dbg !45
  %.not2123.i21 = icmp slt i32 %75, 0, !dbg !45
  %spec.select.i22 = select i1 %.not2123.i21, i32 %1043, i32 %1042, !dbg !45
  %1044 = xor i32 %1039, %75, !dbg !45
  %.lobit.i23 = ashr i32 %1039, 31, !dbg !45
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %1039, !dbg !45
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %1040, !dbg !45
  %1045 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !45
  %1046 = shl nuw i64 %1045, 32, !dbg !45
  %1047 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !45
  %1048 = or disjoint i64 %1046, %1047, !dbg !45
  %1049 = sitofp i64 %1048 to double, !dbg !45
  %1050 = fmul double %1049, 0x3BF921FB54442D19, !dbg !45
  %1051 = fptrunc double %1050 to float, !dbg !45
  %1052 = fneg float %1051, !dbg !45
  %.not2526.i27 = icmp slt i32 %1044, 0, !dbg !45
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %1052, float %1051, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !45

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !45
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !45
  %1053 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i32 = icmp eq i32 %1053, 0, !dbg !45
  %1054 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !45
  %1055 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !45
  %.011.i33 = select i1 %.not28.i32, float %1055, float %1054, !dbg !45
  %1056 = and i32 %i.i.1.i30, 1, !dbg !45
  %.not29.i34 = icmp eq i32 %1056, 0, !dbg !45
  %1057 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !45
  %1058 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i35 = icmp eq i32 %1058, 0, !dbg !45
  %1059 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %1057, float 0.000000e+00) #4, !dbg !45
  %1060 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %1057, float 0.000000e+00) #4, !dbg !45
  %.012.i36 = select i1 %.not30.i35, float %1060, float %1059, !dbg !45
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !45

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %1061 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i38 = icmp eq i32 %1061, 0, !dbg !45
  %1062 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1063 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i39 = select i1 %.not31.i38, float %1063, float %1062, !dbg !45
  br label %__internal_fmad.exit2.i.i.i40, !dbg !45

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %1064 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %1065 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %1066 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %1067 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i41 = icmp eq i32 %1067, 0, !dbg !45
  %1068 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1066, float %.011.i33, float %1065) #4, !dbg !45
  %1069 = tail call float @llvm.nvvm.fma.rn.f(float %1066, float %.011.i33, float %1065) #4, !dbg !45
  %.010.i42 = select i1 %.not32.i41, float %1069, float %1068, !dbg !45
  %1070 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i43 = icmp eq i32 %1070, 0, !dbg !45
  %1071 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %1064) #4, !dbg !45
  %1072 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %1064) #4, !dbg !45
  %.09.i44 = select i1 %.not33.i43, float %1072, float %1071, !dbg !45
  %1073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i45 = icmp eq i32 %1073, 0, !dbg !45
  %1074 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %1057) #4, !dbg !45
  %1075 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %1057) #4, !dbg !45
  %.05.i46 = select i1 %.not34.i45, float %1075, float %1074, !dbg !45
  %1076 = and i32 %i.i.1.i30, 2, !dbg !45
  %.not35.i47 = icmp eq i32 %1076, 0, !dbg !45
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !45

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %1077 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i49 = icmp eq i32 %1077, 0, !dbg !45
  %1078 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1079 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i50 = select i1 %.not36.i49, float %1079, float %1078, !dbg !45
  br label %__nv_sinf.exit55, !dbg !45

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !45
  %1080 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i57 = icmp eq i32 %1080, 0, !dbg !45
  %.01.i58 = select i1 %.not.i57, i32 %290, i32 %289, !dbg !45
  %1081 = sitofp i32 %.01.i58 to float, !dbg !45
  %1082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i59 = icmp eq i32 %1082, 0, !dbg !45
  %1083 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1081, float 0xBFF921FB40000000, float %78) #4, !dbg !45
  %1084 = tail call float @llvm.nvvm.fma.rn.f(float %1081, float 0xBFF921FB40000000, float %78) #4, !dbg !45
  %.02.i60 = select i1 %.not15.i59, float %1084, float %1083, !dbg !45
  %1085 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i61 = icmp eq i32 %1085, 0, !dbg !45
  %1086 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1081, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !45
  %1087 = tail call float @llvm.nvvm.fma.rn.f(float %1081, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !45
  %.03.i62 = select i1 %.not16.i61, float %1087, float %1086, !dbg !45
  %1088 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i63 = icmp eq i32 %1088, 0, !dbg !45
  %1089 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1081, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !45
  %1090 = tail call float @llvm.nvvm.fma.rn.f(float %1081, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !45
  %.04.i64 = select i1 %.not17.i63, float %1090, float %1089, !dbg !45
  %1091 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i65 = icmp eq i32 %1091, 0, !dbg !45
  %.06.i66 = select i1 %.not18.i65, float %303, float %302, !dbg !45
  %1092 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !45
  br i1 %1092, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !45

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %1093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i68 = icmp eq i32 %1093, 0, !dbg !45
  %.07.i69 = select i1 %.not19.i68, float %303, float %302, !dbg !45
  %1094 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !45
  br i1 %1094, label %__nv_fmul_rn.exit.i.i.i107, label %1098, !dbg !45

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %1095 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i108 = icmp eq i32 %1095, 0, !dbg !45
  %1096 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %78, float 0.000000e+00) #4, !dbg !45
  %1097 = tail call float @llvm.nvvm.mul.rn.f(float %78, float 0.000000e+00) #4, !dbg !45
  %.08.i109 = select i1 %.not27.i108, float %1097, float %1096, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !45

1098:                                             ; preds = %__nv_isinff.exit.i.i.i67
  %1099 = lshr i32 %77, 23, !dbg !45
  %1100 = and i32 %1099, 224, !dbg !45
  %1101 = add nsw i32 %1100, -128, !dbg !45
  %1102 = shl i32 %77, 8, !dbg !45
  %1103 = or i32 %1102, -2147483648, !dbg !45
  %1104 = lshr exact i32 %1101, 5, !dbg !45
  br label %1105, !dbg !45

1105:                                             ; preds = %1098, %1105
  %indvars.iv928 = phi i64 [ 0, %1098 ], [ %indvars.iv.next929, %1105 ]
  %hi.i.i.i.0.i70858 = phi i32 [ 0, %1098 ], [ %1110, %1105 ]
  %1106 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv928, !dbg !45
  %1107 = load i32, ptr addrspace(1) %1106, align 4, !dbg !45
  %1108 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1107, i32 %1103, i32 %hi.i.i.i.0.i70858) #5, !dbg !45, !srcloc !24
  %1109 = extractvalue { i32, i32 } %1108, 0, !dbg !45
  %1110 = extractvalue { i32, i32 } %1108, 1, !dbg !45
  %1111 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv928, !dbg !45
  store i32 %1109, ptr %1111, align 4, !dbg !45
  %indvars.iv.next929 = add nuw nsw i64 %indvars.iv928, 1, !dbg !45
  %exitcond930.not = icmp eq i64 %indvars.iv.next929, 6, !dbg !45
  br i1 %exitcond930.not, label %1112, label %1105, !dbg !45, !llvm.loop !48

1112:                                             ; preds = %1105
  %1113 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !45
  store i32 %1110, ptr %1113, align 4, !dbg !45
  %1114 = sub nsw i32 6, %1104, !dbg !45
  %1115 = sext i32 %1114 to i64, !dbg !45
  %1116 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %1115, !dbg !45
  %1117 = load i32, ptr %1116, align 4, !dbg !45
  %1118 = sub nsw i32 5, %1104, !dbg !45
  %1119 = sext i32 %1118 to i64, !dbg !45
  %1120 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %1119, !dbg !45
  %1121 = load i32, ptr %1120, align 4, !dbg !45
  %1122 = freeze i32 %1121, !dbg !45
  %1123 = and i32 %77, 260046848, !dbg !45
  %.not20.i72 = icmp eq i32 %1123, 0, !dbg !45
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %1124, !dbg !45

1124:                                             ; preds = %1112
  %1125 = sub nsw i32 4, %1104, !dbg !45
  %1126 = sext i32 %1125 to i64, !dbg !45
  %1127 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %1126, !dbg !45
  %1128 = load i32, ptr %1127, align 4, !dbg !45
  %1129 = tail call i32 @llvm.fshl.i32(i32 %1122, i32 %1128, i32 %1099), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %1124, %1112
  %lo.i.i.i.0.i75 = phi i32 [ %1129, %1124 ], [ %1122, %1112 ], !dbg !45
  %1130 = tail call i32 @llvm.fshl.i32(i32 %1117, i32 %1122, i32 %1099), !dbg !45
  %1131 = lshr i32 %1130, 30, !dbg !45
  %1132 = tail call i32 @llvm.fshl.i32(i32 %1130, i32 %lo.i.i.i.0.i75, i32 2), !dbg !45
  %1133 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !45
  %1134 = lshr i32 %1132, 31, !dbg !45
  %1135 = add nuw nsw i32 %1134, %1131, !dbg !45
  %1136 = sub nsw i32 0, %1135, !dbg !45
  %.not2123.i76 = icmp slt i32 %77, 0, !dbg !45
  %spec.select.i77 = select i1 %.not2123.i76, i32 %1136, i32 %1135, !dbg !45
  %1137 = xor i32 %1132, %77, !dbg !45
  %.lobit.i78 = ashr i32 %1132, 31, !dbg !45
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %1132, !dbg !45
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %1133, !dbg !45
  %1138 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !45
  %1139 = shl nuw i64 %1138, 32, !dbg !45
  %1140 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !45
  %1141 = or disjoint i64 %1139, %1140, !dbg !45
  %1142 = sitofp i64 %1141 to double, !dbg !45
  %1143 = fmul double %1142, 0x3BF921FB54442D19, !dbg !45
  %1144 = fptrunc double %1143 to float, !dbg !45
  %1145 = fneg float %1144, !dbg !45
  %.not2526.i82 = icmp slt i32 %1137, 0, !dbg !45
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %1145, float %1144, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !45

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !45
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !45
  %1146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i87 = icmp eq i32 %1146, 0, !dbg !45
  %1147 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !45
  %1148 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !45
  %.011.i88 = select i1 %.not28.i87, float %1148, float %1147, !dbg !45
  %1149 = and i32 %i.i.1.i85, 1, !dbg !45
  %.not29.i89 = icmp eq i32 %1149, 0, !dbg !45
  %1150 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !45
  %1151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i90 = icmp eq i32 %1151, 0, !dbg !45
  %1152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %1150, float 0.000000e+00) #4, !dbg !45
  %1153 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %1150, float 0.000000e+00) #4, !dbg !45
  %.012.i91 = select i1 %.not30.i90, float %1153, float %1152, !dbg !45
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !45

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %1154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i93 = icmp eq i32 %1154, 0, !dbg !45
  %1155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1156 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i94 = select i1 %.not31.i93, float %1156, float %1155, !dbg !45
  br label %__internal_fmad.exit2.i.i.i95, !dbg !45

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %1157 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %1158 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %1159 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %1160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i96 = icmp eq i32 %1160, 0, !dbg !45
  %1161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1159, float %.011.i88, float %1158) #4, !dbg !45
  %1162 = tail call float @llvm.nvvm.fma.rn.f(float %1159, float %.011.i88, float %1158) #4, !dbg !45
  %.010.i97 = select i1 %.not32.i96, float %1162, float %1161, !dbg !45
  %1163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i98 = icmp eq i32 %1163, 0, !dbg !45
  %1164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %1157) #4, !dbg !45
  %1165 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %1157) #4, !dbg !45
  %.09.i99 = select i1 %.not33.i98, float %1165, float %1164, !dbg !45
  %1166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i100 = icmp eq i32 %1166, 0, !dbg !45
  %1167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %1150) #4, !dbg !45
  %1168 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %1150) #4, !dbg !45
  %.05.i101 = select i1 %.not34.i100, float %1168, float %1167, !dbg !45
  %1169 = and i32 %i.i.1.i85, 2, !dbg !45
  %.not35.i102 = icmp eq i32 %1169, 0, !dbg !45
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !45

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %1170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i104 = icmp eq i32 %1170, 0, !dbg !45
  %1171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1172 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i105 = select i1 %.not36.i104, float %1172, float %1171, !dbg !45
  br label %__nv_sinf.exit110, !dbg !45

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !45
  %1173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i112 = icmp eq i32 %1173, 0, !dbg !45
  %.01.i113 = select i1 %.not.i112, i32 %389, i32 %388, !dbg !45
  %1174 = sitofp i32 %.01.i113 to float, !dbg !45
  %1175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i114 = icmp eq i32 %1175, 0, !dbg !45
  %1176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1174, float 0xBFF921FB40000000, float %80) #4, !dbg !45
  %1177 = tail call float @llvm.nvvm.fma.rn.f(float %1174, float 0xBFF921FB40000000, float %80) #4, !dbg !45
  %.02.i115 = select i1 %.not15.i114, float %1177, float %1176, !dbg !45
  %1178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i116 = icmp eq i32 %1178, 0, !dbg !45
  %1179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1174, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !45
  %1180 = tail call float @llvm.nvvm.fma.rn.f(float %1174, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !45
  %.03.i117 = select i1 %.not16.i116, float %1180, float %1179, !dbg !45
  %1181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i118 = icmp eq i32 %1181, 0, !dbg !45
  %1182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1174, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !45
  %1183 = tail call float @llvm.nvvm.fma.rn.f(float %1174, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !45
  %.04.i119 = select i1 %.not17.i118, float %1183, float %1182, !dbg !45
  %1184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i120 = icmp eq i32 %1184, 0, !dbg !45
  %.06.i121 = select i1 %.not18.i120, float %402, float %401, !dbg !45
  %1185 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !45
  br i1 %1185, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !45

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %1186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i123 = icmp eq i32 %1186, 0, !dbg !45
  %.07.i124 = select i1 %.not19.i123, float %402, float %401, !dbg !45
  %1187 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !45
  br i1 %1187, label %__nv_fmul_rn.exit.i.i.i162, label %1191, !dbg !45

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %1188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i163 = icmp eq i32 %1188, 0, !dbg !45
  %1189 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %80, float 0.000000e+00) #4, !dbg !45
  %1190 = tail call float @llvm.nvvm.mul.rn.f(float %80, float 0.000000e+00) #4, !dbg !45
  %.08.i164 = select i1 %.not27.i163, float %1190, float %1189, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !45

1191:                                             ; preds = %__nv_isinff.exit.i.i.i122
  %1192 = lshr i32 %79, 23, !dbg !45
  %1193 = and i32 %1192, 224, !dbg !45
  %1194 = add nsw i32 %1193, -128, !dbg !45
  %1195 = shl i32 %79, 8, !dbg !45
  %1196 = or i32 %1195, -2147483648, !dbg !45
  %1197 = lshr exact i32 %1194, 5, !dbg !45
  br label %1198, !dbg !45

1198:                                             ; preds = %1191, %1198
  %indvars.iv931 = phi i64 [ 0, %1191 ], [ %indvars.iv.next932, %1198 ]
  %hi.i.i.i.0.i125860 = phi i32 [ 0, %1191 ], [ %1203, %1198 ]
  %1199 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv931, !dbg !45
  %1200 = load i32, ptr addrspace(1) %1199, align 4, !dbg !45
  %1201 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1200, i32 %1196, i32 %hi.i.i.i.0.i125860) #5, !dbg !45, !srcloc !24
  %1202 = extractvalue { i32, i32 } %1201, 0, !dbg !45
  %1203 = extractvalue { i32, i32 } %1201, 1, !dbg !45
  %1204 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv931, !dbg !45
  store i32 %1202, ptr %1204, align 4, !dbg !45
  %indvars.iv.next932 = add nuw nsw i64 %indvars.iv931, 1, !dbg !45
  %exitcond933.not = icmp eq i64 %indvars.iv.next932, 6, !dbg !45
  br i1 %exitcond933.not, label %1205, label %1198, !dbg !45, !llvm.loop !49

1205:                                             ; preds = %1198
  %1206 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i111, i64 24, !dbg !45
  store i32 %1203, ptr %1206, align 4, !dbg !45
  %1207 = sub nsw i32 6, %1197, !dbg !45
  %1208 = sext i32 %1207 to i64, !dbg !45
  %1209 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %1208, !dbg !45
  %1210 = load i32, ptr %1209, align 4, !dbg !45
  %1211 = sub nsw i32 5, %1197, !dbg !45
  %1212 = sext i32 %1211 to i64, !dbg !45
  %1213 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %1212, !dbg !45
  %1214 = load i32, ptr %1213, align 4, !dbg !45
  %1215 = freeze i32 %1214, !dbg !45
  %1216 = and i32 %79, 260046848, !dbg !45
  %.not20.i127 = icmp eq i32 %1216, 0, !dbg !45
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %1217, !dbg !45

1217:                                             ; preds = %1205
  %1218 = sub nsw i32 4, %1197, !dbg !45
  %1219 = sext i32 %1218 to i64, !dbg !45
  %1220 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %1219, !dbg !45
  %1221 = load i32, ptr %1220, align 4, !dbg !45
  %1222 = tail call i32 @llvm.fshl.i32(i32 %1215, i32 %1221, i32 %1192), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %1217, %1205
  %lo.i.i.i.0.i130 = phi i32 [ %1222, %1217 ], [ %1215, %1205 ], !dbg !45
  %1223 = tail call i32 @llvm.fshl.i32(i32 %1210, i32 %1215, i32 %1192), !dbg !45
  %1224 = lshr i32 %1223, 30, !dbg !45
  %1225 = tail call i32 @llvm.fshl.i32(i32 %1223, i32 %lo.i.i.i.0.i130, i32 2), !dbg !45
  %1226 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !45
  %1227 = lshr i32 %1225, 31, !dbg !45
  %1228 = add nuw nsw i32 %1227, %1224, !dbg !45
  %1229 = sub nsw i32 0, %1228, !dbg !45
  %.not2123.i131 = icmp slt i32 %79, 0, !dbg !45
  %spec.select.i132 = select i1 %.not2123.i131, i32 %1229, i32 %1228, !dbg !45
  %1230 = xor i32 %1225, %79, !dbg !45
  %.lobit.i133 = ashr i32 %1225, 31, !dbg !45
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %1225, !dbg !45
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %1226, !dbg !45
  %1231 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !45
  %1232 = shl nuw i64 %1231, 32, !dbg !45
  %1233 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !45
  %1234 = or disjoint i64 %1232, %1233, !dbg !45
  %1235 = sitofp i64 %1234 to double, !dbg !45
  %1236 = fmul double %1235, 0x3BF921FB54442D19, !dbg !45
  %1237 = fptrunc double %1236 to float, !dbg !45
  %1238 = fneg float %1237, !dbg !45
  %.not2526.i137 = icmp slt i32 %1230, 0, !dbg !45
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %1238, float %1237, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !45

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !45
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !45
  %1239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i142 = icmp eq i32 %1239, 0, !dbg !45
  %1240 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !45
  %1241 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !45
  %.011.i143 = select i1 %.not28.i142, float %1241, float %1240, !dbg !45
  %1242 = and i32 %i.i.1.i140, 1, !dbg !45
  %.not29.i144 = icmp eq i32 %1242, 0, !dbg !45
  %1243 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !45
  %1244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i145 = icmp eq i32 %1244, 0, !dbg !45
  %1245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %1243, float 0.000000e+00) #4, !dbg !45
  %1246 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %1243, float 0.000000e+00) #4, !dbg !45
  %.012.i146 = select i1 %.not30.i145, float %1246, float %1245, !dbg !45
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !45

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %1247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i148 = icmp eq i32 %1247, 0, !dbg !45
  %1248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1249 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i149 = select i1 %.not31.i148, float %1249, float %1248, !dbg !45
  br label %__internal_fmad.exit2.i.i.i150, !dbg !45

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %1250 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %1251 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %1252 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %1253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i151 = icmp eq i32 %1253, 0, !dbg !45
  %1254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1252, float %.011.i143, float %1251) #4, !dbg !45
  %1255 = tail call float @llvm.nvvm.fma.rn.f(float %1252, float %.011.i143, float %1251) #4, !dbg !45
  %.010.i152 = select i1 %.not32.i151, float %1255, float %1254, !dbg !45
  %1256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i153 = icmp eq i32 %1256, 0, !dbg !45
  %1257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %1250) #4, !dbg !45
  %1258 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %1250) #4, !dbg !45
  %.09.i154 = select i1 %.not33.i153, float %1258, float %1257, !dbg !45
  %1259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i155 = icmp eq i32 %1259, 0, !dbg !45
  %1260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %1243) #4, !dbg !45
  %1261 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %1243) #4, !dbg !45
  %.05.i156 = select i1 %.not34.i155, float %1261, float %1260, !dbg !45
  %1262 = and i32 %i.i.1.i140, 2, !dbg !45
  %.not35.i157 = icmp eq i32 %1262, 0, !dbg !45
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !45

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %1263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i159 = icmp eq i32 %1263, 0, !dbg !45
  %1264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1265 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i160 = select i1 %.not36.i159, float %1265, float %1264, !dbg !45
  br label %__nv_sinf.exit165, !dbg !45

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !45
  %1266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i167 = icmp eq i32 %1266, 0, !dbg !45
  %.01.i168 = select i1 %.not.i167, i32 %488, i32 %487, !dbg !45
  %1267 = sitofp i32 %.01.i168 to float, !dbg !45
  %1268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i169 = icmp eq i32 %1268, 0, !dbg !45
  %1269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1267, float 0xBFF921FB40000000, float %82) #4, !dbg !45
  %1270 = tail call float @llvm.nvvm.fma.rn.f(float %1267, float 0xBFF921FB40000000, float %82) #4, !dbg !45
  %.02.i170 = select i1 %.not15.i169, float %1270, float %1269, !dbg !45
  %1271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i171 = icmp eq i32 %1271, 0, !dbg !45
  %1272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1267, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !45
  %1273 = tail call float @llvm.nvvm.fma.rn.f(float %1267, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !45
  %.03.i172 = select i1 %.not16.i171, float %1273, float %1272, !dbg !45
  %1274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i173 = icmp eq i32 %1274, 0, !dbg !45
  %1275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1267, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !45
  %1276 = tail call float @llvm.nvvm.fma.rn.f(float %1267, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !45
  %.04.i174 = select i1 %.not17.i173, float %1276, float %1275, !dbg !45
  %1277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i175 = icmp eq i32 %1277, 0, !dbg !45
  %.06.i176 = select i1 %.not18.i175, float %501, float %500, !dbg !45
  %1278 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !45
  br i1 %1278, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !45

__nv_isinff.exit.i.i.i177:                        ; preds = %__nv_sinf.exit165
  %1279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i178 = icmp eq i32 %1279, 0, !dbg !45
  %.07.i179 = select i1 %.not19.i178, float %501, float %500, !dbg !45
  %1280 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !45
  br i1 %1280, label %__nv_fmul_rn.exit.i.i.i217, label %1284, !dbg !45

__nv_fmul_rn.exit.i.i.i217:                       ; preds = %__nv_isinff.exit.i.i.i177
  %1281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i218 = icmp eq i32 %1281, 0, !dbg !45
  %1282 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %82, float 0.000000e+00) #4, !dbg !45
  %1283 = tail call float @llvm.nvvm.mul.rn.f(float %82, float 0.000000e+00) #4, !dbg !45
  %.08.i219 = select i1 %.not27.i218, float %1283, float %1282, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !45

1284:                                             ; preds = %__nv_isinff.exit.i.i.i177
  %1285 = lshr i32 %81, 23, !dbg !45
  %1286 = and i32 %1285, 224, !dbg !45
  %1287 = add nsw i32 %1286, -128, !dbg !45
  %1288 = shl i32 %81, 8, !dbg !45
  %1289 = or i32 %1288, -2147483648, !dbg !45
  %1290 = lshr exact i32 %1287, 5, !dbg !45
  br label %1291, !dbg !45

1291:                                             ; preds = %1284, %1291
  %indvars.iv934 = phi i64 [ 0, %1284 ], [ %indvars.iv.next935, %1291 ]
  %hi.i.i.i.0.i180862 = phi i32 [ 0, %1284 ], [ %1296, %1291 ]
  %1292 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv934, !dbg !45
  %1293 = load i32, ptr addrspace(1) %1292, align 4, !dbg !45
  %1294 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1293, i32 %1289, i32 %hi.i.i.i.0.i180862) #5, !dbg !45, !srcloc !24
  %1295 = extractvalue { i32, i32 } %1294, 0, !dbg !45
  %1296 = extractvalue { i32, i32 } %1294, 1, !dbg !45
  %1297 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv934, !dbg !45
  store i32 %1295, ptr %1297, align 4, !dbg !45
  %indvars.iv.next935 = add nuw nsw i64 %indvars.iv934, 1, !dbg !45
  %exitcond936.not = icmp eq i64 %indvars.iv.next935, 6, !dbg !45
  br i1 %exitcond936.not, label %1298, label %1291, !dbg !45, !llvm.loop !50

1298:                                             ; preds = %1291
  %1299 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i166, i64 24, !dbg !45
  store i32 %1296, ptr %1299, align 4, !dbg !45
  %1300 = sub nsw i32 6, %1290, !dbg !45
  %1301 = sext i32 %1300 to i64, !dbg !45
  %1302 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %1301, !dbg !45
  %1303 = load i32, ptr %1302, align 4, !dbg !45
  %1304 = sub nsw i32 5, %1290, !dbg !45
  %1305 = sext i32 %1304 to i64, !dbg !45
  %1306 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %1305, !dbg !45
  %1307 = load i32, ptr %1306, align 4, !dbg !45
  %1308 = freeze i32 %1307, !dbg !45
  %1309 = and i32 %81, 260046848, !dbg !45
  %.not20.i182 = icmp eq i32 %1309, 0, !dbg !45
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %1310, !dbg !45

1310:                                             ; preds = %1298
  %1311 = sub nsw i32 4, %1290, !dbg !45
  %1312 = sext i32 %1311 to i64, !dbg !45
  %1313 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %1312, !dbg !45
  %1314 = load i32, ptr %1313, align 4, !dbg !45
  %1315 = tail call i32 @llvm.fshl.i32(i32 %1308, i32 %1314, i32 %1285), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %1310, %1298
  %lo.i.i.i.0.i185 = phi i32 [ %1315, %1310 ], [ %1308, %1298 ], !dbg !45
  %1316 = tail call i32 @llvm.fshl.i32(i32 %1303, i32 %1308, i32 %1285), !dbg !45
  %1317 = lshr i32 %1316, 30, !dbg !45
  %1318 = tail call i32 @llvm.fshl.i32(i32 %1316, i32 %lo.i.i.i.0.i185, i32 2), !dbg !45
  %1319 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !45
  %1320 = lshr i32 %1318, 31, !dbg !45
  %1321 = add nuw nsw i32 %1320, %1317, !dbg !45
  %1322 = sub nsw i32 0, %1321, !dbg !45
  %.not2123.i186 = icmp slt i32 %81, 0, !dbg !45
  %spec.select.i187 = select i1 %.not2123.i186, i32 %1322, i32 %1321, !dbg !45
  %1323 = xor i32 %1318, %81, !dbg !45
  %.lobit.i188 = ashr i32 %1318, 31, !dbg !45
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %1318, !dbg !45
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %1319, !dbg !45
  %1324 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !45
  %1325 = shl nuw i64 %1324, 32, !dbg !45
  %1326 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !45
  %1327 = or disjoint i64 %1325, %1326, !dbg !45
  %1328 = sitofp i64 %1327 to double, !dbg !45
  %1329 = fmul double %1328, 0x3BF921FB54442D19, !dbg !45
  %1330 = fptrunc double %1329 to float, !dbg !45
  %1331 = fneg float %1330, !dbg !45
  %.not2526.i192 = icmp slt i32 %1323, 0, !dbg !45
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %1331, float %1330, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !45

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i217, %__nv_sinf.exit165
  %i.i.1.i195 = phi i32 [ %.01.i168, %__nv_sinf.exit165 ], [ 0, %__nv_fmul_rn.exit.i.i.i217 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !45
  %t.i.i.1.i196 = phi float [ %.04.i174, %__nv_sinf.exit165 ], [ %.08.i219, %__nv_fmul_rn.exit.i.i.i217 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !45
  %1332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i197 = icmp eq i32 %1332, 0, !dbg !45
  %1333 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !45
  %1334 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !45
  %.011.i198 = select i1 %.not28.i197, float %1334, float %1333, !dbg !45
  %1335 = and i32 %i.i.1.i195, 1, !dbg !45
  %.not29.i199 = icmp eq i32 %1335, 0, !dbg !45
  %1336 = select i1 %.not29.i199, float %t.i.i.1.i196, float 1.000000e+00, !dbg !45
  %1337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i200 = icmp eq i32 %1337, 0, !dbg !45
  %1338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %1336, float 0.000000e+00) #4, !dbg !45
  %1339 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %1336, float 0.000000e+00) #4, !dbg !45
  %.012.i201 = select i1 %.not30.i200, float %1339, float %1338, !dbg !45
  br i1 %.not29.i199, label %__internal_fmad.exit2.i.i.i205, label %__internal_fmad.exit1.i.i.i202, !dbg !45

__internal_fmad.exit1.i.i.i202:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %1340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i203 = icmp eq i32 %1340, 0, !dbg !45
  %1341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1342 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i204 = select i1 %.not31.i203, float %1342, float %1341, !dbg !45
  br label %__internal_fmad.exit2.i.i.i205, !dbg !45

__internal_fmad.exit2.i.i.i205:                   ; preds = %__internal_fmad.exit1.i.i.i202, %__internal_trig_reduction_kernel.exit.i.i194
  %1343 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i202 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !45
  %1344 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i202 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !45
  %1345 = phi float [ %.013.i204, %__internal_fmad.exit1.i.i.i202 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !45
  %1346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i206 = icmp eq i32 %1346, 0, !dbg !45
  %1347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1345, float %.011.i198, float %1344) #4, !dbg !45
  %1348 = tail call float @llvm.nvvm.fma.rn.f(float %1345, float %.011.i198, float %1344) #4, !dbg !45
  %.010.i207 = select i1 %.not32.i206, float %1348, float %1347, !dbg !45
  %1349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i208 = icmp eq i32 %1349, 0, !dbg !45
  %1350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i207, float %.011.i198, float %1343) #4, !dbg !45
  %1351 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i207, float %.011.i198, float %1343) #4, !dbg !45
  %.09.i209 = select i1 %.not33.i208, float %1351, float %1350, !dbg !45
  %1352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i210 = icmp eq i32 %1352, 0, !dbg !45
  %1353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i209, float %.012.i201, float %1336) #4, !dbg !45
  %1354 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i209, float %.012.i201, float %1336) #4, !dbg !45
  %.05.i211 = select i1 %.not34.i210, float %1354, float %1353, !dbg !45
  %1355 = and i32 %i.i.1.i195, 2, !dbg !45
  %.not35.i212 = icmp eq i32 %1355, 0, !dbg !45
  br i1 %.not35.i212, label %__nv_sinf.exit220, label %__internal_fmad.exit5.i.i.i213, !dbg !45

__internal_fmad.exit5.i.i.i213:                   ; preds = %__internal_fmad.exit2.i.i.i205
  %1356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i214 = icmp eq i32 %1356, 0, !dbg !45
  %1357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1358 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i215 = select i1 %.not36.i214, float %1358, float %1357, !dbg !45
  br label %__nv_sinf.exit220, !dbg !45

__nv_sinf.exit220:                                ; preds = %__internal_fmad.exit2.i.i.i205, %__internal_fmad.exit5.i.i.i213
  %z.i.i.0.i216 = phi float [ %.0.i215, %__internal_fmad.exit5.i.i.i213 ], [ %.05.i211, %__internal_fmad.exit2.i.i.i205 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !45
  %1359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i222 = icmp eq i32 %1359, 0, !dbg !45
  %.01.i223 = select i1 %.not.i222, i32 %587, i32 %586, !dbg !45
  %1360 = sitofp i32 %.01.i223 to float, !dbg !45
  %1361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i224 = icmp eq i32 %1361, 0, !dbg !45
  %1362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1360, float 0xBFF921FB40000000, float %84) #4, !dbg !45
  %1363 = tail call float @llvm.nvvm.fma.rn.f(float %1360, float 0xBFF921FB40000000, float %84) #4, !dbg !45
  %.02.i225 = select i1 %.not15.i224, float %1363, float %1362, !dbg !45
  %1364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i226 = icmp eq i32 %1364, 0, !dbg !45
  %1365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1360, float 0xBE74442D00000000, float %.02.i225) #4, !dbg !45
  %1366 = tail call float @llvm.nvvm.fma.rn.f(float %1360, float 0xBE74442D00000000, float %.02.i225) #4, !dbg !45
  %.03.i227 = select i1 %.not16.i226, float %1366, float %1365, !dbg !45
  %1367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i228 = icmp eq i32 %1367, 0, !dbg !45
  %1368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1360, float 0xBCF84698A0000000, float %.03.i227) #4, !dbg !45
  %1369 = tail call float @llvm.nvvm.fma.rn.f(float %1360, float 0xBCF84698A0000000, float %.03.i227) #4, !dbg !45
  %.04.i229 = select i1 %.not17.i228, float %1369, float %1368, !dbg !45
  %1370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i230 = icmp eq i32 %1370, 0, !dbg !45
  %.06.i231 = select i1 %.not18.i230, float %600, float %599, !dbg !45
  %1371 = fcmp ult float %.06.i231, 1.056150e+05, !dbg !45
  br i1 %1371, label %__internal_trig_reduction_kernel.exit.i.i249, label %__nv_isinff.exit.i.i.i232, !dbg !45

__nv_isinff.exit.i.i.i232:                        ; preds = %__nv_sinf.exit220
  %1372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i233 = icmp eq i32 %1372, 0, !dbg !45
  %.07.i234 = select i1 %.not19.i233, float %600, float %599, !dbg !45
  %1373 = fcmp oeq float %.07.i234, 0x7FF0000000000000, !dbg !45
  br i1 %1373, label %__nv_fmul_rn.exit.i.i.i272, label %1377, !dbg !45

__nv_fmul_rn.exit.i.i.i272:                       ; preds = %__nv_isinff.exit.i.i.i232
  %1374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i273 = icmp eq i32 %1374, 0, !dbg !45
  %1375 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %84, float 0.000000e+00) #4, !dbg !45
  %1376 = tail call float @llvm.nvvm.mul.rn.f(float %84, float 0.000000e+00) #4, !dbg !45
  %.08.i274 = select i1 %.not27.i273, float %1376, float %1375, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !45

1377:                                             ; preds = %__nv_isinff.exit.i.i.i232
  %1378 = lshr i32 %83, 23, !dbg !45
  %1379 = and i32 %1378, 224, !dbg !45
  %1380 = add nsw i32 %1379, -128, !dbg !45
  %1381 = shl i32 %83, 8, !dbg !45
  %1382 = or i32 %1381, -2147483648, !dbg !45
  %1383 = lshr exact i32 %1380, 5, !dbg !45
  br label %1384, !dbg !45

1384:                                             ; preds = %1377, %1384
  %indvars.iv937 = phi i64 [ 0, %1377 ], [ %indvars.iv.next938, %1384 ]
  %hi.i.i.i.0.i235864 = phi i32 [ 0, %1377 ], [ %1389, %1384 ]
  %1385 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv937, !dbg !45
  %1386 = load i32, ptr addrspace(1) %1385, align 4, !dbg !45
  %1387 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1386, i32 %1382, i32 %hi.i.i.i.0.i235864) #5, !dbg !45, !srcloc !24
  %1388 = extractvalue { i32, i32 } %1387, 0, !dbg !45
  %1389 = extractvalue { i32, i32 } %1387, 1, !dbg !45
  %1390 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %indvars.iv937, !dbg !45
  store i32 %1388, ptr %1390, align 4, !dbg !45
  %indvars.iv.next938 = add nuw nsw i64 %indvars.iv937, 1, !dbg !45
  %exitcond939.not = icmp eq i64 %indvars.iv.next938, 6, !dbg !45
  br i1 %exitcond939.not, label %1391, label %1384, !dbg !45, !llvm.loop !51

1391:                                             ; preds = %1384
  %1392 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i221, i64 24, !dbg !45
  store i32 %1389, ptr %1392, align 4, !dbg !45
  %1393 = sub nsw i32 6, %1383, !dbg !45
  %1394 = sext i32 %1393 to i64, !dbg !45
  %1395 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1394, !dbg !45
  %1396 = load i32, ptr %1395, align 4, !dbg !45
  %1397 = sub nsw i32 5, %1383, !dbg !45
  %1398 = sext i32 %1397 to i64, !dbg !45
  %1399 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1398, !dbg !45
  %1400 = load i32, ptr %1399, align 4, !dbg !45
  %1401 = freeze i32 %1400, !dbg !45
  %1402 = and i32 %83, 260046848, !dbg !45
  %.not20.i237 = icmp eq i32 %1402, 0, !dbg !45
  br i1 %.not20.i237, label %__internal_trig_reduction_slowpath.exit.i.i.i238, label %1403, !dbg !45

1403:                                             ; preds = %1391
  %1404 = sub nsw i32 4, %1383, !dbg !45
  %1405 = sext i32 %1404 to i64, !dbg !45
  %1406 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1405, !dbg !45
  %1407 = load i32, ptr %1406, align 4, !dbg !45
  %1408 = tail call i32 @llvm.fshl.i32(i32 %1401, i32 %1407, i32 %1378), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i238, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i238: ; preds = %1403, %1391
  %lo.i.i.i.0.i240 = phi i32 [ %1408, %1403 ], [ %1401, %1391 ], !dbg !45
  %1409 = tail call i32 @llvm.fshl.i32(i32 %1396, i32 %1401, i32 %1378), !dbg !45
  %1410 = lshr i32 %1409, 30, !dbg !45
  %1411 = tail call i32 @llvm.fshl.i32(i32 %1409, i32 %lo.i.i.i.0.i240, i32 2), !dbg !45
  %1412 = shl i32 %lo.i.i.i.0.i240, 2, !dbg !45
  %1413 = lshr i32 %1411, 31, !dbg !45
  %1414 = add nuw nsw i32 %1413, %1410, !dbg !45
  %1415 = sub nsw i32 0, %1414, !dbg !45
  %.not2123.i241 = icmp slt i32 %83, 0, !dbg !45
  %spec.select.i242 = select i1 %.not2123.i241, i32 %1415, i32 %1414, !dbg !45
  %1416 = xor i32 %1411, %83, !dbg !45
  %.lobit.i243 = ashr i32 %1411, 31, !dbg !45
  %hi.i.i.i.2.i244 = xor i32 %.lobit.i243, %1411, !dbg !45
  %lo.i.i.i.1.i246 = xor i32 %.lobit.i243, %1412, !dbg !45
  %1417 = zext i32 %hi.i.i.i.2.i244 to i64, !dbg !45
  %1418 = shl nuw i64 %1417, 32, !dbg !45
  %1419 = zext i32 %lo.i.i.i.1.i246 to i64, !dbg !45
  %1420 = or disjoint i64 %1418, %1419, !dbg !45
  %1421 = sitofp i64 %1420 to double, !dbg !45
  %1422 = fmul double %1421, 0x3BF921FB54442D19, !dbg !45
  %1423 = fptrunc double %1422 to float, !dbg !45
  %1424 = fneg float %1423, !dbg !45
  %.not2526.i247 = icmp slt i32 %1416, 0, !dbg !45
  %r.i.i.i.0.i248 = select i1 %.not2526.i247, float %1424, float %1423, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !45

__internal_trig_reduction_kernel.exit.i.i249:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i238, %__nv_fmul_rn.exit.i.i.i272, %__nv_sinf.exit220
  %i.i.1.i250 = phi i32 [ %.01.i223, %__nv_sinf.exit220 ], [ 0, %__nv_fmul_rn.exit.i.i.i272 ], [ %spec.select.i242, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !45
  %t.i.i.1.i251 = phi float [ %.04.i229, %__nv_sinf.exit220 ], [ %.08.i274, %__nv_fmul_rn.exit.i.i.i272 ], [ %r.i.i.i.0.i248, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !45
  %1425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i252 = icmp eq i32 %1425, 0, !dbg !45
  %1426 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #4, !dbg !45
  %1427 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #4, !dbg !45
  %.011.i253 = select i1 %.not28.i252, float %1427, float %1426, !dbg !45
  %1428 = and i32 %i.i.1.i250, 1, !dbg !45
  %.not29.i254 = icmp eq i32 %1428, 0, !dbg !45
  %1429 = select i1 %.not29.i254, float %t.i.i.1.i251, float 1.000000e+00, !dbg !45
  %1430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i255 = icmp eq i32 %1430, 0, !dbg !45
  %1431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i253, float %1429, float 0.000000e+00) #4, !dbg !45
  %1432 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i253, float %1429, float 0.000000e+00) #4, !dbg !45
  %.012.i256 = select i1 %.not30.i255, float %1432, float %1431, !dbg !45
  br i1 %.not29.i254, label %__internal_fmad.exit2.i.i.i260, label %__internal_fmad.exit1.i.i.i257, !dbg !45

__internal_fmad.exit1.i.i.i257:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i249
  %1433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i258 = icmp eq i32 %1433, 0, !dbg !45
  %1434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1435 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i259 = select i1 %.not31.i258, float %1435, float %1434, !dbg !45
  br label %__internal_fmad.exit2.i.i.i260, !dbg !45

__internal_fmad.exit2.i.i.i260:                   ; preds = %__internal_fmad.exit1.i.i.i257, %__internal_trig_reduction_kernel.exit.i.i249
  %1436 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i257 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !45
  %1437 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i257 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !45
  %1438 = phi float [ %.013.i259, %__internal_fmad.exit1.i.i.i257 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !45
  %1439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i261 = icmp eq i32 %1439, 0, !dbg !45
  %1440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1438, float %.011.i253, float %1437) #4, !dbg !45
  %1441 = tail call float @llvm.nvvm.fma.rn.f(float %1438, float %.011.i253, float %1437) #4, !dbg !45
  %.010.i262 = select i1 %.not32.i261, float %1441, float %1440, !dbg !45
  %1442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i263 = icmp eq i32 %1442, 0, !dbg !45
  %1443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i262, float %.011.i253, float %1436) #4, !dbg !45
  %1444 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i262, float %.011.i253, float %1436) #4, !dbg !45
  %.09.i264 = select i1 %.not33.i263, float %1444, float %1443, !dbg !45
  %1445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i265 = icmp eq i32 %1445, 0, !dbg !45
  %1446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i264, float %.012.i256, float %1429) #4, !dbg !45
  %1447 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i264, float %.012.i256, float %1429) #4, !dbg !45
  %.05.i266 = select i1 %.not34.i265, float %1447, float %1446, !dbg !45
  %1448 = and i32 %i.i.1.i250, 2, !dbg !45
  %.not35.i267 = icmp eq i32 %1448, 0, !dbg !45
  br i1 %.not35.i267, label %__nv_sinf.exit275, label %__internal_fmad.exit5.i.i.i268, !dbg !45

__internal_fmad.exit5.i.i.i268:                   ; preds = %__internal_fmad.exit2.i.i.i260
  %1449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i269 = icmp eq i32 %1449, 0, !dbg !45
  %1450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1451 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i270 = select i1 %.not36.i269, float %1451, float %1450, !dbg !45
  br label %__nv_sinf.exit275, !dbg !45

__nv_sinf.exit275:                                ; preds = %__internal_fmad.exit2.i.i.i260, %__internal_fmad.exit5.i.i.i268
  %z.i.i.0.i271 = phi float [ %.0.i270, %__internal_fmad.exit5.i.i.i268 ], [ %.05.i266, %__internal_fmad.exit2.i.i.i260 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !45
  %1452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i277 = icmp eq i32 %1452, 0, !dbg !45
  %.01.i278 = select i1 %.not.i277, i32 %686, i32 %685, !dbg !45
  %1453 = sitofp i32 %.01.i278 to float, !dbg !45
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i279 = icmp eq i32 %1454, 0, !dbg !45
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1453, float 0xBFF921FB40000000, float %86) #4, !dbg !45
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %1453, float 0xBFF921FB40000000, float %86) #4, !dbg !45
  %.02.i280 = select i1 %.not15.i279, float %1456, float %1455, !dbg !45
  %1457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i281 = icmp eq i32 %1457, 0, !dbg !45
  %1458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1453, float 0xBE74442D00000000, float %.02.i280) #4, !dbg !45
  %1459 = tail call float @llvm.nvvm.fma.rn.f(float %1453, float 0xBE74442D00000000, float %.02.i280) #4, !dbg !45
  %.03.i282 = select i1 %.not16.i281, float %1459, float %1458, !dbg !45
  %1460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i283 = icmp eq i32 %1460, 0, !dbg !45
  %1461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1453, float 0xBCF84698A0000000, float %.03.i282) #4, !dbg !45
  %1462 = tail call float @llvm.nvvm.fma.rn.f(float %1453, float 0xBCF84698A0000000, float %.03.i282) #4, !dbg !45
  %.04.i284 = select i1 %.not17.i283, float %1462, float %1461, !dbg !45
  %1463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i285 = icmp eq i32 %1463, 0, !dbg !45
  %.06.i286 = select i1 %.not18.i285, float %699, float %698, !dbg !45
  %1464 = fcmp ult float %.06.i286, 1.056150e+05, !dbg !45
  br i1 %1464, label %__internal_trig_reduction_kernel.exit.i.i304, label %__nv_isinff.exit.i.i.i287, !dbg !45

__nv_isinff.exit.i.i.i287:                        ; preds = %__nv_sinf.exit275
  %1465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i288 = icmp eq i32 %1465, 0, !dbg !45
  %.07.i289 = select i1 %.not19.i288, float %699, float %698, !dbg !45
  %1466 = fcmp oeq float %.07.i289, 0x7FF0000000000000, !dbg !45
  br i1 %1466, label %__nv_fmul_rn.exit.i.i.i327, label %1470, !dbg !45

__nv_fmul_rn.exit.i.i.i327:                       ; preds = %__nv_isinff.exit.i.i.i287
  %1467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i328 = icmp eq i32 %1467, 0, !dbg !45
  %1468 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %86, float 0.000000e+00) #4, !dbg !45
  %1469 = tail call float @llvm.nvvm.mul.rn.f(float %86, float 0.000000e+00) #4, !dbg !45
  %.08.i329 = select i1 %.not27.i328, float %1469, float %1468, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !45

1470:                                             ; preds = %__nv_isinff.exit.i.i.i287
  %1471 = lshr i32 %85, 23, !dbg !45
  %1472 = and i32 %1471, 224, !dbg !45
  %1473 = add nsw i32 %1472, -128, !dbg !45
  %1474 = shl i32 %85, 8, !dbg !45
  %1475 = or i32 %1474, -2147483648, !dbg !45
  %1476 = lshr exact i32 %1473, 5, !dbg !45
  br label %1477, !dbg !45

1477:                                             ; preds = %1470, %1477
  %indvars.iv940 = phi i64 [ 0, %1470 ], [ %indvars.iv.next941, %1477 ]
  %hi.i.i.i.0.i290866 = phi i32 [ 0, %1470 ], [ %1482, %1477 ]
  %1478 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv940, !dbg !45
  %1479 = load i32, ptr addrspace(1) %1478, align 4, !dbg !45
  %1480 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1479, i32 %1475, i32 %hi.i.i.i.0.i290866) #5, !dbg !45, !srcloc !24
  %1481 = extractvalue { i32, i32 } %1480, 0, !dbg !45
  %1482 = extractvalue { i32, i32 } %1480, 1, !dbg !45
  %1483 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %indvars.iv940, !dbg !45
  store i32 %1481, ptr %1483, align 4, !dbg !45
  %indvars.iv.next941 = add nuw nsw i64 %indvars.iv940, 1, !dbg !45
  %exitcond942.not = icmp eq i64 %indvars.iv.next941, 6, !dbg !45
  br i1 %exitcond942.not, label %1484, label %1477, !dbg !45, !llvm.loop !52

1484:                                             ; preds = %1477
  %1485 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i276, i64 24, !dbg !45
  store i32 %1482, ptr %1485, align 4, !dbg !45
  %1486 = sub nsw i32 6, %1476, !dbg !45
  %1487 = sext i32 %1486 to i64, !dbg !45
  %1488 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1487, !dbg !45
  %1489 = load i32, ptr %1488, align 4, !dbg !45
  %1490 = sub nsw i32 5, %1476, !dbg !45
  %1491 = sext i32 %1490 to i64, !dbg !45
  %1492 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1491, !dbg !45
  %1493 = load i32, ptr %1492, align 4, !dbg !45
  %1494 = freeze i32 %1493, !dbg !45
  %1495 = and i32 %85, 260046848, !dbg !45
  %.not20.i292 = icmp eq i32 %1495, 0, !dbg !45
  br i1 %.not20.i292, label %__internal_trig_reduction_slowpath.exit.i.i.i293, label %1496, !dbg !45

1496:                                             ; preds = %1484
  %1497 = sub nsw i32 4, %1476, !dbg !45
  %1498 = sext i32 %1497 to i64, !dbg !45
  %1499 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1498, !dbg !45
  %1500 = load i32, ptr %1499, align 4, !dbg !45
  %1501 = tail call i32 @llvm.fshl.i32(i32 %1494, i32 %1500, i32 %1471), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i293, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i293: ; preds = %1496, %1484
  %lo.i.i.i.0.i295 = phi i32 [ %1501, %1496 ], [ %1494, %1484 ], !dbg !45
  %1502 = tail call i32 @llvm.fshl.i32(i32 %1489, i32 %1494, i32 %1471), !dbg !45
  %1503 = lshr i32 %1502, 30, !dbg !45
  %1504 = tail call i32 @llvm.fshl.i32(i32 %1502, i32 %lo.i.i.i.0.i295, i32 2), !dbg !45
  %1505 = shl i32 %lo.i.i.i.0.i295, 2, !dbg !45
  %1506 = lshr i32 %1504, 31, !dbg !45
  %1507 = add nuw nsw i32 %1506, %1503, !dbg !45
  %1508 = sub nsw i32 0, %1507, !dbg !45
  %.not2123.i296 = icmp slt i32 %85, 0, !dbg !45
  %spec.select.i297 = select i1 %.not2123.i296, i32 %1508, i32 %1507, !dbg !45
  %1509 = xor i32 %1504, %85, !dbg !45
  %.lobit.i298 = ashr i32 %1504, 31, !dbg !45
  %hi.i.i.i.2.i299 = xor i32 %.lobit.i298, %1504, !dbg !45
  %lo.i.i.i.1.i301 = xor i32 %.lobit.i298, %1505, !dbg !45
  %1510 = zext i32 %hi.i.i.i.2.i299 to i64, !dbg !45
  %1511 = shl nuw i64 %1510, 32, !dbg !45
  %1512 = zext i32 %lo.i.i.i.1.i301 to i64, !dbg !45
  %1513 = or disjoint i64 %1511, %1512, !dbg !45
  %1514 = sitofp i64 %1513 to double, !dbg !45
  %1515 = fmul double %1514, 0x3BF921FB54442D19, !dbg !45
  %1516 = fptrunc double %1515 to float, !dbg !45
  %1517 = fneg float %1516, !dbg !45
  %.not2526.i302 = icmp slt i32 %1509, 0, !dbg !45
  %r.i.i.i.0.i303 = select i1 %.not2526.i302, float %1517, float %1516, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !45

__internal_trig_reduction_kernel.exit.i.i304:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i293, %__nv_fmul_rn.exit.i.i.i327, %__nv_sinf.exit275
  %i.i.1.i305 = phi i32 [ %.01.i278, %__nv_sinf.exit275 ], [ 0, %__nv_fmul_rn.exit.i.i.i327 ], [ %spec.select.i297, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !45
  %t.i.i.1.i306 = phi float [ %.04.i284, %__nv_sinf.exit275 ], [ %.08.i329, %__nv_fmul_rn.exit.i.i.i327 ], [ %r.i.i.i.0.i303, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !45
  %1518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i307 = icmp eq i32 %1518, 0, !dbg !45
  %1519 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #4, !dbg !45
  %1520 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #4, !dbg !45
  %.011.i308 = select i1 %.not28.i307, float %1520, float %1519, !dbg !45
  %1521 = and i32 %i.i.1.i305, 1, !dbg !45
  %.not29.i309 = icmp eq i32 %1521, 0, !dbg !45
  %1522 = select i1 %.not29.i309, float %t.i.i.1.i306, float 1.000000e+00, !dbg !45
  %1523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i310 = icmp eq i32 %1523, 0, !dbg !45
  %1524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i308, float %1522, float 0.000000e+00) #4, !dbg !45
  %1525 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i308, float %1522, float 0.000000e+00) #4, !dbg !45
  %.012.i311 = select i1 %.not30.i310, float %1525, float %1524, !dbg !45
  br i1 %.not29.i309, label %__internal_fmad.exit2.i.i.i315, label %__internal_fmad.exit1.i.i.i312, !dbg !45

__internal_fmad.exit1.i.i.i312:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i304
  %1526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i313 = icmp eq i32 %1526, 0, !dbg !45
  %1527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1528 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i314 = select i1 %.not31.i313, float %1528, float %1527, !dbg !45
  br label %__internal_fmad.exit2.i.i.i315, !dbg !45

__internal_fmad.exit2.i.i.i315:                   ; preds = %__internal_fmad.exit1.i.i.i312, %__internal_trig_reduction_kernel.exit.i.i304
  %1529 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i312 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !45
  %1530 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i312 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !45
  %1531 = phi float [ %.013.i314, %__internal_fmad.exit1.i.i.i312 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !45
  %1532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i316 = icmp eq i32 %1532, 0, !dbg !45
  %1533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1531, float %.011.i308, float %1530) #4, !dbg !45
  %1534 = tail call float @llvm.nvvm.fma.rn.f(float %1531, float %.011.i308, float %1530) #4, !dbg !45
  %.010.i317 = select i1 %.not32.i316, float %1534, float %1533, !dbg !45
  %1535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i318 = icmp eq i32 %1535, 0, !dbg !45
  %1536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i317, float %.011.i308, float %1529) #4, !dbg !45
  %1537 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i317, float %.011.i308, float %1529) #4, !dbg !45
  %.09.i319 = select i1 %.not33.i318, float %1537, float %1536, !dbg !45
  %1538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i320 = icmp eq i32 %1538, 0, !dbg !45
  %1539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i319, float %.012.i311, float %1522) #4, !dbg !45
  %1540 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i319, float %.012.i311, float %1522) #4, !dbg !45
  %.05.i321 = select i1 %.not34.i320, float %1540, float %1539, !dbg !45
  %1541 = and i32 %i.i.1.i305, 2, !dbg !45
  %.not35.i322 = icmp eq i32 %1541, 0, !dbg !45
  br i1 %.not35.i322, label %__nv_sinf.exit330, label %__internal_fmad.exit5.i.i.i323, !dbg !45

__internal_fmad.exit5.i.i.i323:                   ; preds = %__internal_fmad.exit2.i.i.i315
  %1542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i324 = icmp eq i32 %1542, 0, !dbg !45
  %1543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1544 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i325 = select i1 %.not36.i324, float %1544, float %1543, !dbg !45
  br label %__nv_sinf.exit330, !dbg !45

__nv_sinf.exit330:                                ; preds = %__internal_fmad.exit2.i.i.i315, %__internal_fmad.exit5.i.i.i323
  %z.i.i.0.i326 = phi float [ %.0.i325, %__internal_fmad.exit5.i.i.i323 ], [ %.05.i321, %__internal_fmad.exit2.i.i.i315 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !45
  %1545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i332 = icmp eq i32 %1545, 0, !dbg !45
  %.01.i333 = select i1 %.not.i332, i32 %785, i32 %784, !dbg !45
  %1546 = sitofp i32 %.01.i333 to float, !dbg !45
  %1547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i334 = icmp eq i32 %1547, 0, !dbg !45
  %1548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1546, float 0xBFF921FB40000000, float %88) #4, !dbg !45
  %1549 = tail call float @llvm.nvvm.fma.rn.f(float %1546, float 0xBFF921FB40000000, float %88) #4, !dbg !45
  %.02.i335 = select i1 %.not15.i334, float %1549, float %1548, !dbg !45
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i336 = icmp eq i32 %1550, 0, !dbg !45
  %1551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1546, float 0xBE74442D00000000, float %.02.i335) #4, !dbg !45
  %1552 = tail call float @llvm.nvvm.fma.rn.f(float %1546, float 0xBE74442D00000000, float %.02.i335) #4, !dbg !45
  %.03.i337 = select i1 %.not16.i336, float %1552, float %1551, !dbg !45
  %1553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i338 = icmp eq i32 %1553, 0, !dbg !45
  %1554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1546, float 0xBCF84698A0000000, float %.03.i337) #4, !dbg !45
  %1555 = tail call float @llvm.nvvm.fma.rn.f(float %1546, float 0xBCF84698A0000000, float %.03.i337) #4, !dbg !45
  %.04.i339 = select i1 %.not17.i338, float %1555, float %1554, !dbg !45
  %1556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i340 = icmp eq i32 %1556, 0, !dbg !45
  %.06.i341 = select i1 %.not18.i340, float %798, float %797, !dbg !45
  %1557 = fcmp ult float %.06.i341, 1.056150e+05, !dbg !45
  br i1 %1557, label %__internal_trig_reduction_kernel.exit.i.i359, label %__nv_isinff.exit.i.i.i342, !dbg !45

__nv_isinff.exit.i.i.i342:                        ; preds = %__nv_sinf.exit330
  %1558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i343 = icmp eq i32 %1558, 0, !dbg !45
  %.07.i344 = select i1 %.not19.i343, float %798, float %797, !dbg !45
  %1559 = fcmp oeq float %.07.i344, 0x7FF0000000000000, !dbg !45
  br i1 %1559, label %__nv_fmul_rn.exit.i.i.i382, label %1563, !dbg !45

__nv_fmul_rn.exit.i.i.i382:                       ; preds = %__nv_isinff.exit.i.i.i342
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i383 = icmp eq i32 %1560, 0, !dbg !45
  %1561 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %88, float 0.000000e+00) #4, !dbg !45
  %1562 = tail call float @llvm.nvvm.mul.rn.f(float %88, float 0.000000e+00) #4, !dbg !45
  %.08.i384 = select i1 %.not27.i383, float %1562, float %1561, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !45

1563:                                             ; preds = %__nv_isinff.exit.i.i.i342
  %1564 = lshr i32 %87, 23, !dbg !45
  %1565 = and i32 %1564, 224, !dbg !45
  %1566 = add nsw i32 %1565, -128, !dbg !45
  %1567 = shl i32 %87, 8, !dbg !45
  %1568 = or i32 %1567, -2147483648, !dbg !45
  %1569 = lshr exact i32 %1566, 5, !dbg !45
  br label %1570, !dbg !45

1570:                                             ; preds = %1563, %1570
  %indvars.iv943 = phi i64 [ 0, %1563 ], [ %indvars.iv.next944, %1570 ]
  %hi.i.i.i.0.i345868 = phi i32 [ 0, %1563 ], [ %1575, %1570 ]
  %1571 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv943, !dbg !45
  %1572 = load i32, ptr addrspace(1) %1571, align 4, !dbg !45
  %1573 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1572, i32 %1568, i32 %hi.i.i.i.0.i345868) #5, !dbg !45, !srcloc !24
  %1574 = extractvalue { i32, i32 } %1573, 0, !dbg !45
  %1575 = extractvalue { i32, i32 } %1573, 1, !dbg !45
  %1576 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %indvars.iv943, !dbg !45
  store i32 %1574, ptr %1576, align 4, !dbg !45
  %indvars.iv.next944 = add nuw nsw i64 %indvars.iv943, 1, !dbg !45
  %exitcond945.not = icmp eq i64 %indvars.iv.next944, 6, !dbg !45
  br i1 %exitcond945.not, label %1577, label %1570, !dbg !45, !llvm.loop !53

1577:                                             ; preds = %1570
  %1578 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i331, i64 24, !dbg !45
  store i32 %1575, ptr %1578, align 4, !dbg !45
  %1579 = sub nsw i32 6, %1569, !dbg !45
  %1580 = sext i32 %1579 to i64, !dbg !45
  %1581 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1580, !dbg !45
  %1582 = load i32, ptr %1581, align 4, !dbg !45
  %1583 = sub nsw i32 5, %1569, !dbg !45
  %1584 = sext i32 %1583 to i64, !dbg !45
  %1585 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1584, !dbg !45
  %1586 = load i32, ptr %1585, align 4, !dbg !45
  %1587 = freeze i32 %1586, !dbg !45
  %1588 = and i32 %87, 260046848, !dbg !45
  %.not20.i347 = icmp eq i32 %1588, 0, !dbg !45
  br i1 %.not20.i347, label %__internal_trig_reduction_slowpath.exit.i.i.i348, label %1589, !dbg !45

1589:                                             ; preds = %1577
  %1590 = sub nsw i32 4, %1569, !dbg !45
  %1591 = sext i32 %1590 to i64, !dbg !45
  %1592 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1591, !dbg !45
  %1593 = load i32, ptr %1592, align 4, !dbg !45
  %1594 = tail call i32 @llvm.fshl.i32(i32 %1587, i32 %1593, i32 %1564), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i348, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i348: ; preds = %1589, %1577
  %lo.i.i.i.0.i350 = phi i32 [ %1594, %1589 ], [ %1587, %1577 ], !dbg !45
  %1595 = tail call i32 @llvm.fshl.i32(i32 %1582, i32 %1587, i32 %1564), !dbg !45
  %1596 = lshr i32 %1595, 30, !dbg !45
  %1597 = tail call i32 @llvm.fshl.i32(i32 %1595, i32 %lo.i.i.i.0.i350, i32 2), !dbg !45
  %1598 = shl i32 %lo.i.i.i.0.i350, 2, !dbg !45
  %1599 = lshr i32 %1597, 31, !dbg !45
  %1600 = add nuw nsw i32 %1599, %1596, !dbg !45
  %1601 = sub nsw i32 0, %1600, !dbg !45
  %.not2123.i351 = icmp slt i32 %87, 0, !dbg !45
  %spec.select.i352 = select i1 %.not2123.i351, i32 %1601, i32 %1600, !dbg !45
  %1602 = xor i32 %1597, %87, !dbg !45
  %.lobit.i353 = ashr i32 %1597, 31, !dbg !45
  %hi.i.i.i.2.i354 = xor i32 %.lobit.i353, %1597, !dbg !45
  %lo.i.i.i.1.i356 = xor i32 %.lobit.i353, %1598, !dbg !45
  %1603 = zext i32 %hi.i.i.i.2.i354 to i64, !dbg !45
  %1604 = shl nuw i64 %1603, 32, !dbg !45
  %1605 = zext i32 %lo.i.i.i.1.i356 to i64, !dbg !45
  %1606 = or disjoint i64 %1604, %1605, !dbg !45
  %1607 = sitofp i64 %1606 to double, !dbg !45
  %1608 = fmul double %1607, 0x3BF921FB54442D19, !dbg !45
  %1609 = fptrunc double %1608 to float, !dbg !45
  %1610 = fneg float %1609, !dbg !45
  %.not2526.i357 = icmp slt i32 %1602, 0, !dbg !45
  %r.i.i.i.0.i358 = select i1 %.not2526.i357, float %1610, float %1609, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !45

__internal_trig_reduction_kernel.exit.i.i359:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i348, %__nv_fmul_rn.exit.i.i.i382, %__nv_sinf.exit330
  %i.i.1.i360 = phi i32 [ %.01.i333, %__nv_sinf.exit330 ], [ 0, %__nv_fmul_rn.exit.i.i.i382 ], [ %spec.select.i352, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !45
  %t.i.i.1.i361 = phi float [ %.04.i339, %__nv_sinf.exit330 ], [ %.08.i384, %__nv_fmul_rn.exit.i.i.i382 ], [ %r.i.i.i.0.i358, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !45
  %1611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i362 = icmp eq i32 %1611, 0, !dbg !45
  %1612 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #4, !dbg !45
  %1613 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #4, !dbg !45
  %.011.i363 = select i1 %.not28.i362, float %1613, float %1612, !dbg !45
  %1614 = and i32 %i.i.1.i360, 1, !dbg !45
  %.not29.i364 = icmp eq i32 %1614, 0, !dbg !45
  %1615 = select i1 %.not29.i364, float %t.i.i.1.i361, float 1.000000e+00, !dbg !45
  %1616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i365 = icmp eq i32 %1616, 0, !dbg !45
  %1617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i363, float %1615, float 0.000000e+00) #4, !dbg !45
  %1618 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i363, float %1615, float 0.000000e+00) #4, !dbg !45
  %.012.i366 = select i1 %.not30.i365, float %1618, float %1617, !dbg !45
  br i1 %.not29.i364, label %__internal_fmad.exit2.i.i.i370, label %__internal_fmad.exit1.i.i.i367, !dbg !45

__internal_fmad.exit1.i.i.i367:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i359
  %1619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i368 = icmp eq i32 %1619, 0, !dbg !45
  %1620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #4, !dbg !45
  %1621 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i369 = select i1 %.not31.i368, float %1621, float %1620, !dbg !45
  br label %__internal_fmad.exit2.i.i.i370, !dbg !45

__internal_fmad.exit2.i.i.i370:                   ; preds = %__internal_fmad.exit1.i.i.i367, %__internal_trig_reduction_kernel.exit.i.i359
  %1622 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i367 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !45
  %1623 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i367 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !45
  %1624 = phi float [ %.013.i369, %__internal_fmad.exit1.i.i.i367 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !45
  %1625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i371 = icmp eq i32 %1625, 0, !dbg !45
  %1626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1624, float %.011.i363, float %1623) #4, !dbg !45
  %1627 = tail call float @llvm.nvvm.fma.rn.f(float %1624, float %.011.i363, float %1623) #4, !dbg !45
  %.010.i372 = select i1 %.not32.i371, float %1627, float %1626, !dbg !45
  %1628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i373 = icmp eq i32 %1628, 0, !dbg !45
  %1629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i372, float %.011.i363, float %1622) #4, !dbg !45
  %1630 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i372, float %.011.i363, float %1622) #4, !dbg !45
  %.09.i374 = select i1 %.not33.i373, float %1630, float %1629, !dbg !45
  %1631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i375 = icmp eq i32 %1631, 0, !dbg !45
  %1632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i374, float %.012.i366, float %1615) #4, !dbg !45
  %1633 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i374, float %.012.i366, float %1615) #4, !dbg !45
  %.05.i376 = select i1 %.not34.i375, float %1633, float %1632, !dbg !45
  %1634 = and i32 %i.i.1.i360, 2, !dbg !45
  %.not35.i377 = icmp eq i32 %1634, 0, !dbg !45
  br i1 %.not35.i377, label %__nv_sinf.exit385, label %__internal_fmad.exit5.i.i.i378, !dbg !45

__internal_fmad.exit5.i.i.i378:                   ; preds = %__internal_fmad.exit2.i.i.i370
  %1635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i379 = icmp eq i32 %1635, 0, !dbg !45
  %1636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %1637 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i380 = select i1 %.not36.i379, float %1637, float %1636, !dbg !45
  br label %__nv_sinf.exit385, !dbg !45

__nv_sinf.exit385:                                ; preds = %__internal_fmad.exit2.i.i.i370, %__internal_fmad.exit5.i.i.i378
  %z.i.i.0.i381 = phi float [ %.0.i380, %__internal_fmad.exit5.i.i.i378 ], [ %.05.i376, %__internal_fmad.exit2.i.i.i370 ], !dbg !45
  %1638 = extractvalue { i32, i32, i32, i32 } %887, 3, !dbg !39
  %1639 = bitcast i32 %1638 to <2 x half>, !dbg !39
  %1640 = extractvalue { i32, i32, i32, i32 } %893, 3, !dbg !44
  %1641 = bitcast i32 %1640 to <2 x half>, !dbg !44
  %1642 = extractvalue { i32, i32, i32, i32 } %887, 2, !dbg !39
  %1643 = bitcast i32 %1642 to <2 x half>, !dbg !39
  %1644 = extractvalue { i32, i32, i32, i32 } %893, 2, !dbg !44
  %1645 = bitcast i32 %1644 to <2 x half>, !dbg !44
  %1646 = extractvalue { i32, i32, i32, i32 } %887, 1, !dbg !39
  %1647 = bitcast i32 %1646 to <2 x half>, !dbg !39
  %1648 = extractvalue { i32, i32, i32, i32 } %893, 1, !dbg !44
  %1649 = bitcast i32 %1648 to <2 x half>, !dbg !44
  %1650 = extractvalue { i32, i32, i32, i32 } %887, 0, !dbg !39
  %1651 = bitcast i32 %1650 to <2 x half>, !dbg !39
  %1652 = extractvalue { i32, i32, i32, i32 } %893, 0, !dbg !44
  %1653 = bitcast i32 %1652 to <2 x half>, !dbg !44
  %1654 = extractvalue { i32, i32, i32, i32 } %32, 3, !dbg !17
  %1655 = bitcast i32 %1654 to <2 x half>, !dbg !17
  %1656 = extractvalue { i32, i32, i32, i32 } %32, 2, !dbg !17
  %1657 = bitcast i32 %1656 to <2 x half>, !dbg !17
  %1658 = extractvalue { i32, i32, i32, i32 } %32, 1, !dbg !17
  %1659 = bitcast i32 %1658 to <2 x half>, !dbg !17
  %1660 = extractvalue { i32, i32, i32, i32 } %32, 0, !dbg !17
  %1661 = bitcast i32 %1660 to <2 x half>, !dbg !17
  %1662 = srem i32 %20, 32, !dbg !54
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !45
  %1663 = mul i32 %1662, %3, !dbg !55
  %reass.add = add i32 %1663, %29
  %reass.mul = shl i32 %reass.add, 7
  %1664 = add i32 %reass.mul, %.decomposed, !dbg !56
  %1665 = sext i32 %1664 to i64, !dbg !57
  %1666 = getelementptr half, ptr addrspace(1) %2, i64 %1665, !dbg !57
  %1667 = fpext <2 x half> %1651 to <2 x float>, !dbg !58
  %1668 = fsub <2 x float> zeroinitializer, %1667, !dbg !59
  %1669 = fpext <2 x half> %1653 to <2 x float>, !dbg !60
  %1670 = insertelement <2 x i1> poison, i1 %881, i64 0, !dbg !61
  %1671 = shufflevector <2 x i1> %1670, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !61
  %1672 = select <2 x i1> %1671, <2 x float> %1668, <2 x float> %1669, !dbg !61
  %1673 = fpext <2 x half> %1661 to <2 x float>, !dbg !62
  %1674 = insertelement <2 x float> poison, float %z.i.i.0.i432, i64 0, !dbg !63
  %1675 = insertelement <2 x float> %1674, float %z.i.i.0.i486, i64 1, !dbg !63
  %1676 = fmul <2 x float> %1675, %1673, !dbg !63
  %1677 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !64
  %1678 = insertelement <2 x float> %1677, float %z.i.i.0.i51, i64 1, !dbg !64
  %1679 = fmul <2 x float> %1672, %1678, !dbg !64
  %1680 = fadd <2 x float> %1676, %1679, !dbg !65
  %1681 = fptrunc <2 x float> %1680 to <2 x half>, !dbg !66
  %1682 = fpext <2 x half> %1647 to <2 x float>, !dbg !58
  %1683 = fsub <2 x float> zeroinitializer, %1682, !dbg !59
  %1684 = fpext <2 x half> %1649 to <2 x float>, !dbg !60
  %1685 = select <2 x i1> %1671, <2 x float> %1683, <2 x float> %1684, !dbg !61
  %1686 = fpext <2 x half> %1659 to <2 x float>, !dbg !62
  %1687 = insertelement <2 x float> poison, float %z.i.i.0.i541, i64 0, !dbg !63
  %1688 = insertelement <2 x float> %1687, float %z.i.i.0.i596, i64 1, !dbg !63
  %1689 = fmul <2 x float> %1688, %1686, !dbg !63
  %1690 = insertelement <2 x float> poison, float %z.i.i.0.i106, i64 0, !dbg !64
  %1691 = insertelement <2 x float> %1690, float %z.i.i.0.i161, i64 1, !dbg !64
  %1692 = fmul <2 x float> %1685, %1691, !dbg !64
  %1693 = fadd <2 x float> %1689, %1692, !dbg !65
  %1694 = fptrunc <2 x float> %1693 to <2 x half>, !dbg !66
  %1695 = fpext <2 x half> %1643 to <2 x float>, !dbg !58
  %1696 = fsub <2 x float> zeroinitializer, %1695, !dbg !59
  %1697 = fpext <2 x half> %1645 to <2 x float>, !dbg !60
  %1698 = select <2 x i1> %1671, <2 x float> %1696, <2 x float> %1697, !dbg !61
  %1699 = fpext <2 x half> %1657 to <2 x float>, !dbg !62
  %1700 = insertelement <2 x float> poison, float %z.i.i.0.i651, i64 0, !dbg !63
  %1701 = insertelement <2 x float> %1700, float %z.i.i.0.i706, i64 1, !dbg !63
  %1702 = fmul <2 x float> %1701, %1699, !dbg !63
  %1703 = insertelement <2 x float> poison, float %z.i.i.0.i216, i64 0, !dbg !64
  %1704 = insertelement <2 x float> %1703, float %z.i.i.0.i271, i64 1, !dbg !64
  %1705 = fmul <2 x float> %1698, %1704, !dbg !64
  %1706 = fadd <2 x float> %1702, %1705, !dbg !65
  %1707 = fptrunc <2 x float> %1706 to <2 x half>, !dbg !66
  %1708 = fpext <2 x half> %1639 to <2 x float>, !dbg !58
  %1709 = fsub <2 x float> zeroinitializer, %1708, !dbg !59
  %1710 = fpext <2 x half> %1641 to <2 x float>, !dbg !60
  %1711 = select <2 x i1> %1671, <2 x float> %1709, <2 x float> %1710, !dbg !61
  %1712 = fpext <2 x half> %1655 to <2 x float>, !dbg !62
  %1713 = insertelement <2 x float> poison, float %z.i.i.0.i761, i64 0, !dbg !63
  %1714 = insertelement <2 x float> %1713, float %z.i.i.0.i816, i64 1, !dbg !63
  %1715 = fmul <2 x float> %1714, %1712, !dbg !63
  %1716 = insertelement <2 x float> poison, float %z.i.i.0.i326, i64 0, !dbg !64
  %1717 = insertelement <2 x float> %1716, float %z.i.i.0.i381, i64 1, !dbg !64
  %1718 = fmul <2 x float> %1711, %1717, !dbg !64
  %1719 = fadd <2 x float> %1715, %1718, !dbg !65
  %1720 = fptrunc <2 x float> %1719 to <2 x half>, !dbg !66
  %1721 = bitcast <2 x half> %1681 to i32, !dbg !66
  %1722 = bitcast <2 x half> %1694 to i32, !dbg !66
  %1723 = bitcast <2 x half> %1707 to i32, !dbg !66
  %1724 = bitcast <2 x half> %1720 to i32, !dbg !66
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %1721, i32 %1722, i32 %1723, i32 %1724, ptr addrspace(1) %1666) #4, !dbg !66
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cx4jrcr7srhfpegblhxm3eej7eho6mlukfwcvg7yliegbq5shesd.py", directory: "./local_cache/x4")
!4 = !{ptr @triton_poi_fused_add_cat_clone_mul_4, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_clone_mul_4", linkageName: "triton_poi_fused_add_cat_clone_mul_4", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 25, column: 19, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 24, column: 19, scope: !6)
!16 = !DILocation(line: 27, column: 30, scope: !6)
!17 = !DILocation(line: 27, column: 35, scope: !6)
!18 = !DILocation(line: 28, column: 46, scope: !6)
!19 = !DILocation(line: 28, column: 41, scope: !6)
!20 = !DILocation(line: 28, column: 35, scope: !6)
!21 = !DILocation(line: 28, column: 30, scope: !6)
!22 = !DILocation(line: 28, column: 53, scope: !6)
!23 = !DILocation(line: 29, column: 23, scope: !6)
!24 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.count", i32 1}
!27 = distinct !{!27, !26}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !26}
!30 = distinct !{!30, !26}
!31 = distinct !{!31, !26}
!32 = distinct !{!32, !26}
!33 = distinct !{!33, !26}
!34 = !DILocation(line: 38, column: 19, scope: !6)
!35 = !DILocation(line: 39, column: 40, scope: !6)
!36 = !DILocation(line: 39, column: 36, scope: !6)
!37 = !DILocation(line: 39, column: 46, scope: !6)
!38 = !DILocation(line: 39, column: 31, scope: !6)
!39 = !DILocation(line: 39, column: 52, scope: !6)
!40 = !DILocation(line: 43, column: 20, scope: !6)
!41 = !DILocation(line: 46, column: 49, scope: !6)
!42 = !DILocation(line: 46, column: 41, scope: !6)
!43 = !DILocation(line: 46, column: 31, scope: !6)
!44 = !DILocation(line: 46, column: 55, scope: !6)
!45 = !DILocation(line: 48, column: 24, scope: !6)
!46 = distinct !{!46, !26}
!47 = distinct !{!47, !26}
!48 = distinct !{!48, !26}
!49 = distinct !{!49, !26}
!50 = distinct !{!50, !26}
!51 = distinct !{!51, !26}
!52 = distinct !{!52, !26}
!53 = distinct !{!53, !26}
!54 = !DILocation(line: 26, column: 28, scope: !6)
!55 = !DILocation(line: 53, column: 47, scope: !6)
!56 = !DILocation(line: 53, column: 39, scope: !6)
!57 = !DILocation(line: 53, column: 25, scope: !6)
!58 = !DILocation(line: 39, column: 103, scope: !6)
!59 = !DILocation(line: 40, column: 13, scope: !6)
!60 = !DILocation(line: 46, column: 106, scope: !6)
!61 = !DILocation(line: 0, scope: !6)
!62 = !DILocation(line: 27, column: 44, scope: !6)
!63 = !DILocation(line: 33, column: 18, scope: !6)
!64 = !DILocation(line: 51, column: 20, scope: !6)
!65 = !DILocation(line: 52, column: 19, scope: !6)
!66 = !DILocation(line: 53, column: 59, scope: !6)
!67 = !DILocation(line: 53, column: 4, scope: !6)
