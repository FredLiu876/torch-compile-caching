#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 4], order = [0, 1]}>
#loc = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0)
#loc1 = loc(unknown)
#loc26 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":45:25)
#loc33 = loc(callsite(#loc1 at #loc26))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__to_copy_mul_sum_1(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0), %arg5: i32 loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64x4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64x4xf16, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x4xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x4xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<64x1xi32, #blocked> loc(#loc5)
    %6 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc6)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<4xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc6)
    %8 = tt.splat %arg5 : i32 -> tensor<1x4xi32, #blocked> loc(#loc7)
    %9 = tt.broadcast %5 : tensor<64x1xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc8)
    %10 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc9)
    %11 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc10)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = scf.for %arg6 = %c0_i32 to %arg5 step %c4_i32 iter_args(%arg7 = %cst) -> (tensor<64x4xf32, #blocked>)  : i32 {
      %19 = tt.splat %arg6 : i32 -> tensor<1x4xi32, #blocked> loc(#loc13)
      %20 = arith.addi %19, %7 : tensor<1x4xi32, #blocked> loc(#loc13)
      %21 = arith.cmpi slt, %20, %8 : tensor<1x4xi32, #blocked> loc(#loc7)
      %22 = arith.muli %20, %cst_2 : tensor<1x4xi32, #blocked> loc(#loc14)
      %23 = tt.broadcast %22 : tensor<1x4xi32, #blocked> -> tensor<64x4xi32, #blocked> loc(#loc8)
      %24 = arith.addi %9, %23 : tensor<64x4xi32, #blocked> loc(#loc8)
      %25 = tt.addptr %10, %24 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc9)
      %26 = tt.broadcast %21 : tensor<1x4xi1, #blocked> -> tensor<64x4xi1, #blocked> loc(#loc15)
      %27 = tt.load %25, %26, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc15)
      %28 = arith.extf %27 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc16)
      %29 = tt.addptr %11, %24 : tensor<64x4x!tt.ptr<f16>, #blocked>, tensor<64x4xi32, #blocked> loc(#loc10)
      %30 = tt.load %29, %26, %cst_0 evictionPolicy = evict_first : tensor<64x4x!tt.ptr<f16>, #blocked> loc(#loc17)
      %31 = arith.extf %30 : tensor<64x4xf16, #blocked> to tensor<64x4xf32, #blocked> loc(#loc18)
      %32 = tt.addptr %12, %20 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc11)
      %33 = tt.load %32, %21, %cst_1 evictionPolicy = evict_last : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc19)
      %34 = tt.broadcast %33 : tensor<1x4xf32, #blocked> -> tensor<64x4xf32, #blocked> loc(#loc20)
      %35 = arith.mulf %31, %34 : tensor<64x4xf32, #blocked> loc(#loc20)
      %36 = arith.mulf %28, %35 : tensor<64x4xf32, #blocked> loc(#loc21)
      %37 = arith.addf %arg7, %36 : tensor<64x4xf32, #blocked> loc(#loc22)
      %38 = arith.select %26, %37, %arg7 : tensor<64x4xi1, #blocked>, tensor<64x4xf32, #blocked> loc(#loc23)
      scf.yield %38 : tensor<64x4xf32, #blocked> loc(#loc24)
    } loc(#loc12)
    %14 = "tt.reduce"(%13) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc26)), %arg7: f32 loc(callsite(#loc1 at #loc26))):
      %19 = arith.addf %arg6, %arg7 : f32 loc(#loc35)
      tt.reduce.return %19 : f32 loc(#loc32)
    }) : (tensor<64x4xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc32)
    %15 = tt.expand_dims %14 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc28)
    %16 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<64x1x!tt.ptr<f16>, #blocked> loc(#loc29)
    %17 = tt.addptr %16, %5 : tensor<64x1x!tt.ptr<f16>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc29)
    %18 = arith.truncf %15 : tensor<64x1xf32, #blocked> to tensor<64x1xf16, #blocked> loc(#loc30)
    tt.store %17, %18 : tensor<64x1x!tt.ptr<f16>, #blocked> loc(#loc30)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":22:28)
#loc3 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":22:33)
#loc4 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":23:44)
#loc5 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":23:23)
#loc6 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":25:37)
#loc7 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":31:29)
#loc8 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:39)
#loc9 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:34)
#loc10 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":36:34)
#loc11 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":37:34)
#loc12 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":29:40)
#loc13 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":30:31)
#loc14 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:44)
#loc15 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:51)
#loc16 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":35:105)
#loc17 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":36:51)
#loc18 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":36:105)
#loc19 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":37:41)
#loc20 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":39:22)
#loc21 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":41:22)
#loc22 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":43:23)
#loc23 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":44:40)
#loc24 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":44:8)
#loc25 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":286:36)
#loc27 = loc("/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":45:28)
#loc29 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":46:25)
#loc30 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":46:36)
#loc31 = loc("/tmp/torchinductor_root/dp/cdpmdjxtn76eoilzzn3auquxblbphkbtjfl7kawk25qsvgvr45be.py":46:4)
#loc32 = loc(callsite(#loc25 at #loc26))
#loc34 = loc(callsite(#loc27 at #loc25))
#loc35 = loc(callsite(#loc34 at #loc26))
