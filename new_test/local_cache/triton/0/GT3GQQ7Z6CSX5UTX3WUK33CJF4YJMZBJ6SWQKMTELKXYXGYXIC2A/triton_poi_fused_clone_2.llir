; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_clone_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i329 = alloca [7 x i32], align 4
  %result.i.i.i.i274 = alloca [7 x i32], align 4
  %result.i.i.i.i219 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 9, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = shl i32 %10, 2, !dbg !11
  %12 = and i32 %11, 508, !dbg !11
  %13 = or disjoint i32 %12, %9, !dbg !12
  %14 = or disjoint i32 %13, 1, !dbg !12
  %15 = or disjoint i32 %13, 2, !dbg !12
  %16 = or disjoint i32 %13, 3, !dbg !12
  %17 = sdiv i32 %13, 128, !dbg !13
  %18 = mul i32 %17, 128, !dbg !14
  %.decomposed = sub i32 %13, %18, !dbg !14
  %19 = srem i32 %14, 128, !dbg !14
  %20 = srem i32 %15, 128, !dbg !14
  %21 = srem i32 %16, 128, !dbg !14
  %22 = srem i32 %17, %3, !dbg !15
  %23 = sdiv i32 %13, %4, !dbg !16
  %24 = shl i32 %23, 7, !dbg !17
  %25 = shl i32 %22, 10, !dbg !18
  %26 = add i32 %25, %.decomposed, !dbg !19
  %27 = add i32 %26, %24, !dbg !20
  %28 = sext i32 %27 to i64, !dbg !21
  %29 = getelementptr half, ptr addrspace(1) %0, i64 %28, !dbg !21
  %30 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l"(ptr addrspace(1) %29) #4, !dbg !22
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !23
  %31 = srem i8 %.lhs.trunc, 64, !dbg !23
  %.sext = sext i8 %31 to i32, !dbg !23
  %.lhs.trunc384 = trunc nsw i32 %19 to i8, !dbg !23
  %32 = srem i8 %.lhs.trunc384, 64, !dbg !23
  %.sext385 = sext i8 %32 to i32, !dbg !23
  %.lhs.trunc386 = trunc nsw i32 %20 to i8, !dbg !23
  %33 = srem i8 %.lhs.trunc386, 64, !dbg !23
  %.sext387 = sext i8 %33 to i32, !dbg !23
  %.lhs.trunc388 = trunc nsw i32 %21 to i8, !dbg !23
  %34 = srem i8 %.lhs.trunc388, 64, !dbg !23
  %.sext389 = sext i8 %34 to i32, !dbg !23
  %35 = mul i32 %3, %.sext, !dbg !24
  %36 = mul i32 %3, %.sext385, !dbg !24
  %37 = mul i32 %3, %.sext387, !dbg !24
  %38 = mul i32 %3, %.sext389, !dbg !24
  %39 = add i32 %22, %35, !dbg !25
  %40 = add i32 %22, %36, !dbg !25
  %41 = add i32 %22, %37, !dbg !25
  %42 = add i32 %22, %38, !dbg !25
  %43 = sext i32 %39 to i64, !dbg !26
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !26
  %45 = sext i32 %40 to i64, !dbg !26
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !26
  %47 = sext i32 %41 to i64, !dbg !26
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !26
  %49 = sext i32 %42 to i64, !dbg !26
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !26
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %44) #4, !dbg !27
  %52 = bitcast i32 %51 to float, !dbg !27
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %46) #4, !dbg !27
  %54 = bitcast i32 %53 to float, !dbg !27
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %48) #4, !dbg !27
  %56 = bitcast i32 %55 to float, !dbg !27
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %50) #4, !dbg !27
  %58 = bitcast i32 %57 to float, !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !28
  %59 = fmul float %52, 0x3FE45F3060000000, !dbg !28
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i167 = icmp eq i32 %60, 0, !dbg !28
  %61 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %59) #4, !dbg !28
  %62 = tail call i32 @llvm.nvvm.f2i.rn(float %59) #4, !dbg !28
  %.01.i168 = select i1 %.not.i167, i32 %62, i32 %61, !dbg !28
  %63 = sitofp i32 %.01.i168 to float, !dbg !28
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i169 = icmp eq i32 %64, 0, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float 0xBFF921FB40000000, float %52) #4, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %63, float 0xBFF921FB40000000, float %52) #4, !dbg !28
  %.02.i170 = select i1 %.not15.i169, float %66, float %65, !dbg !28
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i171 = icmp eq i32 %67, 0, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !28
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %63, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !28
  %.03.i172 = select i1 %.not16.i171, float %69, float %68, !dbg !28
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i173 = icmp eq i32 %70, 0, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %63, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !28
  %.04.i174 = select i1 %.not17.i173, float %72, float %71, !dbg !28
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i175 = icmp eq i32 %73, 0, !dbg !28
  %74 = tail call float @llvm.nvvm.fabs.ftz.f(float %52) #4, !dbg !28
  %75 = tail call float @llvm.nvvm.fabs.f(float %52) #4, !dbg !28
  %.06.i176 = select i1 %.not18.i175, float %75, float %74, !dbg !28
  %76 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !28
  br i1 %76, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !28

__nv_isinff.exit.i.i.i177:                        ; preds = %7
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i178 = icmp eq i32 %77, 0, !dbg !28
  %.07.i179 = select i1 %.not19.i178, float %75, float %74, !dbg !28
  %78 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !28
  br i1 %78, label %__nv_fmul_rn.exit.i.i.i216, label %82, !dbg !28

__nv_fmul_rn.exit.i.i.i216:                       ; preds = %__nv_isinff.exit.i.i.i177
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i217 = icmp eq i32 %79, 0, !dbg !28
  %80 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %52, float 0.000000e+00) #4, !dbg !28
  %81 = tail call float @llvm.nvvm.mul.rn.f(float %52, float 0.000000e+00) #4, !dbg !28
  %.08.i218 = select i1 %.not27.i217, float %81, float %80, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !28

82:                                               ; preds = %__nv_isinff.exit.i.i.i177
  %83 = lshr i32 %51, 23, !dbg !28
  %84 = and i32 %83, 224, !dbg !28
  %85 = add nsw i32 %84, -128, !dbg !28
  %86 = shl i32 %51, 8, !dbg !28
  %87 = or i32 %86, -2147483648, !dbg !28
  %88 = lshr exact i32 %85, 5, !dbg !28
  br label %89, !dbg !28

89:                                               ; preds = %82, %89
  %indvars.iv = phi i64 [ 0, %82 ], [ %indvars.iv.next, %89 ]
  %hi.i.i.i.0.i180390 = phi i32 [ 0, %82 ], [ %94, %89 ]
  %90 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !28
  %91 = load i32, ptr addrspace(1) %90, align 4, !dbg !28
  %92 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %91, i32 %87, i32 %hi.i.i.i.0.i180390) #5, !dbg !28, !srcloc !29
  %93 = extractvalue { i32, i32 } %92, 0, !dbg !28
  %94 = extractvalue { i32, i32 } %92, 1, !dbg !28
  %95 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv, !dbg !28
  store i32 %93, ptr %95, align 4, !dbg !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !28
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !28
  br i1 %exitcond.not, label %96, label %89, !dbg !28, !llvm.loop !30

96:                                               ; preds = %89
  %97 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i166, i64 24, !dbg !28
  store i32 %94, ptr %97, align 4, !dbg !28
  %98 = sub nsw i32 6, %88, !dbg !28
  %99 = sext i32 %98 to i64, !dbg !28
  %100 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %99, !dbg !28
  %101 = load i32, ptr %100, align 4, !dbg !28
  %102 = sub nsw i32 5, %88, !dbg !28
  %103 = sext i32 %102 to i64, !dbg !28
  %104 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %103, !dbg !28
  %105 = load i32, ptr %104, align 4, !dbg !28
  %106 = freeze i32 %105, !dbg !28
  %107 = and i32 %51, 260046848, !dbg !28
  %.not20.i182 = icmp eq i32 %107, 0, !dbg !28
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %108, !dbg !28

108:                                              ; preds = %96
  %109 = sub nsw i32 4, %88, !dbg !28
  %110 = sext i32 %109 to i64, !dbg !28
  %111 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %110, !dbg !28
  %112 = load i32, ptr %111, align 4, !dbg !28
  %113 = tail call i32 @llvm.fshl.i32(i32 %106, i32 %112, i32 %83), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %108, %96
  %lo.i.i.i.0.i185 = phi i32 [ %113, %108 ], [ %106, %96 ], !dbg !28
  %114 = tail call i32 @llvm.fshl.i32(i32 %101, i32 %106, i32 %83), !dbg !28
  %115 = lshr i32 %114, 30, !dbg !28
  %116 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %lo.i.i.i.0.i185, i32 2), !dbg !28
  %117 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !28
  %118 = lshr i32 %116, 31, !dbg !28
  %119 = add nuw nsw i32 %118, %115, !dbg !28
  %120 = sub nsw i32 0, %119, !dbg !28
  %.not2123.i186 = icmp slt i32 %51, 0, !dbg !28
  %spec.select.i187 = select i1 %.not2123.i186, i32 %120, i32 %119, !dbg !28
  %121 = xor i32 %116, %51, !dbg !28
  %.lobit.i188 = ashr i32 %116, 31, !dbg !28
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %116, !dbg !28
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %117, !dbg !28
  %122 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !28
  %123 = shl nuw i64 %122, 32, !dbg !28
  %124 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !28
  %125 = or disjoint i64 %123, %124, !dbg !28
  %126 = sitofp i64 %125 to double, !dbg !28
  %127 = fmul double %126, 0x3BF921FB54442D19, !dbg !28
  %128 = fptrunc double %127 to float, !dbg !28
  %129 = fneg float %128, !dbg !28
  %.not2526.i192 = icmp slt i32 %121, 0, !dbg !28
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %129, float %128, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !28

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i216, %7
  %i.i.1.i195 = phi i32 [ %.01.i168, %7 ], [ 0, %__nv_fmul_rn.exit.i.i.i216 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !28
  %t.i.i.1.i196 = phi float [ %.04.i174, %7 ], [ %.08.i218, %__nv_fmul_rn.exit.i.i.i216 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !28
  %130 = add i32 %i.i.1.i195, 1, !dbg !28
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i197 = icmp eq i32 %131, 0, !dbg !28
  %132 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !28
  %133 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !28
  %.011.i198 = select i1 %.not28.i197, float %133, float %132, !dbg !28
  %134 = and i32 %i.i.1.i195, 1, !dbg !28
  %.not29.not.i = icmp eq i32 %134, 0, !dbg !28
  %135 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i196, !dbg !28
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i199 = icmp eq i32 %136, 0, !dbg !28
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %135, float 0.000000e+00) #4, !dbg !28
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %135, float 0.000000e+00) #4, !dbg !28
  %.012.i200 = select i1 %.not30.i199, float %138, float %137, !dbg !28
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i213, label %__internal_fmad.exit2.i.i.i201, !dbg !28

__internal_fmad.exit1.i.i.i213:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i214 = icmp eq i32 %139, 0, !dbg !28
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !28
  %141 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i215 = select i1 %.not31.i214, float %141, float %140, !dbg !28
  br label %__internal_fmad.exit2.i.i.i201, !dbg !28

__internal_fmad.exit2.i.i.i201:                   ; preds = %__internal_fmad.exit1.i.i.i213, %__internal_trig_reduction_kernel.exit.i.i194
  %142 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i213 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !28
  %143 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i213 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !28
  %144 = phi float [ %.013.i215, %__internal_fmad.exit1.i.i.i213 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !28
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i202 = icmp eq i32 %145, 0, !dbg !28
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float %.011.i198, float %143) #4, !dbg !28
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %144, float %.011.i198, float %143) #4, !dbg !28
  %.010.i203 = select i1 %.not32.i202, float %147, float %146, !dbg !28
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i204 = icmp eq i32 %148, 0, !dbg !28
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i203, float %.011.i198, float %142) #4, !dbg !28
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i203, float %.011.i198, float %142) #4, !dbg !28
  %.09.i205 = select i1 %.not33.i204, float %150, float %149, !dbg !28
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i206 = icmp eq i32 %151, 0, !dbg !28
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i205, float %.012.i200, float %135) #4, !dbg !28
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i205, float %.012.i200, float %135) #4, !dbg !28
  %.05.i207 = select i1 %.not34.i206, float %153, float %152, !dbg !28
  %154 = and i32 %130, 2, !dbg !28
  %.not35.i208 = icmp eq i32 %154, 0, !dbg !28
  br i1 %.not35.i208, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i209, !dbg !28

__internal_fmad.exit5.i.i.i209:                   ; preds = %__internal_fmad.exit2.i.i.i201
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i210 = icmp eq i32 %155, 0, !dbg !28
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i207, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i207, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i211 = select i1 %.not36.i210, float %157, float %156, !dbg !28
  br label %__nv_cosf.exit, !dbg !28

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i201, %__internal_fmad.exit5.i.i.i209
  %z.i.i.0.i212 = phi float [ %.0.i211, %__internal_fmad.exit5.i.i.i209 ], [ %.05.i207, %__internal_fmad.exit2.i.i.i201 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i219), !dbg !28
  %158 = fmul float %54, 0x3FE45F3060000000, !dbg !28
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i220 = icmp eq i32 %159, 0, !dbg !28
  %160 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %158) #4, !dbg !28
  %161 = tail call i32 @llvm.nvvm.f2i.rn(float %158) #4, !dbg !28
  %.01.i221 = select i1 %.not.i220, i32 %161, i32 %160, !dbg !28
  %162 = sitofp i32 %.01.i221 to float, !dbg !28
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i222 = icmp eq i32 %163, 0, !dbg !28
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0xBFF921FB40000000, float %54) #4, !dbg !28
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0xBFF921FB40000000, float %54) #4, !dbg !28
  %.02.i223 = select i1 %.not15.i222, float %165, float %164, !dbg !28
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i224 = icmp eq i32 %166, 0, !dbg !28
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0xBE74442D00000000, float %.02.i223) #4, !dbg !28
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0xBE74442D00000000, float %.02.i223) #4, !dbg !28
  %.03.i225 = select i1 %.not16.i224, float %168, float %167, !dbg !28
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i226 = icmp eq i32 %169, 0, !dbg !28
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0xBCF84698A0000000, float %.03.i225) #4, !dbg !28
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0xBCF84698A0000000, float %.03.i225) #4, !dbg !28
  %.04.i227 = select i1 %.not17.i226, float %171, float %170, !dbg !28
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i228 = icmp eq i32 %172, 0, !dbg !28
  %173 = tail call float @llvm.nvvm.fabs.ftz.f(float %54) #4, !dbg !28
  %174 = tail call float @llvm.nvvm.fabs.f(float %54) #4, !dbg !28
  %.06.i229 = select i1 %.not18.i228, float %174, float %173, !dbg !28
  %175 = fcmp ult float %.06.i229, 1.056150e+05, !dbg !28
  br i1 %175, label %__internal_trig_reduction_kernel.exit.i.i247, label %__nv_isinff.exit.i.i.i230, !dbg !28

__nv_isinff.exit.i.i.i230:                        ; preds = %__nv_cosf.exit
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i231 = icmp eq i32 %176, 0, !dbg !28
  %.07.i232 = select i1 %.not19.i231, float %174, float %173, !dbg !28
  %177 = fcmp oeq float %.07.i232, 0x7FF0000000000000, !dbg !28
  br i1 %177, label %__nv_fmul_rn.exit.i.i.i270, label %181, !dbg !28

__nv_fmul_rn.exit.i.i.i270:                       ; preds = %__nv_isinff.exit.i.i.i230
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i271 = icmp eq i32 %178, 0, !dbg !28
  %179 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %54, float 0.000000e+00) #4, !dbg !28
  %180 = tail call float @llvm.nvvm.mul.rn.f(float %54, float 0.000000e+00) #4, !dbg !28
  %.08.i272 = select i1 %.not27.i271, float %180, float %179, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i247, !dbg !28

181:                                              ; preds = %__nv_isinff.exit.i.i.i230
  %182 = lshr i32 %53, 23, !dbg !28
  %183 = and i32 %182, 224, !dbg !28
  %184 = add nsw i32 %183, -128, !dbg !28
  %185 = shl i32 %53, 8, !dbg !28
  %186 = or i32 %185, -2147483648, !dbg !28
  %187 = lshr exact i32 %184, 5, !dbg !28
  br label %188, !dbg !28

188:                                              ; preds = %181, %188
  %indvars.iv421 = phi i64 [ 0, %181 ], [ %indvars.iv.next422, %188 ]
  %hi.i.i.i.0.i233392 = phi i32 [ 0, %181 ], [ %193, %188 ]
  %189 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv421, !dbg !28
  %190 = load i32, ptr addrspace(1) %189, align 4, !dbg !28
  %191 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %190, i32 %186, i32 %hi.i.i.i.0.i233392) #5, !dbg !28, !srcloc !29
  %192 = extractvalue { i32, i32 } %191, 0, !dbg !28
  %193 = extractvalue { i32, i32 } %191, 1, !dbg !28
  %194 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %indvars.iv421, !dbg !28
  store i32 %192, ptr %194, align 4, !dbg !28
  %indvars.iv.next422 = add nuw nsw i64 %indvars.iv421, 1, !dbg !28
  %exitcond423.not = icmp eq i64 %indvars.iv.next422, 6, !dbg !28
  br i1 %exitcond423.not, label %195, label %188, !dbg !28, !llvm.loop !32

195:                                              ; preds = %188
  %196 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i219, i64 24, !dbg !28
  store i32 %193, ptr %196, align 4, !dbg !28
  %197 = sub nsw i32 6, %187, !dbg !28
  %198 = sext i32 %197 to i64, !dbg !28
  %199 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %198, !dbg !28
  %200 = load i32, ptr %199, align 4, !dbg !28
  %201 = sub nsw i32 5, %187, !dbg !28
  %202 = sext i32 %201 to i64, !dbg !28
  %203 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %202, !dbg !28
  %204 = load i32, ptr %203, align 4, !dbg !28
  %205 = freeze i32 %204, !dbg !28
  %206 = and i32 %53, 260046848, !dbg !28
  %.not20.i235 = icmp eq i32 %206, 0, !dbg !28
  br i1 %.not20.i235, label %__internal_trig_reduction_slowpath.exit.i.i.i236, label %207, !dbg !28

207:                                              ; preds = %195
  %208 = sub nsw i32 4, %187, !dbg !28
  %209 = sext i32 %208 to i64, !dbg !28
  %210 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i219, i64 0, i64 %209, !dbg !28
  %211 = load i32, ptr %210, align 4, !dbg !28
  %212 = tail call i32 @llvm.fshl.i32(i32 %205, i32 %211, i32 %182), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i236, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i236: ; preds = %207, %195
  %lo.i.i.i.0.i238 = phi i32 [ %212, %207 ], [ %205, %195 ], !dbg !28
  %213 = tail call i32 @llvm.fshl.i32(i32 %200, i32 %205, i32 %182), !dbg !28
  %214 = lshr i32 %213, 30, !dbg !28
  %215 = tail call i32 @llvm.fshl.i32(i32 %213, i32 %lo.i.i.i.0.i238, i32 2), !dbg !28
  %216 = shl i32 %lo.i.i.i.0.i238, 2, !dbg !28
  %217 = lshr i32 %215, 31, !dbg !28
  %218 = add nuw nsw i32 %217, %214, !dbg !28
  %219 = sub nsw i32 0, %218, !dbg !28
  %.not2123.i239 = icmp slt i32 %53, 0, !dbg !28
  %spec.select.i240 = select i1 %.not2123.i239, i32 %219, i32 %218, !dbg !28
  %220 = xor i32 %215, %53, !dbg !28
  %.lobit.i241 = ashr i32 %215, 31, !dbg !28
  %hi.i.i.i.2.i242 = xor i32 %.lobit.i241, %215, !dbg !28
  %lo.i.i.i.1.i244 = xor i32 %.lobit.i241, %216, !dbg !28
  %221 = zext i32 %hi.i.i.i.2.i242 to i64, !dbg !28
  %222 = shl nuw i64 %221, 32, !dbg !28
  %223 = zext i32 %lo.i.i.i.1.i244 to i64, !dbg !28
  %224 = or disjoint i64 %222, %223, !dbg !28
  %225 = sitofp i64 %224 to double, !dbg !28
  %226 = fmul double %225, 0x3BF921FB54442D19, !dbg !28
  %227 = fptrunc double %226 to float, !dbg !28
  %228 = fneg float %227, !dbg !28
  %.not2526.i245 = icmp slt i32 %220, 0, !dbg !28
  %r.i.i.i.0.i246 = select i1 %.not2526.i245, float %228, float %227, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i247, !dbg !28

__internal_trig_reduction_kernel.exit.i.i247:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i236, %__nv_fmul_rn.exit.i.i.i270, %__nv_cosf.exit
  %i.i.1.i248 = phi i32 [ %.01.i221, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i270 ], [ %spec.select.i240, %__internal_trig_reduction_slowpath.exit.i.i.i236 ], !dbg !28
  %t.i.i.1.i249 = phi float [ %.04.i227, %__nv_cosf.exit ], [ %.08.i272, %__nv_fmul_rn.exit.i.i.i270 ], [ %r.i.i.i.0.i246, %__internal_trig_reduction_slowpath.exit.i.i.i236 ], !dbg !28
  %229 = add i32 %i.i.1.i248, 1, !dbg !28
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i250 = icmp eq i32 %230, 0, !dbg !28
  %231 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i249, float %t.i.i.1.i249) #4, !dbg !28
  %232 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i249, float %t.i.i.1.i249) #4, !dbg !28
  %.011.i251 = select i1 %.not28.i250, float %232, float %231, !dbg !28
  %233 = and i32 %i.i.1.i248, 1, !dbg !28
  %.not29.not.i252 = icmp eq i32 %233, 0, !dbg !28
  %234 = select i1 %.not29.not.i252, float 1.000000e+00, float %t.i.i.1.i249, !dbg !28
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i253 = icmp eq i32 %235, 0, !dbg !28
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i251, float %234, float 0.000000e+00) #4, !dbg !28
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i251, float %234, float 0.000000e+00) #4, !dbg !28
  %.012.i254 = select i1 %.not30.i253, float %237, float %236, !dbg !28
  br i1 %.not29.not.i252, label %__internal_fmad.exit1.i.i.i267, label %__internal_fmad.exit2.i.i.i255, !dbg !28

__internal_fmad.exit1.i.i.i267:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i247
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i268 = icmp eq i32 %238, 0, !dbg !28
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i251, float 0xBF56C0FDA0000000) #4, !dbg !28
  %240 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i251, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i269 = select i1 %.not31.i268, float %240, float %239, !dbg !28
  br label %__internal_fmad.exit2.i.i.i255, !dbg !28

__internal_fmad.exit2.i.i.i255:                   ; preds = %__internal_fmad.exit1.i.i.i267, %__internal_trig_reduction_kernel.exit.i.i247
  %241 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i267 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !28
  %242 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i267 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !28
  %243 = phi float [ %.013.i269, %__internal_fmad.exit1.i.i.i267 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i247 ], !dbg !28
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i256 = icmp eq i32 %244, 0, !dbg !28
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %243, float %.011.i251, float %242) #4, !dbg !28
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %243, float %.011.i251, float %242) #4, !dbg !28
  %.010.i257 = select i1 %.not32.i256, float %246, float %245, !dbg !28
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i258 = icmp eq i32 %247, 0, !dbg !28
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i257, float %.011.i251, float %241) #4, !dbg !28
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i257, float %.011.i251, float %241) #4, !dbg !28
  %.09.i259 = select i1 %.not33.i258, float %249, float %248, !dbg !28
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i260 = icmp eq i32 %250, 0, !dbg !28
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i259, float %.012.i254, float %234) #4, !dbg !28
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i259, float %.012.i254, float %234) #4, !dbg !28
  %.05.i261 = select i1 %.not34.i260, float %252, float %251, !dbg !28
  %253 = and i32 %229, 2, !dbg !28
  %.not35.i262 = icmp eq i32 %253, 0, !dbg !28
  br i1 %.not35.i262, label %__nv_cosf.exit273, label %__internal_fmad.exit5.i.i.i263, !dbg !28

__internal_fmad.exit5.i.i.i263:                   ; preds = %__internal_fmad.exit2.i.i.i255
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i264 = icmp eq i32 %254, 0, !dbg !28
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i265 = select i1 %.not36.i264, float %256, float %255, !dbg !28
  br label %__nv_cosf.exit273, !dbg !28

__nv_cosf.exit273:                                ; preds = %__internal_fmad.exit2.i.i.i255, %__internal_fmad.exit5.i.i.i263
  %z.i.i.0.i266 = phi float [ %.0.i265, %__internal_fmad.exit5.i.i.i263 ], [ %.05.i261, %__internal_fmad.exit2.i.i.i255 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i219), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i274), !dbg !28
  %257 = fmul float %56, 0x3FE45F3060000000, !dbg !28
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i275 = icmp eq i32 %258, 0, !dbg !28
  %259 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %257) #4, !dbg !28
  %260 = tail call i32 @llvm.nvvm.f2i.rn(float %257) #4, !dbg !28
  %.01.i276 = select i1 %.not.i275, i32 %260, i32 %259, !dbg !28
  %261 = sitofp i32 %.01.i276 to float, !dbg !28
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i277 = icmp eq i32 %262, 0, !dbg !28
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float 0xBFF921FB40000000, float %56) #4, !dbg !28
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %261, float 0xBFF921FB40000000, float %56) #4, !dbg !28
  %.02.i278 = select i1 %.not15.i277, float %264, float %263, !dbg !28
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i279 = icmp eq i32 %265, 0, !dbg !28
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float 0xBE74442D00000000, float %.02.i278) #4, !dbg !28
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %261, float 0xBE74442D00000000, float %.02.i278) #4, !dbg !28
  %.03.i280 = select i1 %.not16.i279, float %267, float %266, !dbg !28
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i281 = icmp eq i32 %268, 0, !dbg !28
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float 0xBCF84698A0000000, float %.03.i280) #4, !dbg !28
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %261, float 0xBCF84698A0000000, float %.03.i280) #4, !dbg !28
  %.04.i282 = select i1 %.not17.i281, float %270, float %269, !dbg !28
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i283 = icmp eq i32 %271, 0, !dbg !28
  %272 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #4, !dbg !28
  %273 = tail call float @llvm.nvvm.fabs.f(float %56) #4, !dbg !28
  %.06.i284 = select i1 %.not18.i283, float %273, float %272, !dbg !28
  %274 = fcmp ult float %.06.i284, 1.056150e+05, !dbg !28
  br i1 %274, label %__internal_trig_reduction_kernel.exit.i.i302, label %__nv_isinff.exit.i.i.i285, !dbg !28

__nv_isinff.exit.i.i.i285:                        ; preds = %__nv_cosf.exit273
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i286 = icmp eq i32 %275, 0, !dbg !28
  %.07.i287 = select i1 %.not19.i286, float %273, float %272, !dbg !28
  %276 = fcmp oeq float %.07.i287, 0x7FF0000000000000, !dbg !28
  br i1 %276, label %__nv_fmul_rn.exit.i.i.i325, label %280, !dbg !28

__nv_fmul_rn.exit.i.i.i325:                       ; preds = %__nv_isinff.exit.i.i.i285
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i326 = icmp eq i32 %277, 0, !dbg !28
  %278 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %56, float 0.000000e+00) #4, !dbg !28
  %279 = tail call float @llvm.nvvm.mul.rn.f(float %56, float 0.000000e+00) #4, !dbg !28
  %.08.i327 = select i1 %.not27.i326, float %279, float %278, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i302, !dbg !28

280:                                              ; preds = %__nv_isinff.exit.i.i.i285
  %281 = lshr i32 %55, 23, !dbg !28
  %282 = and i32 %281, 224, !dbg !28
  %283 = add nsw i32 %282, -128, !dbg !28
  %284 = shl i32 %55, 8, !dbg !28
  %285 = or i32 %284, -2147483648, !dbg !28
  %286 = lshr exact i32 %283, 5, !dbg !28
  br label %287, !dbg !28

287:                                              ; preds = %280, %287
  %indvars.iv424 = phi i64 [ 0, %280 ], [ %indvars.iv.next425, %287 ]
  %hi.i.i.i.0.i288394 = phi i32 [ 0, %280 ], [ %292, %287 ]
  %288 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv424, !dbg !28
  %289 = load i32, ptr addrspace(1) %288, align 4, !dbg !28
  %290 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %289, i32 %285, i32 %hi.i.i.i.0.i288394) #5, !dbg !28, !srcloc !29
  %291 = extractvalue { i32, i32 } %290, 0, !dbg !28
  %292 = extractvalue { i32, i32 } %290, 1, !dbg !28
  %293 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %indvars.iv424, !dbg !28
  store i32 %291, ptr %293, align 4, !dbg !28
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1, !dbg !28
  %exitcond426.not = icmp eq i64 %indvars.iv.next425, 6, !dbg !28
  br i1 %exitcond426.not, label %294, label %287, !dbg !28, !llvm.loop !33

294:                                              ; preds = %287
  %295 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i274, i64 24, !dbg !28
  store i32 %292, ptr %295, align 4, !dbg !28
  %296 = sub nsw i32 6, %286, !dbg !28
  %297 = sext i32 %296 to i64, !dbg !28
  %298 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %297, !dbg !28
  %299 = load i32, ptr %298, align 4, !dbg !28
  %300 = sub nsw i32 5, %286, !dbg !28
  %301 = sext i32 %300 to i64, !dbg !28
  %302 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %301, !dbg !28
  %303 = load i32, ptr %302, align 4, !dbg !28
  %304 = freeze i32 %303, !dbg !28
  %305 = and i32 %55, 260046848, !dbg !28
  %.not20.i290 = icmp eq i32 %305, 0, !dbg !28
  br i1 %.not20.i290, label %__internal_trig_reduction_slowpath.exit.i.i.i291, label %306, !dbg !28

306:                                              ; preds = %294
  %307 = sub nsw i32 4, %286, !dbg !28
  %308 = sext i32 %307 to i64, !dbg !28
  %309 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i274, i64 0, i64 %308, !dbg !28
  %310 = load i32, ptr %309, align 4, !dbg !28
  %311 = tail call i32 @llvm.fshl.i32(i32 %304, i32 %310, i32 %281), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i291, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i291: ; preds = %306, %294
  %lo.i.i.i.0.i293 = phi i32 [ %311, %306 ], [ %304, %294 ], !dbg !28
  %312 = tail call i32 @llvm.fshl.i32(i32 %299, i32 %304, i32 %281), !dbg !28
  %313 = lshr i32 %312, 30, !dbg !28
  %314 = tail call i32 @llvm.fshl.i32(i32 %312, i32 %lo.i.i.i.0.i293, i32 2), !dbg !28
  %315 = shl i32 %lo.i.i.i.0.i293, 2, !dbg !28
  %316 = lshr i32 %314, 31, !dbg !28
  %317 = add nuw nsw i32 %316, %313, !dbg !28
  %318 = sub nsw i32 0, %317, !dbg !28
  %.not2123.i294 = icmp slt i32 %55, 0, !dbg !28
  %spec.select.i295 = select i1 %.not2123.i294, i32 %318, i32 %317, !dbg !28
  %319 = xor i32 %314, %55, !dbg !28
  %.lobit.i296 = ashr i32 %314, 31, !dbg !28
  %hi.i.i.i.2.i297 = xor i32 %.lobit.i296, %314, !dbg !28
  %lo.i.i.i.1.i299 = xor i32 %.lobit.i296, %315, !dbg !28
  %320 = zext i32 %hi.i.i.i.2.i297 to i64, !dbg !28
  %321 = shl nuw i64 %320, 32, !dbg !28
  %322 = zext i32 %lo.i.i.i.1.i299 to i64, !dbg !28
  %323 = or disjoint i64 %321, %322, !dbg !28
  %324 = sitofp i64 %323 to double, !dbg !28
  %325 = fmul double %324, 0x3BF921FB54442D19, !dbg !28
  %326 = fptrunc double %325 to float, !dbg !28
  %327 = fneg float %326, !dbg !28
  %.not2526.i300 = icmp slt i32 %319, 0, !dbg !28
  %r.i.i.i.0.i301 = select i1 %.not2526.i300, float %327, float %326, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i302, !dbg !28

__internal_trig_reduction_kernel.exit.i.i302:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i291, %__nv_fmul_rn.exit.i.i.i325, %__nv_cosf.exit273
  %i.i.1.i303 = phi i32 [ %.01.i276, %__nv_cosf.exit273 ], [ 0, %__nv_fmul_rn.exit.i.i.i325 ], [ %spec.select.i295, %__internal_trig_reduction_slowpath.exit.i.i.i291 ], !dbg !28
  %t.i.i.1.i304 = phi float [ %.04.i282, %__nv_cosf.exit273 ], [ %.08.i327, %__nv_fmul_rn.exit.i.i.i325 ], [ %r.i.i.i.0.i301, %__internal_trig_reduction_slowpath.exit.i.i.i291 ], !dbg !28
  %328 = add i32 %i.i.1.i303, 1, !dbg !28
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i305 = icmp eq i32 %329, 0, !dbg !28
  %330 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i304, float %t.i.i.1.i304) #4, !dbg !28
  %331 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i304, float %t.i.i.1.i304) #4, !dbg !28
  %.011.i306 = select i1 %.not28.i305, float %331, float %330, !dbg !28
  %332 = and i32 %i.i.1.i303, 1, !dbg !28
  %.not29.not.i307 = icmp eq i32 %332, 0, !dbg !28
  %333 = select i1 %.not29.not.i307, float 1.000000e+00, float %t.i.i.1.i304, !dbg !28
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i308 = icmp eq i32 %334, 0, !dbg !28
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i306, float %333, float 0.000000e+00) #4, !dbg !28
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i306, float %333, float 0.000000e+00) #4, !dbg !28
  %.012.i309 = select i1 %.not30.i308, float %336, float %335, !dbg !28
  br i1 %.not29.not.i307, label %__internal_fmad.exit1.i.i.i322, label %__internal_fmad.exit2.i.i.i310, !dbg !28

__internal_fmad.exit1.i.i.i322:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i302
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i323 = icmp eq i32 %337, 0, !dbg !28
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i306, float 0xBF56C0FDA0000000) #4, !dbg !28
  %339 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i306, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i324 = select i1 %.not31.i323, float %339, float %338, !dbg !28
  br label %__internal_fmad.exit2.i.i.i310, !dbg !28

__internal_fmad.exit2.i.i.i310:                   ; preds = %__internal_fmad.exit1.i.i.i322, %__internal_trig_reduction_kernel.exit.i.i302
  %340 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i322 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !28
  %341 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i322 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !28
  %342 = phi float [ %.013.i324, %__internal_fmad.exit1.i.i.i322 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i302 ], !dbg !28
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i311 = icmp eq i32 %343, 0, !dbg !28
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %342, float %.011.i306, float %341) #4, !dbg !28
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %342, float %.011.i306, float %341) #4, !dbg !28
  %.010.i312 = select i1 %.not32.i311, float %345, float %344, !dbg !28
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i313 = icmp eq i32 %346, 0, !dbg !28
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i312, float %.011.i306, float %340) #4, !dbg !28
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i312, float %.011.i306, float %340) #4, !dbg !28
  %.09.i314 = select i1 %.not33.i313, float %348, float %347, !dbg !28
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i315 = icmp eq i32 %349, 0, !dbg !28
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i314, float %.012.i309, float %333) #4, !dbg !28
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i314, float %.012.i309, float %333) #4, !dbg !28
  %.05.i316 = select i1 %.not34.i315, float %351, float %350, !dbg !28
  %352 = and i32 %328, 2, !dbg !28
  %.not35.i317 = icmp eq i32 %352, 0, !dbg !28
  br i1 %.not35.i317, label %__nv_cosf.exit328, label %__internal_fmad.exit5.i.i.i318, !dbg !28

__internal_fmad.exit5.i.i.i318:                   ; preds = %__internal_fmad.exit2.i.i.i310
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i319 = icmp eq i32 %353, 0, !dbg !28
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i316, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i316, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i320 = select i1 %.not36.i319, float %355, float %354, !dbg !28
  br label %__nv_cosf.exit328, !dbg !28

__nv_cosf.exit328:                                ; preds = %__internal_fmad.exit2.i.i.i310, %__internal_fmad.exit5.i.i.i318
  %z.i.i.0.i321 = phi float [ %.0.i320, %__internal_fmad.exit5.i.i.i318 ], [ %.05.i316, %__internal_fmad.exit2.i.i.i310 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i274), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i329), !dbg !28
  %356 = fmul float %58, 0x3FE45F3060000000, !dbg !28
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i330 = icmp eq i32 %357, 0, !dbg !28
  %358 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %356) #4, !dbg !28
  %359 = tail call i32 @llvm.nvvm.f2i.rn(float %356) #4, !dbg !28
  %.01.i331 = select i1 %.not.i330, i32 %359, i32 %358, !dbg !28
  %360 = sitofp i32 %.01.i331 to float, !dbg !28
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i332 = icmp eq i32 %361, 0, !dbg !28
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %360, float 0xBFF921FB40000000, float %58) #4, !dbg !28
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %360, float 0xBFF921FB40000000, float %58) #4, !dbg !28
  %.02.i333 = select i1 %.not15.i332, float %363, float %362, !dbg !28
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i334 = icmp eq i32 %364, 0, !dbg !28
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %360, float 0xBE74442D00000000, float %.02.i333) #4, !dbg !28
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %360, float 0xBE74442D00000000, float %.02.i333) #4, !dbg !28
  %.03.i335 = select i1 %.not16.i334, float %366, float %365, !dbg !28
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i336 = icmp eq i32 %367, 0, !dbg !28
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %360, float 0xBCF84698A0000000, float %.03.i335) #4, !dbg !28
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %360, float 0xBCF84698A0000000, float %.03.i335) #4, !dbg !28
  %.04.i337 = select i1 %.not17.i336, float %369, float %368, !dbg !28
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i338 = icmp eq i32 %370, 0, !dbg !28
  %371 = tail call float @llvm.nvvm.fabs.ftz.f(float %58) #4, !dbg !28
  %372 = tail call float @llvm.nvvm.fabs.f(float %58) #4, !dbg !28
  %.06.i339 = select i1 %.not18.i338, float %372, float %371, !dbg !28
  %373 = fcmp ult float %.06.i339, 1.056150e+05, !dbg !28
  br i1 %373, label %__internal_trig_reduction_kernel.exit.i.i357, label %__nv_isinff.exit.i.i.i340, !dbg !28

__nv_isinff.exit.i.i.i340:                        ; preds = %__nv_cosf.exit328
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i341 = icmp eq i32 %374, 0, !dbg !28
  %.07.i342 = select i1 %.not19.i341, float %372, float %371, !dbg !28
  %375 = fcmp oeq float %.07.i342, 0x7FF0000000000000, !dbg !28
  br i1 %375, label %__nv_fmul_rn.exit.i.i.i380, label %379, !dbg !28

__nv_fmul_rn.exit.i.i.i380:                       ; preds = %__nv_isinff.exit.i.i.i340
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i381 = icmp eq i32 %376, 0, !dbg !28
  %377 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %58, float 0.000000e+00) #4, !dbg !28
  %378 = tail call float @llvm.nvvm.mul.rn.f(float %58, float 0.000000e+00) #4, !dbg !28
  %.08.i382 = select i1 %.not27.i381, float %378, float %377, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i357, !dbg !28

379:                                              ; preds = %__nv_isinff.exit.i.i.i340
  %380 = lshr i32 %57, 23, !dbg !28
  %381 = and i32 %380, 224, !dbg !28
  %382 = add nsw i32 %381, -128, !dbg !28
  %383 = shl i32 %57, 8, !dbg !28
  %384 = or i32 %383, -2147483648, !dbg !28
  %385 = lshr exact i32 %382, 5, !dbg !28
  br label %386, !dbg !28

386:                                              ; preds = %379, %386
  %indvars.iv427 = phi i64 [ 0, %379 ], [ %indvars.iv.next428, %386 ]
  %hi.i.i.i.0.i343396 = phi i32 [ 0, %379 ], [ %391, %386 ]
  %387 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv427, !dbg !28
  %388 = load i32, ptr addrspace(1) %387, align 4, !dbg !28
  %389 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %388, i32 %384, i32 %hi.i.i.i.0.i343396) #5, !dbg !28, !srcloc !29
  %390 = extractvalue { i32, i32 } %389, 0, !dbg !28
  %391 = extractvalue { i32, i32 } %389, 1, !dbg !28
  %392 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %indvars.iv427, !dbg !28
  store i32 %390, ptr %392, align 4, !dbg !28
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1, !dbg !28
  %exitcond429.not = icmp eq i64 %indvars.iv.next428, 6, !dbg !28
  br i1 %exitcond429.not, label %393, label %386, !dbg !28, !llvm.loop !34

393:                                              ; preds = %386
  %394 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i329, i64 24, !dbg !28
  store i32 %391, ptr %394, align 4, !dbg !28
  %395 = sub nsw i32 6, %385, !dbg !28
  %396 = sext i32 %395 to i64, !dbg !28
  %397 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %396, !dbg !28
  %398 = load i32, ptr %397, align 4, !dbg !28
  %399 = sub nsw i32 5, %385, !dbg !28
  %400 = sext i32 %399 to i64, !dbg !28
  %401 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %400, !dbg !28
  %402 = load i32, ptr %401, align 4, !dbg !28
  %403 = freeze i32 %402, !dbg !28
  %404 = and i32 %57, 260046848, !dbg !28
  %.not20.i345 = icmp eq i32 %404, 0, !dbg !28
  br i1 %.not20.i345, label %__internal_trig_reduction_slowpath.exit.i.i.i346, label %405, !dbg !28

405:                                              ; preds = %393
  %406 = sub nsw i32 4, %385, !dbg !28
  %407 = sext i32 %406 to i64, !dbg !28
  %408 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i329, i64 0, i64 %407, !dbg !28
  %409 = load i32, ptr %408, align 4, !dbg !28
  %410 = tail call i32 @llvm.fshl.i32(i32 %403, i32 %409, i32 %380), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i346, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i346: ; preds = %405, %393
  %lo.i.i.i.0.i348 = phi i32 [ %410, %405 ], [ %403, %393 ], !dbg !28
  %411 = tail call i32 @llvm.fshl.i32(i32 %398, i32 %403, i32 %380), !dbg !28
  %412 = lshr i32 %411, 30, !dbg !28
  %413 = tail call i32 @llvm.fshl.i32(i32 %411, i32 %lo.i.i.i.0.i348, i32 2), !dbg !28
  %414 = shl i32 %lo.i.i.i.0.i348, 2, !dbg !28
  %415 = lshr i32 %413, 31, !dbg !28
  %416 = add nuw nsw i32 %415, %412, !dbg !28
  %417 = sub nsw i32 0, %416, !dbg !28
  %.not2123.i349 = icmp slt i32 %57, 0, !dbg !28
  %spec.select.i350 = select i1 %.not2123.i349, i32 %417, i32 %416, !dbg !28
  %418 = xor i32 %413, %57, !dbg !28
  %.lobit.i351 = ashr i32 %413, 31, !dbg !28
  %hi.i.i.i.2.i352 = xor i32 %.lobit.i351, %413, !dbg !28
  %lo.i.i.i.1.i354 = xor i32 %.lobit.i351, %414, !dbg !28
  %419 = zext i32 %hi.i.i.i.2.i352 to i64, !dbg !28
  %420 = shl nuw i64 %419, 32, !dbg !28
  %421 = zext i32 %lo.i.i.i.1.i354 to i64, !dbg !28
  %422 = or disjoint i64 %420, %421, !dbg !28
  %423 = sitofp i64 %422 to double, !dbg !28
  %424 = fmul double %423, 0x3BF921FB54442D19, !dbg !28
  %425 = fptrunc double %424 to float, !dbg !28
  %426 = fneg float %425, !dbg !28
  %.not2526.i355 = icmp slt i32 %418, 0, !dbg !28
  %r.i.i.i.0.i356 = select i1 %.not2526.i355, float %426, float %425, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i357, !dbg !28

__internal_trig_reduction_kernel.exit.i.i357:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i346, %__nv_fmul_rn.exit.i.i.i380, %__nv_cosf.exit328
  %i.i.1.i358 = phi i32 [ %.01.i331, %__nv_cosf.exit328 ], [ 0, %__nv_fmul_rn.exit.i.i.i380 ], [ %spec.select.i350, %__internal_trig_reduction_slowpath.exit.i.i.i346 ], !dbg !28
  %t.i.i.1.i359 = phi float [ %.04.i337, %__nv_cosf.exit328 ], [ %.08.i382, %__nv_fmul_rn.exit.i.i.i380 ], [ %r.i.i.i.0.i356, %__internal_trig_reduction_slowpath.exit.i.i.i346 ], !dbg !28
  %427 = add i32 %i.i.1.i358, 1, !dbg !28
  %428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i360 = icmp eq i32 %428, 0, !dbg !28
  %429 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i359, float %t.i.i.1.i359) #4, !dbg !28
  %430 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i359, float %t.i.i.1.i359) #4, !dbg !28
  %.011.i361 = select i1 %.not28.i360, float %430, float %429, !dbg !28
  %431 = and i32 %i.i.1.i358, 1, !dbg !28
  %.not29.not.i362 = icmp eq i32 %431, 0, !dbg !28
  %432 = select i1 %.not29.not.i362, float 1.000000e+00, float %t.i.i.1.i359, !dbg !28
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i363 = icmp eq i32 %433, 0, !dbg !28
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i361, float %432, float 0.000000e+00) #4, !dbg !28
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i361, float %432, float 0.000000e+00) #4, !dbg !28
  %.012.i364 = select i1 %.not30.i363, float %435, float %434, !dbg !28
  br i1 %.not29.not.i362, label %__internal_fmad.exit1.i.i.i377, label %__internal_fmad.exit2.i.i.i365, !dbg !28

__internal_fmad.exit1.i.i.i377:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i357
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i378 = icmp eq i32 %436, 0, !dbg !28
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i361, float 0xBF56C0FDA0000000) #4, !dbg !28
  %438 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i361, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i379 = select i1 %.not31.i378, float %438, float %437, !dbg !28
  br label %__internal_fmad.exit2.i.i.i365, !dbg !28

__internal_fmad.exit2.i.i.i365:                   ; preds = %__internal_fmad.exit1.i.i.i377, %__internal_trig_reduction_kernel.exit.i.i357
  %439 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i377 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !28
  %440 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i377 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !28
  %441 = phi float [ %.013.i379, %__internal_fmad.exit1.i.i.i377 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i357 ], !dbg !28
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i366 = icmp eq i32 %442, 0, !dbg !28
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %441, float %.011.i361, float %440) #4, !dbg !28
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %441, float %.011.i361, float %440) #4, !dbg !28
  %.010.i367 = select i1 %.not32.i366, float %444, float %443, !dbg !28
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i368 = icmp eq i32 %445, 0, !dbg !28
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i367, float %.011.i361, float %439) #4, !dbg !28
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i367, float %.011.i361, float %439) #4, !dbg !28
  %.09.i369 = select i1 %.not33.i368, float %447, float %446, !dbg !28
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i370 = icmp eq i32 %448, 0, !dbg !28
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i369, float %.012.i364, float %432) #4, !dbg !28
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i369, float %.012.i364, float %432) #4, !dbg !28
  %.05.i371 = select i1 %.not34.i370, float %450, float %449, !dbg !28
  %451 = and i32 %427, 2, !dbg !28
  %.not35.i372 = icmp eq i32 %451, 0, !dbg !28
  br i1 %.not35.i372, label %__nv_cosf.exit383, label %__internal_fmad.exit5.i.i.i373, !dbg !28

__internal_fmad.exit5.i.i.i373:                   ; preds = %__internal_fmad.exit2.i.i.i365
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i374 = icmp eq i32 %452, 0, !dbg !28
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i371, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i371, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i375 = select i1 %.not36.i374, float %454, float %453, !dbg !28
  br label %__nv_cosf.exit383, !dbg !28

__nv_cosf.exit383:                                ; preds = %__internal_fmad.exit2.i.i.i365, %__internal_fmad.exit5.i.i.i373
  %z.i.i.0.i376 = phi float [ %.0.i375, %__internal_fmad.exit5.i.i.i373 ], [ %.05.i371, %__internal_fmad.exit2.i.i.i365 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i329), !dbg !28
  %455 = icmp slt i32 %.decomposed, 64, !dbg !35
  %456 = add i32 %26, 64, !dbg !36
  %457 = add i32 %456, %24, !dbg !37
  %458 = sext i32 %457 to i64, !dbg !38
  %459 = getelementptr half, ptr addrspace(1) %0, i64 %458, !dbg !38
  %460 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %459, i1 %455) #4, !dbg !39
  %461 = icmp sgt i32 %.decomposed, 63, !dbg !40
  %462 = add i32 %26, -64, !dbg !41
  %463 = add i32 %462, %24, !dbg !42
  %464 = sext i32 %463 to i64, !dbg !43
  %465 = getelementptr half, ptr addrspace(1) %0, i64 %464, !dbg !43
  %466 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %465, i1 %461) #4, !dbg !44
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !45
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i = icmp eq i32 %467, 0, !dbg !45
  %.01.i = select i1 %.not.i, i32 %62, i32 %61, !dbg !45
  %468 = sitofp i32 %.01.i to float, !dbg !45
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i = icmp eq i32 %469, 0, !dbg !45
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float 0xBFF921FB40000000, float %52) #4, !dbg !45
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %468, float 0xBFF921FB40000000, float %52) #4, !dbg !45
  %.02.i = select i1 %.not15.i, float %471, float %470, !dbg !45
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i = icmp eq i32 %472, 0, !dbg !45
  %473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float 0xBE74442D00000000, float %.02.i) #4, !dbg !45
  %474 = tail call float @llvm.nvvm.fma.rn.f(float %468, float 0xBE74442D00000000, float %.02.i) #4, !dbg !45
  %.03.i = select i1 %.not16.i, float %474, float %473, !dbg !45
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i = icmp eq i32 %475, 0, !dbg !45
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !45
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %468, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !45
  %.04.i = select i1 %.not17.i, float %477, float %476, !dbg !45
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i = icmp eq i32 %478, 0, !dbg !45
  %.06.i = select i1 %.not18.i, float %75, float %74, !dbg !45
  %479 = fcmp ult float %.06.i, 1.056150e+05, !dbg !45
  br i1 %479, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !45

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit383
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i = icmp eq i32 %480, 0, !dbg !45
  %.07.i = select i1 %.not19.i, float %75, float %74, !dbg !45
  %481 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !45
  br i1 %481, label %__nv_fmul_rn.exit.i.i.i, label %485, !dbg !45

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i = icmp eq i32 %482, 0, !dbg !45
  %483 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %52, float 0.000000e+00) #4, !dbg !45
  %484 = tail call float @llvm.nvvm.mul.rn.f(float %52, float 0.000000e+00) #4, !dbg !45
  %.08.i = select i1 %.not27.i, float %484, float %483, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !45

485:                                              ; preds = %__nv_isinff.exit.i.i.i
  %486 = lshr i32 %51, 23, !dbg !45
  %487 = and i32 %486, 224, !dbg !45
  %488 = add nsw i32 %487, -128, !dbg !45
  %489 = shl i32 %51, 8, !dbg !45
  %490 = or i32 %489, -2147483648, !dbg !45
  %491 = lshr exact i32 %488, 5, !dbg !45
  br label %492, !dbg !45

492:                                              ; preds = %485, %492
  %indvars.iv430 = phi i64 [ 0, %485 ], [ %indvars.iv.next431, %492 ]
  %hi.i.i.i.0.i398 = phi i32 [ 0, %485 ], [ %497, %492 ]
  %493 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv430, !dbg !45
  %494 = load i32, ptr addrspace(1) %493, align 4, !dbg !45
  %495 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %494, i32 %490, i32 %hi.i.i.i.0.i398) #5, !dbg !45, !srcloc !29
  %496 = extractvalue { i32, i32 } %495, 0, !dbg !45
  %497 = extractvalue { i32, i32 } %495, 1, !dbg !45
  %498 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv430, !dbg !45
  store i32 %496, ptr %498, align 4, !dbg !45
  %indvars.iv.next431 = add nuw nsw i64 %indvars.iv430, 1, !dbg !45
  %exitcond432.not = icmp eq i64 %indvars.iv.next431, 6, !dbg !45
  br i1 %exitcond432.not, label %499, label %492, !dbg !45, !llvm.loop !46

499:                                              ; preds = %492
  %500 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !45
  store i32 %497, ptr %500, align 4, !dbg !45
  %501 = sub nsw i32 6, %491, !dbg !45
  %502 = sext i32 %501 to i64, !dbg !45
  %503 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %502, !dbg !45
  %504 = load i32, ptr %503, align 4, !dbg !45
  %505 = sub nsw i32 5, %491, !dbg !45
  %506 = sext i32 %505 to i64, !dbg !45
  %507 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %506, !dbg !45
  %508 = load i32, ptr %507, align 4, !dbg !45
  %509 = freeze i32 %508, !dbg !45
  %510 = and i32 %51, 260046848, !dbg !45
  %.not20.i = icmp eq i32 %510, 0, !dbg !45
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %511, !dbg !45

511:                                              ; preds = %499
  %512 = sub nsw i32 4, %491, !dbg !45
  %513 = sext i32 %512 to i64, !dbg !45
  %514 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %513, !dbg !45
  %515 = load i32, ptr %514, align 4, !dbg !45
  %516 = tail call i32 @llvm.fshl.i32(i32 %509, i32 %515, i32 %486), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %511, %499
  %lo.i.i.i.0.i = phi i32 [ %516, %511 ], [ %509, %499 ], !dbg !45
  %517 = tail call i32 @llvm.fshl.i32(i32 %504, i32 %509, i32 %486), !dbg !45
  %518 = lshr i32 %517, 30, !dbg !45
  %519 = tail call i32 @llvm.fshl.i32(i32 %517, i32 %lo.i.i.i.0.i, i32 2), !dbg !45
  %520 = shl i32 %lo.i.i.i.0.i, 2, !dbg !45
  %521 = lshr i32 %519, 31, !dbg !45
  %522 = add nuw nsw i32 %521, %518, !dbg !45
  %523 = sub nsw i32 0, %522, !dbg !45
  %.not2123.i = icmp slt i32 %51, 0, !dbg !45
  %spec.select.i = select i1 %.not2123.i, i32 %523, i32 %522, !dbg !45
  %524 = xor i32 %519, %51, !dbg !45
  %.lobit.i = ashr i32 %519, 31, !dbg !45
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %519, !dbg !45
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %520, !dbg !45
  %525 = zext i32 %hi.i.i.i.2.i to i64, !dbg !45
  %526 = shl nuw i64 %525, 32, !dbg !45
  %527 = zext i32 %lo.i.i.i.1.i to i64, !dbg !45
  %528 = or disjoint i64 %526, %527, !dbg !45
  %529 = sitofp i64 %528 to double, !dbg !45
  %530 = fmul double %529, 0x3BF921FB54442D19, !dbg !45
  %531 = fptrunc double %530 to float, !dbg !45
  %532 = fneg float %531, !dbg !45
  %.not2526.i = icmp slt i32 %524, 0, !dbg !45
  %r.i.i.i.0.i = select i1 %.not2526.i, float %532, float %531, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !45

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit383
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit383 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !45
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit383 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !45
  %533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i = icmp eq i32 %533, 0, !dbg !45
  %534 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !45
  %535 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !45
  %.011.i = select i1 %.not28.i, float %535, float %534, !dbg !45
  %536 = and i32 %i.i.1.i, 1, !dbg !45
  %.not29.i = icmp eq i32 %536, 0, !dbg !45
  %537 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !45
  %538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i = icmp eq i32 %538, 0, !dbg !45
  %539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %537, float 0.000000e+00) #4, !dbg !45
  %540 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %537, float 0.000000e+00) #4, !dbg !45
  %.012.i = select i1 %.not30.i, float %540, float %539, !dbg !45
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !45

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i = icmp eq i32 %541, 0, !dbg !45
  %542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !45
  %543 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i = select i1 %.not31.i, float %543, float %542, !dbg !45
  br label %__internal_fmad.exit2.i.i.i, !dbg !45

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %544 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %545 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %546 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i = icmp eq i32 %547, 0, !dbg !45
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %546, float %.011.i, float %545) #4, !dbg !45
  %549 = tail call float @llvm.nvvm.fma.rn.f(float %546, float %.011.i, float %545) #4, !dbg !45
  %.010.i = select i1 %.not32.i, float %549, float %548, !dbg !45
  %550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i = icmp eq i32 %550, 0, !dbg !45
  %551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %544) #4, !dbg !45
  %552 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %544) #4, !dbg !45
  %.09.i = select i1 %.not33.i, float %552, float %551, !dbg !45
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i = icmp eq i32 %553, 0, !dbg !45
  %554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %537) #4, !dbg !45
  %555 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %537) #4, !dbg !45
  %.05.i = select i1 %.not34.i, float %555, float %554, !dbg !45
  %556 = and i32 %i.i.1.i, 2, !dbg !45
  %.not35.i = icmp eq i32 %556, 0, !dbg !45
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !45

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i = icmp eq i32 %557, 0, !dbg !45
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i = select i1 %.not36.i, float %559, float %558, !dbg !45
  br label %__nv_sinf.exit, !dbg !45

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !45
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i2 = icmp eq i32 %560, 0, !dbg !45
  %.01.i3 = select i1 %.not.i2, i32 %161, i32 %160, !dbg !45
  %561 = sitofp i32 %.01.i3 to float, !dbg !45
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i4 = icmp eq i32 %562, 0, !dbg !45
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %561, float 0xBFF921FB40000000, float %54) #4, !dbg !45
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %561, float 0xBFF921FB40000000, float %54) #4, !dbg !45
  %.02.i5 = select i1 %.not15.i4, float %564, float %563, !dbg !45
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i6 = icmp eq i32 %565, 0, !dbg !45
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %561, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !45
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %561, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !45
  %.03.i7 = select i1 %.not16.i6, float %567, float %566, !dbg !45
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i8 = icmp eq i32 %568, 0, !dbg !45
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %561, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !45
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %561, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !45
  %.04.i9 = select i1 %.not17.i8, float %570, float %569, !dbg !45
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i10 = icmp eq i32 %571, 0, !dbg !45
  %.06.i11 = select i1 %.not18.i10, float %174, float %173, !dbg !45
  %572 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !45
  br i1 %572, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !45

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %573 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i13 = icmp eq i32 %573, 0, !dbg !45
  %.07.i14 = select i1 %.not19.i13, float %174, float %173, !dbg !45
  %574 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !45
  br i1 %574, label %__nv_fmul_rn.exit.i.i.i52, label %578, !dbg !45

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i53 = icmp eq i32 %575, 0, !dbg !45
  %576 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %54, float 0.000000e+00) #4, !dbg !45
  %577 = tail call float @llvm.nvvm.mul.rn.f(float %54, float 0.000000e+00) #4, !dbg !45
  %.08.i54 = select i1 %.not27.i53, float %577, float %576, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !45

578:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %579 = lshr i32 %53, 23, !dbg !45
  %580 = and i32 %579, 224, !dbg !45
  %581 = add nsw i32 %580, -128, !dbg !45
  %582 = shl i32 %53, 8, !dbg !45
  %583 = or i32 %582, -2147483648, !dbg !45
  %584 = lshr exact i32 %581, 5, !dbg !45
  br label %585, !dbg !45

585:                                              ; preds = %578, %585
  %indvars.iv433 = phi i64 [ 0, %578 ], [ %indvars.iv.next434, %585 ]
  %hi.i.i.i.0.i15400 = phi i32 [ 0, %578 ], [ %590, %585 ]
  %586 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv433, !dbg !45
  %587 = load i32, ptr addrspace(1) %586, align 4, !dbg !45
  %588 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %587, i32 %583, i32 %hi.i.i.i.0.i15400) #5, !dbg !45, !srcloc !29
  %589 = extractvalue { i32, i32 } %588, 0, !dbg !45
  %590 = extractvalue { i32, i32 } %588, 1, !dbg !45
  %591 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv433, !dbg !45
  store i32 %589, ptr %591, align 4, !dbg !45
  %indvars.iv.next434 = add nuw nsw i64 %indvars.iv433, 1, !dbg !45
  %exitcond435.not = icmp eq i64 %indvars.iv.next434, 6, !dbg !45
  br i1 %exitcond435.not, label %592, label %585, !dbg !45, !llvm.loop !47

592:                                              ; preds = %585
  %593 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !45
  store i32 %590, ptr %593, align 4, !dbg !45
  %594 = sub nsw i32 6, %584, !dbg !45
  %595 = sext i32 %594 to i64, !dbg !45
  %596 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %595, !dbg !45
  %597 = load i32, ptr %596, align 4, !dbg !45
  %598 = sub nsw i32 5, %584, !dbg !45
  %599 = sext i32 %598 to i64, !dbg !45
  %600 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %599, !dbg !45
  %601 = load i32, ptr %600, align 4, !dbg !45
  %602 = freeze i32 %601, !dbg !45
  %603 = and i32 %53, 260046848, !dbg !45
  %.not20.i17 = icmp eq i32 %603, 0, !dbg !45
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %604, !dbg !45

604:                                              ; preds = %592
  %605 = sub nsw i32 4, %584, !dbg !45
  %606 = sext i32 %605 to i64, !dbg !45
  %607 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %606, !dbg !45
  %608 = load i32, ptr %607, align 4, !dbg !45
  %609 = tail call i32 @llvm.fshl.i32(i32 %602, i32 %608, i32 %579), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %604, %592
  %lo.i.i.i.0.i20 = phi i32 [ %609, %604 ], [ %602, %592 ], !dbg !45
  %610 = tail call i32 @llvm.fshl.i32(i32 %597, i32 %602, i32 %579), !dbg !45
  %611 = lshr i32 %610, 30, !dbg !45
  %612 = tail call i32 @llvm.fshl.i32(i32 %610, i32 %lo.i.i.i.0.i20, i32 2), !dbg !45
  %613 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !45
  %614 = lshr i32 %612, 31, !dbg !45
  %615 = add nuw nsw i32 %614, %611, !dbg !45
  %616 = sub nsw i32 0, %615, !dbg !45
  %.not2123.i21 = icmp slt i32 %53, 0, !dbg !45
  %spec.select.i22 = select i1 %.not2123.i21, i32 %616, i32 %615, !dbg !45
  %617 = xor i32 %612, %53, !dbg !45
  %.lobit.i23 = ashr i32 %612, 31, !dbg !45
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %612, !dbg !45
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %613, !dbg !45
  %618 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !45
  %619 = shl nuw i64 %618, 32, !dbg !45
  %620 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !45
  %621 = or disjoint i64 %619, %620, !dbg !45
  %622 = sitofp i64 %621 to double, !dbg !45
  %623 = fmul double %622, 0x3BF921FB54442D19, !dbg !45
  %624 = fptrunc double %623 to float, !dbg !45
  %625 = fneg float %624, !dbg !45
  %.not2526.i27 = icmp slt i32 %617, 0, !dbg !45
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %625, float %624, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !45

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !45
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !45
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i32 = icmp eq i32 %626, 0, !dbg !45
  %627 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !45
  %628 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !45
  %.011.i33 = select i1 %.not28.i32, float %628, float %627, !dbg !45
  %629 = and i32 %i.i.1.i30, 1, !dbg !45
  %.not29.i34 = icmp eq i32 %629, 0, !dbg !45
  %630 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !45
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i35 = icmp eq i32 %631, 0, !dbg !45
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %630, float 0.000000e+00) #4, !dbg !45
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %630, float 0.000000e+00) #4, !dbg !45
  %.012.i36 = select i1 %.not30.i35, float %633, float %632, !dbg !45
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !45

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i38 = icmp eq i32 %634, 0, !dbg !45
  %635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !45
  %636 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i39 = select i1 %.not31.i38, float %636, float %635, !dbg !45
  br label %__internal_fmad.exit2.i.i.i40, !dbg !45

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %637 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %638 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %639 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i41 = icmp eq i32 %640, 0, !dbg !45
  %641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %639, float %.011.i33, float %638) #4, !dbg !45
  %642 = tail call float @llvm.nvvm.fma.rn.f(float %639, float %.011.i33, float %638) #4, !dbg !45
  %.010.i42 = select i1 %.not32.i41, float %642, float %641, !dbg !45
  %643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i43 = icmp eq i32 %643, 0, !dbg !45
  %644 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %637) #4, !dbg !45
  %645 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %637) #4, !dbg !45
  %.09.i44 = select i1 %.not33.i43, float %645, float %644, !dbg !45
  %646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i45 = icmp eq i32 %646, 0, !dbg !45
  %647 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %630) #4, !dbg !45
  %648 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %630) #4, !dbg !45
  %.05.i46 = select i1 %.not34.i45, float %648, float %647, !dbg !45
  %649 = and i32 %i.i.1.i30, 2, !dbg !45
  %.not35.i47 = icmp eq i32 %649, 0, !dbg !45
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !45

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i49 = icmp eq i32 %650, 0, !dbg !45
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i50 = select i1 %.not36.i49, float %652, float %651, !dbg !45
  br label %__nv_sinf.exit55, !dbg !45

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !45
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i57 = icmp eq i32 %653, 0, !dbg !45
  %.01.i58 = select i1 %.not.i57, i32 %260, i32 %259, !dbg !45
  %654 = sitofp i32 %.01.i58 to float, !dbg !45
  %655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i59 = icmp eq i32 %655, 0, !dbg !45
  %656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %654, float 0xBFF921FB40000000, float %56) #4, !dbg !45
  %657 = tail call float @llvm.nvvm.fma.rn.f(float %654, float 0xBFF921FB40000000, float %56) #4, !dbg !45
  %.02.i60 = select i1 %.not15.i59, float %657, float %656, !dbg !45
  %658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i61 = icmp eq i32 %658, 0, !dbg !45
  %659 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %654, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !45
  %660 = tail call float @llvm.nvvm.fma.rn.f(float %654, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !45
  %.03.i62 = select i1 %.not16.i61, float %660, float %659, !dbg !45
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i63 = icmp eq i32 %661, 0, !dbg !45
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %654, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !45
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %654, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !45
  %.04.i64 = select i1 %.not17.i63, float %663, float %662, !dbg !45
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i65 = icmp eq i32 %664, 0, !dbg !45
  %.06.i66 = select i1 %.not18.i65, float %273, float %272, !dbg !45
  %665 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !45
  br i1 %665, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !45

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %666 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i68 = icmp eq i32 %666, 0, !dbg !45
  %.07.i69 = select i1 %.not19.i68, float %273, float %272, !dbg !45
  %667 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !45
  br i1 %667, label %__nv_fmul_rn.exit.i.i.i107, label %671, !dbg !45

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i108 = icmp eq i32 %668, 0, !dbg !45
  %669 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %56, float 0.000000e+00) #4, !dbg !45
  %670 = tail call float @llvm.nvvm.mul.rn.f(float %56, float 0.000000e+00) #4, !dbg !45
  %.08.i109 = select i1 %.not27.i108, float %670, float %669, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !45

671:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %672 = lshr i32 %55, 23, !dbg !45
  %673 = and i32 %672, 224, !dbg !45
  %674 = add nsw i32 %673, -128, !dbg !45
  %675 = shl i32 %55, 8, !dbg !45
  %676 = or i32 %675, -2147483648, !dbg !45
  %677 = lshr exact i32 %674, 5, !dbg !45
  br label %678, !dbg !45

678:                                              ; preds = %671, %678
  %indvars.iv436 = phi i64 [ 0, %671 ], [ %indvars.iv.next437, %678 ]
  %hi.i.i.i.0.i70402 = phi i32 [ 0, %671 ], [ %683, %678 ]
  %679 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv436, !dbg !45
  %680 = load i32, ptr addrspace(1) %679, align 4, !dbg !45
  %681 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %680, i32 %676, i32 %hi.i.i.i.0.i70402) #5, !dbg !45, !srcloc !29
  %682 = extractvalue { i32, i32 } %681, 0, !dbg !45
  %683 = extractvalue { i32, i32 } %681, 1, !dbg !45
  %684 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv436, !dbg !45
  store i32 %682, ptr %684, align 4, !dbg !45
  %indvars.iv.next437 = add nuw nsw i64 %indvars.iv436, 1, !dbg !45
  %exitcond438.not = icmp eq i64 %indvars.iv.next437, 6, !dbg !45
  br i1 %exitcond438.not, label %685, label %678, !dbg !45, !llvm.loop !48

685:                                              ; preds = %678
  %686 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !45
  store i32 %683, ptr %686, align 4, !dbg !45
  %687 = sub nsw i32 6, %677, !dbg !45
  %688 = sext i32 %687 to i64, !dbg !45
  %689 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %688, !dbg !45
  %690 = load i32, ptr %689, align 4, !dbg !45
  %691 = sub nsw i32 5, %677, !dbg !45
  %692 = sext i32 %691 to i64, !dbg !45
  %693 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %692, !dbg !45
  %694 = load i32, ptr %693, align 4, !dbg !45
  %695 = freeze i32 %694, !dbg !45
  %696 = and i32 %55, 260046848, !dbg !45
  %.not20.i72 = icmp eq i32 %696, 0, !dbg !45
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %697, !dbg !45

697:                                              ; preds = %685
  %698 = sub nsw i32 4, %677, !dbg !45
  %699 = sext i32 %698 to i64, !dbg !45
  %700 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %699, !dbg !45
  %701 = load i32, ptr %700, align 4, !dbg !45
  %702 = tail call i32 @llvm.fshl.i32(i32 %695, i32 %701, i32 %672), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %697, %685
  %lo.i.i.i.0.i75 = phi i32 [ %702, %697 ], [ %695, %685 ], !dbg !45
  %703 = tail call i32 @llvm.fshl.i32(i32 %690, i32 %695, i32 %672), !dbg !45
  %704 = lshr i32 %703, 30, !dbg !45
  %705 = tail call i32 @llvm.fshl.i32(i32 %703, i32 %lo.i.i.i.0.i75, i32 2), !dbg !45
  %706 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !45
  %707 = lshr i32 %705, 31, !dbg !45
  %708 = add nuw nsw i32 %707, %704, !dbg !45
  %709 = sub nsw i32 0, %708, !dbg !45
  %.not2123.i76 = icmp slt i32 %55, 0, !dbg !45
  %spec.select.i77 = select i1 %.not2123.i76, i32 %709, i32 %708, !dbg !45
  %710 = xor i32 %705, %55, !dbg !45
  %.lobit.i78 = ashr i32 %705, 31, !dbg !45
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %705, !dbg !45
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %706, !dbg !45
  %711 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !45
  %712 = shl nuw i64 %711, 32, !dbg !45
  %713 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !45
  %714 = or disjoint i64 %712, %713, !dbg !45
  %715 = sitofp i64 %714 to double, !dbg !45
  %716 = fmul double %715, 0x3BF921FB54442D19, !dbg !45
  %717 = fptrunc double %716 to float, !dbg !45
  %718 = fneg float %717, !dbg !45
  %.not2526.i82 = icmp slt i32 %710, 0, !dbg !45
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %718, float %717, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !45

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !45
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !45
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i87 = icmp eq i32 %719, 0, !dbg !45
  %720 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !45
  %721 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !45
  %.011.i88 = select i1 %.not28.i87, float %721, float %720, !dbg !45
  %722 = and i32 %i.i.1.i85, 1, !dbg !45
  %.not29.i89 = icmp eq i32 %722, 0, !dbg !45
  %723 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !45
  %724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i90 = icmp eq i32 %724, 0, !dbg !45
  %725 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %723, float 0.000000e+00) #4, !dbg !45
  %726 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %723, float 0.000000e+00) #4, !dbg !45
  %.012.i91 = select i1 %.not30.i90, float %726, float %725, !dbg !45
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !45

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i93 = icmp eq i32 %727, 0, !dbg !45
  %728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !45
  %729 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i94 = select i1 %.not31.i93, float %729, float %728, !dbg !45
  br label %__internal_fmad.exit2.i.i.i95, !dbg !45

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %730 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %731 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %732 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i96 = icmp eq i32 %733, 0, !dbg !45
  %734 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %732, float %.011.i88, float %731) #4, !dbg !45
  %735 = tail call float @llvm.nvvm.fma.rn.f(float %732, float %.011.i88, float %731) #4, !dbg !45
  %.010.i97 = select i1 %.not32.i96, float %735, float %734, !dbg !45
  %736 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i98 = icmp eq i32 %736, 0, !dbg !45
  %737 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %730) #4, !dbg !45
  %738 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %730) #4, !dbg !45
  %.09.i99 = select i1 %.not33.i98, float %738, float %737, !dbg !45
  %739 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i100 = icmp eq i32 %739, 0, !dbg !45
  %740 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %723) #4, !dbg !45
  %741 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %723) #4, !dbg !45
  %.05.i101 = select i1 %.not34.i100, float %741, float %740, !dbg !45
  %742 = and i32 %i.i.1.i85, 2, !dbg !45
  %.not35.i102 = icmp eq i32 %742, 0, !dbg !45
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !45

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i104 = icmp eq i32 %743, 0, !dbg !45
  %744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %745 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i105 = select i1 %.not36.i104, float %745, float %744, !dbg !45
  br label %__nv_sinf.exit110, !dbg !45

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !45
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i112 = icmp eq i32 %746, 0, !dbg !45
  %.01.i113 = select i1 %.not.i112, i32 %359, i32 %358, !dbg !45
  %747 = sitofp i32 %.01.i113 to float, !dbg !45
  %748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i114 = icmp eq i32 %748, 0, !dbg !45
  %749 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %747, float 0xBFF921FB40000000, float %58) #4, !dbg !45
  %750 = tail call float @llvm.nvvm.fma.rn.f(float %747, float 0xBFF921FB40000000, float %58) #4, !dbg !45
  %.02.i115 = select i1 %.not15.i114, float %750, float %749, !dbg !45
  %751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i116 = icmp eq i32 %751, 0, !dbg !45
  %752 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %747, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !45
  %753 = tail call float @llvm.nvvm.fma.rn.f(float %747, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !45
  %.03.i117 = select i1 %.not16.i116, float %753, float %752, !dbg !45
  %754 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i118 = icmp eq i32 %754, 0, !dbg !45
  %755 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %747, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !45
  %756 = tail call float @llvm.nvvm.fma.rn.f(float %747, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !45
  %.04.i119 = select i1 %.not17.i118, float %756, float %755, !dbg !45
  %757 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i120 = icmp eq i32 %757, 0, !dbg !45
  %.06.i121 = select i1 %.not18.i120, float %372, float %371, !dbg !45
  %758 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !45
  br i1 %758, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !45

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i123 = icmp eq i32 %759, 0, !dbg !45
  %.07.i124 = select i1 %.not19.i123, float %372, float %371, !dbg !45
  %760 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !45
  br i1 %760, label %__nv_fmul_rn.exit.i.i.i162, label %764, !dbg !45

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i163 = icmp eq i32 %761, 0, !dbg !45
  %762 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %58, float 0.000000e+00) #4, !dbg !45
  %763 = tail call float @llvm.nvvm.mul.rn.f(float %58, float 0.000000e+00) #4, !dbg !45
  %.08.i164 = select i1 %.not27.i163, float %763, float %762, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !45

764:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %765 = lshr i32 %57, 23, !dbg !45
  %766 = and i32 %765, 224, !dbg !45
  %767 = add nsw i32 %766, -128, !dbg !45
  %768 = shl i32 %57, 8, !dbg !45
  %769 = or i32 %768, -2147483648, !dbg !45
  %770 = lshr exact i32 %767, 5, !dbg !45
  br label %771, !dbg !45

771:                                              ; preds = %764, %771
  %indvars.iv439 = phi i64 [ 0, %764 ], [ %indvars.iv.next440, %771 ]
  %hi.i.i.i.0.i125404 = phi i32 [ 0, %764 ], [ %776, %771 ]
  %772 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv439, !dbg !45
  %773 = load i32, ptr addrspace(1) %772, align 4, !dbg !45
  %774 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %773, i32 %769, i32 %hi.i.i.i.0.i125404) #5, !dbg !45, !srcloc !29
  %775 = extractvalue { i32, i32 } %774, 0, !dbg !45
  %776 = extractvalue { i32, i32 } %774, 1, !dbg !45
  %777 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv439, !dbg !45
  store i32 %775, ptr %777, align 4, !dbg !45
  %indvars.iv.next440 = add nuw nsw i64 %indvars.iv439, 1, !dbg !45
  %exitcond441.not = icmp eq i64 %indvars.iv.next440, 6, !dbg !45
  br i1 %exitcond441.not, label %778, label %771, !dbg !45, !llvm.loop !49

778:                                              ; preds = %771
  %779 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i111, i64 24, !dbg !45
  store i32 %776, ptr %779, align 4, !dbg !45
  %780 = sub nsw i32 6, %770, !dbg !45
  %781 = sext i32 %780 to i64, !dbg !45
  %782 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %781, !dbg !45
  %783 = load i32, ptr %782, align 4, !dbg !45
  %784 = sub nsw i32 5, %770, !dbg !45
  %785 = sext i32 %784 to i64, !dbg !45
  %786 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %785, !dbg !45
  %787 = load i32, ptr %786, align 4, !dbg !45
  %788 = freeze i32 %787, !dbg !45
  %789 = and i32 %57, 260046848, !dbg !45
  %.not20.i127 = icmp eq i32 %789, 0, !dbg !45
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %790, !dbg !45

790:                                              ; preds = %778
  %791 = sub nsw i32 4, %770, !dbg !45
  %792 = sext i32 %791 to i64, !dbg !45
  %793 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %792, !dbg !45
  %794 = load i32, ptr %793, align 4, !dbg !45
  %795 = tail call i32 @llvm.fshl.i32(i32 %788, i32 %794, i32 %765), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %790, %778
  %lo.i.i.i.0.i130 = phi i32 [ %795, %790 ], [ %788, %778 ], !dbg !45
  %796 = tail call i32 @llvm.fshl.i32(i32 %783, i32 %788, i32 %765), !dbg !45
  %797 = lshr i32 %796, 30, !dbg !45
  %798 = tail call i32 @llvm.fshl.i32(i32 %796, i32 %lo.i.i.i.0.i130, i32 2), !dbg !45
  %799 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !45
  %800 = lshr i32 %798, 31, !dbg !45
  %801 = add nuw nsw i32 %800, %797, !dbg !45
  %802 = sub nsw i32 0, %801, !dbg !45
  %.not2123.i131 = icmp slt i32 %57, 0, !dbg !45
  %spec.select.i132 = select i1 %.not2123.i131, i32 %802, i32 %801, !dbg !45
  %803 = xor i32 %798, %57, !dbg !45
  %.lobit.i133 = ashr i32 %798, 31, !dbg !45
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %798, !dbg !45
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %799, !dbg !45
  %804 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !45
  %805 = shl nuw i64 %804, 32, !dbg !45
  %806 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !45
  %807 = or disjoint i64 %805, %806, !dbg !45
  %808 = sitofp i64 %807 to double, !dbg !45
  %809 = fmul double %808, 0x3BF921FB54442D19, !dbg !45
  %810 = fptrunc double %809 to float, !dbg !45
  %811 = fneg float %810, !dbg !45
  %.not2526.i137 = icmp slt i32 %803, 0, !dbg !45
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %811, float %810, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !45

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !45
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !45
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i142 = icmp eq i32 %812, 0, !dbg !45
  %813 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !45
  %814 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !45
  %.011.i143 = select i1 %.not28.i142, float %814, float %813, !dbg !45
  %815 = and i32 %i.i.1.i140, 1, !dbg !45
  %.not29.i144 = icmp eq i32 %815, 0, !dbg !45
  %816 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !45
  %817 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i145 = icmp eq i32 %817, 0, !dbg !45
  %818 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %816, float 0.000000e+00) #4, !dbg !45
  %819 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %816, float 0.000000e+00) #4, !dbg !45
  %.012.i146 = select i1 %.not30.i145, float %819, float %818, !dbg !45
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !45

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %820 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i148 = icmp eq i32 %820, 0, !dbg !45
  %821 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !45
  %822 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i149 = select i1 %.not31.i148, float %822, float %821, !dbg !45
  br label %__internal_fmad.exit2.i.i.i150, !dbg !45

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %823 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %824 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %825 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i151 = icmp eq i32 %826, 0, !dbg !45
  %827 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %825, float %.011.i143, float %824) #4, !dbg !45
  %828 = tail call float @llvm.nvvm.fma.rn.f(float %825, float %.011.i143, float %824) #4, !dbg !45
  %.010.i152 = select i1 %.not32.i151, float %828, float %827, !dbg !45
  %829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i153 = icmp eq i32 %829, 0, !dbg !45
  %830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %823) #4, !dbg !45
  %831 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %823) #4, !dbg !45
  %.09.i154 = select i1 %.not33.i153, float %831, float %830, !dbg !45
  %832 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i155 = icmp eq i32 %832, 0, !dbg !45
  %833 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %816) #4, !dbg !45
  %834 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %816) #4, !dbg !45
  %.05.i156 = select i1 %.not34.i155, float %834, float %833, !dbg !45
  %835 = and i32 %i.i.1.i140, 2, !dbg !45
  %.not35.i157 = icmp eq i32 %835, 0, !dbg !45
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !45

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %836 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i159 = icmp eq i32 %836, 0, !dbg !45
  %837 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %838 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i160 = select i1 %.not36.i159, float %838, float %837, !dbg !45
  br label %__nv_sinf.exit165, !dbg !45

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !45
  %839 = extractvalue { i32, i32 } %460, 1, !dbg !39
  %840 = bitcast i32 %839 to <2 x half>, !dbg !39
  %841 = extractvalue { i32, i32 } %466, 1, !dbg !44
  %842 = bitcast i32 %841 to <2 x half>, !dbg !44
  %843 = extractvalue { i32, i32 } %460, 0, !dbg !39
  %844 = bitcast i32 %843 to <2 x half>, !dbg !39
  %845 = extractvalue { i32, i32 } %466, 0, !dbg !44
  %846 = bitcast i32 %845 to <2 x half>, !dbg !44
  %847 = extractvalue { i32, i32 } %30, 1, !dbg !22
  %848 = bitcast i32 %847 to <2 x half>, !dbg !22
  %849 = extractvalue { i32, i32 } %30, 0, !dbg !22
  %850 = bitcast i32 %849 to <2 x half>, !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !45
  %851 = sext i32 %13 to i64, !dbg !50
  %852 = getelementptr half, ptr addrspace(1) %2, i64 %851, !dbg !50
  %853 = fpext <2 x half> %844 to <2 x float>, !dbg !51
  %854 = fsub <2 x float> zeroinitializer, %853, !dbg !52
  %855 = fpext <2 x half> %846 to <2 x float>, !dbg !53
  %856 = insertelement <2 x i1> poison, i1 %455, i64 0, !dbg !54
  %857 = shufflevector <2 x i1> %856, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !54
  %858 = select <2 x i1> %857, <2 x float> %854, <2 x float> %855, !dbg !54
  %859 = fpext <2 x half> %850 to <2 x float>, !dbg !55
  %860 = insertelement <2 x float> poison, float %z.i.i.0.i212, i64 0, !dbg !56
  %861 = insertelement <2 x float> %860, float %z.i.i.0.i266, i64 1, !dbg !56
  %862 = fmul <2 x float> %861, %859, !dbg !56
  %863 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !57
  %864 = insertelement <2 x float> %863, float %z.i.i.0.i51, i64 1, !dbg !57
  %865 = fmul <2 x float> %858, %864, !dbg !57
  %866 = fadd <2 x float> %862, %865, !dbg !58
  %867 = fptrunc <2 x float> %866 to <2 x half>, !dbg !59
  %868 = fpext <2 x half> %840 to <2 x float>, !dbg !51
  %869 = fsub <2 x float> zeroinitializer, %868, !dbg !52
  %870 = fpext <2 x half> %842 to <2 x float>, !dbg !53
  %871 = select <2 x i1> %857, <2 x float> %869, <2 x float> %870, !dbg !54
  %872 = fpext <2 x half> %848 to <2 x float>, !dbg !55
  %873 = insertelement <2 x float> poison, float %z.i.i.0.i321, i64 0, !dbg !56
  %874 = insertelement <2 x float> %873, float %z.i.i.0.i376, i64 1, !dbg !56
  %875 = fmul <2 x float> %874, %872, !dbg !56
  %876 = insertelement <2 x float> poison, float %z.i.i.0.i106, i64 0, !dbg !57
  %877 = insertelement <2 x float> %876, float %z.i.i.0.i161, i64 1, !dbg !57
  %878 = fmul <2 x float> %871, %877, !dbg !57
  %879 = fadd <2 x float> %875, %878, !dbg !58
  %880 = fptrunc <2 x float> %879 to <2 x half>, !dbg !59
  %881 = bitcast <2 x half> %867 to i32, !dbg !59
  %882 = bitcast <2 x half> %880 to i32, !dbg !59
  tail call void asm sideeffect "st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l"(i32 %881, i32 %882, ptr addrspace(1) %852) #4, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqpsarify7zeusikjixpajqdipwbvtpp2go4p4nwgovgccmgcsc3.py", directory: "/tmp/torchinductor_root/qp")
!4 = !{ptr @triton_poi_fused_clone_2, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_clone_2", linkageName: "triton_poi_fused_clone_2", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 21, scope: !6)
!14 = !DILocation(line: 22, column: 19, scope: !6)
!15 = !DILocation(line: 23, column: 28, scope: !6)
!16 = !DILocation(line: 24, column: 19, scope: !6)
!17 = !DILocation(line: 26, column: 39, scope: !6)
!18 = !DILocation(line: 26, column: 49, scope: !6)
!19 = !DILocation(line: 26, column: 35, scope: !6)
!20 = !DILocation(line: 26, column: 44, scope: !6)
!21 = !DILocation(line: 26, column: 30, scope: !6)
!22 = !DILocation(line: 26, column: 54, scope: !6)
!23 = !DILocation(line: 27, column: 46, scope: !6)
!24 = !DILocation(line: 27, column: 41, scope: !6)
!25 = !DILocation(line: 27, column: 35, scope: !6)
!26 = !DILocation(line: 27, column: 30, scope: !6)
!27 = !DILocation(line: 27, column: 53, scope: !6)
!28 = !DILocation(line: 28, column: 23, scope: !6)
!29 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.count", i32 1}
!32 = distinct !{!32, !31}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !31}
!35 = !DILocation(line: 37, column: 19, scope: !6)
!36 = !DILocation(line: 38, column: 45, scope: !6)
!37 = !DILocation(line: 38, column: 56, scope: !6)
!38 = !DILocation(line: 38, column: 31, scope: !6)
!39 = !DILocation(line: 38, column: 62, scope: !6)
!40 = !DILocation(line: 42, column: 20, scope: !6)
!41 = !DILocation(line: 45, column: 59, scope: !6)
!42 = !DILocation(line: 45, column: 51, scope: !6)
!43 = !DILocation(line: 45, column: 31, scope: !6)
!44 = !DILocation(line: 45, column: 65, scope: !6)
!45 = !DILocation(line: 47, column: 24, scope: !6)
!46 = distinct !{!46, !31}
!47 = distinct !{!47, !31}
!48 = distinct !{!48, !31}
!49 = distinct !{!49, !31}
!50 = !DILocation(line: 52, column: 25, scope: !6)
!51 = !DILocation(line: 38, column: 113, scope: !6)
!52 = !DILocation(line: 39, column: 13, scope: !6)
!53 = !DILocation(line: 45, column: 116, scope: !6)
!54 = !DILocation(line: 0, scope: !6)
!55 = !DILocation(line: 26, column: 93, scope: !6)
!56 = !DILocation(line: 32, column: 18, scope: !6)
!57 = !DILocation(line: 50, column: 20, scope: !6)
!58 = !DILocation(line: 51, column: 19, scope: !6)
!59 = !DILocation(line: 52, column: 37, scope: !6)
!60 = !DILocation(line: 52, column: 4, scope: !6)
