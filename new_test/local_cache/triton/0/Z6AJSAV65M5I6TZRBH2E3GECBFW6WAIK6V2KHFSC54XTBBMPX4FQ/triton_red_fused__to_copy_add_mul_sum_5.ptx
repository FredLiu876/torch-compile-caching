//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_5 // -- Begin function triton_red_fused__to_copy_add_mul_sum_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_5
.visible .entry triton_red_fused__to_copy_add_mul_sum_5(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_4,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_5_param_5,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_5_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_5_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b16 	%rs<26>;
	.reg .b32 	%r<156>;
	.reg .f32 	%f<157>;
	.reg .b64 	%rd<21>;
	.loc	1 18 0                          // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_add_mul_sum_5_param_6];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_5_param_4];
$L__tmp0:
	.loc	1 22 28                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:22:33
	shl.b32 	%r1, %r11, 6;
	.loc	1 23 44                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 3;
	and.b32  	%r3, %r12, 56;
	.loc	1 29 40                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:29:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f149, 0f00000000;
	mov.f32 	%f150, %f149;
	mov.f32 	%f151, %f149;
	mov.f32 	%f152, %f149;
	mov.f32 	%f153, %f149;
	mov.f32 	%f154, %f149;
	mov.f32 	%f155, %f149;
	mov.f32 	%f156, %f149;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:0:40
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_5_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_5_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_5_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_5_param_0];
	bfe.u32 	%r4, %r2, 3, 6;
	.loc	1 29 40                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:29:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r154, %r15, %r3;
	mov.f32 	%f149, 0f00000000;
	mov.b32 	%r20, 0;
	mov.u32 	%r155, %r20;
	mov.f32 	%f150, %f149;
	mov.f32 	%f151, %f149;
	mov.f32 	%f152, %f149;
	mov.f32 	%f153, %f149;
	mov.f32 	%f154, %f149;
	mov.f32 	%f155, %f149;
	mov.f32 	%f156, %f149;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 31 29                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:31:29
	add.s32 	%r56, %r4, %r155;
	setp.lt.s32 	%p2, %r56, %r10;
	.loc	1 35 34                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:35:34
	mul.wide.s32 	%rd17, %r154, 2;
	add.s64 	%rd6, %rd1, %rd17;
	.loc	1 35 51                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:35:51
	// begin inline asm
	mov.u32 %r16, %r20;
	mov.u32 %r17, %r20;
	mov.u32 %r18, %r20;
	mov.u32 %r19, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 34                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:36:34
	add.s64 	%rd7, %rd2, %rd17;
	.loc	1 36 51                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:36:51
	// begin inline asm
	mov.u32 %r24, %r20;
	mov.u32 %r25, %r20;
	mov.u32 %r26, %r20;
	mov.u32 %r27, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 34                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:37:34
	add.s64 	%rd8, %rd3, %rd17;
	.loc	1 37 51                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:37:51
	// begin inline asm
	mov.u32 %r32, %r20;
	mov.u32 %r33, %r20;
	mov.u32 %r34, %r20;
	mov.u32 %r35, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 38 34                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:38:34
	mul.wide.s32 	%rd18, %r56, 4;
	add.s64 	%rd9, %rd4, %rd18;
	.loc	1 38 41                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:38:41
	// begin inline asm
	mov.u32 %r40, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r40 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r42 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r44 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r46 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r48 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r50 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r52 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r54 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 35 105                        // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:35:105
	mov.b32 	{%rs1, %rs2}, %r16;
	cvt.f32.f16 	%f41, %rs1;
	cvt.f32.f16 	%f42, %rs2;
	mov.b32 	{%rs3, %rs4}, %r17;
	cvt.f32.f16 	%f43, %rs3;
	cvt.f32.f16 	%f44, %rs4;
	mov.b32 	{%rs5, %rs6}, %r18;
	cvt.f32.f16 	%f45, %rs5;
	cvt.f32.f16 	%f46, %rs6;
	mov.b32 	{%rs7, %rs8}, %r19;
	cvt.f32.f16 	%f47, %rs7;
	cvt.f32.f16 	%f48, %rs8;
	.loc	1 36 105                        // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:36:105
	mov.b32 	{%rs9, %rs10}, %r24;
	cvt.f32.f16 	%f49, %rs9;
	cvt.f32.f16 	%f50, %rs10;
	mov.b32 	{%rs11, %rs12}, %r25;
	cvt.f32.f16 	%f51, %rs11;
	cvt.f32.f16 	%f52, %rs12;
	mov.b32 	{%rs13, %rs14}, %r26;
	cvt.f32.f16 	%f53, %rs13;
	cvt.f32.f16 	%f54, %rs14;
	mov.b32 	{%rs15, %rs16}, %r27;
	cvt.f32.f16 	%f55, %rs15;
	cvt.f32.f16 	%f56, %rs16;
	.loc	1 37 105                        // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:37:105
	mov.b32 	{%rs17, %rs18}, %r32;
	cvt.f32.f16 	%f57, %rs17;
	cvt.f32.f16 	%f58, %rs18;
	mov.b32 	{%rs19, %rs20}, %r33;
	cvt.f32.f16 	%f59, %rs19;
	cvt.f32.f16 	%f60, %rs20;
	mov.b32 	{%rs21, %rs22}, %r34;
	cvt.f32.f16 	%f61, %rs21;
	cvt.f32.f16 	%f62, %rs22;
	mov.b32 	{%rs23, %rs24}, %r35;
	cvt.f32.f16 	%f63, %rs23;
	cvt.f32.f16 	%f64, %rs24;
	.loc	1 39 22                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:39:22
	add.f32 	%f65, %f48, %f56;
	add.f32 	%f66, %f47, %f55;
	add.f32 	%f67, %f46, %f54;
	add.f32 	%f68, %f45, %f53;
	add.f32 	%f69, %f44, %f52;
	add.f32 	%f70, %f43, %f51;
	add.f32 	%f71, %f42, %f50;
	add.f32 	%f72, %f41, %f49;
	.loc	1 41 22                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:41:22
	mov.b32 	%f73, %r54;
	mul.f32 	%f74, %f73, %f64;
	mul.f32 	%f75, %f73, %f63;
	mul.f32 	%f76, %f73, %f62;
	mul.f32 	%f77, %f73, %f61;
	mul.f32 	%f78, %f73, %f60;
	mul.f32 	%f79, %f73, %f59;
	mul.f32 	%f80, %f73, %f58;
	mul.f32 	%f81, %f73, %f57;
	.loc	1 45 25                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:45:25
	fma.rn.f32 	%f82, %f72, %f81, %f149;
	fma.rn.f32 	%f83, %f71, %f80, %f150;
	fma.rn.f32 	%f84, %f70, %f79, %f151;
	fma.rn.f32 	%f85, %f69, %f78, %f152;
	fma.rn.f32 	%f86, %f68, %f77, %f153;
	fma.rn.f32 	%f87, %f67, %f76, %f154;
	fma.rn.f32 	%f88, %f66, %f75, %f155;
	fma.rn.f32 	%f89, %f65, %f74, %f156;
	.loc	1 46 42                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:46:42
	selp.f32 	%f156, %f89, %f156, %p2;
	selp.f32 	%f155, %f88, %f155, %p2;
	selp.f32 	%f154, %f87, %f154, %p2;
	selp.f32 	%f153, %f86, %f153, %p2;
	selp.f32 	%f152, %f85, %f152, %p2;
	selp.f32 	%f151, %f84, %f151, %p2;
	selp.f32 	%f150, %f83, %f150, %p2;
	selp.f32 	%f149, %f82, %f149, %p2;
	.loc	1 29 40                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:29:40
	add.s32 	%r155, %r155, 64;
	add.s32 	%r154, %r154, 262144;
	setp.lt.s32 	%p13, %r155, %r10;
	@%p13 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:23:44
	and.b32  	%r91, %r2, 63;
	.loc	1 23 23                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:23:23
	or.b32  	%r92, %r1, %r91;
	.loc	1 23 44                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:23:44
	and.b32  	%r93, %r2, 24;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r94, %f149;
	shfl.sync.bfly.b32	%r95, %r94, 16, 31, -1;
	mov.b32 	%f90, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f149, %f90;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r96, %f91;
	shfl.sync.bfly.b32	%r97, %r96, 8, 31, -1;
	mov.b32 	%f92, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r98, %f150;
	shfl.sync.bfly.b32	%r99, %r98, 16, 31, -1;
	mov.b32 	%f94, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f150, %f94;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r100, %f95;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	mov.b32 	%f96, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r102, %f151;
	shfl.sync.bfly.b32	%r103, %r102, 16, 31, -1;
	mov.b32 	%f98, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f151, %f98;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r104, %f99;
	shfl.sync.bfly.b32	%r105, %r104, 8, 31, -1;
	mov.b32 	%f100, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r106, %f152;
	shfl.sync.bfly.b32	%r107, %r106, 16, 31, -1;
	mov.b32 	%f102, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f103, %f152, %f102;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r108, %f103;
	shfl.sync.bfly.b32	%r109, %r108, 8, 31, -1;
	mov.b32 	%f104, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f105, %f103, %f104;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r110, %f153;
	shfl.sync.bfly.b32	%r111, %r110, 16, 31, -1;
	mov.b32 	%f106, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f153, %f106;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r112, %f107;
	shfl.sync.bfly.b32	%r113, %r112, 8, 31, -1;
	mov.b32 	%f108, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f107, %f108;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r114, %f154;
	shfl.sync.bfly.b32	%r115, %r114, 16, 31, -1;
	mov.b32 	%f110, %r115;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f154, %f110;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r116, %f111;
	shfl.sync.bfly.b32	%r117, %r116, 8, 31, -1;
	mov.b32 	%f112, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f113, %f111, %f112;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r118, %f155;
	shfl.sync.bfly.b32	%r119, %r118, 16, 31, -1;
	mov.b32 	%f114, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f115, %f155, %f114;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r120, %f115;
	shfl.sync.bfly.b32	%r121, %r120, 8, 31, -1;
	mov.b32 	%f116, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r122, %f156;
	shfl.sync.bfly.b32	%r123, %r122, 16, 31, -1;
	mov.b32 	%f118, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f119, %f156, %f118;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r124, %f119;
	shfl.sync.bfly.b32	%r125, %r124, 8, 31, -1;
	mov.b32 	%f120, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f121, %f119, %f120;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p14, %r93, 0;
	shr.u32 	%r126, %r2, 3;
	and.b32  	%r127, %r126, 60;
	shl.b32 	%r128, %r3, 6;
	or.b32  	%r129, %r128, %r127;
	mov.u32 	%r130, global_smem;
	add.s32 	%r57, %r130, %r129;
	mov.b32 	%r58, %f93;
	// begin inline asm
	@%p14 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r57, 64;
	mov.b32 	%r60, %f97;
	// begin inline asm
	@%p14 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r57, 128;
	mov.b32 	%r62, %f101;
	// begin inline asm
	@%p14 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r57, 192;
	mov.b32 	%r64, %f105;
	// begin inline asm
	@%p14 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	or.b32  	%r131, %r128, 256;
	or.b32  	%r132, %r131, %r127;
	add.s32 	%r65, %r130, %r132;
	mov.b32 	%r66, %f109;
	// begin inline asm
	@%p14 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r57, 320;
	mov.b32 	%r68, %f113;
	// begin inline asm
	@%p14 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r57, 384;
	mov.b32 	%r70, %f117;
	// begin inline asm
	@%p14 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r57, 448;
	mov.b32 	%r72, %f121;
	// begin inline asm
	@%p14 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r2, 1024;
	shl.b32 	%r133, %r2, 2;
	add.s32 	%r74, %r130, %r133;
	// begin inline asm
	@%p22 ld.shared.b32 %r73, [ %r74 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r73;
	shfl.sync.bfly.b32	%r134, %r73, 8, 31, -1;
	mov.b32 	%f123, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r135, %f124;
	shfl.sync.bfly.b32	%r136, %r135, 4, 31, -1;
	mov.b32 	%f125, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r137, %f126;
	shfl.sync.bfly.b32	%r138, %r137, 2, 31, -1;
	mov.b32 	%f127, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r139, %f128;
	shfl.sync.bfly.b32	%r140, %r139, 1, 31, -1;
	mov.b32 	%f129, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r141, %r2, 15;
	setp.eq.s32 	%p29, %r141, 0;
	and.pred  	%p23, %p22, %p29;
	mov.b32 	%r76, %f130;
	// begin inline asm
	@%p23 st.shared.b32 [ %r74 + 0 ], %r76;
	// end inline asm
	add.s32 	%r78, %r74, 2048;
	// begin inline asm
	@%p22 ld.shared.b32 %r77, [ %r78 + 0 ];
	// end inline asm
	mov.b32 	%f131, %r77;
	shfl.sync.bfly.b32	%r142, %r77, 8, 31, -1;
	mov.b32 	%f132, %r142;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f133, %f131, %f132;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r143, %f133;
	shfl.sync.bfly.b32	%r144, %r143, 4, 31, -1;
	mov.b32 	%f134, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f135, %f133, %f134;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r145, %f135;
	shfl.sync.bfly.b32	%r146, %r145, 2, 31, -1;
	mov.b32 	%f136, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f137, %f135, %f136;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r147, %f137;
	shfl.sync.bfly.b32	%r148, %r147, 1, 31, -1;
	mov.b32 	%f138, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f139;
	// begin inline asm
	@%p23 st.shared.b32 [ %r78 + 0 ], %r80;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r149, %r130, %r128;
	ld.shared.u32 	%r82, [%r149];
	ld.shared.u32 	%r83, [%r149+64];
	ld.shared.u32 	%r84, [%r149+128];
	ld.shared.u32 	%r85, [%r149+192];
	add.s32 	%r150, %r130, %r131;
	ld.shared.u32 	%r87, [%r150];
	ld.shared.u32 	%r88, [%r149+320];
	ld.shared.u32 	%r89, [%r149+384];
	ld.shared.u32 	%r90, [%r149+448];
$L__tmp2:
	.loc	1 48 37                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:48:37
	bar.sync 	0;
	mad.lo.s32 	%r81, %r3, -60, %r149;
	mov.pred 	%p26, -1;
	// begin inline asm
	@%p26 st.shared.v4.b32 [ %r81 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	add.s32 	%r86, %r81, 16;
	// begin inline asm
	@%p26 st.shared.v4.b32 [ %r86 + 0 ], { %r87, %r88, %r89, %r90 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r151, %r91, 2;
	add.s32 	%r152, %r130, %r151;
	ld.shared.f32 	%f140, [%r152];
	.loc	1 48 25                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:48:25
	mul.wide.s32 	%rd20, %r92, 2;
	add.s64 	%rd19, %rd5, %rd20;
	.loc	1 48 37                         // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:48:37
	cvt.rn.f16.f32 	%rs25, %f140;
	and.b32  	%r153, %r2, 448;
	setp.eq.s32 	%p28, %r153, 0;
	// begin inline asm
	@%p28 st.global.b16 [ %rd19 + 0 ], { %rs25 };
	// end inline asm
	.loc	1 48 4                          // crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py:48:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/rb/crbdf4vyauezdx6iqixg755sryxnoi3oifqxkxdy34s3u2w7snkb.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 193                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xba DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 98
.b8 100
.b8 102
.b8 52
.b8 118
.b8 121
.b8 97
.b8 117
.b8 101
.b8 122
.b8 100
.b8 120
.b8 54
.b8 105
.b8 113
.b8 105
.b8 120
.b8 103
.b8 55
.b8 53
.b8 53
.b8 115
.b8 114
.b8 121
.b8 120
.b8 110
.b8 111
.b8 105
.b8 51
.b8 111
.b8 105
.b8 102
.b8 113
.b8 120
.b8 107
.b8 120
.b8 100
.b8 121
.b8 51
.b8 52
.b8 115
.b8 51
.b8 117
.b8 50
.b8 119
.b8 55
.b8 115
.b8 110
.b8 107
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 114
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
