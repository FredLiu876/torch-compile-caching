//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<15>;
	.reg .b32 	%r<76>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<25>;
	.loc	1 18 0                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:18:0

// %bb.0:
	ld.param.u32 	%r12, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4];
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0];
$L__tmp0:
	.loc	1 22 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:22:28
	mov.u32 	%r14, %ctaid.x;
	.loc	1 22 33                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:22:33
	shl.b32 	%r1, %r14, 2;
	.loc	1 23 44                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 7, 2;
	and.b32  	%r4, %r2, 31;
	.loc	1 23 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:23:23
	or.b32  	%r5, %r3, %r1;
	.loc	1 25 37                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:25:37
	shl.b32 	%r15, %r2, 2;
	and.b32  	%r6, %r15, 508;
	.loc	1 35 46                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:46
	shl.b32 	%r16, %r5, 12;
	or.b32  	%r7, %r16, %r6;
	mov.f32 	%f71, 0f00000000;
	mov.b32 	%r75, -512;
	setp.lt.s32 	%p1, %r5, %r12;
	mov.f32 	%f72, %f71;
	mov.f32 	%f73, %f71;
	mov.f32 	%f74, %f71;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 35 41                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:41
	add.s32 	%r75, %r75, 512;
	or.b32  	%r27, %r7, %r75;
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	mul.wide.s32 	%rd14, %r27, 2;
	add.s64 	%rd11, %rd8, %rd14;
	mov.b32 	%r19, 0;
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r17, %r19;
	mov.u32 %r18, %r19;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r17, %r18 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd12, %rd6, %rd14;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r21, %r19;
	mov.u32 %r22, %r19;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r21, %r22 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 35 113                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:113
	mov.b32 	{%rs1, %rs2}, %r17;
	cvt.f32.f16 	%f12, %rs1;
	cvt.f32.f16 	%f13, %rs2;
	.loc	1 36 117                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:117
	mov.b32 	{%rs3, %rs4}, %r21;
	cvt.f32.f16 	%f14, %rs3;
	cvt.f32.f16 	%f15, %rs4;
	.loc	1 37 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:37:22
	add.f32 	%f16, %f13, %f15;
	add.f32 	%f17, %f12, %f14;
	.loc	1 41 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:41:23
	fma.rn.f32 	%f18, %f17, %f17, %f71;
	fma.rn.f32 	%f19, %f16, %f16, %f72;
	.loc	1 42 48                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:42:48
	selp.f32 	%f71, %f18, %f71, %p1;
	selp.f32 	%f72, %f19, %f72, %p1;
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	cvt.rn.f16x2.f32 	%r25, %f16, %f17;
	.loc	1 35 113                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:113
	mov.b32 	{%rs5, %rs6}, %r18;
	cvt.f32.f16 	%f20, %rs5;
	cvt.f32.f16 	%f21, %rs6;
	.loc	1 36 117                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:117
	mov.b32 	{%rs7, %rs8}, %r22;
	cvt.f32.f16 	%f22, %rs7;
	cvt.f32.f16 	%f23, %rs8;
	.loc	1 37 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:37:22
	add.f32 	%f24, %f21, %f23;
	add.f32 	%f25, %f20, %f22;
	.loc	1 41 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:41:23
	fma.rn.f32 	%f26, %f25, %f25, %f73;
	fma.rn.f32 	%f27, %f24, %f24, %f74;
	.loc	1 42 48                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:42:48
	selp.f32 	%f73, %f26, %f73, %p1;
	selp.f32 	%f74, %f27, %f74, %p1;
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	cvt.rn.f16x2.f32 	%r26, %f24, %f25;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r25, %r26 };
	// end inline asm
	.loc	1 29 40                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:29:40
	setp.lt.u32 	%p4, %r75, 3584;
	@%p4 bra 	$L__BB0_1;
// %bb.2:                               // %__nv_rsqrtf.exit
	.loc	1 23 44                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:23:44
	and.b32  	%r37, %r2, 3;
	.loc	1 23 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:23:23
	or.b32  	%r38, %r1, %r37;
	.loc	1 24 21                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:24:21
	setp.lt.s32 	%p10, %r38, %r12;
	.loc	1 25 37                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:25:37
	and.b32  	%r39, %r2, 511;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f71, %f72;
	add.f32 	%f29, %f73, %f28;
	add.f32 	%f30, %f74, %f29;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r40, %f30;
	shfl.sync.bfly.b32	%r41, %r40, 16, 31, -1;
	mov.b32 	%f31, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r42, %f32;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f33, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r44, %f34;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f35, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r46, %f36;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f37, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r48, %f38;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f39, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p5, %r4, 0;
	shr.u32 	%r50, %r2, 3;
	and.b32  	%r51, %r50, 12;
	shl.b32 	%r52, %r3, 4;
	or.b32  	%r53, %r52, %r51;
	mov.u32 	%r54, global_smem;
	add.s32 	%r28, %r54, %r53;
	mov.b32 	%r29, %f40;
	// begin inline asm
	@%p5 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r2, 16;
	add.s32 	%r31, %r54, %r15;
	// begin inline asm
	@%p6 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r30;
	shfl.sync.bfly.b32	%r56, %r30, 2, 31, -1;
	mov.b32 	%f42, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r57, %f43;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f44, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p11, %r37, 0;
	and.pred  	%p7, %p6, %p11;
	mov.b32 	%r33, %f45;
	// begin inline asm
	@%p7 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r59, %r54, %r52;
	ld.shared.f32 	%f46, [%r59];
$L__tmp2:
	.loc	1 49 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:49:28
	bar.sync 	0;
	mad.lo.s32 	%r34, %r3, -12, %r59;
	mov.b32 	%r35, %f46;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r60, %r37, 2;
	add.s32 	%r61, %r54, %r60;
	ld.shared.f32 	%f47, [%r61];
	mov.f32 	%f48, 0f45800000;
	.loc	1 46 19                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:46:19
	div.full.f32 	%f49, %f47, %f48;
	div.full.f32 	%f50, %f46, %f48;
	.loc	1 48 19                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:48:19
	add.f32 	%f51, %f49, 0f3727C5AC;
	add.f32 	%f52, %f50, 0f3727C5AC;
	.loc	1 49 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:49:28
	rsqrt.approx.ftz.f32 	%f53, %f51;
	rsqrt.approx.ftz.f32 	%f9, %f52;
	.loc	1 50 4                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:51:28
	mul.wide.s32 	%rd17, %r38, 4;
	add.s64 	%rd15, %rd7, %rd17;
	.loc	1 51 40                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:51:40
	and.b32  	%r62, %r2, 508;
	setp.eq.s32 	%p12, %r62, 0;
	mov.b32 	%r36, %f53;
	and.pred  	%p9, %p12, %p10;
	// begin inline asm
	@%p9 st.global.b32 [ %rd15 + 0 ], { %r36 };
	// end inline asm
	shl.b32 	%r63, %r39, 2;
	add.s32 	%r69, %r54, %r63;
	shl.b32 	%r64, %r6, 2;
	add.s32 	%r11, %r54, %r64;
	.loc	1 52 40                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:52:40
	mul.wide.u32 	%rd18, %r39, 2;
	add.s64 	%rd23, %rd9, %rd18;
	mov.b64 	%rd24, -512;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 40                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:0:40
	mov.b16 	%rs10, 0;
	.loc	1 58 42                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:42
	// begin inline asm
	mov.u16 %rs9, %rs10;
	@%p13 ld.global.L1::evict_last.b16 { %rs9 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 58 95                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:95
	cvt.f32.f16 	%f54, %rs9;
	.loc	1 59 46                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:46
	add.s64 	%rd24, %rd24, 512;
	cvt.u32.u64 	%r73, %rd24;
	or.b32  	%r74, %r7, %r73;
	.loc	1 59 39                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:39
	mul.wide.s32 	%rd22, %r74, 2;
	add.s64 	%rd20, %rd6, %rd22;
	mov.b32 	%r67, 0;
	.loc	1 59 56                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:56
	// begin inline asm
	mov.u32 %r65, %r67;
	mov.u32 %r66, %r67;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r65, %r66 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	bar.sync 	0;
	mov.b32 	%r70, %f54;
	// begin inline asm
	@%p13 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	.loc	1 64 29                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:29
	add.s64 	%rd21, %rd10, %rd22;
	.loc	1 59 118                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:118
	mov.b32 	{%rs11, %rs12}, %r65;
	cvt.f32.f16 	%f55, %rs11;
	cvt.f32.f16 	%f56, %rs12;
	.loc	1 61 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:61:24
	mul.f32 	%f57, %f9, %f56;
	mul.f32 	%f58, %f9, %f55;
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	ld.shared.v4.f32 	{%f59, %f60, %f61, %f62}, [%r11];
	mul.f32 	%f63, %f59, %f58;
	mul.f32 	%f64, %f60, %f57;
	.loc	1 64 53                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:53
	cvt.rn.f16x2.f32 	%r71, %f64, %f63;
	.loc	1 59 118                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:118
	mov.b32 	{%rs13, %rs14}, %r66;
	cvt.f32.f16 	%f65, %rs13;
	cvt.f32.f16 	%f66, %rs14;
	.loc	1 61 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:61:24
	mul.f32 	%f67, %f9, %f66;
	mul.f32 	%f68, %f9, %f65;
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	mul.f32 	%f69, %f61, %f68;
	mul.f32 	%f70, %f62, %f67;
	.loc	1 64 53                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:53
	cvt.rn.f16x2.f32 	%r72, %f70, %f69;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd21 + 0 ], { %r71, %r72 };
	// end inline asm
	.loc	1 52 40                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:52:40
	add.s64 	%rd23, %rd23, 1024;
	setp.lt.u64 	%p17, %rd24, 3584;
	@%p17 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 52 4                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "./local_cache/6w/c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 119
.b8 55
.b8 121
.b8 115
.b8 106
.b8 52
.b8 104
.b8 122
.b8 98
.b8 106
.b8 114
.b8 99
.b8 51
.b8 107
.b8 121
.b8 50
.b8 98
.b8 108
.b8 108
.b8 104
.b8 52
.b8 104
.b8 105
.b8 122
.b8 97
.b8 108
.b8 108
.b8 54
.b8 122
.b8 101
.b8 98
.b8 112
.b8 121
.b8 115
.b8 109
.b8 105
.b8 100
.b8 121
.b8 119
.b8 118
.b8 51
.b8 107
.b8 118
.b8 50
.b8 122
.b8 118
.b8 109
.b8 50
.b8 101
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 46                                  // DW_AT_comp_dir
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x62:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 98                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 98                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
