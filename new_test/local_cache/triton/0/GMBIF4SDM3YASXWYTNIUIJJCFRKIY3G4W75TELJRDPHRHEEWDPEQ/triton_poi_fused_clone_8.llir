; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_clone_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 9, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = shl i32 %10, 2, !dbg !11
  %12 = and i32 %11, 508, !dbg !11
  %13 = or disjoint i32 %12, %9, !dbg !12
  %14 = or disjoint i32 %13, 1, !dbg !12
  %15 = or disjoint i32 %13, 2, !dbg !12
  %16 = or disjoint i32 %13, 3, !dbg !12
  %17 = icmp slt i32 %13, %5, !dbg !13
  %18 = sdiv i32 %13, 128, !dbg !14
  %19 = mul i32 %18, 128, !dbg !15
  %.decomposed = sub i32 %13, %19, !dbg !15
  %20 = srem i32 %14, 128, !dbg !15
  %21 = srem i32 %15, 128, !dbg !15
  %22 = srem i32 %16, 128, !dbg !15
  %23 = sdiv i32 %13, 1024, !dbg !16
  %24 = shl i32 %18, 9, !dbg !17
  %25 = add i32 %24, %.decomposed, !dbg !18
  %26 = sext i32 %25 to i64, !dbg !19
  %27 = getelementptr half, ptr addrspace(1) %1, i64 %26, !dbg !19
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 %17) #4, !dbg !20
  %29 = add i32 %25, 128, !dbg !21
  %30 = sext i32 %29 to i64, !dbg !22
  %31 = getelementptr half, ptr addrspace(1) %1, i64 %30, !dbg !22
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %17) #4, !dbg !23
  %33 = add i32 %25, 256, !dbg !24
  %34 = sext i32 %33 to i64, !dbg !25
  %35 = getelementptr half, ptr addrspace(1) %1, i64 %34, !dbg !25
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 %17) #4, !dbg !26
  %37 = add i32 %25, 384, !dbg !27
  %38 = sext i32 %37 to i64, !dbg !28
  %39 = getelementptr half, ptr addrspace(1) %1, i64 %38, !dbg !28
  %40 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %39, i1 %17) #4, !dbg !29
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !30
  %41 = srem i8 %.lhs.trunc, 64, !dbg !30
  %.sext = sext i8 %41 to i32, !dbg !30
  %.lhs.trunc166 = trunc nsw i32 %20 to i8, !dbg !30
  %42 = srem i8 %.lhs.trunc166, 64, !dbg !30
  %.sext167 = sext i8 %42 to i32, !dbg !30
  %.lhs.trunc168 = trunc nsw i32 %21 to i8, !dbg !30
  %43 = srem i8 %.lhs.trunc168, 64, !dbg !30
  %.sext169 = sext i8 %43 to i32, !dbg !30
  %.lhs.trunc170 = trunc nsw i32 %22 to i8, !dbg !30
  %44 = srem i8 %.lhs.trunc170, 64, !dbg !30
  %.sext171 = sext i8 %44 to i32, !dbg !30
  %45 = mul i32 %4, %.sext, !dbg !31
  %46 = mul i32 %4, %.sext167, !dbg !31
  %47 = mul i32 %4, %.sext169, !dbg !31
  %48 = mul i32 %4, %.sext171, !dbg !31
  %49 = add i32 %45, %23, !dbg !32
  %50 = add i32 %46, %23, !dbg !32
  %51 = add i32 %47, %23, !dbg !32
  %52 = add i32 %48, %23, !dbg !32
  %53 = sext i32 %49 to i64, !dbg !33
  %54 = getelementptr float, ptr addrspace(1) %2, i64 %53, !dbg !33
  %55 = sext i32 %50 to i64, !dbg !33
  %56 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !33
  %57 = sext i32 %51 to i64, !dbg !33
  %58 = getelementptr float, ptr addrspace(1) %2, i64 %57, !dbg !33
  %59 = sext i32 %52 to i64, !dbg !33
  %60 = getelementptr float, ptr addrspace(1) %2, i64 %59, !dbg !33
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %17) #4, !dbg !34
  %62 = bitcast i32 %61 to float, !dbg !34
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %17) #4, !dbg !34
  %64 = bitcast i32 %63 to float, !dbg !34
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %17) #4, !dbg !34
  %66 = bitcast i32 %65 to float, !dbg !34
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %17) #4, !dbg !34
  %68 = bitcast i32 %67 to float, !dbg !34
  %69 = icmp sgt i32 %.decomposed, 63, !dbg !35
  %70 = add i32 %13, -64, !dbg !36
  %71 = sext i32 %70 to i64, !dbg !37
  %72 = getelementptr half, ptr addrspace(1) %0, i64 %71, !dbg !37
  %73 = and i1 %69, %17, !dbg !38
  %74 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %72, i1 %73) #4, !dbg !39
  %75 = icmp slt i32 %.decomposed, 64, !dbg !40
  %76 = add i32 %13, 64, !dbg !41
  %77 = sext i32 %76 to i64, !dbg !42
  %78 = getelementptr half, ptr addrspace(1) %0, i64 %77, !dbg !42
  %79 = and i1 %75, %17, !dbg !43
  %80 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, $2;\0A\09mov.u32 $1, $3;\0A\09@$5 ld.global.v2.b32 { $0, $1 }, [ $4 + 0 ];", "=r,=r,r,r,l,b"(i32 0, i32 0, ptr addrspace(1) %78, i1 %79) #4, !dbg !44
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !45
  %81 = fmul float %62, 0x3FE45F3060000000, !dbg !45
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i = icmp eq i32 %82, 0, !dbg !45
  %83 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %81) #4, !dbg !45
  %84 = tail call i32 @llvm.nvvm.f2i.rn(float %81) #4, !dbg !45
  %.01.i = select i1 %.not.i, i32 %84, i32 %83, !dbg !45
  %85 = sitofp i32 %.01.i to float, !dbg !45
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i = icmp eq i32 %86, 0, !dbg !45
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %85, float 0xBFF921FB40000000, float %62) #4, !dbg !45
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %85, float 0xBFF921FB40000000, float %62) #4, !dbg !45
  %.02.i = select i1 %.not15.i, float %88, float %87, !dbg !45
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i = icmp eq i32 %89, 0, !dbg !45
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %85, float 0xBE74442D00000000, float %.02.i) #4, !dbg !45
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %85, float 0xBE74442D00000000, float %.02.i) #4, !dbg !45
  %.03.i = select i1 %.not16.i, float %91, float %90, !dbg !45
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i = icmp eq i32 %92, 0, !dbg !45
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %85, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !45
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %85, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !45
  %.04.i = select i1 %.not17.i, float %94, float %93, !dbg !45
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i = icmp eq i32 %95, 0, !dbg !45
  %96 = tail call float @llvm.nvvm.fabs.ftz.f(float %62) #4, !dbg !45
  %97 = tail call float @llvm.nvvm.fabs.f(float %62) #4, !dbg !45
  %.06.i = select i1 %.not18.i, float %97, float %96, !dbg !45
  %98 = fcmp ult float %.06.i, 1.056150e+05, !dbg !45
  br i1 %98, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !45

__nv_isinff.exit.i.i.i:                           ; preds = %7
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i = icmp eq i32 %99, 0, !dbg !45
  %.07.i = select i1 %.not19.i, float %97, float %96, !dbg !45
  %100 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !45
  br i1 %100, label %__nv_fmul_rn.exit.i.i.i, label %104, !dbg !45

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i = icmp eq i32 %101, 0, !dbg !45
  %102 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %62, float 0.000000e+00) #4, !dbg !45
  %103 = tail call float @llvm.nvvm.mul.rn.f(float %62, float 0.000000e+00) #4, !dbg !45
  %.08.i = select i1 %.not27.i, float %103, float %102, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !45

104:                                              ; preds = %__nv_isinff.exit.i.i.i
  %105 = lshr i32 %61, 23, !dbg !45
  %106 = and i32 %105, 224, !dbg !45
  %107 = add nsw i32 %106, -128, !dbg !45
  %108 = shl i32 %61, 8, !dbg !45
  %109 = or i32 %108, -2147483648, !dbg !45
  %110 = lshr exact i32 %107, 5, !dbg !45
  br label %111, !dbg !45

111:                                              ; preds = %104, %111
  %indvars.iv = phi i64 [ 0, %104 ], [ %indvars.iv.next, %111 ]
  %hi.i.i.i.0.i172 = phi i32 [ 0, %104 ], [ %116, %111 ]
  %112 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !45
  %113 = load i32, ptr addrspace(1) %112, align 4, !dbg !45
  %114 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %113, i32 %109, i32 %hi.i.i.i.0.i172) #5, !dbg !45, !srcloc !46
  %115 = extractvalue { i32, i32 } %114, 0, !dbg !45
  %116 = extractvalue { i32, i32 } %114, 1, !dbg !45
  %117 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !45
  store i32 %115, ptr %117, align 4, !dbg !45
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !45
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !45
  br i1 %exitcond.not, label %118, label %111, !dbg !45, !llvm.loop !47

118:                                              ; preds = %111
  %119 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !45
  store i32 %116, ptr %119, align 4, !dbg !45
  %120 = sub nsw i32 6, %110, !dbg !45
  %121 = sext i32 %120 to i64, !dbg !45
  %122 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %121, !dbg !45
  %123 = load i32, ptr %122, align 4, !dbg !45
  %124 = sub nsw i32 5, %110, !dbg !45
  %125 = sext i32 %124 to i64, !dbg !45
  %126 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %125, !dbg !45
  %127 = load i32, ptr %126, align 4, !dbg !45
  %128 = freeze i32 %127, !dbg !45
  %129 = and i32 %61, 260046848, !dbg !45
  %.not20.i = icmp eq i32 %129, 0, !dbg !45
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %130, !dbg !45

130:                                              ; preds = %118
  %131 = sub nsw i32 4, %110, !dbg !45
  %132 = sext i32 %131 to i64, !dbg !45
  %133 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %132, !dbg !45
  %134 = load i32, ptr %133, align 4, !dbg !45
  %135 = tail call i32 @llvm.fshl.i32(i32 %128, i32 %134, i32 %105), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %130, %118
  %lo.i.i.i.0.i = phi i32 [ %135, %130 ], [ %128, %118 ], !dbg !45
  %136 = tail call i32 @llvm.fshl.i32(i32 %123, i32 %128, i32 %105), !dbg !45
  %137 = lshr i32 %136, 30, !dbg !45
  %138 = tail call i32 @llvm.fshl.i32(i32 %136, i32 %lo.i.i.i.0.i, i32 2), !dbg !45
  %139 = shl i32 %lo.i.i.i.0.i, 2, !dbg !45
  %140 = lshr i32 %138, 31, !dbg !45
  %141 = add nuw nsw i32 %140, %137, !dbg !45
  %142 = sub nsw i32 0, %141, !dbg !45
  %.not2123.i = icmp slt i32 %61, 0, !dbg !45
  %spec.select.i = select i1 %.not2123.i, i32 %142, i32 %141, !dbg !45
  %143 = xor i32 %138, %61, !dbg !45
  %.lobit.i = ashr i32 %138, 31, !dbg !45
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %138, !dbg !45
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %139, !dbg !45
  %144 = zext i32 %hi.i.i.i.2.i to i64, !dbg !45
  %145 = shl nuw i64 %144, 32, !dbg !45
  %146 = zext i32 %lo.i.i.i.1.i to i64, !dbg !45
  %147 = or disjoint i64 %145, %146, !dbg !45
  %148 = sitofp i64 %147 to double, !dbg !45
  %149 = fmul double %148, 0x3BF921FB54442D19, !dbg !45
  %150 = fptrunc double %149 to float, !dbg !45
  %151 = fneg float %150, !dbg !45
  %.not2526.i = icmp slt i32 %143, 0, !dbg !45
  %r.i.i.i.0.i = select i1 %.not2526.i, float %151, float %150, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !45

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %7
  %i.i.1.i = phi i32 [ %.01.i, %7 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !45
  %t.i.i.1.i = phi float [ %.04.i, %7 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !45
  %152 = add i32 %i.i.1.i, 1, !dbg !45
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i = icmp eq i32 %153, 0, !dbg !45
  %154 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !45
  %155 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !45
  %.011.i = select i1 %.not28.i, float %155, float %154, !dbg !45
  %156 = and i32 %i.i.1.i, 1, !dbg !45
  %.not29.not.i = icmp eq i32 %156, 0, !dbg !45
  %157 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i, !dbg !45
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i = icmp eq i32 %158, 0, !dbg !45
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %157, float 0.000000e+00) #4, !dbg !45
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %157, float 0.000000e+00) #4, !dbg !45
  %.012.i = select i1 %.not30.i, float %160, float %159, !dbg !45
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i, label %__internal_fmad.exit2.i.i.i, !dbg !45

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i = icmp eq i32 %161, 0, !dbg !45
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !45
  %163 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i = select i1 %.not31.i, float %163, float %162, !dbg !45
  br label %__internal_fmad.exit2.i.i.i, !dbg !45

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %164 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %165 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %166 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !45
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i = icmp eq i32 %167, 0, !dbg !45
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %166, float %.011.i, float %165) #4, !dbg !45
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %166, float %.011.i, float %165) #4, !dbg !45
  %.010.i = select i1 %.not32.i, float %169, float %168, !dbg !45
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i = icmp eq i32 %170, 0, !dbg !45
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %164) #4, !dbg !45
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %164) #4, !dbg !45
  %.09.i = select i1 %.not33.i, float %172, float %171, !dbg !45
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i = icmp eq i32 %173, 0, !dbg !45
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %157) #4, !dbg !45
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %157) #4, !dbg !45
  %.05.i = select i1 %.not34.i, float %175, float %174, !dbg !45
  %176 = and i32 %152, 2, !dbg !45
  %.not35.i = icmp eq i32 %176, 0, !dbg !45
  br i1 %.not35.i, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !45

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i = icmp eq i32 %177, 0, !dbg !45
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i = select i1 %.not36.i, float %179, float %178, !dbg !45
  br label %__nv_cosf.exit, !dbg !45

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !45
  %180 = fmul float %64, 0x3FE45F3060000000, !dbg !45
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i2 = icmp eq i32 %181, 0, !dbg !45
  %182 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %180) #4, !dbg !45
  %183 = tail call i32 @llvm.nvvm.f2i.rn(float %180) #4, !dbg !45
  %.01.i3 = select i1 %.not.i2, i32 %183, i32 %182, !dbg !45
  %184 = sitofp i32 %.01.i3 to float, !dbg !45
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i4 = icmp eq i32 %185, 0, !dbg !45
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %184, float 0xBFF921FB40000000, float %64) #4, !dbg !45
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %184, float 0xBFF921FB40000000, float %64) #4, !dbg !45
  %.02.i5 = select i1 %.not15.i4, float %187, float %186, !dbg !45
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i6 = icmp eq i32 %188, 0, !dbg !45
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %184, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !45
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %184, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !45
  %.03.i7 = select i1 %.not16.i6, float %190, float %189, !dbg !45
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i8 = icmp eq i32 %191, 0, !dbg !45
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %184, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !45
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %184, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !45
  %.04.i9 = select i1 %.not17.i8, float %193, float %192, !dbg !45
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i10 = icmp eq i32 %194, 0, !dbg !45
  %195 = tail call float @llvm.nvvm.fabs.ftz.f(float %64) #4, !dbg !45
  %196 = tail call float @llvm.nvvm.fabs.f(float %64) #4, !dbg !45
  %.06.i11 = select i1 %.not18.i10, float %196, float %195, !dbg !45
  %197 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !45
  br i1 %197, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !45

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_cosf.exit
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i13 = icmp eq i32 %198, 0, !dbg !45
  %.07.i14 = select i1 %.not19.i13, float %196, float %195, !dbg !45
  %199 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !45
  br i1 %199, label %__nv_fmul_rn.exit.i.i.i52, label %203, !dbg !45

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i53 = icmp eq i32 %200, 0, !dbg !45
  %201 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %64, float 0.000000e+00) #4, !dbg !45
  %202 = tail call float @llvm.nvvm.mul.rn.f(float %64, float 0.000000e+00) #4, !dbg !45
  %.08.i54 = select i1 %.not27.i53, float %202, float %201, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !45

203:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %204 = lshr i32 %63, 23, !dbg !45
  %205 = and i32 %204, 224, !dbg !45
  %206 = add nsw i32 %205, -128, !dbg !45
  %207 = shl i32 %63, 8, !dbg !45
  %208 = or i32 %207, -2147483648, !dbg !45
  %209 = lshr exact i32 %206, 5, !dbg !45
  br label %210, !dbg !45

210:                                              ; preds = %203, %210
  %indvars.iv187 = phi i64 [ 0, %203 ], [ %indvars.iv.next188, %210 ]
  %hi.i.i.i.0.i15174 = phi i32 [ 0, %203 ], [ %215, %210 ]
  %211 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv187, !dbg !45
  %212 = load i32, ptr addrspace(1) %211, align 4, !dbg !45
  %213 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %212, i32 %208, i32 %hi.i.i.i.0.i15174) #5, !dbg !45, !srcloc !46
  %214 = extractvalue { i32, i32 } %213, 0, !dbg !45
  %215 = extractvalue { i32, i32 } %213, 1, !dbg !45
  %216 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv187, !dbg !45
  store i32 %214, ptr %216, align 4, !dbg !45
  %indvars.iv.next188 = add nuw nsw i64 %indvars.iv187, 1, !dbg !45
  %exitcond189.not = icmp eq i64 %indvars.iv.next188, 6, !dbg !45
  br i1 %exitcond189.not, label %217, label %210, !dbg !45, !llvm.loop !49

217:                                              ; preds = %210
  %218 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !45
  store i32 %215, ptr %218, align 4, !dbg !45
  %219 = sub nsw i32 6, %209, !dbg !45
  %220 = sext i32 %219 to i64, !dbg !45
  %221 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %220, !dbg !45
  %222 = load i32, ptr %221, align 4, !dbg !45
  %223 = sub nsw i32 5, %209, !dbg !45
  %224 = sext i32 %223 to i64, !dbg !45
  %225 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %224, !dbg !45
  %226 = load i32, ptr %225, align 4, !dbg !45
  %227 = freeze i32 %226, !dbg !45
  %228 = and i32 %63, 260046848, !dbg !45
  %.not20.i17 = icmp eq i32 %228, 0, !dbg !45
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %229, !dbg !45

229:                                              ; preds = %217
  %230 = sub nsw i32 4, %209, !dbg !45
  %231 = sext i32 %230 to i64, !dbg !45
  %232 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %231, !dbg !45
  %233 = load i32, ptr %232, align 4, !dbg !45
  %234 = tail call i32 @llvm.fshl.i32(i32 %227, i32 %233, i32 %204), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %229, %217
  %lo.i.i.i.0.i20 = phi i32 [ %234, %229 ], [ %227, %217 ], !dbg !45
  %235 = tail call i32 @llvm.fshl.i32(i32 %222, i32 %227, i32 %204), !dbg !45
  %236 = lshr i32 %235, 30, !dbg !45
  %237 = tail call i32 @llvm.fshl.i32(i32 %235, i32 %lo.i.i.i.0.i20, i32 2), !dbg !45
  %238 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !45
  %239 = lshr i32 %237, 31, !dbg !45
  %240 = add nuw nsw i32 %239, %236, !dbg !45
  %241 = sub nsw i32 0, %240, !dbg !45
  %.not2123.i21 = icmp slt i32 %63, 0, !dbg !45
  %spec.select.i22 = select i1 %.not2123.i21, i32 %241, i32 %240, !dbg !45
  %242 = xor i32 %237, %63, !dbg !45
  %.lobit.i23 = ashr i32 %237, 31, !dbg !45
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %237, !dbg !45
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %238, !dbg !45
  %243 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !45
  %244 = shl nuw i64 %243, 32, !dbg !45
  %245 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !45
  %246 = or disjoint i64 %244, %245, !dbg !45
  %247 = sitofp i64 %246 to double, !dbg !45
  %248 = fmul double %247, 0x3BF921FB54442D19, !dbg !45
  %249 = fptrunc double %248 to float, !dbg !45
  %250 = fneg float %249, !dbg !45
  %.not2526.i27 = icmp slt i32 %242, 0, !dbg !45
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %250, float %249, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !45

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_cosf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !45
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_cosf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !45
  %251 = add i32 %i.i.1.i30, 1, !dbg !45
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i32 = icmp eq i32 %252, 0, !dbg !45
  %253 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !45
  %254 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !45
  %.011.i33 = select i1 %.not28.i32, float %254, float %253, !dbg !45
  %255 = and i32 %i.i.1.i30, 1, !dbg !45
  %.not29.not.i34 = icmp eq i32 %255, 0, !dbg !45
  %256 = select i1 %.not29.not.i34, float 1.000000e+00, float %t.i.i.1.i31, !dbg !45
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i35 = icmp eq i32 %257, 0, !dbg !45
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %256, float 0.000000e+00) #4, !dbg !45
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %256, float 0.000000e+00) #4, !dbg !45
  %.012.i36 = select i1 %.not30.i35, float %259, float %258, !dbg !45
  br i1 %.not29.not.i34, label %__internal_fmad.exit1.i.i.i49, label %__internal_fmad.exit2.i.i.i37, !dbg !45

__internal_fmad.exit1.i.i.i49:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i50 = icmp eq i32 %260, 0, !dbg !45
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !45
  %262 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i51 = select i1 %.not31.i50, float %262, float %261, !dbg !45
  br label %__internal_fmad.exit2.i.i.i37, !dbg !45

__internal_fmad.exit2.i.i.i37:                    ; preds = %__internal_fmad.exit1.i.i.i49, %__internal_trig_reduction_kernel.exit.i.i29
  %263 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i49 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %264 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i49 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %265 = phi float [ %.013.i51, %__internal_fmad.exit1.i.i.i49 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !45
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i38 = icmp eq i32 %266, 0, !dbg !45
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %265, float %.011.i33, float %264) #4, !dbg !45
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %265, float %.011.i33, float %264) #4, !dbg !45
  %.010.i39 = select i1 %.not32.i38, float %268, float %267, !dbg !45
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i40 = icmp eq i32 %269, 0, !dbg !45
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i39, float %.011.i33, float %263) #4, !dbg !45
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i39, float %.011.i33, float %263) #4, !dbg !45
  %.09.i41 = select i1 %.not33.i40, float %271, float %270, !dbg !45
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i42 = icmp eq i32 %272, 0, !dbg !45
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i41, float %.012.i36, float %256) #4, !dbg !45
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i41, float %.012.i36, float %256) #4, !dbg !45
  %.05.i43 = select i1 %.not34.i42, float %274, float %273, !dbg !45
  %275 = and i32 %251, 2, !dbg !45
  %.not35.i44 = icmp eq i32 %275, 0, !dbg !45
  br i1 %.not35.i44, label %__nv_cosf.exit55, label %__internal_fmad.exit5.i.i.i45, !dbg !45

__internal_fmad.exit5.i.i.i45:                    ; preds = %__internal_fmad.exit2.i.i.i37
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i46 = icmp eq i32 %276, 0, !dbg !45
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i43, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i43, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i47 = select i1 %.not36.i46, float %278, float %277, !dbg !45
  br label %__nv_cosf.exit55, !dbg !45

__nv_cosf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i37, %__internal_fmad.exit5.i.i.i45
  %z.i.i.0.i48 = phi float [ %.0.i47, %__internal_fmad.exit5.i.i.i45 ], [ %.05.i43, %__internal_fmad.exit2.i.i.i37 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !45
  %279 = fmul float %66, 0x3FE45F3060000000, !dbg !45
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i57 = icmp eq i32 %280, 0, !dbg !45
  %281 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %279) #4, !dbg !45
  %282 = tail call i32 @llvm.nvvm.f2i.rn(float %279) #4, !dbg !45
  %.01.i58 = select i1 %.not.i57, i32 %282, i32 %281, !dbg !45
  %283 = sitofp i32 %.01.i58 to float, !dbg !45
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i59 = icmp eq i32 %284, 0, !dbg !45
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %283, float 0xBFF921FB40000000, float %66) #4, !dbg !45
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %283, float 0xBFF921FB40000000, float %66) #4, !dbg !45
  %.02.i60 = select i1 %.not15.i59, float %286, float %285, !dbg !45
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i61 = icmp eq i32 %287, 0, !dbg !45
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %283, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !45
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %283, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !45
  %.03.i62 = select i1 %.not16.i61, float %289, float %288, !dbg !45
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i63 = icmp eq i32 %290, 0, !dbg !45
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %283, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !45
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %283, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !45
  %.04.i64 = select i1 %.not17.i63, float %292, float %291, !dbg !45
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i65 = icmp eq i32 %293, 0, !dbg !45
  %294 = tail call float @llvm.nvvm.fabs.ftz.f(float %66) #4, !dbg !45
  %295 = tail call float @llvm.nvvm.fabs.f(float %66) #4, !dbg !45
  %.06.i66 = select i1 %.not18.i65, float %295, float %294, !dbg !45
  %296 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !45
  br i1 %296, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !45

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_cosf.exit55
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i68 = icmp eq i32 %297, 0, !dbg !45
  %.07.i69 = select i1 %.not19.i68, float %295, float %294, !dbg !45
  %298 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !45
  br i1 %298, label %__nv_fmul_rn.exit.i.i.i107, label %302, !dbg !45

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i108 = icmp eq i32 %299, 0, !dbg !45
  %300 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %66, float 0.000000e+00) #4, !dbg !45
  %301 = tail call float @llvm.nvvm.mul.rn.f(float %66, float 0.000000e+00) #4, !dbg !45
  %.08.i109 = select i1 %.not27.i108, float %301, float %300, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !45

302:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %303 = lshr i32 %65, 23, !dbg !45
  %304 = and i32 %303, 224, !dbg !45
  %305 = add nsw i32 %304, -128, !dbg !45
  %306 = shl i32 %65, 8, !dbg !45
  %307 = or i32 %306, -2147483648, !dbg !45
  %308 = lshr exact i32 %305, 5, !dbg !45
  br label %309, !dbg !45

309:                                              ; preds = %302, %309
  %indvars.iv190 = phi i64 [ 0, %302 ], [ %indvars.iv.next191, %309 ]
  %hi.i.i.i.0.i70176 = phi i32 [ 0, %302 ], [ %314, %309 ]
  %310 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv190, !dbg !45
  %311 = load i32, ptr addrspace(1) %310, align 4, !dbg !45
  %312 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %311, i32 %307, i32 %hi.i.i.i.0.i70176) #5, !dbg !45, !srcloc !46
  %313 = extractvalue { i32, i32 } %312, 0, !dbg !45
  %314 = extractvalue { i32, i32 } %312, 1, !dbg !45
  %315 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv190, !dbg !45
  store i32 %313, ptr %315, align 4, !dbg !45
  %indvars.iv.next191 = add nuw nsw i64 %indvars.iv190, 1, !dbg !45
  %exitcond192.not = icmp eq i64 %indvars.iv.next191, 6, !dbg !45
  br i1 %exitcond192.not, label %316, label %309, !dbg !45, !llvm.loop !50

316:                                              ; preds = %309
  %317 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !45
  store i32 %314, ptr %317, align 4, !dbg !45
  %318 = sub nsw i32 6, %308, !dbg !45
  %319 = sext i32 %318 to i64, !dbg !45
  %320 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %319, !dbg !45
  %321 = load i32, ptr %320, align 4, !dbg !45
  %322 = sub nsw i32 5, %308, !dbg !45
  %323 = sext i32 %322 to i64, !dbg !45
  %324 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %323, !dbg !45
  %325 = load i32, ptr %324, align 4, !dbg !45
  %326 = freeze i32 %325, !dbg !45
  %327 = and i32 %65, 260046848, !dbg !45
  %.not20.i72 = icmp eq i32 %327, 0, !dbg !45
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %328, !dbg !45

328:                                              ; preds = %316
  %329 = sub nsw i32 4, %308, !dbg !45
  %330 = sext i32 %329 to i64, !dbg !45
  %331 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %330, !dbg !45
  %332 = load i32, ptr %331, align 4, !dbg !45
  %333 = tail call i32 @llvm.fshl.i32(i32 %326, i32 %332, i32 %303), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %328, %316
  %lo.i.i.i.0.i75 = phi i32 [ %333, %328 ], [ %326, %316 ], !dbg !45
  %334 = tail call i32 @llvm.fshl.i32(i32 %321, i32 %326, i32 %303), !dbg !45
  %335 = lshr i32 %334, 30, !dbg !45
  %336 = tail call i32 @llvm.fshl.i32(i32 %334, i32 %lo.i.i.i.0.i75, i32 2), !dbg !45
  %337 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !45
  %338 = lshr i32 %336, 31, !dbg !45
  %339 = add nuw nsw i32 %338, %335, !dbg !45
  %340 = sub nsw i32 0, %339, !dbg !45
  %.not2123.i76 = icmp slt i32 %65, 0, !dbg !45
  %spec.select.i77 = select i1 %.not2123.i76, i32 %340, i32 %339, !dbg !45
  %341 = xor i32 %336, %65, !dbg !45
  %.lobit.i78 = ashr i32 %336, 31, !dbg !45
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %336, !dbg !45
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %337, !dbg !45
  %342 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !45
  %343 = shl nuw i64 %342, 32, !dbg !45
  %344 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !45
  %345 = or disjoint i64 %343, %344, !dbg !45
  %346 = sitofp i64 %345 to double, !dbg !45
  %347 = fmul double %346, 0x3BF921FB54442D19, !dbg !45
  %348 = fptrunc double %347 to float, !dbg !45
  %349 = fneg float %348, !dbg !45
  %.not2526.i82 = icmp slt i32 %341, 0, !dbg !45
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %349, float %348, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !45

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_cosf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_cosf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !45
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_cosf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !45
  %350 = add i32 %i.i.1.i85, 1, !dbg !45
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i87 = icmp eq i32 %351, 0, !dbg !45
  %352 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !45
  %353 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !45
  %.011.i88 = select i1 %.not28.i87, float %353, float %352, !dbg !45
  %354 = and i32 %i.i.1.i85, 1, !dbg !45
  %.not29.not.i89 = icmp eq i32 %354, 0, !dbg !45
  %355 = select i1 %.not29.not.i89, float 1.000000e+00, float %t.i.i.1.i86, !dbg !45
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i90 = icmp eq i32 %356, 0, !dbg !45
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %355, float 0.000000e+00) #4, !dbg !45
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %355, float 0.000000e+00) #4, !dbg !45
  %.012.i91 = select i1 %.not30.i90, float %358, float %357, !dbg !45
  br i1 %.not29.not.i89, label %__internal_fmad.exit1.i.i.i104, label %__internal_fmad.exit2.i.i.i92, !dbg !45

__internal_fmad.exit1.i.i.i104:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i105 = icmp eq i32 %359, 0, !dbg !45
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !45
  %361 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i106 = select i1 %.not31.i105, float %361, float %360, !dbg !45
  br label %__internal_fmad.exit2.i.i.i92, !dbg !45

__internal_fmad.exit2.i.i.i92:                    ; preds = %__internal_fmad.exit1.i.i.i104, %__internal_trig_reduction_kernel.exit.i.i84
  %362 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i104 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %363 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i104 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %364 = phi float [ %.013.i106, %__internal_fmad.exit1.i.i.i104 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !45
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i93 = icmp eq i32 %365, 0, !dbg !45
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %364, float %.011.i88, float %363) #4, !dbg !45
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %364, float %.011.i88, float %363) #4, !dbg !45
  %.010.i94 = select i1 %.not32.i93, float %367, float %366, !dbg !45
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i95 = icmp eq i32 %368, 0, !dbg !45
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i94, float %.011.i88, float %362) #4, !dbg !45
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i94, float %.011.i88, float %362) #4, !dbg !45
  %.09.i96 = select i1 %.not33.i95, float %370, float %369, !dbg !45
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i97 = icmp eq i32 %371, 0, !dbg !45
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i96, float %.012.i91, float %355) #4, !dbg !45
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i96, float %.012.i91, float %355) #4, !dbg !45
  %.05.i98 = select i1 %.not34.i97, float %373, float %372, !dbg !45
  %374 = and i32 %350, 2, !dbg !45
  %.not35.i99 = icmp eq i32 %374, 0, !dbg !45
  br i1 %.not35.i99, label %__nv_cosf.exit110, label %__internal_fmad.exit5.i.i.i100, !dbg !45

__internal_fmad.exit5.i.i.i100:                   ; preds = %__internal_fmad.exit2.i.i.i92
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i101 = icmp eq i32 %375, 0, !dbg !45
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i98, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i98, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i102 = select i1 %.not36.i101, float %377, float %376, !dbg !45
  br label %__nv_cosf.exit110, !dbg !45

__nv_cosf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i92, %__internal_fmad.exit5.i.i.i100
  %z.i.i.0.i103 = phi float [ %.0.i102, %__internal_fmad.exit5.i.i.i100 ], [ %.05.i98, %__internal_fmad.exit2.i.i.i92 ], !dbg !45
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !45
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !45
  %378 = fmul float %68, 0x3FE45F3060000000, !dbg !45
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not.i112 = icmp eq i32 %379, 0, !dbg !45
  %380 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %378) #4, !dbg !45
  %381 = tail call i32 @llvm.nvvm.f2i.rn(float %378) #4, !dbg !45
  %.01.i113 = select i1 %.not.i112, i32 %381, i32 %380, !dbg !45
  %382 = sitofp i32 %.01.i113 to float, !dbg !45
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not15.i114 = icmp eq i32 %383, 0, !dbg !45
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %382, float 0xBFF921FB40000000, float %68) #4, !dbg !45
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %382, float 0xBFF921FB40000000, float %68) #4, !dbg !45
  %.02.i115 = select i1 %.not15.i114, float %385, float %384, !dbg !45
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not16.i116 = icmp eq i32 %386, 0, !dbg !45
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %382, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !45
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %382, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !45
  %.03.i117 = select i1 %.not16.i116, float %388, float %387, !dbg !45
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not17.i118 = icmp eq i32 %389, 0, !dbg !45
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %382, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !45
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %382, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !45
  %.04.i119 = select i1 %.not17.i118, float %391, float %390, !dbg !45
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not18.i120 = icmp eq i32 %392, 0, !dbg !45
  %393 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #4, !dbg !45
  %394 = tail call float @llvm.nvvm.fabs.f(float %68) #4, !dbg !45
  %.06.i121 = select i1 %.not18.i120, float %394, float %393, !dbg !45
  %395 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !45
  br i1 %395, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !45

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_cosf.exit110
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not19.i123 = icmp eq i32 %396, 0, !dbg !45
  %.07.i124 = select i1 %.not19.i123, float %394, float %393, !dbg !45
  %397 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !45
  br i1 %397, label %__nv_fmul_rn.exit.i.i.i162, label %401, !dbg !45

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not27.i163 = icmp eq i32 %398, 0, !dbg !45
  %399 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %68, float 0.000000e+00) #4, !dbg !45
  %400 = tail call float @llvm.nvvm.mul.rn.f(float %68, float 0.000000e+00) #4, !dbg !45
  %.08.i164 = select i1 %.not27.i163, float %400, float %399, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !45

401:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %402 = lshr i32 %67, 23, !dbg !45
  %403 = and i32 %402, 224, !dbg !45
  %404 = add nsw i32 %403, -128, !dbg !45
  %405 = shl i32 %67, 8, !dbg !45
  %406 = or i32 %405, -2147483648, !dbg !45
  %407 = lshr exact i32 %404, 5, !dbg !45
  br label %408, !dbg !45

408:                                              ; preds = %401, %408
  %indvars.iv193 = phi i64 [ 0, %401 ], [ %indvars.iv.next194, %408 ]
  %hi.i.i.i.0.i125178 = phi i32 [ 0, %401 ], [ %413, %408 ]
  %409 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv193, !dbg !45
  %410 = load i32, ptr addrspace(1) %409, align 4, !dbg !45
  %411 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %410, i32 %406, i32 %hi.i.i.i.0.i125178) #5, !dbg !45, !srcloc !46
  %412 = extractvalue { i32, i32 } %411, 0, !dbg !45
  %413 = extractvalue { i32, i32 } %411, 1, !dbg !45
  %414 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv193, !dbg !45
  store i32 %412, ptr %414, align 4, !dbg !45
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1, !dbg !45
  %exitcond195.not = icmp eq i64 %indvars.iv.next194, 6, !dbg !45
  br i1 %exitcond195.not, label %415, label %408, !dbg !45, !llvm.loop !51

415:                                              ; preds = %408
  %416 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i111, i64 24, !dbg !45
  store i32 %413, ptr %416, align 4, !dbg !45
  %417 = sub nsw i32 6, %407, !dbg !45
  %418 = sext i32 %417 to i64, !dbg !45
  %419 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %418, !dbg !45
  %420 = load i32, ptr %419, align 4, !dbg !45
  %421 = sub nsw i32 5, %407, !dbg !45
  %422 = sext i32 %421 to i64, !dbg !45
  %423 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %422, !dbg !45
  %424 = load i32, ptr %423, align 4, !dbg !45
  %425 = freeze i32 %424, !dbg !45
  %426 = and i32 %67, 260046848, !dbg !45
  %.not20.i127 = icmp eq i32 %426, 0, !dbg !45
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %427, !dbg !45

427:                                              ; preds = %415
  %428 = sub nsw i32 4, %407, !dbg !45
  %429 = sext i32 %428 to i64, !dbg !45
  %430 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %429, !dbg !45
  %431 = load i32, ptr %430, align 4, !dbg !45
  %432 = tail call i32 @llvm.fshl.i32(i32 %425, i32 %431, i32 %402), !dbg !45
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !45

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %427, %415
  %lo.i.i.i.0.i130 = phi i32 [ %432, %427 ], [ %425, %415 ], !dbg !45
  %433 = tail call i32 @llvm.fshl.i32(i32 %420, i32 %425, i32 %402), !dbg !45
  %434 = lshr i32 %433, 30, !dbg !45
  %435 = tail call i32 @llvm.fshl.i32(i32 %433, i32 %lo.i.i.i.0.i130, i32 2), !dbg !45
  %436 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !45
  %437 = lshr i32 %435, 31, !dbg !45
  %438 = add nuw nsw i32 %437, %434, !dbg !45
  %439 = sub nsw i32 0, %438, !dbg !45
  %.not2123.i131 = icmp slt i32 %67, 0, !dbg !45
  %spec.select.i132 = select i1 %.not2123.i131, i32 %439, i32 %438, !dbg !45
  %440 = xor i32 %435, %67, !dbg !45
  %.lobit.i133 = ashr i32 %435, 31, !dbg !45
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %435, !dbg !45
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %436, !dbg !45
  %441 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !45
  %442 = shl nuw i64 %441, 32, !dbg !45
  %443 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !45
  %444 = or disjoint i64 %442, %443, !dbg !45
  %445 = sitofp i64 %444 to double, !dbg !45
  %446 = fmul double %445, 0x3BF921FB54442D19, !dbg !45
  %447 = fptrunc double %446 to float, !dbg !45
  %448 = fneg float %447, !dbg !45
  %.not2526.i137 = icmp slt i32 %440, 0, !dbg !45
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %448, float %447, !dbg !45
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !45

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_cosf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_cosf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !45
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_cosf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !45
  %449 = add i32 %i.i.1.i140, 1, !dbg !45
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not28.i142 = icmp eq i32 %450, 0, !dbg !45
  %451 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !45
  %452 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !45
  %.011.i143 = select i1 %.not28.i142, float %452, float %451, !dbg !45
  %453 = and i32 %i.i.1.i140, 1, !dbg !45
  %.not29.not.i144 = icmp eq i32 %453, 0, !dbg !45
  %454 = select i1 %.not29.not.i144, float 1.000000e+00, float %t.i.i.1.i141, !dbg !45
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not30.i145 = icmp eq i32 %455, 0, !dbg !45
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %454, float 0.000000e+00) #4, !dbg !45
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %454, float 0.000000e+00) #4, !dbg !45
  %.012.i146 = select i1 %.not30.i145, float %457, float %456, !dbg !45
  br i1 %.not29.not.i144, label %__internal_fmad.exit1.i.i.i159, label %__internal_fmad.exit2.i.i.i147, !dbg !45

__internal_fmad.exit1.i.i.i159:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not31.i160 = icmp eq i32 %458, 0, !dbg !45
  %459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !45
  %460 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !45
  %.013.i161 = select i1 %.not31.i160, float %460, float %459, !dbg !45
  br label %__internal_fmad.exit2.i.i.i147, !dbg !45

__internal_fmad.exit2.i.i.i147:                   ; preds = %__internal_fmad.exit1.i.i.i159, %__internal_trig_reduction_kernel.exit.i.i139
  %461 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i159 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %462 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i159 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %463 = phi float [ %.013.i161, %__internal_fmad.exit1.i.i.i159 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !45
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not32.i148 = icmp eq i32 %464, 0, !dbg !45
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %463, float %.011.i143, float %462) #4, !dbg !45
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %463, float %.011.i143, float %462) #4, !dbg !45
  %.010.i149 = select i1 %.not32.i148, float %466, float %465, !dbg !45
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not33.i150 = icmp eq i32 %467, 0, !dbg !45
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i149, float %.011.i143, float %461) #4, !dbg !45
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i149, float %.011.i143, float %461) #4, !dbg !45
  %.09.i151 = select i1 %.not33.i150, float %469, float %468, !dbg !45
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not34.i152 = icmp eq i32 %470, 0, !dbg !45
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i151, float %.012.i146, float %454) #4, !dbg !45
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i151, float %.012.i146, float %454) #4, !dbg !45
  %.05.i153 = select i1 %.not34.i152, float %472, float %471, !dbg !45
  %473 = and i32 %449, 2, !dbg !45
  %.not35.i154 = icmp eq i32 %473, 0, !dbg !45
  br i1 %.not35.i154, label %__nv_cosf.exit165, label %__internal_fmad.exit5.i.i.i155, !dbg !45

__internal_fmad.exit5.i.i.i155:                   ; preds = %__internal_fmad.exit2.i.i.i147
  %474 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !45
  %.not36.i156 = icmp eq i32 %474, 0, !dbg !45
  %475 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i153, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %476 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i153, float -1.000000e+00, float 0.000000e+00) #4, !dbg !45
  %.0.i157 = select i1 %.not36.i156, float %476, float %475, !dbg !45
  br label %__nv_cosf.exit165, !dbg !45

__nv_cosf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i147, %__internal_fmad.exit5.i.i.i155
  %z.i.i.0.i158 = phi float [ %.0.i157, %__internal_fmad.exit5.i.i.i155 ], [ %.05.i153, %__internal_fmad.exit2.i.i.i147 ], !dbg !45
  %477 = extractvalue { i32, i32 } %28, 1, !dbg !20
  %478 = bitcast i32 %477 to <2 x half>, !dbg !20
  %479 = extractvalue { i32, i32 } %32, 1, !dbg !23
  %480 = bitcast i32 %479 to <2 x half>, !dbg !23
  %481 = extractvalue { i32, i32 } %36, 1, !dbg !26
  %482 = bitcast i32 %481 to <2 x half>, !dbg !26
  %483 = extractvalue { i32, i32 } %40, 1, !dbg !29
  %484 = bitcast i32 %483 to <2 x half>, !dbg !29
  %485 = extractvalue { i32, i32 } %28, 0, !dbg !20
  %486 = bitcast i32 %485 to <2 x half>, !dbg !20
  %487 = extractvalue { i32, i32 } %32, 0, !dbg !23
  %488 = bitcast i32 %487 to <2 x half>, !dbg !23
  %489 = extractvalue { i32, i32 } %36, 0, !dbg !26
  %490 = bitcast i32 %489 to <2 x half>, !dbg !26
  %491 = extractvalue { i32, i32 } %40, 0, !dbg !29
  %492 = bitcast i32 %491 to <2 x half>, !dbg !29
  %493 = extractvalue { i32, i32 } %74, 1, !dbg !39
  %494 = bitcast i32 %493 to <2 x half>, !dbg !39
  %495 = extractvalue { i32, i32 } %80, 1, !dbg !44
  %496 = bitcast i32 %495 to <2 x half>, !dbg !44
  %497 = extractvalue { i32, i32 } %74, 0, !dbg !39
  %498 = bitcast i32 %497 to <2 x half>, !dbg !39
  %499 = extractvalue { i32, i32 } %80, 0, !dbg !44
  %500 = bitcast i32 %499 to <2 x half>, !dbg !44
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !45
  %501 = sext i32 %13 to i64, !dbg !52
  %502 = getelementptr half, ptr addrspace(1) %3, i64 %501, !dbg !52
  %503 = fpext <2 x half> %486 to <2 x float>, !dbg !53
  %504 = fpext <2 x half> %488 to <2 x float>, !dbg !54
  %505 = fadd <2 x float> %503, %504, !dbg !55
  %506 = fpext <2 x half> %490 to <2 x float>, !dbg !56
  %507 = fadd <2 x float> %505, %506, !dbg !57
  %508 = fpext <2 x half> %492 to <2 x float>, !dbg !58
  %509 = fadd <2 x float> %507, %508, !dbg !59
  %510 = fpext <2 x half> %498 to <2 x float>, !dbg !60
  %511 = fsub <2 x float> zeroinitializer, %510, !dbg !61
  %512 = insertelement <2 x i1> poison, i1 %69, i64 0, !dbg !62
  %513 = shufflevector <2 x i1> %512, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !62
  %514 = select <2 x i1> %513, <2 x float> %511, <2 x float> zeroinitializer, !dbg !62
  %515 = fpext <2 x half> %500 to <2 x float>, !dbg !63
  %516 = insertelement <2 x i1> poison, i1 %75, i64 0, !dbg !64
  %517 = shufflevector <2 x i1> %516, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !64
  %518 = select <2 x i1> %517, <2 x float> %515, <2 x float> zeroinitializer, !dbg !64
  %519 = fadd <2 x float> %514, %518, !dbg !65
  %520 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !66
  %521 = insertelement <2 x float> %520, float %z.i.i.0.i48, i64 1, !dbg !66
  %522 = fmul <2 x float> %509, %521, !dbg !66
  %523 = fadd <2 x float> %519, %522, !dbg !67
  %524 = fptrunc <2 x float> %523 to <2 x half>, !dbg !68
  %525 = fpext <2 x half> %478 to <2 x float>, !dbg !53
  %526 = fpext <2 x half> %480 to <2 x float>, !dbg !54
  %527 = fadd <2 x float> %525, %526, !dbg !55
  %528 = fpext <2 x half> %482 to <2 x float>, !dbg !56
  %529 = fadd <2 x float> %527, %528, !dbg !57
  %530 = fpext <2 x half> %484 to <2 x float>, !dbg !58
  %531 = fadd <2 x float> %529, %530, !dbg !59
  %532 = fpext <2 x half> %494 to <2 x float>, !dbg !60
  %533 = fsub <2 x float> zeroinitializer, %532, !dbg !61
  %534 = select <2 x i1> %513, <2 x float> %533, <2 x float> zeroinitializer, !dbg !62
  %535 = fpext <2 x half> %496 to <2 x float>, !dbg !63
  %536 = select <2 x i1> %517, <2 x float> %535, <2 x float> zeroinitializer, !dbg !64
  %537 = fadd <2 x float> %534, %536, !dbg !65
  %538 = insertelement <2 x float> poison, float %z.i.i.0.i103, i64 0, !dbg !66
  %539 = insertelement <2 x float> %538, float %z.i.i.0.i158, i64 1, !dbg !66
  %540 = fmul <2 x float> %531, %539, !dbg !66
  %541 = fadd <2 x float> %537, %540, !dbg !67
  %542 = fptrunc <2 x float> %541 to <2 x half>, !dbg !68
  %543 = bitcast <2 x half> %524 to i32, !dbg !68
  %544 = bitcast <2 x half> %542 to i32, !dbg !68
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %543, i32 %544, ptr addrspace(1) %502, i1 %17) #4, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cc4qkxn7eya4nutkbtm72chnftjyliyoogrhtnilbaj4okg53cnb.py", directory: "/tmp/torchinductor_root/c4")
!4 = !{ptr @triton_poi_fused_clone_8, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_clone_8", linkageName: "triton_poi_fused_clone_8", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 21, column: 21, scope: !6)
!14 = !DILocation(line: 24, column: 19, scope: !6)
!15 = !DILocation(line: 22, column: 19, scope: !6)
!16 = !DILocation(line: 25, column: 19, scope: !6)
!17 = !DILocation(line: 26, column: 40, scope: !6)
!18 = !DILocation(line: 26, column: 36, scope: !6)
!19 = !DILocation(line: 26, column: 31, scope: !6)
!20 = !DILocation(line: 26, column: 45, scope: !6)
!21 = !DILocation(line: 27, column: 42, scope: !6)
!22 = !DILocation(line: 27, column: 31, scope: !6)
!23 = !DILocation(line: 27, column: 51, scope: !6)
!24 = !DILocation(line: 28, column: 42, scope: !6)
!25 = !DILocation(line: 28, column: 31, scope: !6)
!26 = !DILocation(line: 28, column: 51, scope: !6)
!27 = !DILocation(line: 29, column: 42, scope: !6)
!28 = !DILocation(line: 29, column: 31, scope: !6)
!29 = !DILocation(line: 29, column: 51, scope: !6)
!30 = !DILocation(line: 30, column: 47, scope: !6)
!31 = !DILocation(line: 30, column: 42, scope: !6)
!32 = !DILocation(line: 30, column: 36, scope: !6)
!33 = !DILocation(line: 30, column: 31, scope: !6)
!34 = !DILocation(line: 30, column: 54, scope: !6)
!35 = !DILocation(line: 33, column: 19, scope: !6)
!36 = !DILocation(line: 34, column: 38, scope: !6)
!37 = !DILocation(line: 34, column: 30, scope: !6)
!38 = !DILocation(line: 34, column: 51, scope: !6)
!39 = !DILocation(line: 34, column: 43, scope: !6)
!40 = !DILocation(line: 40, column: 18, scope: !6)
!41 = !DILocation(line: 41, column: 36, scope: !6)
!42 = !DILocation(line: 41, column: 31, scope: !6)
!43 = !DILocation(line: 41, column: 49, scope: !6)
!44 = !DILocation(line: 41, column: 41, scope: !6)
!45 = !DILocation(line: 47, column: 24, scope: !6)
!46 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!47 = distinct !{!47, !48}
!48 = !{!"llvm.loop.unroll.count", i32 1}
!49 = distinct !{!49, !48}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !48}
!52 = !DILocation(line: 53, column: 25, scope: !6)
!53 = !DILocation(line: 26, column: 55, scope: !6)
!54 = !DILocation(line: 27, column: 61, scope: !6)
!55 = !DILocation(line: 44, column: 20, scope: !6)
!56 = !DILocation(line: 28, column: 61, scope: !6)
!57 = !DILocation(line: 45, column: 20, scope: !6)
!58 = !DILocation(line: 29, column: 61, scope: !6)
!59 = !DILocation(line: 46, column: 20, scope: !6)
!60 = !DILocation(line: 34, column: 71, scope: !6)
!61 = !DILocation(line: 35, column: 12, scope: !6)
!62 = !DILocation(line: 0, scope: !6)
!63 = !DILocation(line: 41, column: 69, scope: !6)
!64 = !DILocation(line: 42, column: 34, scope: !6)
!65 = !DILocation(line: 43, column: 19, scope: !6)
!66 = !DILocation(line: 51, column: 20, scope: !6)
!67 = !DILocation(line: 52, column: 20, scope: !6)
!68 = !DILocation(line: 53, column: 37, scope: !6)
!69 = !DILocation(line: 53, column: 4, scope: !6)
