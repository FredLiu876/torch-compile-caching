//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_14 // -- Begin function triton_red_fused__to_copy_add_mul_sum_14
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_14
.visible .entry triton_red_fused__to_copy_add_mul_sum_14(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_9,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_10,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_11,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_12,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_13
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<31>;
	.reg .b32 	%r<181>;
	.reg .f32 	%f<195>;
	.reg .b64 	%rd<32>;
	.loc	1 18 0                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_add_mul_sum_14_param_12];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mul_sum_14_param_10];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mul_sum_14_param_9];
$L__tmp0:
	.loc	1 22 28                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:22:33
	shl.b32 	%r1, %r11, 3;
	.loc	1 23 44                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 2;
	and.b32  	%r3, %r12, 4;
	.loc	1 30 40                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:30:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f187, 0f00000000;
	mov.f32 	%f188, %f187;
	mov.f32 	%f189, %f187;
	mov.f32 	%f190, %f187;
	mov.f32 	%f191, %f187;
	mov.f32 	%f192, %f187;
	mov.f32 	%f193, %f187;
	mov.f32 	%f194, %f187;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:0:40
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mul_sum_14_param_8];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mul_sum_14_param_7];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mul_sum_14_param_6];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mul_sum_14_param_5];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_14_param_4];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_14_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_14_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_14_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_14_param_0];
	bfe.u32 	%r4, %r2, 1, 6;
	.loc	1 30 40                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:30:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r179, %r15, %r3;
	mov.f32 	%f187, 0f00000000;
	mov.b32 	%r18, 0;
	mov.u32 	%r180, %r18;
	mov.f32 	%f188, %f187;
	mov.f32 	%f189, %f187;
	mov.f32 	%f190, %f187;
	mov.f32 	%f191, %f187;
	mov.f32 	%f192, %f187;
	mov.f32 	%f193, %f187;
	mov.f32 	%f194, %f187;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 32 29                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:32:29
	add.s32 	%r60, %r4, %r180;
	setp.lt.s32 	%p2, %r60, %r10;
	.loc	1 36 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:36:34
	mul.wide.s32 	%rd27, %r179, 2;
	add.s64 	%rd12, %rd1, %rd27;
	.loc	1 36 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:36:51
	// begin inline asm
	mov.u32 %r16, %r18;
	mov.u32 %r17, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r16, %r17 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:37:34
	add.s64 	%rd13, %rd2, %rd27;
	.loc	1 37 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:37:51
	// begin inline asm
	mov.u32 %r20, %r18;
	mov.u32 %r21, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r20, %r21 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:38:34
	add.s64 	%rd14, %rd3, %rd27;
	.loc	1 38 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:38:51
	// begin inline asm
	mov.u32 %r24, %r18;
	mov.u32 %r25, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r24, %r25 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 39 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:39:34
	add.s64 	%rd15, %rd4, %rd27;
	.loc	1 39 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:39:51
	// begin inline asm
	mov.u32 %r28, %r18;
	mov.u32 %r29, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r28, %r29 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 40 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:40:34
	mul.wide.s32 	%rd28, %r60, 4;
	add.s64 	%rd16, %rd5, %rd28;
	.loc	1 40 41                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:40:41
	// begin inline asm
	mov.u32 %r32, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r32 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r34 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r36 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r38 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 41 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:41:35
	add.s64 	%rd20, %rd6, %rd27;
	.loc	1 41 52                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:41:52
	// begin inline asm
	mov.u32 %r40, %r18;
	mov.u32 %r41, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r40, %r41 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 42 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:42:35
	add.s64 	%rd21, %rd7, %rd27;
	.loc	1 42 52                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:42:52
	// begin inline asm
	mov.u32 %r44, %r18;
	mov.u32 %r45, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r44, %r45 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 43 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:43:35
	add.s64 	%rd22, %rd8, %rd27;
	.loc	1 43 52                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:43:52
	// begin inline asm
	mov.u32 %r48, %r18;
	mov.u32 %r49, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r48, %r49 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 44 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:44:35
	add.s64 	%rd23, %rd9, %rd28;
	.loc	1 44 42                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:44:42
	// begin inline asm
	mov.u32 %r52, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r52 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r54 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r56 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r58, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r58 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 36 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:36:105
	mov.b32 	{%rs1, %rs2}, %r16;
	cvt.f32.f16 	%f41, %rs1;
	cvt.f32.f16 	%f42, %rs2;
	mov.b32 	{%rs3, %rs4}, %r17;
	cvt.f32.f16 	%f43, %rs3;
	cvt.f32.f16 	%f44, %rs4;
	.loc	1 38 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:38:105
	mov.b32 	{%rs5, %rs6}, %r25;
	cvt.f32.f16 	%f45, %rs6;
	cvt.f32.f16 	%f46, %rs5;
	mov.b32 	{%rs7, %rs8}, %r24;
	cvt.f32.f16 	%f47, %rs8;
	cvt.f32.f16 	%f48, %rs7;
	.loc	1 39 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:39:105
	mov.b32 	{%rs9, %rs10}, %r29;
	cvt.f32.f16 	%f49, %rs10;
	cvt.f32.f16 	%f50, %rs9;
	mov.b32 	{%rs11, %rs12}, %r28;
	cvt.f32.f16 	%f51, %rs12;
	cvt.f32.f16 	%f52, %rs11;
	.loc	1 41 106                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:41:106
	mov.b32 	{%rs13, %rs14}, %r41;
	cvt.f32.f16 	%f53, %rs14;
	cvt.f32.f16 	%f54, %rs13;
	mov.b32 	{%rs15, %rs16}, %r40;
	cvt.f32.f16 	%f55, %rs16;
	cvt.f32.f16 	%f56, %rs15;
	.loc	1 42 106                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:42:106
	mov.b32 	{%rs17, %rs18}, %r45;
	cvt.f32.f16 	%f57, %rs18;
	cvt.f32.f16 	%f58, %rs17;
	mov.b32 	{%rs19, %rs20}, %r44;
	cvt.f32.f16 	%f59, %rs20;
	cvt.f32.f16 	%f60, %rs19;
	.loc	1 37 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:37:105
	mov.b32 	{%rs21, %rs22}, %r48;
	cvt.f32.f16 	%f61, %rs21;
	cvt.f32.f16 	%f62, %rs22;
	mov.b32 	{%rs23, %rs24}, %r49;
	cvt.f32.f16 	%f63, %rs23;
	cvt.f32.f16 	%f64, %rs24;
	mov.b32 	{%rs25, %rs26}, %r20;
	cvt.f32.f16 	%f65, %rs25;
	cvt.f32.f16 	%f66, %rs26;
	mov.b32 	{%rs27, %rs28}, %r21;
	cvt.f32.f16 	%f67, %rs27;
	cvt.f32.f16 	%f68, %rs28;
	.loc	1 40 41                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:40:41
	mov.b32 	%f69, %r58;
	mov.b32 	%f70, %r38;
	.loc	1 46 22                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:46:22
	add.f32 	%f71, %f48, %f52;
	add.f32 	%f72, %f47, %f51;
	add.f32 	%f73, %f46, %f50;
	add.f32 	%f74, %f45, %f49;
	.loc	1 54 24                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:54:24
	add.f32 	%f75, %f56, %f60;
	add.f32 	%f76, %f55, %f59;
	add.f32 	%f77, %f54, %f58;
	add.f32 	%f78, %f53, %f57;
	.loc	1 45 22                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:45:22
	add.f32 	%f79, %f44, %f68;
	add.f32 	%f80, %f43, %f67;
	add.f32 	%f81, %f42, %f66;
	add.f32 	%f82, %f41, %f65;
	add.f32 	%f83, %f78, %f64;
	add.f32 	%f84, %f77, %f63;
	add.f32 	%f85, %f76, %f62;
	add.f32 	%f86, %f75, %f61;
	.loc	1 48 22                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:48:22
	mul.f32 	%f87, %f74, %f70;
	mul.f32 	%f88, %f73, %f70;
	mul.f32 	%f89, %f72, %f70;
	mul.f32 	%f90, %f71, %f70;
	mul.f32 	%f91, %f45, %f69;
	mul.f32 	%f92, %f46, %f69;
	mul.f32 	%f93, %f47, %f69;
	mul.f32 	%f94, %f48, %f69;
	.loc	1 52 25                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:52:25
	fma.rn.f32 	%f95, %f86, %f94, %f191;
	fma.rn.f32 	%f96, %f85, %f93, %f192;
	fma.rn.f32 	%f97, %f84, %f92, %f193;
	fma.rn.f32 	%f98, %f83, %f91, %f194;
	fma.rn.f32 	%f99, %f82, %f90, %f187;
	fma.rn.f32 	%f100, %f81, %f89, %f188;
	fma.rn.f32 	%f101, %f80, %f88, %f189;
	fma.rn.f32 	%f102, %f79, %f87, %f190;
	.loc	1 53 42                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:53:42
	selp.f32 	%f190, %f102, %f190, %p2;
	selp.f32 	%f189, %f101, %f189, %p2;
	selp.f32 	%f188, %f100, %f188, %p2;
	selp.f32 	%f187, %f99, %f187, %p2;
	selp.f32 	%f194, %f98, %f194, %p2;
	selp.f32 	%f193, %f97, %f193, %p2;
	selp.f32 	%f192, %f96, %f192, %p2;
	selp.f32 	%f191, %f95, %f191, %p2;
	.loc	1 30 40                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:30:40
	add.s32 	%r180, %r180, 64;
	add.s32 	%r179, %r179, 262144;
	setp.lt.s32 	%p17, %r180, %r10;
	@%p17 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:44
	and.b32  	%r95, %r2, 30;
	and.b32  	%r96, %r2, 7;
	.loc	1 23 23                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:23
	or.b32  	%r97, %r1, %r96;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r98, %f187;
	shfl.sync.bfly.b32	%r99, %r98, 16, 31, -1;
	mov.b32 	%f103, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f187, %f103;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r100, %f104;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	mov.b32 	%f105, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r102, %f106;
	shfl.sync.bfly.b32	%r103, %r102, 4, 31, -1;
	mov.b32 	%f107, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r104, %f108;
	shfl.sync.bfly.b32	%r105, %r104, 2, 31, -1;
	mov.b32 	%f109, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r106, %f188;
	shfl.sync.bfly.b32	%r107, %r106, 16, 31, -1;
	mov.b32 	%f111, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f188, %f111;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r108, %f112;
	shfl.sync.bfly.b32	%r109, %r108, 8, 31, -1;
	mov.b32 	%f113, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f112, %f113;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r110, %f114;
	shfl.sync.bfly.b32	%r111, %r110, 4, 31, -1;
	mov.b32 	%f115, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f116, %f114, %f115;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r112, %f116;
	shfl.sync.bfly.b32	%r113, %r112, 2, 31, -1;
	mov.b32 	%f117, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r114, %f189;
	shfl.sync.bfly.b32	%r115, %r114, 16, 31, -1;
	mov.b32 	%f119, %r115;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f189, %f119;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r116, %f120;
	shfl.sync.bfly.b32	%r117, %r116, 8, 31, -1;
	mov.b32 	%f121, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r118, %f122;
	shfl.sync.bfly.b32	%r119, %r118, 4, 31, -1;
	mov.b32 	%f123, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r120, %f124;
	shfl.sync.bfly.b32	%r121, %r120, 2, 31, -1;
	mov.b32 	%f125, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r122, %f190;
	shfl.sync.bfly.b32	%r123, %r122, 16, 31, -1;
	mov.b32 	%f127, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f190, %f127;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r124, %f128;
	shfl.sync.bfly.b32	%r125, %r124, 8, 31, -1;
	mov.b32 	%f129, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r126, %f130;
	shfl.sync.bfly.b32	%r127, %r126, 4, 31, -1;
	mov.b32 	%f131, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r128, %f132;
	shfl.sync.bfly.b32	%r129, %r128, 2, 31, -1;
	mov.b32 	%f133, %r129;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p18, %r95, 0;
	shr.u32 	%r130, %r2, 3;
	and.b32  	%r131, %r130, 12;
	shl.b32 	%r132, %r3, 4;
	or.b32  	%r133, %r132, %r131;
	mov.u32 	%r134, global_smem;
	add.s32 	%r61, %r134, %r133;
	mov.b32 	%r62, %f110;
	// begin inline asm
	@%p18 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r61, 16;
	mov.b32 	%r64, %f118;
	// begin inline asm
	@%p18 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r61, 32;
	mov.b32 	%r66, %f126;
	// begin inline asm
	@%p18 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r61, 48;
	mov.b32 	%r68, %f134;
	// begin inline asm
	@%p18 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r2, 32;
	add.s32 	%r70, %r134, %r12;
	// begin inline asm
	@%p22 ld.shared.b32 %r69, [ %r70 + 0 ];
	// end inline asm
	mov.b32 	%f135, %r69;
	shfl.sync.bfly.b32	%r136, %r69, 2, 31, -1;
	mov.b32 	%f136, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f137, %f135, %f136;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r137, %f137;
	shfl.sync.bfly.b32	%r138, %r137, 1, 31, -1;
	mov.b32 	%f138, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r139, %r2, 3;
	setp.eq.s32 	%p34, %r139, 0;
	and.pred  	%p23, %p22, %p34;
	mov.b32 	%r72, %f139;
	// begin inline asm
	@%p23 st.shared.b32 [ %r70 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r140, %r134, %r132;
	ld.shared.u32 	%r74, [%r140];
	ld.shared.u32 	%r75, [%r140+16];
	ld.shared.u32 	%r76, [%r140+32];
	ld.shared.u32 	%r77, [%r140+48];
$L__tmp2:
	.loc	1 65 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:65:37
	bar.sync 	0;
	mad.lo.s32 	%r73, %r3, -12, %r140;
	mov.pred 	%p24, -1;
	// begin inline asm
	@%p24 st.shared.v4.b32 [ %r73 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r141, %r96, 2;
	add.s32 	%r142, %r134, %r141;
	ld.shared.f32 	%f140, [%r142];
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	mov.b32 	%r143, %f191;
	shfl.sync.bfly.b32	%r144, %r143, 16, 31, -1;
	mov.b32 	%f141, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f191, %f141;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r145, %f142;
	shfl.sync.bfly.b32	%r146, %r145, 8, 31, -1;
	mov.b32 	%f143, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f142, %f143;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r147, %f144;
	shfl.sync.bfly.b32	%r148, %r147, 4, 31, -1;
	mov.b32 	%f145, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r149, %f146;
	shfl.sync.bfly.b32	%r150, %r149, 2, 31, -1;
	mov.b32 	%f147, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f148, %f146, %f147;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r151, %f192;
	shfl.sync.bfly.b32	%r152, %r151, 16, 31, -1;
	mov.b32 	%f149, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f192, %f149;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r153, %f150;
	shfl.sync.bfly.b32	%r154, %r153, 8, 31, -1;
	mov.b32 	%f151, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r155, %f152;
	shfl.sync.bfly.b32	%r156, %r155, 4, 31, -1;
	mov.b32 	%f153, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f154, %f152, %f153;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r157, %f154;
	shfl.sync.bfly.b32	%r158, %r157, 2, 31, -1;
	mov.b32 	%f155, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f156, %f154, %f155;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r159, %f193;
	shfl.sync.bfly.b32	%r160, %r159, 16, 31, -1;
	mov.b32 	%f157, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f193, %f157;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r161, %f158;
	shfl.sync.bfly.b32	%r162, %r161, 8, 31, -1;
	mov.b32 	%f159, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f160, %f158, %f159;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r163, %f160;
	shfl.sync.bfly.b32	%r164, %r163, 4, 31, -1;
	mov.b32 	%f161, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f162, %f160, %f161;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r165, %f162;
	shfl.sync.bfly.b32	%r166, %r165, 2, 31, -1;
	mov.b32 	%f163, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f164, %f162, %f163;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r167, %f194;
	shfl.sync.bfly.b32	%r168, %r167, 16, 31, -1;
	mov.b32 	%f165, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f166, %f194, %f165;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r169, %f166;
	shfl.sync.bfly.b32	%r170, %r169, 8, 31, -1;
	mov.b32 	%f167, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f168, %f166, %f167;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r171, %f168;
	shfl.sync.bfly.b32	%r172, %r171, 4, 31, -1;
	mov.b32 	%f169, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f170, %f168, %f169;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r173, %f170;
	shfl.sync.bfly.b32	%r174, %r173, 2, 31, -1;
	mov.b32 	%f171, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r79, %f148;
	// begin inline asm
	@%p18 st.shared.b32 [ %r61 + 0 ], %r79;
	// end inline asm
	mov.b32 	%r81, %f156;
	// begin inline asm
	@%p18 st.shared.b32 [ %r63 + 0 ], %r81;
	// end inline asm
	mov.b32 	%r83, %f164;
	// begin inline asm
	@%p18 st.shared.b32 [ %r65 + 0 ], %r83;
	// end inline asm
	mov.b32 	%r85, %f172;
	// begin inline asm
	@%p18 st.shared.b32 [ %r67 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r86, [ %r70 + 0 ];
	// end inline asm
	mov.b32 	%f173, %r86;
	shfl.sync.bfly.b32	%r175, %r86, 2, 31, -1;
	mov.b32 	%f174, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f175, %f173, %f174;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r176, %f175;
	shfl.sync.bfly.b32	%r177, %r176, 1, 31, -1;
	mov.b32 	%f176, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f177, %f175, %f176;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f177;
	// begin inline asm
	@%p23 st.shared.b32 [ %r70 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r91, [%r140];
	ld.shared.u32 	%r92, [%r140+16];
	ld.shared.u32 	%r93, [%r140+32];
	ld.shared.u32 	%r94, [%r140+48];
$L__tmp4:
	.loc	1 66 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:37
	bar.sync 	0;
	// begin inline asm
	@%p24 st.shared.v4.b32 [ %r73 + 0 ], { %r91, %r92, %r93, %r94 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f178, [%r142];
	.loc	1 65 25                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:65:25
	mul.wide.s32 	%rd31, %r97, 2;
	add.s64 	%rd29, %rd10, %rd31;
	.loc	1 65 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:65:37
	cvt.rn.f16.f32 	%rs29, %f140;
	and.b32  	%r178, %r2, 120;
	setp.eq.s32 	%p32, %r178, 0;
	// begin inline asm
	@%p32 st.global.b16 [ %rd29 + 0 ], { %rs29 };
	// end inline asm
	.loc	1 66 25                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:25
	add.s64 	%rd30, %rd11, %rd31;
	.loc	1 66 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:37
	cvt.rn.f16.f32 	%rs30, %f178;
	// begin inline asm
	@%p32 st.global.b16 [ %rd30 + 0 ], { %rs30 };
	// end inline asm
	.loc	1 66 4                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/z4/cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 52
.b8 114
.b8 97
.b8 97
.b8 120
.b8 98
.b8 120
.b8 98
.b8 121
.b8 55
.b8 100
.b8 108
.b8 116
.b8 100
.b8 105
.b8 107
.b8 98
.b8 114
.b8 112
.b8 109
.b8 121
.b8 111
.b8 120
.b8 118
.b8 98
.b8 97
.b8 121
.b8 119
.b8 116
.b8 111
.b8 53
.b8 119
.b8 99
.b8 50
.b8 116
.b8 55
.b8 114
.b8 117
.b8 115
.b8 54
.b8 122
.b8 104
.b8 110
.b8 122
.b8 107
.b8 113
.b8 114
.b8 116
.b8 109
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 122
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
