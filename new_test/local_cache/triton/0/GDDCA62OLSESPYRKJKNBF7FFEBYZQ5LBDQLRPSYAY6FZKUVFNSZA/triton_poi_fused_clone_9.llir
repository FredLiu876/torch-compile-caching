; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @triton_poi_fused_clone_9(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr !dbg !6 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %6 = shl i32 %5, 8, !dbg !10
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %8 = shl i32 %7, 1, !dbg !11
  %9 = and i32 %8, 254, !dbg !11
  %10 = or disjoint i32 %9, %6, !dbg !12
  %11 = icmp slt i32 %10, %2, !dbg !13
  %12 = sdiv i32 %10, 128, !dbg !14
  %13 = mul i32 %12, 384, !dbg !15
  %14 = add i32 %13, %10, !dbg !15
  %15 = sext i32 %14 to i64, !dbg !16
  %16 = getelementptr half, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %11) #1, !dbg !17
  %18 = bitcast i32 %17 to <2 x half>, !dbg !17
  %19 = add i32 %14, 128, !dbg !18
  %20 = sext i32 %19 to i64, !dbg !19
  %21 = getelementptr half, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !20
  %23 = bitcast i32 %22 to <2 x half>, !dbg !20
  %24 = add i32 %14, 256, !dbg !21
  %25 = sext i32 %24 to i64, !dbg !22
  %26 = getelementptr half, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %11) #1, !dbg !23
  %28 = bitcast i32 %27 to <2 x half>, !dbg !23
  %29 = add i32 %14, 384, !dbg !24
  %30 = sext i32 %29 to i64, !dbg !25
  %31 = getelementptr half, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #1, !dbg !26
  %33 = bitcast i32 %32 to <2 x half>, !dbg !26
  %34 = sext i32 %10 to i64, !dbg !27
  %35 = getelementptr half, ptr addrspace(1) %1, i64 %34, !dbg !27
  %36 = fpext <2 x half> %18 to <2 x float>, !dbg !28
  %37 = fpext <2 x half> %23 to <2 x float>, !dbg !29
  %38 = fpext <2 x half> %28 to <2 x float>, !dbg !30
  %39 = fpext <2 x half> %33 to <2 x float>, !dbg !31
  %40 = fadd <2 x float> %36, %37, !dbg !32
  %41 = fadd <2 x float> %40, %38, !dbg !33
  %42 = fadd <2 x float> %41, %39, !dbg !34
  %43 = fptrunc <2 x float> %42 to <2 x half>, !dbg !35
  %44 = bitcast <2 x half> %43 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %44, ptr addrspace(1) %35, i1 %11) #1, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py", directory: "/tmp/torchinductor_root/kq")
!4 = !{ptr @triton_poi_fused_clone_9, !"reqntidx", i32 128}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_clone_9", linkageName: "triton_poi_fused_clone_9", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 21, column: 21, scope: !6)
!14 = !DILocation(line: 23, column: 19, scope: !6)
!15 = !DILocation(line: 25, column: 35, scope: !6)
!16 = !DILocation(line: 25, column: 30, scope: !6)
!17 = !DILocation(line: 25, column: 44, scope: !6)
!18 = !DILocation(line: 26, column: 41, scope: !6)
!19 = !DILocation(line: 26, column: 30, scope: !6)
!20 = !DILocation(line: 26, column: 50, scope: !6)
!21 = !DILocation(line: 27, column: 41, scope: !6)
!22 = !DILocation(line: 27, column: 30, scope: !6)
!23 = !DILocation(line: 27, column: 50, scope: !6)
!24 = !DILocation(line: 28, column: 41, scope: !6)
!25 = !DILocation(line: 28, column: 30, scope: !6)
!26 = !DILocation(line: 28, column: 50, scope: !6)
!27 = !DILocation(line: 32, column: 25, scope: !6)
!28 = !DILocation(line: 25, column: 54, scope: !6)
!29 = !DILocation(line: 26, column: 60, scope: !6)
!30 = !DILocation(line: 27, column: 60, scope: !6)
!31 = !DILocation(line: 28, column: 60, scope: !6)
!32 = !DILocation(line: 29, column: 18, scope: !6)
!33 = !DILocation(line: 30, column: 18, scope: !6)
!34 = !DILocation(line: 31, column: 18, scope: !6)
!35 = !DILocation(line: 32, column: 36, scope: !6)
!36 = !DILocation(line: 32, column: 4, scope: !6)
