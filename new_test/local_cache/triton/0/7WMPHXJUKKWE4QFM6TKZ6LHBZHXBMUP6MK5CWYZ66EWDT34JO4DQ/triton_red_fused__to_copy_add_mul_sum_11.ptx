//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_11 // -- Begin function triton_red_fused__to_copy_add_mul_sum_11
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_11
.visible .entry triton_red_fused__to_copy_add_mul_sum_11(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_5,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_11_param_6,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_11_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_11_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<18>;
	.reg .b32 	%r<109>;
	.reg .f32 	%f<100>;
	.reg .b64 	%rd<19>;
	.loc	1 18 0                          // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_add_mul_sum_11_param_7];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mul_sum_11_param_5];
$L__tmp0:
	.loc	1 22 28                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:22:33
	shl.b32 	%r1, %r11, 3;
	.loc	1 23 44                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 2;
	and.b32  	%r3, %r12, 4;
	.loc	1 29 40                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:29:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f96, 0f00000000;
	mov.f32 	%f97, %f96;
	mov.f32 	%f98, %f96;
	mov.f32 	%f99, %f96;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:0:40
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_11_param_4];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_11_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_11_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_11_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_11_param_0];
	bfe.u32 	%r4, %r2, 1, 6;
	.loc	1 29 40                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:29:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r107, %r15, %r3;
	mov.f32 	%f96, 0f00000000;
	mov.b32 	%r18, 0;
	mov.u32 	%r108, %r18;
	mov.f32 	%f97, %f96;
	mov.f32 	%f98, %f96;
	mov.f32 	%f99, %f96;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 31 29                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:31:29
	add.s32 	%r40, %r4, %r108;
	setp.lt.s32 	%p2, %r40, %r10;
	.loc	1 35 34                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:35:34
	mul.wide.s32 	%rd15, %r107, 2;
	add.s64 	%rd7, %rd1, %rd15;
	.loc	1 35 51                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:35:51
	// begin inline asm
	mov.u32 %r16, %r18;
	mov.u32 %r17, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r16, %r17 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 34                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:36:34
	add.s64 	%rd8, %rd2, %rd15;
	.loc	1 36 51                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:36:51
	// begin inline asm
	mov.u32 %r20, %r18;
	mov.u32 %r21, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r20, %r21 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 34                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:37:34
	add.s64 	%rd9, %rd3, %rd15;
	.loc	1 37 51                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:37:51
	// begin inline asm
	mov.u32 %r24, %r18;
	mov.u32 %r25, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r24, %r25 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:38:34
	add.s64 	%rd10, %rd4, %rd15;
	.loc	1 38 51                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:38:51
	// begin inline asm
	mov.u32 %r28, %r18;
	mov.u32 %r29, %r18;
	@%p2 ld.global.L1::evict_first.v2.b32 { %r28, %r29 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 39 34                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:39:34
	mul.wide.s32 	%rd16, %r40, 4;
	add.s64 	%rd11, %rd5, %rd16;
	.loc	1 39 41                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:39:41
	// begin inline asm
	mov.u32 %r32, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r32 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r34 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r36 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, %r18;
	@%p2 ld.global.L1::evict_last.b32 { %r38 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 35 105                        // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:35:105
	mov.b32 	{%rs1, %rs2}, %r17;
	cvt.f32.f16 	%f21, %rs2;
	cvt.f32.f16 	%f22, %rs1;
	mov.b32 	{%rs3, %rs4}, %r16;
	cvt.f32.f16 	%f23, %rs4;
	cvt.f32.f16 	%f24, %rs3;
	.loc	1 36 105                        // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:36:105
	mov.b32 	{%rs5, %rs6}, %r21;
	cvt.f32.f16 	%f25, %rs6;
	cvt.f32.f16 	%f26, %rs5;
	mov.b32 	{%rs7, %rs8}, %r20;
	cvt.f32.f16 	%f27, %rs8;
	cvt.f32.f16 	%f28, %rs7;
	.loc	1 37 105                        // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:37:105
	mov.b32 	{%rs9, %rs10}, %r24;
	cvt.f32.f16 	%f29, %rs9;
	cvt.f32.f16 	%f30, %rs10;
	mov.b32 	{%rs11, %rs12}, %r25;
	cvt.f32.f16 	%f31, %rs11;
	cvt.f32.f16 	%f32, %rs12;
	.loc	1 38 105                        // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:38:105
	mov.b32 	{%rs13, %rs14}, %r28;
	cvt.f32.f16 	%f33, %rs13;
	cvt.f32.f16 	%f34, %rs14;
	mov.b32 	{%rs15, %rs16}, %r29;
	cvt.f32.f16 	%f35, %rs15;
	cvt.f32.f16 	%f36, %rs16;
	.loc	1 40 22                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:40:22
	add.f32 	%f37, %f24, %f28;
	add.f32 	%f38, %f23, %f27;
	add.f32 	%f39, %f22, %f26;
	add.f32 	%f40, %f21, %f25;
	.loc	1 41 22                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:41:22
	add.f32 	%f41, %f40, %f32;
	add.f32 	%f42, %f39, %f31;
	add.f32 	%f43, %f38, %f30;
	add.f32 	%f44, %f37, %f29;
	.loc	1 43 22                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:43:22
	mov.b32 	%f45, %r38;
	mul.f32 	%f46, %f45, %f36;
	mul.f32 	%f47, %f45, %f35;
	mul.f32 	%f48, %f45, %f34;
	mul.f32 	%f49, %f45, %f33;
	.loc	1 47 25                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:47:25
	fma.rn.f32 	%f50, %f44, %f49, %f96;
	fma.rn.f32 	%f51, %f43, %f48, %f97;
	fma.rn.f32 	%f52, %f42, %f47, %f98;
	fma.rn.f32 	%f53, %f41, %f46, %f99;
	.loc	1 48 42                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:48:42
	selp.f32 	%f99, %f53, %f99, %p2;
	selp.f32 	%f98, %f52, %f98, %p2;
	selp.f32 	%f97, %f51, %f97, %p2;
	selp.f32 	%f96, %f50, %f96, %p2;
	.loc	1 29 40                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:29:40
	add.s32 	%r108, %r108, 64;
	add.s32 	%r107, %r107, 262144;
	setp.lt.s32 	%p10, %r108, %r10;
	@%p10 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:23:44
	and.b32  	%r58, %r2, 30;
	and.b32  	%r59, %r2, 7;
	.loc	1 23 23                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:23:23
	or.b32  	%r60, %r1, %r59;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r61, %f96;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f54, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f96, %f54;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r63, %f55;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f56, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r65, %f57;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f58, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r67, %f59;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f60, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r69, %f97;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f62, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f97, %f62;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r71, %f63;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f64, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r73, %f65;
	shfl.sync.bfly.b32	%r74, %r73, 4, 31, -1;
	mov.b32 	%f66, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r75, %f67;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f68, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r77, %f98;
	shfl.sync.bfly.b32	%r78, %r77, 16, 31, -1;
	mov.b32 	%f70, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f98, %f70;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r79, %f71;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f72, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r81, %f73;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f74, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r83, %f75;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f76, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r85, %f99;
	shfl.sync.bfly.b32	%r86, %r85, 16, 31, -1;
	mov.b32 	%f78, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f99, %f78;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r87, %f79;
	shfl.sync.bfly.b32	%r88, %r87, 8, 31, -1;
	mov.b32 	%f80, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r89, %f81;
	shfl.sync.bfly.b32	%r90, %r89, 4, 31, -1;
	mov.b32 	%f82, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r91, %f83;
	shfl.sync.bfly.b32	%r92, %r91, 2, 31, -1;
	mov.b32 	%f84, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p11, %r58, 0;
	shr.u32 	%r93, %r2, 3;
	and.b32  	%r94, %r93, 12;
	shl.b32 	%r95, %r3, 4;
	or.b32  	%r96, %r95, %r94;
	mov.u32 	%r97, global_smem;
	add.s32 	%r41, %r97, %r96;
	mov.b32 	%r42, %f61;
	// begin inline asm
	@%p11 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r41, 16;
	mov.b32 	%r44, %f69;
	// begin inline asm
	@%p11 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r41, 32;
	mov.b32 	%r46, %f77;
	// begin inline asm
	@%p11 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r41, 48;
	mov.b32 	%r48, %f85;
	// begin inline asm
	@%p11 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r2, 32;
	add.s32 	%r50, %r97, %r12;
	// begin inline asm
	@%p15 ld.shared.b32 %r49, [ %r50 + 0 ];
	// end inline asm
	mov.b32 	%f86, %r49;
	shfl.sync.bfly.b32	%r99, %r49, 2, 31, -1;
	mov.b32 	%f87, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r100, %f88;
	shfl.sync.bfly.b32	%r101, %r100, 1, 31, -1;
	mov.b32 	%f89, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r102, %r2, 3;
	setp.eq.s32 	%p19, %r102, 0;
	and.pred  	%p16, %p15, %p19;
	mov.b32 	%r52, %f90;
	// begin inline asm
	@%p16 st.shared.b32 [ %r50 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r103, %r97, %r95;
	ld.shared.u32 	%r54, [%r103];
	ld.shared.u32 	%r55, [%r103+16];
	ld.shared.u32 	%r56, [%r103+32];
	ld.shared.u32 	%r57, [%r103+48];
$L__tmp2:
	.loc	1 50 37                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:50:37
	bar.sync 	0;
	mad.lo.s32 	%r53, %r3, -12, %r103;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.v4.b32 [ %r53 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r104, %r59, 2;
	add.s32 	%r105, %r97, %r104;
	ld.shared.f32 	%f91, [%r105];
	.loc	1 50 25                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:50:25
	mul.wide.s32 	%rd18, %r60, 2;
	add.s64 	%rd17, %rd6, %rd18;
	.loc	1 50 37                         // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:50:37
	cvt.rn.f16.f32 	%rs17, %f91;
	and.b32  	%r106, %r2, 120;
	setp.eq.s32 	%p18, %r106, 0;
	// begin inline asm
	@%p18 st.global.b16 [ %rd17 + 0 ], { %rs17 };
	// end inline asm
	.loc	1 50 4                          // cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/yk/cykee6clrweh6jbbxbmrpngyewr62qpmcg4hw7n6oizkget7ik2a.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 107
.b8 101
.b8 101
.b8 54
.b8 99
.b8 108
.b8 114
.b8 119
.b8 101
.b8 104
.b8 54
.b8 106
.b8 98
.b8 98
.b8 120
.b8 98
.b8 109
.b8 114
.b8 112
.b8 110
.b8 103
.b8 121
.b8 101
.b8 119
.b8 114
.b8 54
.b8 50
.b8 113
.b8 112
.b8 109
.b8 99
.b8 103
.b8 52
.b8 104
.b8 119
.b8 55
.b8 110
.b8 54
.b8 111
.b8 105
.b8 122
.b8 107
.b8 103
.b8 101
.b8 116
.b8 55
.b8 105
.b8 107
.b8 50
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 121
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
