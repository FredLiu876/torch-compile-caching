#blocked = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_clone_9(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":18:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":18:0)) attributes {noinline = false} {
    %cst = arith.constant dense<384> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<512> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<128> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg2 : i32 -> tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.cmpi slt, %4, %5 : tensor<128xi32, #blocked> loc(#loc6)
    %7 = arith.remsi %4, %cst_2 : tensor<128xi32, #blocked> loc(#loc7)
    %8 = arith.divsi %4, %cst_2 : tensor<128xi32, #blocked> loc(#loc8)
    %9 = arith.muli %8, %cst_1 : tensor<128xi32, #blocked> loc(#loc9)
    %10 = arith.addi %7, %9 : tensor<128xi32, #blocked> loc(#loc10)
    %11 = tt.splat %arg0 : !tt.ptr<f16> -> tensor<128x!tt.ptr<f16>, #blocked> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<128x!tt.ptr<f16>, #blocked>, tensor<128xi32, #blocked> loc(#loc11)
    %13 = tt.load %12, %6 : tensor<128x!tt.ptr<f16>, #blocked> loc(#loc12)
    %14 = arith.extf %13 : tensor<128xf16, #blocked> to tensor<128xf32, #blocked> loc(#loc13)
    %15 = arith.addi %7, %cst_2 : tensor<128xi32, #blocked> loc(#loc14)
    %16 = arith.addi %15, %9 : tensor<128xi32, #blocked> loc(#loc15)
    %17 = tt.addptr %11, %16 : tensor<128x!tt.ptr<f16>, #blocked>, tensor<128xi32, #blocked> loc(#loc16)
    %18 = tt.load %17, %6 : tensor<128x!tt.ptr<f16>, #blocked> loc(#loc17)
    %19 = arith.extf %18 : tensor<128xf16, #blocked> to tensor<128xf32, #blocked> loc(#loc18)
    %20 = arith.addi %7, %cst_0 : tensor<128xi32, #blocked> loc(#loc19)
    %21 = arith.addi %20, %9 : tensor<128xi32, #blocked> loc(#loc20)
    %22 = tt.addptr %11, %21 : tensor<128x!tt.ptr<f16>, #blocked>, tensor<128xi32, #blocked> loc(#loc21)
    %23 = tt.load %22, %6 : tensor<128x!tt.ptr<f16>, #blocked> loc(#loc22)
    %24 = arith.extf %23 : tensor<128xf16, #blocked> to tensor<128xf32, #blocked> loc(#loc23)
    %25 = arith.addi %7, %cst : tensor<128xi32, #blocked> loc(#loc24)
    %26 = arith.addi %25, %9 : tensor<128xi32, #blocked> loc(#loc25)
    %27 = tt.addptr %11, %26 : tensor<128x!tt.ptr<f16>, #blocked>, tensor<128xi32, #blocked> loc(#loc26)
    %28 = tt.load %27, %6 : tensor<128x!tt.ptr<f16>, #blocked> loc(#loc27)
    %29 = arith.extf %28 : tensor<128xf16, #blocked> to tensor<128xf32, #blocked> loc(#loc28)
    %30 = arith.addf %14, %19 : tensor<128xf32, #blocked> loc(#loc29)
    %31 = arith.addf %30, %24 : tensor<128xf32, #blocked> loc(#loc30)
    %32 = arith.addf %31, %29 : tensor<128xf32, #blocked> loc(#loc31)
    %33 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<128x!tt.ptr<f16>, #blocked> loc(#loc32)
    %34 = tt.addptr %33, %4 : tensor<128x!tt.ptr<f16>, #blocked>, tensor<128xi32, #blocked> loc(#loc32)
    %35 = arith.truncf %32 : tensor<128xf32, #blocked> to tensor<128xf16, #blocked> loc(#loc33)
    tt.store %34, %35, %6 : tensor<128x!tt.ptr<f16>, #blocked> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":19:28)
#loc3 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":19:33)
#loc4 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":20:36)
#loc5 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":20:23)
#loc6 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":21:21)
#loc7 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":22:19)
#loc8 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":23:19)
#loc9 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":25:39)
#loc10 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":25:35)
#loc11 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":25:30)
#loc12 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":25:44)
#loc13 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":25:54)
#loc14 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":26:36)
#loc15 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":26:41)
#loc16 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":26:30)
#loc17 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":26:50)
#loc18 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":26:60)
#loc19 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":27:36)
#loc20 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":27:41)
#loc21 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":27:30)
#loc22 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":27:50)
#loc23 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":27:60)
#loc24 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":28:36)
#loc25 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":28:41)
#loc26 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":28:30)
#loc27 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":28:50)
#loc28 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":28:60)
#loc29 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":29:18)
#loc30 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":30:18)
#loc31 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":31:18)
#loc32 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":32:25)
#loc33 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":32:36)
#loc34 = loc("/tmp/torchinductor_root/kq/ckqknodikymjo64fcqvwkhk3b3gcdw3zuc22qc3lulj7243tdkes.py":32:4)
