#blocked = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":18:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 2 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_scalar_tensor_where_5(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":18:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":18:0), %arg2: i32 loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":18:0), %arg3: i32 loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":18:0), %arg4: i32 loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":18:0)) attributes {noinline = false} {
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<true> : tensor<128xi1, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<128xi64, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<128xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked1> loc(#loc4)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<128xi32, #blocked1> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<128xi32, #blocked1> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<128xi32, #blocked> loc(#loc5)
    %8 = tt.splat %arg4 : i32 -> tensor<128xi32, #blocked1> loc(#loc6)
    %9 = tt.splat %arg4 : i32 -> tensor<128xi32, #blocked> loc(#loc6)
    %10 = arith.cmpi slt, %6, %8 : tensor<128xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %7, %9 : tensor<128xi32, #blocked> loc(#loc6)
    %12 = tt.splat %arg2 : i32 -> tensor<128xi32, #blocked1> loc(#loc7)
    %13 = tt.splat %arg2 : i32 -> tensor<128xi32, #blocked> loc(#loc7)
    %14 = arith.remsi %6, %12 : tensor<128xi32, #blocked1> loc(#loc7)
    %15 = arith.remsi %7, %13 : tensor<128xi32, #blocked> loc(#loc7)
    %16 = arith.divsi %6, %12 : tensor<128xi32, #blocked1> loc(#loc8)
    %17 = tt.splat %arg3 : i32 -> tensor<128xi32, #blocked> loc(#loc9)
    %18 = arith.cmpi slt, %15, %17 : tensor<128xi32, #blocked> loc(#loc9)
    %19 = arith.xori %11, %cst : tensor<128xi1, #blocked> loc(#loc10)
    %20 = arith.ori %18, %19 : tensor<128xi1, #blocked> loc(#loc11)
    tt.assert %20, "index out of bounds: x0 < ks1" : tensor<128xi1, #blocked> loc(#loc12)
    %21 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked1> loc(#loc13)
    %22 = tt.addptr %21, %14 : tensor<128x!tt.ptr<i64>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc13)
    %23 = tt.load %22, %10 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked1> loc(#loc14)
    %24 = arith.cmpi sle, %14, %16 : tensor<128xi32, #blocked1> loc(#loc15)
    %25 = arith.cmpi ne, %23, %cst_0 : tensor<128xi64, #blocked1> loc(#loc16)
    %26 = arith.andi %24, %25 : tensor<128xi1, #blocked1> loc(#loc17)
    %27 = arith.select %26, %cst_2, %cst_1 : tensor<128xi1, #blocked1>, tensor<128xf32, #blocked1> loc(#loc18)
    %28 = tt.splat %arg1 : !tt.ptr<f16> -> tensor<128x!tt.ptr<f16>, #blocked1> loc(#loc19)
    %29 = tt.addptr %28, %6 : tensor<128x!tt.ptr<f16>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc19)
    %30 = arith.truncf %27 : tensor<128xf32, #blocked1> to tensor<128xf16, #blocked1> loc(#loc20)
    tt.store %29, %30, %10 : tensor<128x!tt.ptr<f16>, #blocked1> loc(#loc20)
    tt.return loc(#loc21)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":19:28)
#loc3 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":19:33)
#loc4 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":20:36)
#loc5 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":20:23)
#loc6 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":21:21)
#loc7 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":22:19)
#loc8 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":23:19)
#loc9 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":25:27)
#loc10 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":25:36)
#loc11 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":25:34)
#loc12 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":25:44)
#loc13 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":26:30)
#loc14 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":26:35)
#loc15 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":29:19)
#loc16 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":32:20)
#loc17 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":33:18)
#loc18 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":36:33)
#loc19 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":37:25)
#loc20 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":37:37)
#loc21 = loc("/tmp/torchinductor_root/bi/cbi73qafz4gvj757kgkspff5kwwdua2pb7minxgo4jni7rbdprx2.py":37:4)
