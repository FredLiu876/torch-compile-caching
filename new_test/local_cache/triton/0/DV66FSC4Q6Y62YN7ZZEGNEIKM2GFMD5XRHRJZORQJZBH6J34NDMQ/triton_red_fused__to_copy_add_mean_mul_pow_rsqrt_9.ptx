//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9 // -- Begin function triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9
.visible .entry triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5,
	.param .u32 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<44>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<101>;
	.reg .f32 	%f<93>;
	.reg .b64 	%rd<52>;
	.loc	1 18 0                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:18:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_4];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_3];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_1];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_0];
$L__tmp0:
	.loc	1 22 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:22:28
	mov.u32 	%r1, %ctaid.x;
	ld.param.u32 	%r7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_5];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mean_mul_pow_rsqrt_9_param_2];
	.loc	1 24 21                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:24:21
	setp.lt.s32 	%p31, %r1, %r7;
	.loc	1 25 37                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:25:37
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	shr.u32 	%r5, %r3, 5;
	shl.b32 	%r8, %r3, 1;
	and.b32  	%r6, %r8, 1022;
	.loc	1 35 46                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:46
	shl.b32 	%r9, %r1, 12;
	or.b32  	%r10, %r6, %r9;
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	cvt.s64.s32 	%rd1, %r10;
	mul.wide.s32 	%rd8, %r10, 2;
	add.s64 	%rd2, %rd7, %rd8;
	shl.b64 	%rd51, %rd1, 1;
	@%p31 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.us.preheader
	.loc	1 0 34                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:0:34
	mov.b32 	%r32, 0;
	mov.pred 	%p14, -1;
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r31, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r31 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd23, %rd3, %rd51;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r33, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r33 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	add.s64 	%rd25, %rd2, 2048;
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd26, %rd23, 2048;
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	add.s64 	%rd28, %rd2, 4096;
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd29, %rd23, 4096;
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	add.s64 	%rd31, %rd2, 6144;
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd32, %rd23, 6144;
	.loc	1 35 113                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:113
	mov.b32 	{%rs1, %rs2}, %r31;
	cvt.f32.f16 	%f4, %rs2;
	cvt.f32.f16 	%f5, %rs1;
	.loc	1 36 117                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:117
	mov.b32 	{%rs3, %rs4}, %r33;
	cvt.f32.f16 	%f6, %rs4;
	cvt.f32.f16 	%f7, %rs3;
	.loc	1 37 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:37:22
	add.f32 	%f8, %f5, %f7;
	add.f32 	%f9, %f4, %f6;
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	cvt.rn.f16x2.f32 	%r35, %f9, %f8;
	// begin inline asm
	@%p14 st.global.b32 [ %rd23 + 0 ], { %r35 };
	// end inline asm
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r36, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r36 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 35 113                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:113
	mov.b32 	{%rs5, %rs6}, %r36;
	cvt.f32.f16 	%f10, %rs5;
	cvt.f32.f16 	%f11, %rs6;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r38, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r38 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 36 117                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:117
	mov.b32 	{%rs7, %rs8}, %r38;
	cvt.f32.f16 	%f12, %rs7;
	cvt.f32.f16 	%f13, %rs8;
	.loc	1 37 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:37:22
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f10, %f12;
	.loc	1 39 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:39:22
	mul.f32 	%f16, %f15, %f15;
	mul.f32 	%f17, %f14, %f14;
	.loc	1 41 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:41:23
	fma.rn.f32 	%f18, %f9, %f9, %f17;
	fma.rn.f32 	%f19, %f8, %f8, %f16;
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	cvt.rn.f16x2.f32 	%r40, %f14, %f15;
	// begin inline asm
	@%p14 st.global.b32 [ %rd26 + 0 ], { %r40 };
	// end inline asm
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r41, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r41 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 35 113                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:113
	mov.b32 	{%rs9, %rs10}, %r41;
	cvt.f32.f16 	%f20, %rs9;
	cvt.f32.f16 	%f21, %rs10;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r43, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r43 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 36 117                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:117
	mov.b32 	{%rs11, %rs12}, %r43;
	cvt.f32.f16 	%f22, %rs11;
	cvt.f32.f16 	%f23, %rs12;
	.loc	1 37 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:37:22
	add.f32 	%f24, %f21, %f23;
	add.f32 	%f25, %f20, %f22;
	.loc	1 41 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:41:23
	fma.rn.f32 	%f26, %f25, %f25, %f19;
	fma.rn.f32 	%f27, %f24, %f24, %f18;
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	cvt.rn.f16x2.f32 	%r45, %f24, %f25;
	// begin inline asm
	@%p14 st.global.b32 [ %rd29 + 0 ], { %r45 };
	// end inline asm
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r46, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r46 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 35 113                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:113
	mov.b32 	{%rs13, %rs14}, %r46;
	cvt.f32.f16 	%f28, %rs14;
	cvt.f32.f16 	%f29, %rs13;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r48, %r32;
	@%p14 ld.global.L1::evict_first.b32 { %r48 }, [ %rd32 + 0 ];
	// end inline asm
	.loc	1 36 117                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:117
	mov.b32 	{%rs15, %rs16}, %r48;
	cvt.f32.f16 	%f30, %rs16;
	cvt.f32.f16 	%f31, %rs15;
	.loc	1 37 22                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:37:22
	add.f32 	%f32, %f29, %f31;
	add.f32 	%f33, %f28, %f30;
	.loc	1 41 23                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:41:23
	fma.rn.f32 	%f34, %f33, %f33, %f27;
	fma.rn.f32 	%f35, %f32, %f32, %f26;
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	cvt.rn.f16x2.f32 	%r50, %f33, %f32;
	// begin inline asm
	@%p14 st.global.b32 [ %rd32 + 0 ], { %r50 };
	// end inline asm
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	add.f32 	%f92, %f35, %f34;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_1:                              // %.split.preheader
	.loc	2 0 36                          // standard.py:0:36
	mov.b32 	%r12, 0;
	mov.pred 	%p2, 0;
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r11, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r11 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd10, %rd3, %rd51;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r13, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	add.f16x2 	%r15, %r11, %r13;
	// begin inline asm
	@%p2 st.global.b32 [ %rd10 + 0 ], { %r15 };
	// end inline asm
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	add.s64 	%rd12, %rd2, 2048;
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r16, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd13, %rd10, 2048;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r18, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r18 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	add.f16x2 	%r20, %r16, %r18;
	// begin inline asm
	@%p2 st.global.b32 [ %rd13 + 0 ], { %r20 };
	// end inline asm
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	add.s64 	%rd15, %rd2, 4096;
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r21, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r21 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd16, %rd10, 4096;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r23, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r23 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	add.f16x2 	%r25, %r21, %r23;
	// begin inline asm
	@%p2 st.global.b32 [ %rd16 + 0 ], { %r25 };
	// end inline asm
	.loc	1 35 34                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:34
	add.s64 	%rd18, %rd2, 6144;
	.loc	1 35 51                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:35:51
	// begin inline asm
	mov.u32 %r26, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r26 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 36 38                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:38
	add.s64 	%rd19, %rd10, 6144;
	.loc	1 36 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:36:55
	// begin inline asm
	mov.u32 %r28, %r12;
	@%p2 ld.global.L1::evict_first.b32 { %r28 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 43 55                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:43:55
	add.f16x2 	%r30, %r26, %r28;
	// begin inline asm
	@%p2 st.global.b32 [ %rd19 + 0 ], { %r30 };
	// end inline asm
	mov.f32 	%f92, 0f00000000;
$L__BB0_3:                              // %.split9.us
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r78, %f92;
	shfl.sync.bfly.b32	%r79, %r78, 16, 31, -1;
	mov.b32 	%f36, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f92, %f36;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r80, %f37;
	shfl.sync.bfly.b32	%r81, %r80, 8, 31, -1;
	mov.b32 	%f38, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r82, %f39;
	shfl.sync.bfly.b32	%r83, %r82, 4, 31, -1;
	mov.b32 	%f40, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r84, %f41;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f42, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r86, %f43;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f44, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r88, %r5, 15;
	setp.eq.s32 	%p26, %r4, 0;
	shl.b32 	%r89, %r88, 2;
	mov.u32 	%r90, global_smem;
	add.s32 	%r51, %r90, %r89;
	mov.b32 	%r52, %f45;
	// begin inline asm
	@%p26 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p27, %r3, 16;
	shl.b32 	%r91, %r3, 2;
	add.s32 	%r54, %r90, %r91;
	// begin inline asm
	@%p27 ld.shared.b32 %r53, [ %r54 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r53;
	shfl.sync.bfly.b32	%r92, %r53, 8, 31, -1;
	mov.b32 	%f47, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r93, %f48;
	shfl.sync.bfly.b32	%r94, %r93, 4, 31, -1;
	mov.b32 	%f49, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r95, %f50;
	shfl.sync.bfly.b32	%r96, %r95, 2, 31, -1;
	mov.b32 	%f51, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r97, %f52;
	shfl.sync.bfly.b32	%r98, %r97, 1, 31, -1;
	mov.b32 	%f53, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r99, %r3, 15;
	setp.eq.s32 	%p42, %r99, 0;
	and.pred  	%p28, %p27, %p42;
	mov.b32 	%r56, %f54;
	// begin inline asm
	@%p28 st.shared.b32 [ %r54 + 0 ], %r56;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f55, [global_smem];
	mov.f32 	%f56, 0f45800000;
$L__tmp4:
	.loc	1 46 19                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:46:19
	div.full.f32 	%f57, %f55, %f56;
	.loc	1 48 19                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:48:19
	add.f32 	%f58, %f57, 0f3727C5AC;
	.loc	1 49 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:49:28
	rsqrt.approx.ftz.f32 	%f59, %f58;
	.loc	1 50 4                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:51:28
	mul.wide.s32 	%rd48, %r1, 4;
	add.s64 	%rd35, %rd4, %rd48;
	.loc	1 51 40                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:51:40
	and.b32  	%r100, %r3, 511;
	setp.eq.s32 	%p43, %r100, 0;
	mov.b32 	%r57, %f59;
	and.pred  	%p29, %p43, %p31;
	// begin inline asm
	@%p29 st.global.b32 [ %rd35 + 0 ], { %r57 };
	// end inline asm
	.loc	1 58 35                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:35
	mul.wide.u32 	%rd49, %r6, 2;
	add.s64 	%rd36, %rd5, %rd49;
	mov.b32 	%r59, 0;
	mov.pred 	%p30, -1;
	.loc	1 58 42                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:42
	// begin inline asm
	mov.u32 %r58, %r59;
	@%p30 ld.global.L1::evict_last.b32 { %r58 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 59 39                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:39
	add.s64 	%rd37, %rd3, %rd51;
	.loc	1 59 56                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:56
	// begin inline asm
	mov.u32 %r60, %r59;
	@%p31 ld.global.L1::evict_first.b32 { %r60 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 64 29                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:29
	add.s64 	%rd38, %rd6, %rd51;
	.loc	1 58 95                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:95
	mov.b32 	{%rs17, %rs18}, %r58;
	cvt.f32.f16 	%f60, %rs18;
	cvt.f32.f16 	%f61, %rs17;
	.loc	1 59 118                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:118
	mov.b32 	{%rs19, %rs20}, %r60;
	cvt.f32.f16 	%f62, %rs19;
	cvt.f32.f16 	%f63, %rs20;
	.loc	1 61 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:61:24
	mul.f32 	%f64, %f59, %f63;
	mul.f32 	%f65, %f59, %f62;
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	mul.f32 	%f66, %f65, %f61;
	mul.f32 	%f67, %f64, %f60;
	.loc	1 64 53                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:53
	cvt.rn.f16x2.f32 	%r62, %f67, %f66;
	// begin inline asm
	@%p31 st.global.b32 [ %rd38 + 0 ], { %r62 };
	// end inline asm
	.loc	1 58 35                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:35
	add.s64 	%rd39, %rd36, 2048;
	.loc	1 58 42                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:42
	// begin inline asm
	mov.u32 %r63, %r59;
	@%p30 ld.global.L1::evict_last.b32 { %r63 }, [ %rd39 + 0 ];
	// end inline asm
	.loc	1 59 39                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:39
	add.s64 	%rd40, %rd37, 2048;
	.loc	1 59 56                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:56
	// begin inline asm
	mov.u32 %r65, %r59;
	@%p31 ld.global.L1::evict_first.b32 { %r65 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 64 29                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:29
	add.s64 	%rd41, %rd38, 2048;
	.loc	1 58 95                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:95
	mov.b32 	{%rs21, %rs22}, %r63;
	cvt.f32.f16 	%f68, %rs22;
	cvt.f32.f16 	%f69, %rs21;
	.loc	1 59 118                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:118
	mov.b32 	{%rs23, %rs24}, %r65;
	cvt.f32.f16 	%f70, %rs23;
	cvt.f32.f16 	%f71, %rs24;
	.loc	1 61 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:61:24
	mul.f32 	%f72, %f59, %f71;
	mul.f32 	%f73, %f59, %f70;
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	mul.f32 	%f74, %f73, %f69;
	mul.f32 	%f75, %f72, %f68;
	.loc	1 64 53                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:53
	cvt.rn.f16x2.f32 	%r67, %f75, %f74;
	// begin inline asm
	@%p31 st.global.b32 [ %rd41 + 0 ], { %r67 };
	// end inline asm
	.loc	1 58 35                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:35
	add.s64 	%rd42, %rd36, 4096;
	.loc	1 58 42                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:42
	// begin inline asm
	mov.u32 %r68, %r59;
	@%p30 ld.global.L1::evict_last.b32 { %r68 }, [ %rd42 + 0 ];
	// end inline asm
	.loc	1 59 39                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:39
	add.s64 	%rd43, %rd37, 4096;
	.loc	1 59 56                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:56
	// begin inline asm
	mov.u32 %r70, %r59;
	@%p31 ld.global.L1::evict_first.b32 { %r70 }, [ %rd43 + 0 ];
	// end inline asm
	.loc	1 64 29                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:29
	add.s64 	%rd44, %rd38, 4096;
	.loc	1 58 95                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:95
	mov.b32 	{%rs25, %rs26}, %r68;
	cvt.f32.f16 	%f76, %rs26;
	cvt.f32.f16 	%f77, %rs25;
	.loc	1 59 118                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:118
	mov.b32 	{%rs27, %rs28}, %r70;
	cvt.f32.f16 	%f78, %rs27;
	cvt.f32.f16 	%f79, %rs28;
	.loc	1 61 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:61:24
	mul.f32 	%f80, %f59, %f79;
	mul.f32 	%f81, %f59, %f78;
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	mul.f32 	%f82, %f81, %f77;
	mul.f32 	%f83, %f80, %f76;
	.loc	1 64 53                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:53
	cvt.rn.f16x2.f32 	%r72, %f83, %f82;
	// begin inline asm
	@%p31 st.global.b32 [ %rd44 + 0 ], { %r72 };
	// end inline asm
	.loc	1 58 35                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:35
	add.s64 	%rd45, %rd36, 6144;
	.loc	1 58 42                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:42
	// begin inline asm
	mov.u32 %r73, %r59;
	@%p30 ld.global.L1::evict_last.b32 { %r73 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 59 39                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:39
	add.s64 	%rd46, %rd37, 6144;
	.loc	1 59 56                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:56
	// begin inline asm
	mov.u32 %r75, %r59;
	@%p31 ld.global.L1::evict_first.b32 { %r75 }, [ %rd46 + 0 ];
	// end inline asm
	.loc	1 64 29                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:29
	add.s64 	%rd47, %rd38, 6144;
	.loc	1 58 95                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:58:95
	mov.b32 	{%rs29, %rs30}, %r73;
	cvt.f32.f16 	%f84, %rs30;
	cvt.f32.f16 	%f85, %rs29;
	.loc	1 59 118                        // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:59:118
	mov.b32 	{%rs31, %rs32}, %r75;
	cvt.f32.f16 	%f86, %rs31;
	cvt.f32.f16 	%f87, %rs32;
	.loc	1 61 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:61:24
	mul.f32 	%f88, %f59, %f87;
	mul.f32 	%f89, %f59, %f86;
	.loc	1 63 24                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:63:24
	mul.f32 	%f90, %f89, %f85;
	mul.f32 	%f91, %f88, %f84;
	.loc	1 64 53                         // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:64:53
	cvt.rn.f16x2.f32 	%r77, %f91, %f90;
	// begin inline asm
	@%p31 st.global.b32 [ %rd47 + 0 ], { %r77 };
	// end inline asm
	.loc	1 52 4                          // c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py:52:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/6w/c6w7ysj4hzbjrc3ky2bllh4hizall6zebpysmidywv3kv2zvm2ex.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 119
.b8 55
.b8 121
.b8 115
.b8 106
.b8 52
.b8 104
.b8 122
.b8 98
.b8 106
.b8 114
.b8 99
.b8 51
.b8 107
.b8 121
.b8 50
.b8 98
.b8 108
.b8 108
.b8 104
.b8 52
.b8 104
.b8 105
.b8 122
.b8 97
.b8 108
.b8 108
.b8 54
.b8 122
.b8 101
.b8 98
.b8 112
.b8 121
.b8 115
.b8 109
.b8 105
.b8 100
.b8 121
.b8 119
.b8 118
.b8 51
.b8 107
.b8 118
.b8 50
.b8 122
.b8 118
.b8 109
.b8 50
.b8 101
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 54
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x35 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
