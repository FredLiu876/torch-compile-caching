; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define ptx_kernel void @triton_poi_fused_clone_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, i32 %5, ptr addrspace(1) readnone captures(none) %6) local_unnamed_addr !dbg !6 {
  %result.i.i.i.i769 = alloca [7 x i32], align 4
  %result.i.i.i.i714 = alloca [7 x i32], align 4
  %result.i.i.i.i659 = alloca [7 x i32], align 4
  %result.i.i.i.i604 = alloca [7 x i32], align 4
  %result.i.i.i.i549 = alloca [7 x i32], align 4
  %result.i.i.i.i494 = alloca [7 x i32], align 4
  %result.i.i.i.i439 = alloca [7 x i32], align 4
  %result.i.i.i.i386 = alloca [7 x i32], align 4
  %result.i.i.i.i331 = alloca [7 x i32], align 4
  %result.i.i.i.i276 = alloca [7 x i32], align 4
  %result.i.i.i.i221 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %9 = shl i32 %8, 9, !dbg !10
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %11 = shl i32 %10, 3, !dbg !11
  %12 = and i32 %11, 504, !dbg !11
  %13 = or disjoint i32 %12, %9, !dbg !12
  %14 = or disjoint i32 %13, 1, !dbg !12
  %15 = or disjoint i32 %13, 2, !dbg !12
  %16 = or disjoint i32 %13, 3, !dbg !12
  %17 = or disjoint i32 %13, 4, !dbg !12
  %18 = or disjoint i32 %13, 5, !dbg !12
  %19 = or disjoint i32 %13, 6, !dbg !12
  %20 = or disjoint i32 %13, 7, !dbg !12
  %21 = sdiv i32 %13, 128, !dbg !13
  %22 = mul i32 %21, 128, !dbg !14
  %.decomposed = sub i32 %13, %22, !dbg !14
  %23 = srem i32 %14, 128, !dbg !14
  %24 = srem i32 %15, 128, !dbg !14
  %25 = srem i32 %16, 128, !dbg !14
  %26 = srem i32 %17, 128, !dbg !14
  %27 = srem i32 %18, 128, !dbg !14
  %28 = srem i32 %19, 128, !dbg !14
  %29 = srem i32 %20, 128, !dbg !14
  %30 = srem i32 %21, %3, !dbg !15
  %31 = sdiv i32 %13, %4, !dbg !16
  %32 = shl i32 %31, 7, !dbg !17
  %33 = shl i32 %30, 10, !dbg !18
  %34 = add i32 %33, %.decomposed, !dbg !19
  %35 = add i32 %34, %32, !dbg !20
  %36 = sext i32 %35 to i64, !dbg !21
  %37 = getelementptr half, ptr addrspace(1) %0, i64 %36, !dbg !21
  %38 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %37) #4, !dbg !22
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !23
  %39 = srem i8 %.lhs.trunc, 64, !dbg !23
  %.sext = sext i8 %39 to i32, !dbg !23
  %.lhs.trunc824 = trunc nsw i32 %23 to i8, !dbg !23
  %40 = srem i8 %.lhs.trunc824, 64, !dbg !23
  %.sext825 = sext i8 %40 to i32, !dbg !23
  %.lhs.trunc826 = trunc nsw i32 %24 to i8, !dbg !23
  %41 = srem i8 %.lhs.trunc826, 64, !dbg !23
  %.sext827 = sext i8 %41 to i32, !dbg !23
  %.lhs.trunc828 = trunc nsw i32 %25 to i8, !dbg !23
  %42 = srem i8 %.lhs.trunc828, 64, !dbg !23
  %.sext829 = sext i8 %42 to i32, !dbg !23
  %.lhs.trunc830 = trunc nsw i32 %26 to i8, !dbg !23
  %43 = srem i8 %.lhs.trunc830, 64, !dbg !23
  %.sext831 = sext i8 %43 to i32, !dbg !23
  %.lhs.trunc832 = trunc nsw i32 %27 to i8, !dbg !23
  %44 = srem i8 %.lhs.trunc832, 64, !dbg !23
  %.sext833 = sext i8 %44 to i32, !dbg !23
  %.lhs.trunc834 = trunc nsw i32 %28 to i8, !dbg !23
  %45 = srem i8 %.lhs.trunc834, 64, !dbg !23
  %.sext835 = sext i8 %45 to i32, !dbg !23
  %.lhs.trunc836 = trunc nsw i32 %29 to i8, !dbg !23
  %46 = srem i8 %.lhs.trunc836, 64, !dbg !23
  %.sext837 = sext i8 %46 to i32, !dbg !23
  %47 = mul i32 %3, %.sext, !dbg !24
  %48 = mul i32 %3, %.sext825, !dbg !24
  %49 = mul i32 %3, %.sext827, !dbg !24
  %50 = mul i32 %3, %.sext829, !dbg !24
  %51 = mul i32 %3, %.sext831, !dbg !24
  %52 = mul i32 %3, %.sext833, !dbg !24
  %53 = mul i32 %3, %.sext835, !dbg !24
  %54 = mul i32 %3, %.sext837, !dbg !24
  %55 = add i32 %30, %47, !dbg !25
  %56 = add i32 %30, %48, !dbg !25
  %57 = add i32 %30, %49, !dbg !25
  %58 = add i32 %30, %50, !dbg !25
  %59 = add i32 %30, %51, !dbg !25
  %60 = add i32 %30, %52, !dbg !25
  %61 = add i32 %30, %53, !dbg !25
  %62 = add i32 %30, %54, !dbg !25
  %63 = sext i32 %55 to i64, !dbg !26
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !26
  %65 = sext i32 %56 to i64, !dbg !26
  %66 = getelementptr float, ptr addrspace(1) %1, i64 %65, !dbg !26
  %67 = sext i32 %57 to i64, !dbg !26
  %68 = getelementptr float, ptr addrspace(1) %1, i64 %67, !dbg !26
  %69 = sext i32 %58 to i64, !dbg !26
  %70 = getelementptr float, ptr addrspace(1) %1, i64 %69, !dbg !26
  %71 = sext i32 %59 to i64, !dbg !26
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !26
  %73 = sext i32 %60 to i64, !dbg !26
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !26
  %75 = sext i32 %61 to i64, !dbg !26
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %75, !dbg !26
  %77 = sext i32 %62 to i64, !dbg !26
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %77, !dbg !26
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %64) #4, !dbg !27
  %80 = bitcast i32 %79 to float, !dbg !27
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %66) #4, !dbg !27
  %82 = bitcast i32 %81 to float, !dbg !27
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %68) #4, !dbg !27
  %84 = bitcast i32 %83 to float, !dbg !27
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %70) #4, !dbg !27
  %86 = bitcast i32 %85 to float, !dbg !27
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %72) #4, !dbg !27
  %88 = bitcast i32 %87 to float, !dbg !27
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %74) #4, !dbg !27
  %90 = bitcast i32 %89 to float, !dbg !27
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %76) #4, !dbg !27
  %92 = bitcast i32 %91 to float, !dbg !27
  %93 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %78) #4, !dbg !27
  %94 = bitcast i32 %93 to float, !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !28
  %95 = fmul float %80, 0x3FE45F3060000000, !dbg !28
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i387 = icmp eq i32 %96, 0, !dbg !28
  %97 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %95) #4, !dbg !28
  %98 = tail call i32 @llvm.nvvm.f2i.rn(float %95) #4, !dbg !28
  %.01.i388 = select i1 %.not.i387, i32 %98, i32 %97, !dbg !28
  %99 = sitofp i32 %.01.i388 to float, !dbg !28
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i389 = icmp eq i32 %100, 0, !dbg !28
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float 0xBFF921FB40000000, float %80) #4, !dbg !28
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %99, float 0xBFF921FB40000000, float %80) #4, !dbg !28
  %.02.i390 = select i1 %.not15.i389, float %102, float %101, !dbg !28
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i391 = icmp eq i32 %103, 0, !dbg !28
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float 0xBE74442D00000000, float %.02.i390) #4, !dbg !28
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %99, float 0xBE74442D00000000, float %.02.i390) #4, !dbg !28
  %.03.i392 = select i1 %.not16.i391, float %105, float %104, !dbg !28
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i393 = icmp eq i32 %106, 0, !dbg !28
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float 0xBCF84698A0000000, float %.03.i392) #4, !dbg !28
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %99, float 0xBCF84698A0000000, float %.03.i392) #4, !dbg !28
  %.04.i394 = select i1 %.not17.i393, float %108, float %107, !dbg !28
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i395 = icmp eq i32 %109, 0, !dbg !28
  %110 = tail call float @llvm.nvvm.fabs.ftz.f(float %80) #4, !dbg !28
  %111 = tail call float @llvm.nvvm.fabs.f(float %80) #4, !dbg !28
  %.06.i396 = select i1 %.not18.i395, float %111, float %110, !dbg !28
  %112 = fcmp ult float %.06.i396, 1.056150e+05, !dbg !28
  br i1 %112, label %__internal_trig_reduction_kernel.exit.i.i414, label %__nv_isinff.exit.i.i.i397, !dbg !28

__nv_isinff.exit.i.i.i397:                        ; preds = %7
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i398 = icmp eq i32 %113, 0, !dbg !28
  %.07.i399 = select i1 %.not19.i398, float %111, float %110, !dbg !28
  %114 = fcmp oeq float %.07.i399, 0x7FF0000000000000, !dbg !28
  br i1 %114, label %__nv_fmul_rn.exit.i.i.i436, label %118, !dbg !28

__nv_fmul_rn.exit.i.i.i436:                       ; preds = %__nv_isinff.exit.i.i.i397
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i437 = icmp eq i32 %115, 0, !dbg !28
  %116 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %80, float 0.000000e+00) #4, !dbg !28
  %117 = tail call float @llvm.nvvm.mul.rn.f(float %80, float 0.000000e+00) #4, !dbg !28
  %.08.i438 = select i1 %.not27.i437, float %117, float %116, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !28

118:                                              ; preds = %__nv_isinff.exit.i.i.i397
  %119 = lshr i32 %79, 23, !dbg !28
  %120 = and i32 %119, 224, !dbg !28
  %121 = add nsw i32 %120, -128, !dbg !28
  %122 = shl i32 %79, 8, !dbg !28
  %123 = or i32 %122, -2147483648, !dbg !28
  %124 = lshr exact i32 %121, 5, !dbg !28
  br label %125, !dbg !28

125:                                              ; preds = %118, %125
  %indvars.iv = phi i64 [ 0, %118 ], [ %indvars.iv.next, %125 ]
  %hi.i.i.i.0.i400838 = phi i32 [ 0, %118 ], [ %130, %125 ]
  %126 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !28
  %127 = load i32, ptr addrspace(1) %126, align 4, !dbg !28
  %128 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %127, i32 %123, i32 %hi.i.i.i.0.i400838) #5, !dbg !28, !srcloc !29
  %129 = extractvalue { i32, i32 } %128, 0, !dbg !28
  %130 = extractvalue { i32, i32 } %128, 1, !dbg !28
  %131 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %indvars.iv, !dbg !28
  store i32 %129, ptr %131, align 4, !dbg !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !28
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !28
  br i1 %exitcond.not, label %132, label %125, !dbg !28, !llvm.loop !30

132:                                              ; preds = %125
  %133 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i386, i64 24, !dbg !28
  store i32 %130, ptr %133, align 4, !dbg !28
  %134 = sub nsw i32 6, %124, !dbg !28
  %135 = sext i32 %134 to i64, !dbg !28
  %136 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %135, !dbg !28
  %137 = load i32, ptr %136, align 4, !dbg !28
  %138 = sub nsw i32 5, %124, !dbg !28
  %139 = sext i32 %138 to i64, !dbg !28
  %140 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %139, !dbg !28
  %141 = load i32, ptr %140, align 4, !dbg !28
  %142 = freeze i32 %141, !dbg !28
  %143 = and i32 %79, 260046848, !dbg !28
  %.not20.i402 = icmp eq i32 %143, 0, !dbg !28
  br i1 %.not20.i402, label %__internal_trig_reduction_slowpath.exit.i.i.i403, label %144, !dbg !28

144:                                              ; preds = %132
  %145 = sub nsw i32 4, %124, !dbg !28
  %146 = sext i32 %145 to i64, !dbg !28
  %147 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %146, !dbg !28
  %148 = load i32, ptr %147, align 4, !dbg !28
  %149 = tail call i32 @llvm.fshl.i32(i32 %142, i32 %148, i32 %119), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i403, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i403: ; preds = %144, %132
  %lo.i.i.i.0.i405 = phi i32 [ %149, %144 ], [ %142, %132 ], !dbg !28
  %150 = tail call i32 @llvm.fshl.i32(i32 %137, i32 %142, i32 %119), !dbg !28
  %151 = lshr i32 %150, 30, !dbg !28
  %152 = tail call i32 @llvm.fshl.i32(i32 %150, i32 %lo.i.i.i.0.i405, i32 2), !dbg !28
  %153 = shl i32 %lo.i.i.i.0.i405, 2, !dbg !28
  %154 = lshr i32 %152, 31, !dbg !28
  %155 = add nuw nsw i32 %154, %151, !dbg !28
  %156 = sub nsw i32 0, %155, !dbg !28
  %.not2123.i406 = icmp slt i32 %79, 0, !dbg !28
  %spec.select.i407 = select i1 %.not2123.i406, i32 %156, i32 %155, !dbg !28
  %157 = xor i32 %152, %79, !dbg !28
  %.lobit.i408 = ashr i32 %152, 31, !dbg !28
  %hi.i.i.i.2.i409 = xor i32 %.lobit.i408, %152, !dbg !28
  %lo.i.i.i.1.i411 = xor i32 %.lobit.i408, %153, !dbg !28
  %158 = zext i32 %hi.i.i.i.2.i409 to i64, !dbg !28
  %159 = shl nuw i64 %158, 32, !dbg !28
  %160 = zext i32 %lo.i.i.i.1.i411 to i64, !dbg !28
  %161 = or disjoint i64 %159, %160, !dbg !28
  %162 = sitofp i64 %161 to double, !dbg !28
  %163 = fmul double %162, 0x3BF921FB54442D19, !dbg !28
  %164 = fptrunc double %163 to float, !dbg !28
  %165 = fneg float %164, !dbg !28
  %.not2526.i412 = icmp slt i32 %157, 0, !dbg !28
  %r.i.i.i.0.i413 = select i1 %.not2526.i412, float %165, float %164, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !28

__internal_trig_reduction_kernel.exit.i.i414:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i403, %__nv_fmul_rn.exit.i.i.i436, %7
  %i.i.1.i415 = phi i32 [ %.01.i388, %7 ], [ 0, %__nv_fmul_rn.exit.i.i.i436 ], [ %spec.select.i407, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !28
  %t.i.i.1.i416 = phi float [ %.04.i394, %7 ], [ %.08.i438, %__nv_fmul_rn.exit.i.i.i436 ], [ %r.i.i.i.0.i413, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !28
  %166 = add i32 %i.i.1.i415, 1, !dbg !28
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i417 = icmp eq i32 %167, 0, !dbg !28
  %168 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #4, !dbg !28
  %169 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #4, !dbg !28
  %.011.i418 = select i1 %.not28.i417, float %169, float %168, !dbg !28
  %170 = and i32 %i.i.1.i415, 1, !dbg !28
  %.not29.not.i = icmp eq i32 %170, 0, !dbg !28
  %171 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i416, !dbg !28
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i419 = icmp eq i32 %172, 0, !dbg !28
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i418, float %171, float 0.000000e+00) #4, !dbg !28
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i418, float %171, float 0.000000e+00) #4, !dbg !28
  %.012.i420 = select i1 %.not30.i419, float %174, float %173, !dbg !28
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i433, label %__internal_fmad.exit2.i.i.i421, !dbg !28

__internal_fmad.exit1.i.i.i433:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i414
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i434 = icmp eq i32 %175, 0, !dbg !28
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #4, !dbg !28
  %177 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i435 = select i1 %.not31.i434, float %177, float %176, !dbg !28
  br label %__internal_fmad.exit2.i.i.i421, !dbg !28

__internal_fmad.exit2.i.i.i421:                   ; preds = %__internal_fmad.exit1.i.i.i433, %__internal_trig_reduction_kernel.exit.i.i414
  %178 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i433 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !28
  %179 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i433 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !28
  %180 = phi float [ %.013.i435, %__internal_fmad.exit1.i.i.i433 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !28
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i422 = icmp eq i32 %181, 0, !dbg !28
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %180, float %.011.i418, float %179) #4, !dbg !28
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %180, float %.011.i418, float %179) #4, !dbg !28
  %.010.i423 = select i1 %.not32.i422, float %183, float %182, !dbg !28
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i424 = icmp eq i32 %184, 0, !dbg !28
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i423, float %.011.i418, float %178) #4, !dbg !28
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i423, float %.011.i418, float %178) #4, !dbg !28
  %.09.i425 = select i1 %.not33.i424, float %186, float %185, !dbg !28
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i426 = icmp eq i32 %187, 0, !dbg !28
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i425, float %.012.i420, float %171) #4, !dbg !28
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i425, float %.012.i420, float %171) #4, !dbg !28
  %.05.i427 = select i1 %.not34.i426, float %189, float %188, !dbg !28
  %190 = and i32 %166, 2, !dbg !28
  %.not35.i428 = icmp eq i32 %190, 0, !dbg !28
  br i1 %.not35.i428, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i429, !dbg !28

__internal_fmad.exit5.i.i.i429:                   ; preds = %__internal_fmad.exit2.i.i.i421
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i430 = icmp eq i32 %191, 0, !dbg !28
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i431 = select i1 %.not36.i430, float %193, float %192, !dbg !28
  br label %__nv_cosf.exit, !dbg !28

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i421, %__internal_fmad.exit5.i.i.i429
  %z.i.i.0.i432 = phi float [ %.0.i431, %__internal_fmad.exit5.i.i.i429 ], [ %.05.i427, %__internal_fmad.exit2.i.i.i421 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !28
  %194 = fmul float %82, 0x3FE45F3060000000, !dbg !28
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i440 = icmp eq i32 %195, 0, !dbg !28
  %196 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %194) #4, !dbg !28
  %197 = tail call i32 @llvm.nvvm.f2i.rn(float %194) #4, !dbg !28
  %.01.i441 = select i1 %.not.i440, i32 %197, i32 %196, !dbg !28
  %198 = sitofp i32 %.01.i441 to float, !dbg !28
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i442 = icmp eq i32 %199, 0, !dbg !28
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %198, float 0xBFF921FB40000000, float %82) #4, !dbg !28
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %198, float 0xBFF921FB40000000, float %82) #4, !dbg !28
  %.02.i443 = select i1 %.not15.i442, float %201, float %200, !dbg !28
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i444 = icmp eq i32 %202, 0, !dbg !28
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %198, float 0xBE74442D00000000, float %.02.i443) #4, !dbg !28
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %198, float 0xBE74442D00000000, float %.02.i443) #4, !dbg !28
  %.03.i445 = select i1 %.not16.i444, float %204, float %203, !dbg !28
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i446 = icmp eq i32 %205, 0, !dbg !28
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %198, float 0xBCF84698A0000000, float %.03.i445) #4, !dbg !28
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %198, float 0xBCF84698A0000000, float %.03.i445) #4, !dbg !28
  %.04.i447 = select i1 %.not17.i446, float %207, float %206, !dbg !28
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i448 = icmp eq i32 %208, 0, !dbg !28
  %209 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #4, !dbg !28
  %210 = tail call float @llvm.nvvm.fabs.f(float %82) #4, !dbg !28
  %.06.i449 = select i1 %.not18.i448, float %210, float %209, !dbg !28
  %211 = fcmp ult float %.06.i449, 1.056150e+05, !dbg !28
  br i1 %211, label %__internal_trig_reduction_kernel.exit.i.i467, label %__nv_isinff.exit.i.i.i450, !dbg !28

__nv_isinff.exit.i.i.i450:                        ; preds = %__nv_cosf.exit
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i451 = icmp eq i32 %212, 0, !dbg !28
  %.07.i452 = select i1 %.not19.i451, float %210, float %209, !dbg !28
  %213 = fcmp oeq float %.07.i452, 0x7FF0000000000000, !dbg !28
  br i1 %213, label %__nv_fmul_rn.exit.i.i.i490, label %217, !dbg !28

__nv_fmul_rn.exit.i.i.i490:                       ; preds = %__nv_isinff.exit.i.i.i450
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i491 = icmp eq i32 %214, 0, !dbg !28
  %215 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %82, float 0.000000e+00) #4, !dbg !28
  %216 = tail call float @llvm.nvvm.mul.rn.f(float %82, float 0.000000e+00) #4, !dbg !28
  %.08.i492 = select i1 %.not27.i491, float %216, float %215, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !28

217:                                              ; preds = %__nv_isinff.exit.i.i.i450
  %218 = lshr i32 %81, 23, !dbg !28
  %219 = and i32 %218, 224, !dbg !28
  %220 = add nsw i32 %219, -128, !dbg !28
  %221 = shl i32 %81, 8, !dbg !28
  %222 = or i32 %221, -2147483648, !dbg !28
  %223 = lshr exact i32 %220, 5, !dbg !28
  br label %224, !dbg !28

224:                                              ; preds = %217, %224
  %indvars.iv901 = phi i64 [ 0, %217 ], [ %indvars.iv.next902, %224 ]
  %hi.i.i.i.0.i453840 = phi i32 [ 0, %217 ], [ %229, %224 ]
  %225 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv901, !dbg !28
  %226 = load i32, ptr addrspace(1) %225, align 4, !dbg !28
  %227 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %226, i32 %222, i32 %hi.i.i.i.0.i453840) #5, !dbg !28, !srcloc !29
  %228 = extractvalue { i32, i32 } %227, 0, !dbg !28
  %229 = extractvalue { i32, i32 } %227, 1, !dbg !28
  %230 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %indvars.iv901, !dbg !28
  store i32 %228, ptr %230, align 4, !dbg !28
  %indvars.iv.next902 = add nuw nsw i64 %indvars.iv901, 1, !dbg !28
  %exitcond903.not = icmp eq i64 %indvars.iv.next902, 6, !dbg !28
  br i1 %exitcond903.not, label %231, label %224, !dbg !28, !llvm.loop !32

231:                                              ; preds = %224
  %232 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i439, i64 24, !dbg !28
  store i32 %229, ptr %232, align 4, !dbg !28
  %233 = sub nsw i32 6, %223, !dbg !28
  %234 = sext i32 %233 to i64, !dbg !28
  %235 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %234, !dbg !28
  %236 = load i32, ptr %235, align 4, !dbg !28
  %237 = sub nsw i32 5, %223, !dbg !28
  %238 = sext i32 %237 to i64, !dbg !28
  %239 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %238, !dbg !28
  %240 = load i32, ptr %239, align 4, !dbg !28
  %241 = freeze i32 %240, !dbg !28
  %242 = and i32 %81, 260046848, !dbg !28
  %.not20.i455 = icmp eq i32 %242, 0, !dbg !28
  br i1 %.not20.i455, label %__internal_trig_reduction_slowpath.exit.i.i.i456, label %243, !dbg !28

243:                                              ; preds = %231
  %244 = sub nsw i32 4, %223, !dbg !28
  %245 = sext i32 %244 to i64, !dbg !28
  %246 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %245, !dbg !28
  %247 = load i32, ptr %246, align 4, !dbg !28
  %248 = tail call i32 @llvm.fshl.i32(i32 %241, i32 %247, i32 %218), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i456, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i456: ; preds = %243, %231
  %lo.i.i.i.0.i458 = phi i32 [ %248, %243 ], [ %241, %231 ], !dbg !28
  %249 = tail call i32 @llvm.fshl.i32(i32 %236, i32 %241, i32 %218), !dbg !28
  %250 = lshr i32 %249, 30, !dbg !28
  %251 = tail call i32 @llvm.fshl.i32(i32 %249, i32 %lo.i.i.i.0.i458, i32 2), !dbg !28
  %252 = shl i32 %lo.i.i.i.0.i458, 2, !dbg !28
  %253 = lshr i32 %251, 31, !dbg !28
  %254 = add nuw nsw i32 %253, %250, !dbg !28
  %255 = sub nsw i32 0, %254, !dbg !28
  %.not2123.i459 = icmp slt i32 %81, 0, !dbg !28
  %spec.select.i460 = select i1 %.not2123.i459, i32 %255, i32 %254, !dbg !28
  %256 = xor i32 %251, %81, !dbg !28
  %.lobit.i461 = ashr i32 %251, 31, !dbg !28
  %hi.i.i.i.2.i462 = xor i32 %.lobit.i461, %251, !dbg !28
  %lo.i.i.i.1.i464 = xor i32 %.lobit.i461, %252, !dbg !28
  %257 = zext i32 %hi.i.i.i.2.i462 to i64, !dbg !28
  %258 = shl nuw i64 %257, 32, !dbg !28
  %259 = zext i32 %lo.i.i.i.1.i464 to i64, !dbg !28
  %260 = or disjoint i64 %258, %259, !dbg !28
  %261 = sitofp i64 %260 to double, !dbg !28
  %262 = fmul double %261, 0x3BF921FB54442D19, !dbg !28
  %263 = fptrunc double %262 to float, !dbg !28
  %264 = fneg float %263, !dbg !28
  %.not2526.i465 = icmp slt i32 %256, 0, !dbg !28
  %r.i.i.i.0.i466 = select i1 %.not2526.i465, float %264, float %263, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !28

__internal_trig_reduction_kernel.exit.i.i467:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i456, %__nv_fmul_rn.exit.i.i.i490, %__nv_cosf.exit
  %i.i.1.i468 = phi i32 [ %.01.i441, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i490 ], [ %spec.select.i460, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !28
  %t.i.i.1.i469 = phi float [ %.04.i447, %__nv_cosf.exit ], [ %.08.i492, %__nv_fmul_rn.exit.i.i.i490 ], [ %r.i.i.i.0.i466, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !28
  %265 = add i32 %i.i.1.i468, 1, !dbg !28
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i470 = icmp eq i32 %266, 0, !dbg !28
  %267 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #4, !dbg !28
  %268 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #4, !dbg !28
  %.011.i471 = select i1 %.not28.i470, float %268, float %267, !dbg !28
  %269 = and i32 %i.i.1.i468, 1, !dbg !28
  %.not29.not.i472 = icmp eq i32 %269, 0, !dbg !28
  %270 = select i1 %.not29.not.i472, float 1.000000e+00, float %t.i.i.1.i469, !dbg !28
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i473 = icmp eq i32 %271, 0, !dbg !28
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i471, float %270, float 0.000000e+00) #4, !dbg !28
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i471, float %270, float 0.000000e+00) #4, !dbg !28
  %.012.i474 = select i1 %.not30.i473, float %273, float %272, !dbg !28
  br i1 %.not29.not.i472, label %__internal_fmad.exit1.i.i.i487, label %__internal_fmad.exit2.i.i.i475, !dbg !28

__internal_fmad.exit1.i.i.i487:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i467
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i488 = icmp eq i32 %274, 0, !dbg !28
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #4, !dbg !28
  %276 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i489 = select i1 %.not31.i488, float %276, float %275, !dbg !28
  br label %__internal_fmad.exit2.i.i.i475, !dbg !28

__internal_fmad.exit2.i.i.i475:                   ; preds = %__internal_fmad.exit1.i.i.i487, %__internal_trig_reduction_kernel.exit.i.i467
  %277 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i487 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !28
  %278 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i487 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !28
  %279 = phi float [ %.013.i489, %__internal_fmad.exit1.i.i.i487 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !28
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i476 = icmp eq i32 %280, 0, !dbg !28
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %279, float %.011.i471, float %278) #4, !dbg !28
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %279, float %.011.i471, float %278) #4, !dbg !28
  %.010.i477 = select i1 %.not32.i476, float %282, float %281, !dbg !28
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i478 = icmp eq i32 %283, 0, !dbg !28
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i477, float %.011.i471, float %277) #4, !dbg !28
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i477, float %.011.i471, float %277) #4, !dbg !28
  %.09.i479 = select i1 %.not33.i478, float %285, float %284, !dbg !28
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i480 = icmp eq i32 %286, 0, !dbg !28
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i479, float %.012.i474, float %270) #4, !dbg !28
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i479, float %.012.i474, float %270) #4, !dbg !28
  %.05.i481 = select i1 %.not34.i480, float %288, float %287, !dbg !28
  %289 = and i32 %265, 2, !dbg !28
  %.not35.i482 = icmp eq i32 %289, 0, !dbg !28
  br i1 %.not35.i482, label %__nv_cosf.exit493, label %__internal_fmad.exit5.i.i.i483, !dbg !28

__internal_fmad.exit5.i.i.i483:                   ; preds = %__internal_fmad.exit2.i.i.i475
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i484 = icmp eq i32 %290, 0, !dbg !28
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i485 = select i1 %.not36.i484, float %292, float %291, !dbg !28
  br label %__nv_cosf.exit493, !dbg !28

__nv_cosf.exit493:                                ; preds = %__internal_fmad.exit2.i.i.i475, %__internal_fmad.exit5.i.i.i483
  %z.i.i.0.i486 = phi float [ %.0.i485, %__internal_fmad.exit5.i.i.i483 ], [ %.05.i481, %__internal_fmad.exit2.i.i.i475 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !28
  %293 = fmul float %84, 0x3FE45F3060000000, !dbg !28
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i495 = icmp eq i32 %294, 0, !dbg !28
  %295 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %293) #4, !dbg !28
  %296 = tail call i32 @llvm.nvvm.f2i.rn(float %293) #4, !dbg !28
  %.01.i496 = select i1 %.not.i495, i32 %296, i32 %295, !dbg !28
  %297 = sitofp i32 %.01.i496 to float, !dbg !28
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i497 = icmp eq i32 %298, 0, !dbg !28
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0xBFF921FB40000000, float %84) #4, !dbg !28
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0xBFF921FB40000000, float %84) #4, !dbg !28
  %.02.i498 = select i1 %.not15.i497, float %300, float %299, !dbg !28
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i499 = icmp eq i32 %301, 0, !dbg !28
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0xBE74442D00000000, float %.02.i498) #4, !dbg !28
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0xBE74442D00000000, float %.02.i498) #4, !dbg !28
  %.03.i500 = select i1 %.not16.i499, float %303, float %302, !dbg !28
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i501 = icmp eq i32 %304, 0, !dbg !28
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0xBCF84698A0000000, float %.03.i500) #4, !dbg !28
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0xBCF84698A0000000, float %.03.i500) #4, !dbg !28
  %.04.i502 = select i1 %.not17.i501, float %306, float %305, !dbg !28
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i503 = icmp eq i32 %307, 0, !dbg !28
  %308 = tail call float @llvm.nvvm.fabs.ftz.f(float %84) #4, !dbg !28
  %309 = tail call float @llvm.nvvm.fabs.f(float %84) #4, !dbg !28
  %.06.i504 = select i1 %.not18.i503, float %309, float %308, !dbg !28
  %310 = fcmp ult float %.06.i504, 1.056150e+05, !dbg !28
  br i1 %310, label %__internal_trig_reduction_kernel.exit.i.i522, label %__nv_isinff.exit.i.i.i505, !dbg !28

__nv_isinff.exit.i.i.i505:                        ; preds = %__nv_cosf.exit493
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i506 = icmp eq i32 %311, 0, !dbg !28
  %.07.i507 = select i1 %.not19.i506, float %309, float %308, !dbg !28
  %312 = fcmp oeq float %.07.i507, 0x7FF0000000000000, !dbg !28
  br i1 %312, label %__nv_fmul_rn.exit.i.i.i545, label %316, !dbg !28

__nv_fmul_rn.exit.i.i.i545:                       ; preds = %__nv_isinff.exit.i.i.i505
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i546 = icmp eq i32 %313, 0, !dbg !28
  %314 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %84, float 0.000000e+00) #4, !dbg !28
  %315 = tail call float @llvm.nvvm.mul.rn.f(float %84, float 0.000000e+00) #4, !dbg !28
  %.08.i547 = select i1 %.not27.i546, float %315, float %314, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !28

316:                                              ; preds = %__nv_isinff.exit.i.i.i505
  %317 = lshr i32 %83, 23, !dbg !28
  %318 = and i32 %317, 224, !dbg !28
  %319 = add nsw i32 %318, -128, !dbg !28
  %320 = shl i32 %83, 8, !dbg !28
  %321 = or i32 %320, -2147483648, !dbg !28
  %322 = lshr exact i32 %319, 5, !dbg !28
  br label %323, !dbg !28

323:                                              ; preds = %316, %323
  %indvars.iv904 = phi i64 [ 0, %316 ], [ %indvars.iv.next905, %323 ]
  %hi.i.i.i.0.i508842 = phi i32 [ 0, %316 ], [ %328, %323 ]
  %324 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv904, !dbg !28
  %325 = load i32, ptr addrspace(1) %324, align 4, !dbg !28
  %326 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %325, i32 %321, i32 %hi.i.i.i.0.i508842) #5, !dbg !28, !srcloc !29
  %327 = extractvalue { i32, i32 } %326, 0, !dbg !28
  %328 = extractvalue { i32, i32 } %326, 1, !dbg !28
  %329 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %indvars.iv904, !dbg !28
  store i32 %327, ptr %329, align 4, !dbg !28
  %indvars.iv.next905 = add nuw nsw i64 %indvars.iv904, 1, !dbg !28
  %exitcond906.not = icmp eq i64 %indvars.iv.next905, 6, !dbg !28
  br i1 %exitcond906.not, label %330, label %323, !dbg !28, !llvm.loop !33

330:                                              ; preds = %323
  %331 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i494, i64 24, !dbg !28
  store i32 %328, ptr %331, align 4, !dbg !28
  %332 = sub nsw i32 6, %322, !dbg !28
  %333 = sext i32 %332 to i64, !dbg !28
  %334 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %333, !dbg !28
  %335 = load i32, ptr %334, align 4, !dbg !28
  %336 = sub nsw i32 5, %322, !dbg !28
  %337 = sext i32 %336 to i64, !dbg !28
  %338 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %337, !dbg !28
  %339 = load i32, ptr %338, align 4, !dbg !28
  %340 = freeze i32 %339, !dbg !28
  %341 = and i32 %83, 260046848, !dbg !28
  %.not20.i510 = icmp eq i32 %341, 0, !dbg !28
  br i1 %.not20.i510, label %__internal_trig_reduction_slowpath.exit.i.i.i511, label %342, !dbg !28

342:                                              ; preds = %330
  %343 = sub nsw i32 4, %322, !dbg !28
  %344 = sext i32 %343 to i64, !dbg !28
  %345 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %344, !dbg !28
  %346 = load i32, ptr %345, align 4, !dbg !28
  %347 = tail call i32 @llvm.fshl.i32(i32 %340, i32 %346, i32 %317), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i511, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i511: ; preds = %342, %330
  %lo.i.i.i.0.i513 = phi i32 [ %347, %342 ], [ %340, %330 ], !dbg !28
  %348 = tail call i32 @llvm.fshl.i32(i32 %335, i32 %340, i32 %317), !dbg !28
  %349 = lshr i32 %348, 30, !dbg !28
  %350 = tail call i32 @llvm.fshl.i32(i32 %348, i32 %lo.i.i.i.0.i513, i32 2), !dbg !28
  %351 = shl i32 %lo.i.i.i.0.i513, 2, !dbg !28
  %352 = lshr i32 %350, 31, !dbg !28
  %353 = add nuw nsw i32 %352, %349, !dbg !28
  %354 = sub nsw i32 0, %353, !dbg !28
  %.not2123.i514 = icmp slt i32 %83, 0, !dbg !28
  %spec.select.i515 = select i1 %.not2123.i514, i32 %354, i32 %353, !dbg !28
  %355 = xor i32 %350, %83, !dbg !28
  %.lobit.i516 = ashr i32 %350, 31, !dbg !28
  %hi.i.i.i.2.i517 = xor i32 %.lobit.i516, %350, !dbg !28
  %lo.i.i.i.1.i519 = xor i32 %.lobit.i516, %351, !dbg !28
  %356 = zext i32 %hi.i.i.i.2.i517 to i64, !dbg !28
  %357 = shl nuw i64 %356, 32, !dbg !28
  %358 = zext i32 %lo.i.i.i.1.i519 to i64, !dbg !28
  %359 = or disjoint i64 %357, %358, !dbg !28
  %360 = sitofp i64 %359 to double, !dbg !28
  %361 = fmul double %360, 0x3BF921FB54442D19, !dbg !28
  %362 = fptrunc double %361 to float, !dbg !28
  %363 = fneg float %362, !dbg !28
  %.not2526.i520 = icmp slt i32 %355, 0, !dbg !28
  %r.i.i.i.0.i521 = select i1 %.not2526.i520, float %363, float %362, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !28

__internal_trig_reduction_kernel.exit.i.i522:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i511, %__nv_fmul_rn.exit.i.i.i545, %__nv_cosf.exit493
  %i.i.1.i523 = phi i32 [ %.01.i496, %__nv_cosf.exit493 ], [ 0, %__nv_fmul_rn.exit.i.i.i545 ], [ %spec.select.i515, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !28
  %t.i.i.1.i524 = phi float [ %.04.i502, %__nv_cosf.exit493 ], [ %.08.i547, %__nv_fmul_rn.exit.i.i.i545 ], [ %r.i.i.i.0.i521, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !28
  %364 = add i32 %i.i.1.i523, 1, !dbg !28
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i525 = icmp eq i32 %365, 0, !dbg !28
  %366 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #4, !dbg !28
  %367 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #4, !dbg !28
  %.011.i526 = select i1 %.not28.i525, float %367, float %366, !dbg !28
  %368 = and i32 %i.i.1.i523, 1, !dbg !28
  %.not29.not.i527 = icmp eq i32 %368, 0, !dbg !28
  %369 = select i1 %.not29.not.i527, float 1.000000e+00, float %t.i.i.1.i524, !dbg !28
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i528 = icmp eq i32 %370, 0, !dbg !28
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i526, float %369, float 0.000000e+00) #4, !dbg !28
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i526, float %369, float 0.000000e+00) #4, !dbg !28
  %.012.i529 = select i1 %.not30.i528, float %372, float %371, !dbg !28
  br i1 %.not29.not.i527, label %__internal_fmad.exit1.i.i.i542, label %__internal_fmad.exit2.i.i.i530, !dbg !28

__internal_fmad.exit1.i.i.i542:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i522
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i543 = icmp eq i32 %373, 0, !dbg !28
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #4, !dbg !28
  %375 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i544 = select i1 %.not31.i543, float %375, float %374, !dbg !28
  br label %__internal_fmad.exit2.i.i.i530, !dbg !28

__internal_fmad.exit2.i.i.i530:                   ; preds = %__internal_fmad.exit1.i.i.i542, %__internal_trig_reduction_kernel.exit.i.i522
  %376 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i542 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !28
  %377 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i542 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !28
  %378 = phi float [ %.013.i544, %__internal_fmad.exit1.i.i.i542 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !28
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i531 = icmp eq i32 %379, 0, !dbg !28
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %378, float %.011.i526, float %377) #4, !dbg !28
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %378, float %.011.i526, float %377) #4, !dbg !28
  %.010.i532 = select i1 %.not32.i531, float %381, float %380, !dbg !28
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i533 = icmp eq i32 %382, 0, !dbg !28
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i532, float %.011.i526, float %376) #4, !dbg !28
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i532, float %.011.i526, float %376) #4, !dbg !28
  %.09.i534 = select i1 %.not33.i533, float %384, float %383, !dbg !28
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i535 = icmp eq i32 %385, 0, !dbg !28
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i534, float %.012.i529, float %369) #4, !dbg !28
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i534, float %.012.i529, float %369) #4, !dbg !28
  %.05.i536 = select i1 %.not34.i535, float %387, float %386, !dbg !28
  %388 = and i32 %364, 2, !dbg !28
  %.not35.i537 = icmp eq i32 %388, 0, !dbg !28
  br i1 %.not35.i537, label %__nv_cosf.exit548, label %__internal_fmad.exit5.i.i.i538, !dbg !28

__internal_fmad.exit5.i.i.i538:                   ; preds = %__internal_fmad.exit2.i.i.i530
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i539 = icmp eq i32 %389, 0, !dbg !28
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i540 = select i1 %.not36.i539, float %391, float %390, !dbg !28
  br label %__nv_cosf.exit548, !dbg !28

__nv_cosf.exit548:                                ; preds = %__internal_fmad.exit2.i.i.i530, %__internal_fmad.exit5.i.i.i538
  %z.i.i.0.i541 = phi float [ %.0.i540, %__internal_fmad.exit5.i.i.i538 ], [ %.05.i536, %__internal_fmad.exit2.i.i.i530 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !28
  %392 = fmul float %86, 0x3FE45F3060000000, !dbg !28
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i550 = icmp eq i32 %393, 0, !dbg !28
  %394 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %392) #4, !dbg !28
  %395 = tail call i32 @llvm.nvvm.f2i.rn(float %392) #4, !dbg !28
  %.01.i551 = select i1 %.not.i550, i32 %395, i32 %394, !dbg !28
  %396 = sitofp i32 %.01.i551 to float, !dbg !28
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i552 = icmp eq i32 %397, 0, !dbg !28
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %396, float 0xBFF921FB40000000, float %86) #4, !dbg !28
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %396, float 0xBFF921FB40000000, float %86) #4, !dbg !28
  %.02.i553 = select i1 %.not15.i552, float %399, float %398, !dbg !28
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i554 = icmp eq i32 %400, 0, !dbg !28
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %396, float 0xBE74442D00000000, float %.02.i553) #4, !dbg !28
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %396, float 0xBE74442D00000000, float %.02.i553) #4, !dbg !28
  %.03.i555 = select i1 %.not16.i554, float %402, float %401, !dbg !28
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i556 = icmp eq i32 %403, 0, !dbg !28
  %404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %396, float 0xBCF84698A0000000, float %.03.i555) #4, !dbg !28
  %405 = tail call float @llvm.nvvm.fma.rn.f(float %396, float 0xBCF84698A0000000, float %.03.i555) #4, !dbg !28
  %.04.i557 = select i1 %.not17.i556, float %405, float %404, !dbg !28
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i558 = icmp eq i32 %406, 0, !dbg !28
  %407 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #4, !dbg !28
  %408 = tail call float @llvm.nvvm.fabs.f(float %86) #4, !dbg !28
  %.06.i559 = select i1 %.not18.i558, float %408, float %407, !dbg !28
  %409 = fcmp ult float %.06.i559, 1.056150e+05, !dbg !28
  br i1 %409, label %__internal_trig_reduction_kernel.exit.i.i577, label %__nv_isinff.exit.i.i.i560, !dbg !28

__nv_isinff.exit.i.i.i560:                        ; preds = %__nv_cosf.exit548
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i561 = icmp eq i32 %410, 0, !dbg !28
  %.07.i562 = select i1 %.not19.i561, float %408, float %407, !dbg !28
  %411 = fcmp oeq float %.07.i562, 0x7FF0000000000000, !dbg !28
  br i1 %411, label %__nv_fmul_rn.exit.i.i.i600, label %415, !dbg !28

__nv_fmul_rn.exit.i.i.i600:                       ; preds = %__nv_isinff.exit.i.i.i560
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i601 = icmp eq i32 %412, 0, !dbg !28
  %413 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %86, float 0.000000e+00) #4, !dbg !28
  %414 = tail call float @llvm.nvvm.mul.rn.f(float %86, float 0.000000e+00) #4, !dbg !28
  %.08.i602 = select i1 %.not27.i601, float %414, float %413, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !28

415:                                              ; preds = %__nv_isinff.exit.i.i.i560
  %416 = lshr i32 %85, 23, !dbg !28
  %417 = and i32 %416, 224, !dbg !28
  %418 = add nsw i32 %417, -128, !dbg !28
  %419 = shl i32 %85, 8, !dbg !28
  %420 = or i32 %419, -2147483648, !dbg !28
  %421 = lshr exact i32 %418, 5, !dbg !28
  br label %422, !dbg !28

422:                                              ; preds = %415, %422
  %indvars.iv907 = phi i64 [ 0, %415 ], [ %indvars.iv.next908, %422 ]
  %hi.i.i.i.0.i563844 = phi i32 [ 0, %415 ], [ %427, %422 ]
  %423 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv907, !dbg !28
  %424 = load i32, ptr addrspace(1) %423, align 4, !dbg !28
  %425 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %424, i32 %420, i32 %hi.i.i.i.0.i563844) #5, !dbg !28, !srcloc !29
  %426 = extractvalue { i32, i32 } %425, 0, !dbg !28
  %427 = extractvalue { i32, i32 } %425, 1, !dbg !28
  %428 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %indvars.iv907, !dbg !28
  store i32 %426, ptr %428, align 4, !dbg !28
  %indvars.iv.next908 = add nuw nsw i64 %indvars.iv907, 1, !dbg !28
  %exitcond909.not = icmp eq i64 %indvars.iv.next908, 6, !dbg !28
  br i1 %exitcond909.not, label %429, label %422, !dbg !28, !llvm.loop !34

429:                                              ; preds = %422
  %430 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i549, i64 24, !dbg !28
  store i32 %427, ptr %430, align 4, !dbg !28
  %431 = sub nsw i32 6, %421, !dbg !28
  %432 = sext i32 %431 to i64, !dbg !28
  %433 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %432, !dbg !28
  %434 = load i32, ptr %433, align 4, !dbg !28
  %435 = sub nsw i32 5, %421, !dbg !28
  %436 = sext i32 %435 to i64, !dbg !28
  %437 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %436, !dbg !28
  %438 = load i32, ptr %437, align 4, !dbg !28
  %439 = freeze i32 %438, !dbg !28
  %440 = and i32 %85, 260046848, !dbg !28
  %.not20.i565 = icmp eq i32 %440, 0, !dbg !28
  br i1 %.not20.i565, label %__internal_trig_reduction_slowpath.exit.i.i.i566, label %441, !dbg !28

441:                                              ; preds = %429
  %442 = sub nsw i32 4, %421, !dbg !28
  %443 = sext i32 %442 to i64, !dbg !28
  %444 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %443, !dbg !28
  %445 = load i32, ptr %444, align 4, !dbg !28
  %446 = tail call i32 @llvm.fshl.i32(i32 %439, i32 %445, i32 %416), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i566, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i566: ; preds = %441, %429
  %lo.i.i.i.0.i568 = phi i32 [ %446, %441 ], [ %439, %429 ], !dbg !28
  %447 = tail call i32 @llvm.fshl.i32(i32 %434, i32 %439, i32 %416), !dbg !28
  %448 = lshr i32 %447, 30, !dbg !28
  %449 = tail call i32 @llvm.fshl.i32(i32 %447, i32 %lo.i.i.i.0.i568, i32 2), !dbg !28
  %450 = shl i32 %lo.i.i.i.0.i568, 2, !dbg !28
  %451 = lshr i32 %449, 31, !dbg !28
  %452 = add nuw nsw i32 %451, %448, !dbg !28
  %453 = sub nsw i32 0, %452, !dbg !28
  %.not2123.i569 = icmp slt i32 %85, 0, !dbg !28
  %spec.select.i570 = select i1 %.not2123.i569, i32 %453, i32 %452, !dbg !28
  %454 = xor i32 %449, %85, !dbg !28
  %.lobit.i571 = ashr i32 %449, 31, !dbg !28
  %hi.i.i.i.2.i572 = xor i32 %.lobit.i571, %449, !dbg !28
  %lo.i.i.i.1.i574 = xor i32 %.lobit.i571, %450, !dbg !28
  %455 = zext i32 %hi.i.i.i.2.i572 to i64, !dbg !28
  %456 = shl nuw i64 %455, 32, !dbg !28
  %457 = zext i32 %lo.i.i.i.1.i574 to i64, !dbg !28
  %458 = or disjoint i64 %456, %457, !dbg !28
  %459 = sitofp i64 %458 to double, !dbg !28
  %460 = fmul double %459, 0x3BF921FB54442D19, !dbg !28
  %461 = fptrunc double %460 to float, !dbg !28
  %462 = fneg float %461, !dbg !28
  %.not2526.i575 = icmp slt i32 %454, 0, !dbg !28
  %r.i.i.i.0.i576 = select i1 %.not2526.i575, float %462, float %461, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !28

__internal_trig_reduction_kernel.exit.i.i577:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i566, %__nv_fmul_rn.exit.i.i.i600, %__nv_cosf.exit548
  %i.i.1.i578 = phi i32 [ %.01.i551, %__nv_cosf.exit548 ], [ 0, %__nv_fmul_rn.exit.i.i.i600 ], [ %spec.select.i570, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !28
  %t.i.i.1.i579 = phi float [ %.04.i557, %__nv_cosf.exit548 ], [ %.08.i602, %__nv_fmul_rn.exit.i.i.i600 ], [ %r.i.i.i.0.i576, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !28
  %463 = add i32 %i.i.1.i578, 1, !dbg !28
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i580 = icmp eq i32 %464, 0, !dbg !28
  %465 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #4, !dbg !28
  %466 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #4, !dbg !28
  %.011.i581 = select i1 %.not28.i580, float %466, float %465, !dbg !28
  %467 = and i32 %i.i.1.i578, 1, !dbg !28
  %.not29.not.i582 = icmp eq i32 %467, 0, !dbg !28
  %468 = select i1 %.not29.not.i582, float 1.000000e+00, float %t.i.i.1.i579, !dbg !28
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i583 = icmp eq i32 %469, 0, !dbg !28
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i581, float %468, float 0.000000e+00) #4, !dbg !28
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i581, float %468, float 0.000000e+00) #4, !dbg !28
  %.012.i584 = select i1 %.not30.i583, float %471, float %470, !dbg !28
  br i1 %.not29.not.i582, label %__internal_fmad.exit1.i.i.i597, label %__internal_fmad.exit2.i.i.i585, !dbg !28

__internal_fmad.exit1.i.i.i597:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i577
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i598 = icmp eq i32 %472, 0, !dbg !28
  %473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #4, !dbg !28
  %474 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i599 = select i1 %.not31.i598, float %474, float %473, !dbg !28
  br label %__internal_fmad.exit2.i.i.i585, !dbg !28

__internal_fmad.exit2.i.i.i585:                   ; preds = %__internal_fmad.exit1.i.i.i597, %__internal_trig_reduction_kernel.exit.i.i577
  %475 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i597 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !28
  %476 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i597 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !28
  %477 = phi float [ %.013.i599, %__internal_fmad.exit1.i.i.i597 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !28
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i586 = icmp eq i32 %478, 0, !dbg !28
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %477, float %.011.i581, float %476) #4, !dbg !28
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %477, float %.011.i581, float %476) #4, !dbg !28
  %.010.i587 = select i1 %.not32.i586, float %480, float %479, !dbg !28
  %481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i588 = icmp eq i32 %481, 0, !dbg !28
  %482 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i587, float %.011.i581, float %475) #4, !dbg !28
  %483 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i587, float %.011.i581, float %475) #4, !dbg !28
  %.09.i589 = select i1 %.not33.i588, float %483, float %482, !dbg !28
  %484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i590 = icmp eq i32 %484, 0, !dbg !28
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i589, float %.012.i584, float %468) #4, !dbg !28
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i589, float %.012.i584, float %468) #4, !dbg !28
  %.05.i591 = select i1 %.not34.i590, float %486, float %485, !dbg !28
  %487 = and i32 %463, 2, !dbg !28
  %.not35.i592 = icmp eq i32 %487, 0, !dbg !28
  br i1 %.not35.i592, label %__nv_cosf.exit603, label %__internal_fmad.exit5.i.i.i593, !dbg !28

__internal_fmad.exit5.i.i.i593:                   ; preds = %__internal_fmad.exit2.i.i.i585
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i594 = icmp eq i32 %488, 0, !dbg !28
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i595 = select i1 %.not36.i594, float %490, float %489, !dbg !28
  br label %__nv_cosf.exit603, !dbg !28

__nv_cosf.exit603:                                ; preds = %__internal_fmad.exit2.i.i.i585, %__internal_fmad.exit5.i.i.i593
  %z.i.i.0.i596 = phi float [ %.0.i595, %__internal_fmad.exit5.i.i.i593 ], [ %.05.i591, %__internal_fmad.exit2.i.i.i585 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !28
  %491 = fmul float %88, 0x3FE45F3060000000, !dbg !28
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i605 = icmp eq i32 %492, 0, !dbg !28
  %493 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %491) #4, !dbg !28
  %494 = tail call i32 @llvm.nvvm.f2i.rn(float %491) #4, !dbg !28
  %.01.i606 = select i1 %.not.i605, i32 %494, i32 %493, !dbg !28
  %495 = sitofp i32 %.01.i606 to float, !dbg !28
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i607 = icmp eq i32 %496, 0, !dbg !28
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %495, float 0xBFF921FB40000000, float %88) #4, !dbg !28
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %495, float 0xBFF921FB40000000, float %88) #4, !dbg !28
  %.02.i608 = select i1 %.not15.i607, float %498, float %497, !dbg !28
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i609 = icmp eq i32 %499, 0, !dbg !28
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %495, float 0xBE74442D00000000, float %.02.i608) #4, !dbg !28
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %495, float 0xBE74442D00000000, float %.02.i608) #4, !dbg !28
  %.03.i610 = select i1 %.not16.i609, float %501, float %500, !dbg !28
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i611 = icmp eq i32 %502, 0, !dbg !28
  %503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %495, float 0xBCF84698A0000000, float %.03.i610) #4, !dbg !28
  %504 = tail call float @llvm.nvvm.fma.rn.f(float %495, float 0xBCF84698A0000000, float %.03.i610) #4, !dbg !28
  %.04.i612 = select i1 %.not17.i611, float %504, float %503, !dbg !28
  %505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i613 = icmp eq i32 %505, 0, !dbg !28
  %506 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !28
  %507 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !28
  %.06.i614 = select i1 %.not18.i613, float %507, float %506, !dbg !28
  %508 = fcmp ult float %.06.i614, 1.056150e+05, !dbg !28
  br i1 %508, label %__internal_trig_reduction_kernel.exit.i.i632, label %__nv_isinff.exit.i.i.i615, !dbg !28

__nv_isinff.exit.i.i.i615:                        ; preds = %__nv_cosf.exit603
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i616 = icmp eq i32 %509, 0, !dbg !28
  %.07.i617 = select i1 %.not19.i616, float %507, float %506, !dbg !28
  %510 = fcmp oeq float %.07.i617, 0x7FF0000000000000, !dbg !28
  br i1 %510, label %__nv_fmul_rn.exit.i.i.i655, label %514, !dbg !28

__nv_fmul_rn.exit.i.i.i655:                       ; preds = %__nv_isinff.exit.i.i.i615
  %511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i656 = icmp eq i32 %511, 0, !dbg !28
  %512 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %88, float 0.000000e+00) #4, !dbg !28
  %513 = tail call float @llvm.nvvm.mul.rn.f(float %88, float 0.000000e+00) #4, !dbg !28
  %.08.i657 = select i1 %.not27.i656, float %513, float %512, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !28

514:                                              ; preds = %__nv_isinff.exit.i.i.i615
  %515 = lshr i32 %87, 23, !dbg !28
  %516 = and i32 %515, 224, !dbg !28
  %517 = add nsw i32 %516, -128, !dbg !28
  %518 = shl i32 %87, 8, !dbg !28
  %519 = or i32 %518, -2147483648, !dbg !28
  %520 = lshr exact i32 %517, 5, !dbg !28
  br label %521, !dbg !28

521:                                              ; preds = %514, %521
  %indvars.iv910 = phi i64 [ 0, %514 ], [ %indvars.iv.next911, %521 ]
  %hi.i.i.i.0.i618846 = phi i32 [ 0, %514 ], [ %526, %521 ]
  %522 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv910, !dbg !28
  %523 = load i32, ptr addrspace(1) %522, align 4, !dbg !28
  %524 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %523, i32 %519, i32 %hi.i.i.i.0.i618846) #5, !dbg !28, !srcloc !29
  %525 = extractvalue { i32, i32 } %524, 0, !dbg !28
  %526 = extractvalue { i32, i32 } %524, 1, !dbg !28
  %527 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %indvars.iv910, !dbg !28
  store i32 %525, ptr %527, align 4, !dbg !28
  %indvars.iv.next911 = add nuw nsw i64 %indvars.iv910, 1, !dbg !28
  %exitcond912.not = icmp eq i64 %indvars.iv.next911, 6, !dbg !28
  br i1 %exitcond912.not, label %528, label %521, !dbg !28, !llvm.loop !35

528:                                              ; preds = %521
  %529 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i604, i64 24, !dbg !28
  store i32 %526, ptr %529, align 4, !dbg !28
  %530 = sub nsw i32 6, %520, !dbg !28
  %531 = sext i32 %530 to i64, !dbg !28
  %532 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %531, !dbg !28
  %533 = load i32, ptr %532, align 4, !dbg !28
  %534 = sub nsw i32 5, %520, !dbg !28
  %535 = sext i32 %534 to i64, !dbg !28
  %536 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %535, !dbg !28
  %537 = load i32, ptr %536, align 4, !dbg !28
  %538 = freeze i32 %537, !dbg !28
  %539 = and i32 %87, 260046848, !dbg !28
  %.not20.i620 = icmp eq i32 %539, 0, !dbg !28
  br i1 %.not20.i620, label %__internal_trig_reduction_slowpath.exit.i.i.i621, label %540, !dbg !28

540:                                              ; preds = %528
  %541 = sub nsw i32 4, %520, !dbg !28
  %542 = sext i32 %541 to i64, !dbg !28
  %543 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %542, !dbg !28
  %544 = load i32, ptr %543, align 4, !dbg !28
  %545 = tail call i32 @llvm.fshl.i32(i32 %538, i32 %544, i32 %515), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i621, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i621: ; preds = %540, %528
  %lo.i.i.i.0.i623 = phi i32 [ %545, %540 ], [ %538, %528 ], !dbg !28
  %546 = tail call i32 @llvm.fshl.i32(i32 %533, i32 %538, i32 %515), !dbg !28
  %547 = lshr i32 %546, 30, !dbg !28
  %548 = tail call i32 @llvm.fshl.i32(i32 %546, i32 %lo.i.i.i.0.i623, i32 2), !dbg !28
  %549 = shl i32 %lo.i.i.i.0.i623, 2, !dbg !28
  %550 = lshr i32 %548, 31, !dbg !28
  %551 = add nuw nsw i32 %550, %547, !dbg !28
  %552 = sub nsw i32 0, %551, !dbg !28
  %.not2123.i624 = icmp slt i32 %87, 0, !dbg !28
  %spec.select.i625 = select i1 %.not2123.i624, i32 %552, i32 %551, !dbg !28
  %553 = xor i32 %548, %87, !dbg !28
  %.lobit.i626 = ashr i32 %548, 31, !dbg !28
  %hi.i.i.i.2.i627 = xor i32 %.lobit.i626, %548, !dbg !28
  %lo.i.i.i.1.i629 = xor i32 %.lobit.i626, %549, !dbg !28
  %554 = zext i32 %hi.i.i.i.2.i627 to i64, !dbg !28
  %555 = shl nuw i64 %554, 32, !dbg !28
  %556 = zext i32 %lo.i.i.i.1.i629 to i64, !dbg !28
  %557 = or disjoint i64 %555, %556, !dbg !28
  %558 = sitofp i64 %557 to double, !dbg !28
  %559 = fmul double %558, 0x3BF921FB54442D19, !dbg !28
  %560 = fptrunc double %559 to float, !dbg !28
  %561 = fneg float %560, !dbg !28
  %.not2526.i630 = icmp slt i32 %553, 0, !dbg !28
  %r.i.i.i.0.i631 = select i1 %.not2526.i630, float %561, float %560, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !28

__internal_trig_reduction_kernel.exit.i.i632:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i621, %__nv_fmul_rn.exit.i.i.i655, %__nv_cosf.exit603
  %i.i.1.i633 = phi i32 [ %.01.i606, %__nv_cosf.exit603 ], [ 0, %__nv_fmul_rn.exit.i.i.i655 ], [ %spec.select.i625, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !28
  %t.i.i.1.i634 = phi float [ %.04.i612, %__nv_cosf.exit603 ], [ %.08.i657, %__nv_fmul_rn.exit.i.i.i655 ], [ %r.i.i.i.0.i631, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !28
  %562 = add i32 %i.i.1.i633, 1, !dbg !28
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i635 = icmp eq i32 %563, 0, !dbg !28
  %564 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #4, !dbg !28
  %565 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #4, !dbg !28
  %.011.i636 = select i1 %.not28.i635, float %565, float %564, !dbg !28
  %566 = and i32 %i.i.1.i633, 1, !dbg !28
  %.not29.not.i637 = icmp eq i32 %566, 0, !dbg !28
  %567 = select i1 %.not29.not.i637, float 1.000000e+00, float %t.i.i.1.i634, !dbg !28
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i638 = icmp eq i32 %568, 0, !dbg !28
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i636, float %567, float 0.000000e+00) #4, !dbg !28
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i636, float %567, float 0.000000e+00) #4, !dbg !28
  %.012.i639 = select i1 %.not30.i638, float %570, float %569, !dbg !28
  br i1 %.not29.not.i637, label %__internal_fmad.exit1.i.i.i652, label %__internal_fmad.exit2.i.i.i640, !dbg !28

__internal_fmad.exit1.i.i.i652:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i632
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i653 = icmp eq i32 %571, 0, !dbg !28
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #4, !dbg !28
  %573 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i654 = select i1 %.not31.i653, float %573, float %572, !dbg !28
  br label %__internal_fmad.exit2.i.i.i640, !dbg !28

__internal_fmad.exit2.i.i.i640:                   ; preds = %__internal_fmad.exit1.i.i.i652, %__internal_trig_reduction_kernel.exit.i.i632
  %574 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i652 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !28
  %575 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i652 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !28
  %576 = phi float [ %.013.i654, %__internal_fmad.exit1.i.i.i652 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !28
  %577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i641 = icmp eq i32 %577, 0, !dbg !28
  %578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %576, float %.011.i636, float %575) #4, !dbg !28
  %579 = tail call float @llvm.nvvm.fma.rn.f(float %576, float %.011.i636, float %575) #4, !dbg !28
  %.010.i642 = select i1 %.not32.i641, float %579, float %578, !dbg !28
  %580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i643 = icmp eq i32 %580, 0, !dbg !28
  %581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i642, float %.011.i636, float %574) #4, !dbg !28
  %582 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i642, float %.011.i636, float %574) #4, !dbg !28
  %.09.i644 = select i1 %.not33.i643, float %582, float %581, !dbg !28
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i645 = icmp eq i32 %583, 0, !dbg !28
  %584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i644, float %.012.i639, float %567) #4, !dbg !28
  %585 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i644, float %.012.i639, float %567) #4, !dbg !28
  %.05.i646 = select i1 %.not34.i645, float %585, float %584, !dbg !28
  %586 = and i32 %562, 2, !dbg !28
  %.not35.i647 = icmp eq i32 %586, 0, !dbg !28
  br i1 %.not35.i647, label %__nv_cosf.exit658, label %__internal_fmad.exit5.i.i.i648, !dbg !28

__internal_fmad.exit5.i.i.i648:                   ; preds = %__internal_fmad.exit2.i.i.i640
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i649 = icmp eq i32 %587, 0, !dbg !28
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i650 = select i1 %.not36.i649, float %589, float %588, !dbg !28
  br label %__nv_cosf.exit658, !dbg !28

__nv_cosf.exit658:                                ; preds = %__internal_fmad.exit2.i.i.i640, %__internal_fmad.exit5.i.i.i648
  %z.i.i.0.i651 = phi float [ %.0.i650, %__internal_fmad.exit5.i.i.i648 ], [ %.05.i646, %__internal_fmad.exit2.i.i.i640 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !28
  %590 = fmul float %90, 0x3FE45F3060000000, !dbg !28
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i660 = icmp eq i32 %591, 0, !dbg !28
  %592 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %590) #4, !dbg !28
  %593 = tail call i32 @llvm.nvvm.f2i.rn(float %590) #4, !dbg !28
  %.01.i661 = select i1 %.not.i660, i32 %593, i32 %592, !dbg !28
  %594 = sitofp i32 %.01.i661 to float, !dbg !28
  %595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i662 = icmp eq i32 %595, 0, !dbg !28
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %594, float 0xBFF921FB40000000, float %90) #4, !dbg !28
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %594, float 0xBFF921FB40000000, float %90) #4, !dbg !28
  %.02.i663 = select i1 %.not15.i662, float %597, float %596, !dbg !28
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i664 = icmp eq i32 %598, 0, !dbg !28
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %594, float 0xBE74442D00000000, float %.02.i663) #4, !dbg !28
  %600 = tail call float @llvm.nvvm.fma.rn.f(float %594, float 0xBE74442D00000000, float %.02.i663) #4, !dbg !28
  %.03.i665 = select i1 %.not16.i664, float %600, float %599, !dbg !28
  %601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i666 = icmp eq i32 %601, 0, !dbg !28
  %602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %594, float 0xBCF84698A0000000, float %.03.i665) #4, !dbg !28
  %603 = tail call float @llvm.nvvm.fma.rn.f(float %594, float 0xBCF84698A0000000, float %.03.i665) #4, !dbg !28
  %.04.i667 = select i1 %.not17.i666, float %603, float %602, !dbg !28
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i668 = icmp eq i32 %604, 0, !dbg !28
  %605 = tail call float @llvm.nvvm.fabs.ftz.f(float %90) #4, !dbg !28
  %606 = tail call float @llvm.nvvm.fabs.f(float %90) #4, !dbg !28
  %.06.i669 = select i1 %.not18.i668, float %606, float %605, !dbg !28
  %607 = fcmp ult float %.06.i669, 1.056150e+05, !dbg !28
  br i1 %607, label %__internal_trig_reduction_kernel.exit.i.i687, label %__nv_isinff.exit.i.i.i670, !dbg !28

__nv_isinff.exit.i.i.i670:                        ; preds = %__nv_cosf.exit658
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i671 = icmp eq i32 %608, 0, !dbg !28
  %.07.i672 = select i1 %.not19.i671, float %606, float %605, !dbg !28
  %609 = fcmp oeq float %.07.i672, 0x7FF0000000000000, !dbg !28
  br i1 %609, label %__nv_fmul_rn.exit.i.i.i710, label %613, !dbg !28

__nv_fmul_rn.exit.i.i.i710:                       ; preds = %__nv_isinff.exit.i.i.i670
  %610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i711 = icmp eq i32 %610, 0, !dbg !28
  %611 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %90, float 0.000000e+00) #4, !dbg !28
  %612 = tail call float @llvm.nvvm.mul.rn.f(float %90, float 0.000000e+00) #4, !dbg !28
  %.08.i712 = select i1 %.not27.i711, float %612, float %611, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !28

613:                                              ; preds = %__nv_isinff.exit.i.i.i670
  %614 = lshr i32 %89, 23, !dbg !28
  %615 = and i32 %614, 224, !dbg !28
  %616 = add nsw i32 %615, -128, !dbg !28
  %617 = shl i32 %89, 8, !dbg !28
  %618 = or i32 %617, -2147483648, !dbg !28
  %619 = lshr exact i32 %616, 5, !dbg !28
  br label %620, !dbg !28

620:                                              ; preds = %613, %620
  %indvars.iv913 = phi i64 [ 0, %613 ], [ %indvars.iv.next914, %620 ]
  %hi.i.i.i.0.i673848 = phi i32 [ 0, %613 ], [ %625, %620 ]
  %621 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv913, !dbg !28
  %622 = load i32, ptr addrspace(1) %621, align 4, !dbg !28
  %623 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %622, i32 %618, i32 %hi.i.i.i.0.i673848) #5, !dbg !28, !srcloc !29
  %624 = extractvalue { i32, i32 } %623, 0, !dbg !28
  %625 = extractvalue { i32, i32 } %623, 1, !dbg !28
  %626 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %indvars.iv913, !dbg !28
  store i32 %624, ptr %626, align 4, !dbg !28
  %indvars.iv.next914 = add nuw nsw i64 %indvars.iv913, 1, !dbg !28
  %exitcond915.not = icmp eq i64 %indvars.iv.next914, 6, !dbg !28
  br i1 %exitcond915.not, label %627, label %620, !dbg !28, !llvm.loop !36

627:                                              ; preds = %620
  %628 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i659, i64 24, !dbg !28
  store i32 %625, ptr %628, align 4, !dbg !28
  %629 = sub nsw i32 6, %619, !dbg !28
  %630 = sext i32 %629 to i64, !dbg !28
  %631 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %630, !dbg !28
  %632 = load i32, ptr %631, align 4, !dbg !28
  %633 = sub nsw i32 5, %619, !dbg !28
  %634 = sext i32 %633 to i64, !dbg !28
  %635 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %634, !dbg !28
  %636 = load i32, ptr %635, align 4, !dbg !28
  %637 = freeze i32 %636, !dbg !28
  %638 = and i32 %89, 260046848, !dbg !28
  %.not20.i675 = icmp eq i32 %638, 0, !dbg !28
  br i1 %.not20.i675, label %__internal_trig_reduction_slowpath.exit.i.i.i676, label %639, !dbg !28

639:                                              ; preds = %627
  %640 = sub nsw i32 4, %619, !dbg !28
  %641 = sext i32 %640 to i64, !dbg !28
  %642 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %641, !dbg !28
  %643 = load i32, ptr %642, align 4, !dbg !28
  %644 = tail call i32 @llvm.fshl.i32(i32 %637, i32 %643, i32 %614), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i676, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i676: ; preds = %639, %627
  %lo.i.i.i.0.i678 = phi i32 [ %644, %639 ], [ %637, %627 ], !dbg !28
  %645 = tail call i32 @llvm.fshl.i32(i32 %632, i32 %637, i32 %614), !dbg !28
  %646 = lshr i32 %645, 30, !dbg !28
  %647 = tail call i32 @llvm.fshl.i32(i32 %645, i32 %lo.i.i.i.0.i678, i32 2), !dbg !28
  %648 = shl i32 %lo.i.i.i.0.i678, 2, !dbg !28
  %649 = lshr i32 %647, 31, !dbg !28
  %650 = add nuw nsw i32 %649, %646, !dbg !28
  %651 = sub nsw i32 0, %650, !dbg !28
  %.not2123.i679 = icmp slt i32 %89, 0, !dbg !28
  %spec.select.i680 = select i1 %.not2123.i679, i32 %651, i32 %650, !dbg !28
  %652 = xor i32 %647, %89, !dbg !28
  %.lobit.i681 = ashr i32 %647, 31, !dbg !28
  %hi.i.i.i.2.i682 = xor i32 %.lobit.i681, %647, !dbg !28
  %lo.i.i.i.1.i684 = xor i32 %.lobit.i681, %648, !dbg !28
  %653 = zext i32 %hi.i.i.i.2.i682 to i64, !dbg !28
  %654 = shl nuw i64 %653, 32, !dbg !28
  %655 = zext i32 %lo.i.i.i.1.i684 to i64, !dbg !28
  %656 = or disjoint i64 %654, %655, !dbg !28
  %657 = sitofp i64 %656 to double, !dbg !28
  %658 = fmul double %657, 0x3BF921FB54442D19, !dbg !28
  %659 = fptrunc double %658 to float, !dbg !28
  %660 = fneg float %659, !dbg !28
  %.not2526.i685 = icmp slt i32 %652, 0, !dbg !28
  %r.i.i.i.0.i686 = select i1 %.not2526.i685, float %660, float %659, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !28

__internal_trig_reduction_kernel.exit.i.i687:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i676, %__nv_fmul_rn.exit.i.i.i710, %__nv_cosf.exit658
  %i.i.1.i688 = phi i32 [ %.01.i661, %__nv_cosf.exit658 ], [ 0, %__nv_fmul_rn.exit.i.i.i710 ], [ %spec.select.i680, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !28
  %t.i.i.1.i689 = phi float [ %.04.i667, %__nv_cosf.exit658 ], [ %.08.i712, %__nv_fmul_rn.exit.i.i.i710 ], [ %r.i.i.i.0.i686, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !28
  %661 = add i32 %i.i.1.i688, 1, !dbg !28
  %662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i690 = icmp eq i32 %662, 0, !dbg !28
  %663 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #4, !dbg !28
  %664 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #4, !dbg !28
  %.011.i691 = select i1 %.not28.i690, float %664, float %663, !dbg !28
  %665 = and i32 %i.i.1.i688, 1, !dbg !28
  %.not29.not.i692 = icmp eq i32 %665, 0, !dbg !28
  %666 = select i1 %.not29.not.i692, float 1.000000e+00, float %t.i.i.1.i689, !dbg !28
  %667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i693 = icmp eq i32 %667, 0, !dbg !28
  %668 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i691, float %666, float 0.000000e+00) #4, !dbg !28
  %669 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i691, float %666, float 0.000000e+00) #4, !dbg !28
  %.012.i694 = select i1 %.not30.i693, float %669, float %668, !dbg !28
  br i1 %.not29.not.i692, label %__internal_fmad.exit1.i.i.i707, label %__internal_fmad.exit2.i.i.i695, !dbg !28

__internal_fmad.exit1.i.i.i707:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i687
  %670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i708 = icmp eq i32 %670, 0, !dbg !28
  %671 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #4, !dbg !28
  %672 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i709 = select i1 %.not31.i708, float %672, float %671, !dbg !28
  br label %__internal_fmad.exit2.i.i.i695, !dbg !28

__internal_fmad.exit2.i.i.i695:                   ; preds = %__internal_fmad.exit1.i.i.i707, %__internal_trig_reduction_kernel.exit.i.i687
  %673 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i707 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !28
  %674 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i707 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !28
  %675 = phi float [ %.013.i709, %__internal_fmad.exit1.i.i.i707 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !28
  %676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i696 = icmp eq i32 %676, 0, !dbg !28
  %677 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %675, float %.011.i691, float %674) #4, !dbg !28
  %678 = tail call float @llvm.nvvm.fma.rn.f(float %675, float %.011.i691, float %674) #4, !dbg !28
  %.010.i697 = select i1 %.not32.i696, float %678, float %677, !dbg !28
  %679 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i698 = icmp eq i32 %679, 0, !dbg !28
  %680 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i697, float %.011.i691, float %673) #4, !dbg !28
  %681 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i697, float %.011.i691, float %673) #4, !dbg !28
  %.09.i699 = select i1 %.not33.i698, float %681, float %680, !dbg !28
  %682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i700 = icmp eq i32 %682, 0, !dbg !28
  %683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i699, float %.012.i694, float %666) #4, !dbg !28
  %684 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i699, float %.012.i694, float %666) #4, !dbg !28
  %.05.i701 = select i1 %.not34.i700, float %684, float %683, !dbg !28
  %685 = and i32 %661, 2, !dbg !28
  %.not35.i702 = icmp eq i32 %685, 0, !dbg !28
  br i1 %.not35.i702, label %__nv_cosf.exit713, label %__internal_fmad.exit5.i.i.i703, !dbg !28

__internal_fmad.exit5.i.i.i703:                   ; preds = %__internal_fmad.exit2.i.i.i695
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i704 = icmp eq i32 %686, 0, !dbg !28
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i705 = select i1 %.not36.i704, float %688, float %687, !dbg !28
  br label %__nv_cosf.exit713, !dbg !28

__nv_cosf.exit713:                                ; preds = %__internal_fmad.exit2.i.i.i695, %__internal_fmad.exit5.i.i.i703
  %z.i.i.0.i706 = phi float [ %.0.i705, %__internal_fmad.exit5.i.i.i703 ], [ %.05.i701, %__internal_fmad.exit2.i.i.i695 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !28
  %689 = fmul float %92, 0x3FE45F3060000000, !dbg !28
  %690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i715 = icmp eq i32 %690, 0, !dbg !28
  %691 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %689) #4, !dbg !28
  %692 = tail call i32 @llvm.nvvm.f2i.rn(float %689) #4, !dbg !28
  %.01.i716 = select i1 %.not.i715, i32 %692, i32 %691, !dbg !28
  %693 = sitofp i32 %.01.i716 to float, !dbg !28
  %694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i717 = icmp eq i32 %694, 0, !dbg !28
  %695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %693, float 0xBFF921FB40000000, float %92) #4, !dbg !28
  %696 = tail call float @llvm.nvvm.fma.rn.f(float %693, float 0xBFF921FB40000000, float %92) #4, !dbg !28
  %.02.i718 = select i1 %.not15.i717, float %696, float %695, !dbg !28
  %697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i719 = icmp eq i32 %697, 0, !dbg !28
  %698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %693, float 0xBE74442D00000000, float %.02.i718) #4, !dbg !28
  %699 = tail call float @llvm.nvvm.fma.rn.f(float %693, float 0xBE74442D00000000, float %.02.i718) #4, !dbg !28
  %.03.i720 = select i1 %.not16.i719, float %699, float %698, !dbg !28
  %700 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i721 = icmp eq i32 %700, 0, !dbg !28
  %701 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %693, float 0xBCF84698A0000000, float %.03.i720) #4, !dbg !28
  %702 = tail call float @llvm.nvvm.fma.rn.f(float %693, float 0xBCF84698A0000000, float %.03.i720) #4, !dbg !28
  %.04.i722 = select i1 %.not17.i721, float %702, float %701, !dbg !28
  %703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i723 = icmp eq i32 %703, 0, !dbg !28
  %704 = tail call float @llvm.nvvm.fabs.ftz.f(float %92) #4, !dbg !28
  %705 = tail call float @llvm.nvvm.fabs.f(float %92) #4, !dbg !28
  %.06.i724 = select i1 %.not18.i723, float %705, float %704, !dbg !28
  %706 = fcmp ult float %.06.i724, 1.056150e+05, !dbg !28
  br i1 %706, label %__internal_trig_reduction_kernel.exit.i.i742, label %__nv_isinff.exit.i.i.i725, !dbg !28

__nv_isinff.exit.i.i.i725:                        ; preds = %__nv_cosf.exit713
  %707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i726 = icmp eq i32 %707, 0, !dbg !28
  %.07.i727 = select i1 %.not19.i726, float %705, float %704, !dbg !28
  %708 = fcmp oeq float %.07.i727, 0x7FF0000000000000, !dbg !28
  br i1 %708, label %__nv_fmul_rn.exit.i.i.i765, label %712, !dbg !28

__nv_fmul_rn.exit.i.i.i765:                       ; preds = %__nv_isinff.exit.i.i.i725
  %709 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i766 = icmp eq i32 %709, 0, !dbg !28
  %710 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %92, float 0.000000e+00) #4, !dbg !28
  %711 = tail call float @llvm.nvvm.mul.rn.f(float %92, float 0.000000e+00) #4, !dbg !28
  %.08.i767 = select i1 %.not27.i766, float %711, float %710, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !28

712:                                              ; preds = %__nv_isinff.exit.i.i.i725
  %713 = lshr i32 %91, 23, !dbg !28
  %714 = and i32 %713, 224, !dbg !28
  %715 = add nsw i32 %714, -128, !dbg !28
  %716 = shl i32 %91, 8, !dbg !28
  %717 = or i32 %716, -2147483648, !dbg !28
  %718 = lshr exact i32 %715, 5, !dbg !28
  br label %719, !dbg !28

719:                                              ; preds = %712, %719
  %indvars.iv916 = phi i64 [ 0, %712 ], [ %indvars.iv.next917, %719 ]
  %hi.i.i.i.0.i728850 = phi i32 [ 0, %712 ], [ %724, %719 ]
  %720 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv916, !dbg !28
  %721 = load i32, ptr addrspace(1) %720, align 4, !dbg !28
  %722 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %721, i32 %717, i32 %hi.i.i.i.0.i728850) #5, !dbg !28, !srcloc !29
  %723 = extractvalue { i32, i32 } %722, 0, !dbg !28
  %724 = extractvalue { i32, i32 } %722, 1, !dbg !28
  %725 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %indvars.iv916, !dbg !28
  store i32 %723, ptr %725, align 4, !dbg !28
  %indvars.iv.next917 = add nuw nsw i64 %indvars.iv916, 1, !dbg !28
  %exitcond918.not = icmp eq i64 %indvars.iv.next917, 6, !dbg !28
  br i1 %exitcond918.not, label %726, label %719, !dbg !28, !llvm.loop !37

726:                                              ; preds = %719
  %727 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i714, i64 24, !dbg !28
  store i32 %724, ptr %727, align 4, !dbg !28
  %728 = sub nsw i32 6, %718, !dbg !28
  %729 = sext i32 %728 to i64, !dbg !28
  %730 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %729, !dbg !28
  %731 = load i32, ptr %730, align 4, !dbg !28
  %732 = sub nsw i32 5, %718, !dbg !28
  %733 = sext i32 %732 to i64, !dbg !28
  %734 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %733, !dbg !28
  %735 = load i32, ptr %734, align 4, !dbg !28
  %736 = freeze i32 %735, !dbg !28
  %737 = and i32 %91, 260046848, !dbg !28
  %.not20.i730 = icmp eq i32 %737, 0, !dbg !28
  br i1 %.not20.i730, label %__internal_trig_reduction_slowpath.exit.i.i.i731, label %738, !dbg !28

738:                                              ; preds = %726
  %739 = sub nsw i32 4, %718, !dbg !28
  %740 = sext i32 %739 to i64, !dbg !28
  %741 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %740, !dbg !28
  %742 = load i32, ptr %741, align 4, !dbg !28
  %743 = tail call i32 @llvm.fshl.i32(i32 %736, i32 %742, i32 %713), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i731, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i731: ; preds = %738, %726
  %lo.i.i.i.0.i733 = phi i32 [ %743, %738 ], [ %736, %726 ], !dbg !28
  %744 = tail call i32 @llvm.fshl.i32(i32 %731, i32 %736, i32 %713), !dbg !28
  %745 = lshr i32 %744, 30, !dbg !28
  %746 = tail call i32 @llvm.fshl.i32(i32 %744, i32 %lo.i.i.i.0.i733, i32 2), !dbg !28
  %747 = shl i32 %lo.i.i.i.0.i733, 2, !dbg !28
  %748 = lshr i32 %746, 31, !dbg !28
  %749 = add nuw nsw i32 %748, %745, !dbg !28
  %750 = sub nsw i32 0, %749, !dbg !28
  %.not2123.i734 = icmp slt i32 %91, 0, !dbg !28
  %spec.select.i735 = select i1 %.not2123.i734, i32 %750, i32 %749, !dbg !28
  %751 = xor i32 %746, %91, !dbg !28
  %.lobit.i736 = ashr i32 %746, 31, !dbg !28
  %hi.i.i.i.2.i737 = xor i32 %.lobit.i736, %746, !dbg !28
  %lo.i.i.i.1.i739 = xor i32 %.lobit.i736, %747, !dbg !28
  %752 = zext i32 %hi.i.i.i.2.i737 to i64, !dbg !28
  %753 = shl nuw i64 %752, 32, !dbg !28
  %754 = zext i32 %lo.i.i.i.1.i739 to i64, !dbg !28
  %755 = or disjoint i64 %753, %754, !dbg !28
  %756 = sitofp i64 %755 to double, !dbg !28
  %757 = fmul double %756, 0x3BF921FB54442D19, !dbg !28
  %758 = fptrunc double %757 to float, !dbg !28
  %759 = fneg float %758, !dbg !28
  %.not2526.i740 = icmp slt i32 %751, 0, !dbg !28
  %r.i.i.i.0.i741 = select i1 %.not2526.i740, float %759, float %758, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !28

__internal_trig_reduction_kernel.exit.i.i742:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i731, %__nv_fmul_rn.exit.i.i.i765, %__nv_cosf.exit713
  %i.i.1.i743 = phi i32 [ %.01.i716, %__nv_cosf.exit713 ], [ 0, %__nv_fmul_rn.exit.i.i.i765 ], [ %spec.select.i735, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !28
  %t.i.i.1.i744 = phi float [ %.04.i722, %__nv_cosf.exit713 ], [ %.08.i767, %__nv_fmul_rn.exit.i.i.i765 ], [ %r.i.i.i.0.i741, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !28
  %760 = add i32 %i.i.1.i743, 1, !dbg !28
  %761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i745 = icmp eq i32 %761, 0, !dbg !28
  %762 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #4, !dbg !28
  %763 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #4, !dbg !28
  %.011.i746 = select i1 %.not28.i745, float %763, float %762, !dbg !28
  %764 = and i32 %i.i.1.i743, 1, !dbg !28
  %.not29.not.i747 = icmp eq i32 %764, 0, !dbg !28
  %765 = select i1 %.not29.not.i747, float 1.000000e+00, float %t.i.i.1.i744, !dbg !28
  %766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i748 = icmp eq i32 %766, 0, !dbg !28
  %767 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i746, float %765, float 0.000000e+00) #4, !dbg !28
  %768 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i746, float %765, float 0.000000e+00) #4, !dbg !28
  %.012.i749 = select i1 %.not30.i748, float %768, float %767, !dbg !28
  br i1 %.not29.not.i747, label %__internal_fmad.exit1.i.i.i762, label %__internal_fmad.exit2.i.i.i750, !dbg !28

__internal_fmad.exit1.i.i.i762:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i742
  %769 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i763 = icmp eq i32 %769, 0, !dbg !28
  %770 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #4, !dbg !28
  %771 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i764 = select i1 %.not31.i763, float %771, float %770, !dbg !28
  br label %__internal_fmad.exit2.i.i.i750, !dbg !28

__internal_fmad.exit2.i.i.i750:                   ; preds = %__internal_fmad.exit1.i.i.i762, %__internal_trig_reduction_kernel.exit.i.i742
  %772 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i762 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !28
  %773 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i762 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !28
  %774 = phi float [ %.013.i764, %__internal_fmad.exit1.i.i.i762 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !28
  %775 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i751 = icmp eq i32 %775, 0, !dbg !28
  %776 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %774, float %.011.i746, float %773) #4, !dbg !28
  %777 = tail call float @llvm.nvvm.fma.rn.f(float %774, float %.011.i746, float %773) #4, !dbg !28
  %.010.i752 = select i1 %.not32.i751, float %777, float %776, !dbg !28
  %778 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i753 = icmp eq i32 %778, 0, !dbg !28
  %779 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i752, float %.011.i746, float %772) #4, !dbg !28
  %780 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i752, float %.011.i746, float %772) #4, !dbg !28
  %.09.i754 = select i1 %.not33.i753, float %780, float %779, !dbg !28
  %781 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i755 = icmp eq i32 %781, 0, !dbg !28
  %782 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i754, float %.012.i749, float %765) #4, !dbg !28
  %783 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i754, float %.012.i749, float %765) #4, !dbg !28
  %.05.i756 = select i1 %.not34.i755, float %783, float %782, !dbg !28
  %784 = and i32 %760, 2, !dbg !28
  %.not35.i757 = icmp eq i32 %784, 0, !dbg !28
  br i1 %.not35.i757, label %__nv_cosf.exit768, label %__internal_fmad.exit5.i.i.i758, !dbg !28

__internal_fmad.exit5.i.i.i758:                   ; preds = %__internal_fmad.exit2.i.i.i750
  %785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i759 = icmp eq i32 %785, 0, !dbg !28
  %786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %787 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i760 = select i1 %.not36.i759, float %787, float %786, !dbg !28
  br label %__nv_cosf.exit768, !dbg !28

__nv_cosf.exit768:                                ; preds = %__internal_fmad.exit2.i.i.i750, %__internal_fmad.exit5.i.i.i758
  %z.i.i.0.i761 = phi float [ %.0.i760, %__internal_fmad.exit5.i.i.i758 ], [ %.05.i756, %__internal_fmad.exit2.i.i.i750 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !28
  %788 = fmul float %94, 0x3FE45F3060000000, !dbg !28
  %789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i770 = icmp eq i32 %789, 0, !dbg !28
  %790 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %788) #4, !dbg !28
  %791 = tail call i32 @llvm.nvvm.f2i.rn(float %788) #4, !dbg !28
  %.01.i771 = select i1 %.not.i770, i32 %791, i32 %790, !dbg !28
  %792 = sitofp i32 %.01.i771 to float, !dbg !28
  %793 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i772 = icmp eq i32 %793, 0, !dbg !28
  %794 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %792, float 0xBFF921FB40000000, float %94) #4, !dbg !28
  %795 = tail call float @llvm.nvvm.fma.rn.f(float %792, float 0xBFF921FB40000000, float %94) #4, !dbg !28
  %.02.i773 = select i1 %.not15.i772, float %795, float %794, !dbg !28
  %796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i774 = icmp eq i32 %796, 0, !dbg !28
  %797 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %792, float 0xBE74442D00000000, float %.02.i773) #4, !dbg !28
  %798 = tail call float @llvm.nvvm.fma.rn.f(float %792, float 0xBE74442D00000000, float %.02.i773) #4, !dbg !28
  %.03.i775 = select i1 %.not16.i774, float %798, float %797, !dbg !28
  %799 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i776 = icmp eq i32 %799, 0, !dbg !28
  %800 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %792, float 0xBCF84698A0000000, float %.03.i775) #4, !dbg !28
  %801 = tail call float @llvm.nvvm.fma.rn.f(float %792, float 0xBCF84698A0000000, float %.03.i775) #4, !dbg !28
  %.04.i777 = select i1 %.not17.i776, float %801, float %800, !dbg !28
  %802 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i778 = icmp eq i32 %802, 0, !dbg !28
  %803 = tail call float @llvm.nvvm.fabs.ftz.f(float %94) #4, !dbg !28
  %804 = tail call float @llvm.nvvm.fabs.f(float %94) #4, !dbg !28
  %.06.i779 = select i1 %.not18.i778, float %804, float %803, !dbg !28
  %805 = fcmp ult float %.06.i779, 1.056150e+05, !dbg !28
  br i1 %805, label %__internal_trig_reduction_kernel.exit.i.i797, label %__nv_isinff.exit.i.i.i780, !dbg !28

__nv_isinff.exit.i.i.i780:                        ; preds = %__nv_cosf.exit768
  %806 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i781 = icmp eq i32 %806, 0, !dbg !28
  %.07.i782 = select i1 %.not19.i781, float %804, float %803, !dbg !28
  %807 = fcmp oeq float %.07.i782, 0x7FF0000000000000, !dbg !28
  br i1 %807, label %__nv_fmul_rn.exit.i.i.i820, label %811, !dbg !28

__nv_fmul_rn.exit.i.i.i820:                       ; preds = %__nv_isinff.exit.i.i.i780
  %808 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i821 = icmp eq i32 %808, 0, !dbg !28
  %809 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %94, float 0.000000e+00) #4, !dbg !28
  %810 = tail call float @llvm.nvvm.mul.rn.f(float %94, float 0.000000e+00) #4, !dbg !28
  %.08.i822 = select i1 %.not27.i821, float %810, float %809, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !28

811:                                              ; preds = %__nv_isinff.exit.i.i.i780
  %812 = lshr i32 %93, 23, !dbg !28
  %813 = and i32 %812, 224, !dbg !28
  %814 = add nsw i32 %813, -128, !dbg !28
  %815 = shl i32 %93, 8, !dbg !28
  %816 = or i32 %815, -2147483648, !dbg !28
  %817 = lshr exact i32 %814, 5, !dbg !28
  br label %818, !dbg !28

818:                                              ; preds = %811, %818
  %indvars.iv919 = phi i64 [ 0, %811 ], [ %indvars.iv.next920, %818 ]
  %hi.i.i.i.0.i783852 = phi i32 [ 0, %811 ], [ %823, %818 ]
  %819 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv919, !dbg !28
  %820 = load i32, ptr addrspace(1) %819, align 4, !dbg !28
  %821 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %820, i32 %816, i32 %hi.i.i.i.0.i783852) #5, !dbg !28, !srcloc !29
  %822 = extractvalue { i32, i32 } %821, 0, !dbg !28
  %823 = extractvalue { i32, i32 } %821, 1, !dbg !28
  %824 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %indvars.iv919, !dbg !28
  store i32 %822, ptr %824, align 4, !dbg !28
  %indvars.iv.next920 = add nuw nsw i64 %indvars.iv919, 1, !dbg !28
  %exitcond921.not = icmp eq i64 %indvars.iv.next920, 6, !dbg !28
  br i1 %exitcond921.not, label %825, label %818, !dbg !28, !llvm.loop !38

825:                                              ; preds = %818
  %826 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i769, i64 24, !dbg !28
  store i32 %823, ptr %826, align 4, !dbg !28
  %827 = sub nsw i32 6, %817, !dbg !28
  %828 = sext i32 %827 to i64, !dbg !28
  %829 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %828, !dbg !28
  %830 = load i32, ptr %829, align 4, !dbg !28
  %831 = sub nsw i32 5, %817, !dbg !28
  %832 = sext i32 %831 to i64, !dbg !28
  %833 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %832, !dbg !28
  %834 = load i32, ptr %833, align 4, !dbg !28
  %835 = freeze i32 %834, !dbg !28
  %836 = and i32 %93, 260046848, !dbg !28
  %.not20.i785 = icmp eq i32 %836, 0, !dbg !28
  br i1 %.not20.i785, label %__internal_trig_reduction_slowpath.exit.i.i.i786, label %837, !dbg !28

837:                                              ; preds = %825
  %838 = sub nsw i32 4, %817, !dbg !28
  %839 = sext i32 %838 to i64, !dbg !28
  %840 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %839, !dbg !28
  %841 = load i32, ptr %840, align 4, !dbg !28
  %842 = tail call i32 @llvm.fshl.i32(i32 %835, i32 %841, i32 %812), !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i786, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i786: ; preds = %837, %825
  %lo.i.i.i.0.i788 = phi i32 [ %842, %837 ], [ %835, %825 ], !dbg !28
  %843 = tail call i32 @llvm.fshl.i32(i32 %830, i32 %835, i32 %812), !dbg !28
  %844 = lshr i32 %843, 30, !dbg !28
  %845 = tail call i32 @llvm.fshl.i32(i32 %843, i32 %lo.i.i.i.0.i788, i32 2), !dbg !28
  %846 = shl i32 %lo.i.i.i.0.i788, 2, !dbg !28
  %847 = lshr i32 %845, 31, !dbg !28
  %848 = add nuw nsw i32 %847, %844, !dbg !28
  %849 = sub nsw i32 0, %848, !dbg !28
  %.not2123.i789 = icmp slt i32 %93, 0, !dbg !28
  %spec.select.i790 = select i1 %.not2123.i789, i32 %849, i32 %848, !dbg !28
  %850 = xor i32 %845, %93, !dbg !28
  %.lobit.i791 = ashr i32 %845, 31, !dbg !28
  %hi.i.i.i.2.i792 = xor i32 %.lobit.i791, %845, !dbg !28
  %lo.i.i.i.1.i794 = xor i32 %.lobit.i791, %846, !dbg !28
  %851 = zext i32 %hi.i.i.i.2.i792 to i64, !dbg !28
  %852 = shl nuw i64 %851, 32, !dbg !28
  %853 = zext i32 %lo.i.i.i.1.i794 to i64, !dbg !28
  %854 = or disjoint i64 %852, %853, !dbg !28
  %855 = sitofp i64 %854 to double, !dbg !28
  %856 = fmul double %855, 0x3BF921FB54442D19, !dbg !28
  %857 = fptrunc double %856 to float, !dbg !28
  %858 = fneg float %857, !dbg !28
  %.not2526.i795 = icmp slt i32 %850, 0, !dbg !28
  %r.i.i.i.0.i796 = select i1 %.not2526.i795, float %858, float %857, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !28

__internal_trig_reduction_kernel.exit.i.i797:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i786, %__nv_fmul_rn.exit.i.i.i820, %__nv_cosf.exit768
  %i.i.1.i798 = phi i32 [ %.01.i771, %__nv_cosf.exit768 ], [ 0, %__nv_fmul_rn.exit.i.i.i820 ], [ %spec.select.i790, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !28
  %t.i.i.1.i799 = phi float [ %.04.i777, %__nv_cosf.exit768 ], [ %.08.i822, %__nv_fmul_rn.exit.i.i.i820 ], [ %r.i.i.i.0.i796, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !28
  %859 = add i32 %i.i.1.i798, 1, !dbg !28
  %860 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i800 = icmp eq i32 %860, 0, !dbg !28
  %861 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #4, !dbg !28
  %862 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #4, !dbg !28
  %.011.i801 = select i1 %.not28.i800, float %862, float %861, !dbg !28
  %863 = and i32 %i.i.1.i798, 1, !dbg !28
  %.not29.not.i802 = icmp eq i32 %863, 0, !dbg !28
  %864 = select i1 %.not29.not.i802, float 1.000000e+00, float %t.i.i.1.i799, !dbg !28
  %865 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i803 = icmp eq i32 %865, 0, !dbg !28
  %866 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i801, float %864, float 0.000000e+00) #4, !dbg !28
  %867 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i801, float %864, float 0.000000e+00) #4, !dbg !28
  %.012.i804 = select i1 %.not30.i803, float %867, float %866, !dbg !28
  br i1 %.not29.not.i802, label %__internal_fmad.exit1.i.i.i817, label %__internal_fmad.exit2.i.i.i805, !dbg !28

__internal_fmad.exit1.i.i.i817:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i797
  %868 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i818 = icmp eq i32 %868, 0, !dbg !28
  %869 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #4, !dbg !28
  %870 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i819 = select i1 %.not31.i818, float %870, float %869, !dbg !28
  br label %__internal_fmad.exit2.i.i.i805, !dbg !28

__internal_fmad.exit2.i.i.i805:                   ; preds = %__internal_fmad.exit1.i.i.i817, %__internal_trig_reduction_kernel.exit.i.i797
  %871 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i817 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !28
  %872 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i817 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !28
  %873 = phi float [ %.013.i819, %__internal_fmad.exit1.i.i.i817 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !28
  %874 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i806 = icmp eq i32 %874, 0, !dbg !28
  %875 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %873, float %.011.i801, float %872) #4, !dbg !28
  %876 = tail call float @llvm.nvvm.fma.rn.f(float %873, float %.011.i801, float %872) #4, !dbg !28
  %.010.i807 = select i1 %.not32.i806, float %876, float %875, !dbg !28
  %877 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i808 = icmp eq i32 %877, 0, !dbg !28
  %878 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i807, float %.011.i801, float %871) #4, !dbg !28
  %879 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i807, float %.011.i801, float %871) #4, !dbg !28
  %.09.i809 = select i1 %.not33.i808, float %879, float %878, !dbg !28
  %880 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i810 = icmp eq i32 %880, 0, !dbg !28
  %881 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i809, float %.012.i804, float %864) #4, !dbg !28
  %882 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i809, float %.012.i804, float %864) #4, !dbg !28
  %.05.i811 = select i1 %.not34.i810, float %882, float %881, !dbg !28
  %883 = and i32 %859, 2, !dbg !28
  %.not35.i812 = icmp eq i32 %883, 0, !dbg !28
  br i1 %.not35.i812, label %__nv_cosf.exit823, label %__internal_fmad.exit5.i.i.i813, !dbg !28

__internal_fmad.exit5.i.i.i813:                   ; preds = %__internal_fmad.exit2.i.i.i805
  %884 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i814 = icmp eq i32 %884, 0, !dbg !28
  %885 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %886 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i815 = select i1 %.not36.i814, float %886, float %885, !dbg !28
  br label %__nv_cosf.exit823, !dbg !28

__nv_cosf.exit823:                                ; preds = %__internal_fmad.exit2.i.i.i805, %__internal_fmad.exit5.i.i.i813
  %z.i.i.0.i816 = phi float [ %.0.i815, %__internal_fmad.exit5.i.i.i813 ], [ %.05.i811, %__internal_fmad.exit2.i.i.i805 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !28
  %887 = icmp slt i32 %.decomposed, 64, !dbg !39
  %888 = add i32 %34, 64, !dbg !40
  %889 = add i32 %888, %32, !dbg !41
  %890 = sext i32 %889 to i64, !dbg !42
  %891 = getelementptr half, ptr addrspace(1) %0, i64 %890, !dbg !42
  %892 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %891, i1 %887) #4, !dbg !43
  %893 = icmp sgt i32 %.decomposed, 63, !dbg !44
  %894 = add i32 %34, -64, !dbg !45
  %895 = add i32 %894, %32, !dbg !46
  %896 = sext i32 %895 to i64, !dbg !47
  %897 = getelementptr half, ptr addrspace(1) %0, i64 %896, !dbg !47
  %898 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, $4;\0A\09mov.u32 $1, $5;\0A\09mov.u32 $2, $6;\0A\09mov.u32 $3, $7;\0A\09@$9 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $8 + 0 ];", "=r,=r,=r,=r,r,r,r,r,l,b"(i32 0, i32 0, i32 0, i32 0, ptr addrspace(1) %897, i1 %893) #4, !dbg !48
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !49
  %899 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i = icmp eq i32 %899, 0, !dbg !49
  %.01.i = select i1 %.not.i, i32 %98, i32 %97, !dbg !49
  %900 = sitofp i32 %.01.i to float, !dbg !49
  %901 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i = icmp eq i32 %901, 0, !dbg !49
  %902 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %900, float 0xBFF921FB40000000, float %80) #4, !dbg !49
  %903 = tail call float @llvm.nvvm.fma.rn.f(float %900, float 0xBFF921FB40000000, float %80) #4, !dbg !49
  %.02.i = select i1 %.not15.i, float %903, float %902, !dbg !49
  %904 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i = icmp eq i32 %904, 0, !dbg !49
  %905 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %900, float 0xBE74442D00000000, float %.02.i) #4, !dbg !49
  %906 = tail call float @llvm.nvvm.fma.rn.f(float %900, float 0xBE74442D00000000, float %.02.i) #4, !dbg !49
  %.03.i = select i1 %.not16.i, float %906, float %905, !dbg !49
  %907 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i = icmp eq i32 %907, 0, !dbg !49
  %908 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %900, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !49
  %909 = tail call float @llvm.nvvm.fma.rn.f(float %900, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !49
  %.04.i = select i1 %.not17.i, float %909, float %908, !dbg !49
  %910 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i = icmp eq i32 %910, 0, !dbg !49
  %.06.i = select i1 %.not18.i, float %111, float %110, !dbg !49
  %911 = fcmp ult float %.06.i, 1.056150e+05, !dbg !49
  br i1 %911, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !49

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit823
  %912 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i = icmp eq i32 %912, 0, !dbg !49
  %.07.i = select i1 %.not19.i, float %111, float %110, !dbg !49
  %913 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !49
  br i1 %913, label %__nv_fmul_rn.exit.i.i.i, label %917, !dbg !49

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %914 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i = icmp eq i32 %914, 0, !dbg !49
  %915 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %80, float 0.000000e+00) #4, !dbg !49
  %916 = tail call float @llvm.nvvm.mul.rn.f(float %80, float 0.000000e+00) #4, !dbg !49
  %.08.i = select i1 %.not27.i, float %916, float %915, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !49

917:                                              ; preds = %__nv_isinff.exit.i.i.i
  %918 = lshr i32 %79, 23, !dbg !49
  %919 = and i32 %918, 224, !dbg !49
  %920 = add nsw i32 %919, -128, !dbg !49
  %921 = shl i32 %79, 8, !dbg !49
  %922 = or i32 %921, -2147483648, !dbg !49
  %923 = lshr exact i32 %920, 5, !dbg !49
  br label %924, !dbg !49

924:                                              ; preds = %917, %924
  %indvars.iv922 = phi i64 [ 0, %917 ], [ %indvars.iv.next923, %924 ]
  %hi.i.i.i.0.i854 = phi i32 [ 0, %917 ], [ %929, %924 ]
  %925 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv922, !dbg !49
  %926 = load i32, ptr addrspace(1) %925, align 4, !dbg !49
  %927 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %926, i32 %922, i32 %hi.i.i.i.0.i854) #5, !dbg !49, !srcloc !29
  %928 = extractvalue { i32, i32 } %927, 0, !dbg !49
  %929 = extractvalue { i32, i32 } %927, 1, !dbg !49
  %930 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv922, !dbg !49
  store i32 %928, ptr %930, align 4, !dbg !49
  %indvars.iv.next923 = add nuw nsw i64 %indvars.iv922, 1, !dbg !49
  %exitcond924.not = icmp eq i64 %indvars.iv.next923, 6, !dbg !49
  br i1 %exitcond924.not, label %931, label %924, !dbg !49, !llvm.loop !50

931:                                              ; preds = %924
  %932 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i, i64 24, !dbg !49
  store i32 %929, ptr %932, align 4, !dbg !49
  %933 = sub nsw i32 6, %923, !dbg !49
  %934 = sext i32 %933 to i64, !dbg !49
  %935 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %934, !dbg !49
  %936 = load i32, ptr %935, align 4, !dbg !49
  %937 = sub nsw i32 5, %923, !dbg !49
  %938 = sext i32 %937 to i64, !dbg !49
  %939 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %938, !dbg !49
  %940 = load i32, ptr %939, align 4, !dbg !49
  %941 = freeze i32 %940, !dbg !49
  %942 = and i32 %79, 260046848, !dbg !49
  %.not20.i = icmp eq i32 %942, 0, !dbg !49
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %943, !dbg !49

943:                                              ; preds = %931
  %944 = sub nsw i32 4, %923, !dbg !49
  %945 = sext i32 %944 to i64, !dbg !49
  %946 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %945, !dbg !49
  %947 = load i32, ptr %946, align 4, !dbg !49
  %948 = tail call i32 @llvm.fshl.i32(i32 %941, i32 %947, i32 %918), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %943, %931
  %lo.i.i.i.0.i = phi i32 [ %948, %943 ], [ %941, %931 ], !dbg !49
  %949 = tail call i32 @llvm.fshl.i32(i32 %936, i32 %941, i32 %918), !dbg !49
  %950 = lshr i32 %949, 30, !dbg !49
  %951 = tail call i32 @llvm.fshl.i32(i32 %949, i32 %lo.i.i.i.0.i, i32 2), !dbg !49
  %952 = shl i32 %lo.i.i.i.0.i, 2, !dbg !49
  %953 = lshr i32 %951, 31, !dbg !49
  %954 = add nuw nsw i32 %953, %950, !dbg !49
  %955 = sub nsw i32 0, %954, !dbg !49
  %.not2123.i = icmp slt i32 %79, 0, !dbg !49
  %spec.select.i = select i1 %.not2123.i, i32 %955, i32 %954, !dbg !49
  %956 = xor i32 %951, %79, !dbg !49
  %.lobit.i = ashr i32 %951, 31, !dbg !49
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %951, !dbg !49
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %952, !dbg !49
  %957 = zext i32 %hi.i.i.i.2.i to i64, !dbg !49
  %958 = shl nuw i64 %957, 32, !dbg !49
  %959 = zext i32 %lo.i.i.i.1.i to i64, !dbg !49
  %960 = or disjoint i64 %958, %959, !dbg !49
  %961 = sitofp i64 %960 to double, !dbg !49
  %962 = fmul double %961, 0x3BF921FB54442D19, !dbg !49
  %963 = fptrunc double %962 to float, !dbg !49
  %964 = fneg float %963, !dbg !49
  %.not2526.i = icmp slt i32 %956, 0, !dbg !49
  %r.i.i.i.0.i = select i1 %.not2526.i, float %964, float %963, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !49

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit823
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit823 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !49
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit823 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !49
  %965 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i = icmp eq i32 %965, 0, !dbg !49
  %966 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !49
  %967 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !49
  %.011.i = select i1 %.not28.i, float %967, float %966, !dbg !49
  %968 = and i32 %i.i.1.i, 1, !dbg !49
  %.not29.i = icmp eq i32 %968, 0, !dbg !49
  %969 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !49
  %970 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i = icmp eq i32 %970, 0, !dbg !49
  %971 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %969, float 0.000000e+00) #4, !dbg !49
  %972 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %969, float 0.000000e+00) #4, !dbg !49
  %.012.i = select i1 %.not30.i, float %972, float %971, !dbg !49
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !49

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %973 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i = icmp eq i32 %973, 0, !dbg !49
  %974 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !49
  %975 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i = select i1 %.not31.i, float %975, float %974, !dbg !49
  br label %__internal_fmad.exit2.i.i.i, !dbg !49

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %976 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !49
  %977 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !49
  %978 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !49
  %979 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i = icmp eq i32 %979, 0, !dbg !49
  %980 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %978, float %.011.i, float %977) #4, !dbg !49
  %981 = tail call float @llvm.nvvm.fma.rn.f(float %978, float %.011.i, float %977) #4, !dbg !49
  %.010.i = select i1 %.not32.i, float %981, float %980, !dbg !49
  %982 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i = icmp eq i32 %982, 0, !dbg !49
  %983 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %976) #4, !dbg !49
  %984 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %976) #4, !dbg !49
  %.09.i = select i1 %.not33.i, float %984, float %983, !dbg !49
  %985 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i = icmp eq i32 %985, 0, !dbg !49
  %986 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %969) #4, !dbg !49
  %987 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %969) #4, !dbg !49
  %.05.i = select i1 %.not34.i, float %987, float %986, !dbg !49
  %988 = and i32 %i.i.1.i, 2, !dbg !49
  %.not35.i = icmp eq i32 %988, 0, !dbg !49
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !49

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %989 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i = icmp eq i32 %989, 0, !dbg !49
  %990 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %991 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i = select i1 %.not36.i, float %991, float %990, !dbg !49
  br label %__nv_sinf.exit, !dbg !49

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !49
  %992 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i2 = icmp eq i32 %992, 0, !dbg !49
  %.01.i3 = select i1 %.not.i2, i32 %197, i32 %196, !dbg !49
  %993 = sitofp i32 %.01.i3 to float, !dbg !49
  %994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i4 = icmp eq i32 %994, 0, !dbg !49
  %995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %993, float 0xBFF921FB40000000, float %82) #4, !dbg !49
  %996 = tail call float @llvm.nvvm.fma.rn.f(float %993, float 0xBFF921FB40000000, float %82) #4, !dbg !49
  %.02.i5 = select i1 %.not15.i4, float %996, float %995, !dbg !49
  %997 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i6 = icmp eq i32 %997, 0, !dbg !49
  %998 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %993, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !49
  %999 = tail call float @llvm.nvvm.fma.rn.f(float %993, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !49
  %.03.i7 = select i1 %.not16.i6, float %999, float %998, !dbg !49
  %1000 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i8 = icmp eq i32 %1000, 0, !dbg !49
  %1001 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %993, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !49
  %1002 = tail call float @llvm.nvvm.fma.rn.f(float %993, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !49
  %.04.i9 = select i1 %.not17.i8, float %1002, float %1001, !dbg !49
  %1003 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i10 = icmp eq i32 %1003, 0, !dbg !49
  %.06.i11 = select i1 %.not18.i10, float %210, float %209, !dbg !49
  %1004 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !49
  br i1 %1004, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !49

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %1005 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i13 = icmp eq i32 %1005, 0, !dbg !49
  %.07.i14 = select i1 %.not19.i13, float %210, float %209, !dbg !49
  %1006 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !49
  br i1 %1006, label %__nv_fmul_rn.exit.i.i.i52, label %1010, !dbg !49

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %1007 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i53 = icmp eq i32 %1007, 0, !dbg !49
  %1008 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %82, float 0.000000e+00) #4, !dbg !49
  %1009 = tail call float @llvm.nvvm.mul.rn.f(float %82, float 0.000000e+00) #4, !dbg !49
  %.08.i54 = select i1 %.not27.i53, float %1009, float %1008, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !49

1010:                                             ; preds = %__nv_isinff.exit.i.i.i12
  %1011 = lshr i32 %81, 23, !dbg !49
  %1012 = and i32 %1011, 224, !dbg !49
  %1013 = add nsw i32 %1012, -128, !dbg !49
  %1014 = shl i32 %81, 8, !dbg !49
  %1015 = or i32 %1014, -2147483648, !dbg !49
  %1016 = lshr exact i32 %1013, 5, !dbg !49
  br label %1017, !dbg !49

1017:                                             ; preds = %1010, %1017
  %indvars.iv925 = phi i64 [ 0, %1010 ], [ %indvars.iv.next926, %1017 ]
  %hi.i.i.i.0.i15856 = phi i32 [ 0, %1010 ], [ %1022, %1017 ]
  %1018 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv925, !dbg !49
  %1019 = load i32, ptr addrspace(1) %1018, align 4, !dbg !49
  %1020 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1019, i32 %1015, i32 %hi.i.i.i.0.i15856) #5, !dbg !49, !srcloc !29
  %1021 = extractvalue { i32, i32 } %1020, 0, !dbg !49
  %1022 = extractvalue { i32, i32 } %1020, 1, !dbg !49
  %1023 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv925, !dbg !49
  store i32 %1021, ptr %1023, align 4, !dbg !49
  %indvars.iv.next926 = add nuw nsw i64 %indvars.iv925, 1, !dbg !49
  %exitcond927.not = icmp eq i64 %indvars.iv.next926, 6, !dbg !49
  br i1 %exitcond927.not, label %1024, label %1017, !dbg !49, !llvm.loop !51

1024:                                             ; preds = %1017
  %1025 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i1, i64 24, !dbg !49
  store i32 %1022, ptr %1025, align 4, !dbg !49
  %1026 = sub nsw i32 6, %1016, !dbg !49
  %1027 = sext i32 %1026 to i64, !dbg !49
  %1028 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %1027, !dbg !49
  %1029 = load i32, ptr %1028, align 4, !dbg !49
  %1030 = sub nsw i32 5, %1016, !dbg !49
  %1031 = sext i32 %1030 to i64, !dbg !49
  %1032 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %1031, !dbg !49
  %1033 = load i32, ptr %1032, align 4, !dbg !49
  %1034 = freeze i32 %1033, !dbg !49
  %1035 = and i32 %81, 260046848, !dbg !49
  %.not20.i17 = icmp eq i32 %1035, 0, !dbg !49
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %1036, !dbg !49

1036:                                             ; preds = %1024
  %1037 = sub nsw i32 4, %1016, !dbg !49
  %1038 = sext i32 %1037 to i64, !dbg !49
  %1039 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %1038, !dbg !49
  %1040 = load i32, ptr %1039, align 4, !dbg !49
  %1041 = tail call i32 @llvm.fshl.i32(i32 %1034, i32 %1040, i32 %1011), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %1036, %1024
  %lo.i.i.i.0.i20 = phi i32 [ %1041, %1036 ], [ %1034, %1024 ], !dbg !49
  %1042 = tail call i32 @llvm.fshl.i32(i32 %1029, i32 %1034, i32 %1011), !dbg !49
  %1043 = lshr i32 %1042, 30, !dbg !49
  %1044 = tail call i32 @llvm.fshl.i32(i32 %1042, i32 %lo.i.i.i.0.i20, i32 2), !dbg !49
  %1045 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !49
  %1046 = lshr i32 %1044, 31, !dbg !49
  %1047 = add nuw nsw i32 %1046, %1043, !dbg !49
  %1048 = sub nsw i32 0, %1047, !dbg !49
  %.not2123.i21 = icmp slt i32 %81, 0, !dbg !49
  %spec.select.i22 = select i1 %.not2123.i21, i32 %1048, i32 %1047, !dbg !49
  %1049 = xor i32 %1044, %81, !dbg !49
  %.lobit.i23 = ashr i32 %1044, 31, !dbg !49
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %1044, !dbg !49
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %1045, !dbg !49
  %1050 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !49
  %1051 = shl nuw i64 %1050, 32, !dbg !49
  %1052 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !49
  %1053 = or disjoint i64 %1051, %1052, !dbg !49
  %1054 = sitofp i64 %1053 to double, !dbg !49
  %1055 = fmul double %1054, 0x3BF921FB54442D19, !dbg !49
  %1056 = fptrunc double %1055 to float, !dbg !49
  %1057 = fneg float %1056, !dbg !49
  %.not2526.i27 = icmp slt i32 %1049, 0, !dbg !49
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %1057, float %1056, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !49

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !49
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !49
  %1058 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i32 = icmp eq i32 %1058, 0, !dbg !49
  %1059 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !49
  %1060 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !49
  %.011.i33 = select i1 %.not28.i32, float %1060, float %1059, !dbg !49
  %1061 = and i32 %i.i.1.i30, 1, !dbg !49
  %.not29.i34 = icmp eq i32 %1061, 0, !dbg !49
  %1062 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !49
  %1063 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i35 = icmp eq i32 %1063, 0, !dbg !49
  %1064 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %1062, float 0.000000e+00) #4, !dbg !49
  %1065 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %1062, float 0.000000e+00) #4, !dbg !49
  %.012.i36 = select i1 %.not30.i35, float %1065, float %1064, !dbg !49
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !49

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %1066 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i38 = icmp eq i32 %1066, 0, !dbg !49
  %1067 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1068 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i39 = select i1 %.not31.i38, float %1068, float %1067, !dbg !49
  br label %__internal_fmad.exit2.i.i.i40, !dbg !49

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %1069 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !49
  %1070 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !49
  %1071 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !49
  %1072 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i41 = icmp eq i32 %1072, 0, !dbg !49
  %1073 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1071, float %.011.i33, float %1070) #4, !dbg !49
  %1074 = tail call float @llvm.nvvm.fma.rn.f(float %1071, float %.011.i33, float %1070) #4, !dbg !49
  %.010.i42 = select i1 %.not32.i41, float %1074, float %1073, !dbg !49
  %1075 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i43 = icmp eq i32 %1075, 0, !dbg !49
  %1076 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %1069) #4, !dbg !49
  %1077 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %1069) #4, !dbg !49
  %.09.i44 = select i1 %.not33.i43, float %1077, float %1076, !dbg !49
  %1078 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i45 = icmp eq i32 %1078, 0, !dbg !49
  %1079 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %1062) #4, !dbg !49
  %1080 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %1062) #4, !dbg !49
  %.05.i46 = select i1 %.not34.i45, float %1080, float %1079, !dbg !49
  %1081 = and i32 %i.i.1.i30, 2, !dbg !49
  %.not35.i47 = icmp eq i32 %1081, 0, !dbg !49
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !49

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %1082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i49 = icmp eq i32 %1082, 0, !dbg !49
  %1083 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1084 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i50 = select i1 %.not36.i49, float %1084, float %1083, !dbg !49
  br label %__nv_sinf.exit55, !dbg !49

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !49
  %1085 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i57 = icmp eq i32 %1085, 0, !dbg !49
  %.01.i58 = select i1 %.not.i57, i32 %296, i32 %295, !dbg !49
  %1086 = sitofp i32 %.01.i58 to float, !dbg !49
  %1087 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i59 = icmp eq i32 %1087, 0, !dbg !49
  %1088 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1086, float 0xBFF921FB40000000, float %84) #4, !dbg !49
  %1089 = tail call float @llvm.nvvm.fma.rn.f(float %1086, float 0xBFF921FB40000000, float %84) #4, !dbg !49
  %.02.i60 = select i1 %.not15.i59, float %1089, float %1088, !dbg !49
  %1090 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i61 = icmp eq i32 %1090, 0, !dbg !49
  %1091 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1086, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !49
  %1092 = tail call float @llvm.nvvm.fma.rn.f(float %1086, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !49
  %.03.i62 = select i1 %.not16.i61, float %1092, float %1091, !dbg !49
  %1093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i63 = icmp eq i32 %1093, 0, !dbg !49
  %1094 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1086, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !49
  %1095 = tail call float @llvm.nvvm.fma.rn.f(float %1086, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !49
  %.04.i64 = select i1 %.not17.i63, float %1095, float %1094, !dbg !49
  %1096 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i65 = icmp eq i32 %1096, 0, !dbg !49
  %.06.i66 = select i1 %.not18.i65, float %309, float %308, !dbg !49
  %1097 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !49
  br i1 %1097, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !49

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %1098 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i68 = icmp eq i32 %1098, 0, !dbg !49
  %.07.i69 = select i1 %.not19.i68, float %309, float %308, !dbg !49
  %1099 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !49
  br i1 %1099, label %__nv_fmul_rn.exit.i.i.i107, label %1103, !dbg !49

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %1100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i108 = icmp eq i32 %1100, 0, !dbg !49
  %1101 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %84, float 0.000000e+00) #4, !dbg !49
  %1102 = tail call float @llvm.nvvm.mul.rn.f(float %84, float 0.000000e+00) #4, !dbg !49
  %.08.i109 = select i1 %.not27.i108, float %1102, float %1101, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !49

1103:                                             ; preds = %__nv_isinff.exit.i.i.i67
  %1104 = lshr i32 %83, 23, !dbg !49
  %1105 = and i32 %1104, 224, !dbg !49
  %1106 = add nsw i32 %1105, -128, !dbg !49
  %1107 = shl i32 %83, 8, !dbg !49
  %1108 = or i32 %1107, -2147483648, !dbg !49
  %1109 = lshr exact i32 %1106, 5, !dbg !49
  br label %1110, !dbg !49

1110:                                             ; preds = %1103, %1110
  %indvars.iv928 = phi i64 [ 0, %1103 ], [ %indvars.iv.next929, %1110 ]
  %hi.i.i.i.0.i70858 = phi i32 [ 0, %1103 ], [ %1115, %1110 ]
  %1111 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv928, !dbg !49
  %1112 = load i32, ptr addrspace(1) %1111, align 4, !dbg !49
  %1113 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1112, i32 %1108, i32 %hi.i.i.i.0.i70858) #5, !dbg !49, !srcloc !29
  %1114 = extractvalue { i32, i32 } %1113, 0, !dbg !49
  %1115 = extractvalue { i32, i32 } %1113, 1, !dbg !49
  %1116 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv928, !dbg !49
  store i32 %1114, ptr %1116, align 4, !dbg !49
  %indvars.iv.next929 = add nuw nsw i64 %indvars.iv928, 1, !dbg !49
  %exitcond930.not = icmp eq i64 %indvars.iv.next929, 6, !dbg !49
  br i1 %exitcond930.not, label %1117, label %1110, !dbg !49, !llvm.loop !52

1117:                                             ; preds = %1110
  %1118 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i56, i64 24, !dbg !49
  store i32 %1115, ptr %1118, align 4, !dbg !49
  %1119 = sub nsw i32 6, %1109, !dbg !49
  %1120 = sext i32 %1119 to i64, !dbg !49
  %1121 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %1120, !dbg !49
  %1122 = load i32, ptr %1121, align 4, !dbg !49
  %1123 = sub nsw i32 5, %1109, !dbg !49
  %1124 = sext i32 %1123 to i64, !dbg !49
  %1125 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %1124, !dbg !49
  %1126 = load i32, ptr %1125, align 4, !dbg !49
  %1127 = freeze i32 %1126, !dbg !49
  %1128 = and i32 %83, 260046848, !dbg !49
  %.not20.i72 = icmp eq i32 %1128, 0, !dbg !49
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %1129, !dbg !49

1129:                                             ; preds = %1117
  %1130 = sub nsw i32 4, %1109, !dbg !49
  %1131 = sext i32 %1130 to i64, !dbg !49
  %1132 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %1131, !dbg !49
  %1133 = load i32, ptr %1132, align 4, !dbg !49
  %1134 = tail call i32 @llvm.fshl.i32(i32 %1127, i32 %1133, i32 %1104), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %1129, %1117
  %lo.i.i.i.0.i75 = phi i32 [ %1134, %1129 ], [ %1127, %1117 ], !dbg !49
  %1135 = tail call i32 @llvm.fshl.i32(i32 %1122, i32 %1127, i32 %1104), !dbg !49
  %1136 = lshr i32 %1135, 30, !dbg !49
  %1137 = tail call i32 @llvm.fshl.i32(i32 %1135, i32 %lo.i.i.i.0.i75, i32 2), !dbg !49
  %1138 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !49
  %1139 = lshr i32 %1137, 31, !dbg !49
  %1140 = add nuw nsw i32 %1139, %1136, !dbg !49
  %1141 = sub nsw i32 0, %1140, !dbg !49
  %.not2123.i76 = icmp slt i32 %83, 0, !dbg !49
  %spec.select.i77 = select i1 %.not2123.i76, i32 %1141, i32 %1140, !dbg !49
  %1142 = xor i32 %1137, %83, !dbg !49
  %.lobit.i78 = ashr i32 %1137, 31, !dbg !49
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %1137, !dbg !49
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %1138, !dbg !49
  %1143 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !49
  %1144 = shl nuw i64 %1143, 32, !dbg !49
  %1145 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !49
  %1146 = or disjoint i64 %1144, %1145, !dbg !49
  %1147 = sitofp i64 %1146 to double, !dbg !49
  %1148 = fmul double %1147, 0x3BF921FB54442D19, !dbg !49
  %1149 = fptrunc double %1148 to float, !dbg !49
  %1150 = fneg float %1149, !dbg !49
  %.not2526.i82 = icmp slt i32 %1142, 0, !dbg !49
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %1150, float %1149, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !49

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !49
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !49
  %1151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i87 = icmp eq i32 %1151, 0, !dbg !49
  %1152 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !49
  %1153 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !49
  %.011.i88 = select i1 %.not28.i87, float %1153, float %1152, !dbg !49
  %1154 = and i32 %i.i.1.i85, 1, !dbg !49
  %.not29.i89 = icmp eq i32 %1154, 0, !dbg !49
  %1155 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !49
  %1156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i90 = icmp eq i32 %1156, 0, !dbg !49
  %1157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %1155, float 0.000000e+00) #4, !dbg !49
  %1158 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %1155, float 0.000000e+00) #4, !dbg !49
  %.012.i91 = select i1 %.not30.i90, float %1158, float %1157, !dbg !49
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !49

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %1159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i93 = icmp eq i32 %1159, 0, !dbg !49
  %1160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1161 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i94 = select i1 %.not31.i93, float %1161, float %1160, !dbg !49
  br label %__internal_fmad.exit2.i.i.i95, !dbg !49

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %1162 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !49
  %1163 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !49
  %1164 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !49
  %1165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i96 = icmp eq i32 %1165, 0, !dbg !49
  %1166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1164, float %.011.i88, float %1163) #4, !dbg !49
  %1167 = tail call float @llvm.nvvm.fma.rn.f(float %1164, float %.011.i88, float %1163) #4, !dbg !49
  %.010.i97 = select i1 %.not32.i96, float %1167, float %1166, !dbg !49
  %1168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i98 = icmp eq i32 %1168, 0, !dbg !49
  %1169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %1162) #4, !dbg !49
  %1170 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %1162) #4, !dbg !49
  %.09.i99 = select i1 %.not33.i98, float %1170, float %1169, !dbg !49
  %1171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i100 = icmp eq i32 %1171, 0, !dbg !49
  %1172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %1155) #4, !dbg !49
  %1173 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %1155) #4, !dbg !49
  %.05.i101 = select i1 %.not34.i100, float %1173, float %1172, !dbg !49
  %1174 = and i32 %i.i.1.i85, 2, !dbg !49
  %.not35.i102 = icmp eq i32 %1174, 0, !dbg !49
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !49

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %1175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i104 = icmp eq i32 %1175, 0, !dbg !49
  %1176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1177 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i105 = select i1 %.not36.i104, float %1177, float %1176, !dbg !49
  br label %__nv_sinf.exit110, !dbg !49

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !49
  %1178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i112 = icmp eq i32 %1178, 0, !dbg !49
  %.01.i113 = select i1 %.not.i112, i32 %395, i32 %394, !dbg !49
  %1179 = sitofp i32 %.01.i113 to float, !dbg !49
  %1180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i114 = icmp eq i32 %1180, 0, !dbg !49
  %1181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1179, float 0xBFF921FB40000000, float %86) #4, !dbg !49
  %1182 = tail call float @llvm.nvvm.fma.rn.f(float %1179, float 0xBFF921FB40000000, float %86) #4, !dbg !49
  %.02.i115 = select i1 %.not15.i114, float %1182, float %1181, !dbg !49
  %1183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i116 = icmp eq i32 %1183, 0, !dbg !49
  %1184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1179, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !49
  %1185 = tail call float @llvm.nvvm.fma.rn.f(float %1179, float 0xBE74442D00000000, float %.02.i115) #4, !dbg !49
  %.03.i117 = select i1 %.not16.i116, float %1185, float %1184, !dbg !49
  %1186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i118 = icmp eq i32 %1186, 0, !dbg !49
  %1187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1179, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !49
  %1188 = tail call float @llvm.nvvm.fma.rn.f(float %1179, float 0xBCF84698A0000000, float %.03.i117) #4, !dbg !49
  %.04.i119 = select i1 %.not17.i118, float %1188, float %1187, !dbg !49
  %1189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i120 = icmp eq i32 %1189, 0, !dbg !49
  %.06.i121 = select i1 %.not18.i120, float %408, float %407, !dbg !49
  %1190 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !49
  br i1 %1190, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !49

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %1191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i123 = icmp eq i32 %1191, 0, !dbg !49
  %.07.i124 = select i1 %.not19.i123, float %408, float %407, !dbg !49
  %1192 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !49
  br i1 %1192, label %__nv_fmul_rn.exit.i.i.i162, label %1196, !dbg !49

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %1193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i163 = icmp eq i32 %1193, 0, !dbg !49
  %1194 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %86, float 0.000000e+00) #4, !dbg !49
  %1195 = tail call float @llvm.nvvm.mul.rn.f(float %86, float 0.000000e+00) #4, !dbg !49
  %.08.i164 = select i1 %.not27.i163, float %1195, float %1194, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !49

1196:                                             ; preds = %__nv_isinff.exit.i.i.i122
  %1197 = lshr i32 %85, 23, !dbg !49
  %1198 = and i32 %1197, 224, !dbg !49
  %1199 = add nsw i32 %1198, -128, !dbg !49
  %1200 = shl i32 %85, 8, !dbg !49
  %1201 = or i32 %1200, -2147483648, !dbg !49
  %1202 = lshr exact i32 %1199, 5, !dbg !49
  br label %1203, !dbg !49

1203:                                             ; preds = %1196, %1203
  %indvars.iv931 = phi i64 [ 0, %1196 ], [ %indvars.iv.next932, %1203 ]
  %hi.i.i.i.0.i125860 = phi i32 [ 0, %1196 ], [ %1208, %1203 ]
  %1204 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv931, !dbg !49
  %1205 = load i32, ptr addrspace(1) %1204, align 4, !dbg !49
  %1206 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1205, i32 %1201, i32 %hi.i.i.i.0.i125860) #5, !dbg !49, !srcloc !29
  %1207 = extractvalue { i32, i32 } %1206, 0, !dbg !49
  %1208 = extractvalue { i32, i32 } %1206, 1, !dbg !49
  %1209 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv931, !dbg !49
  store i32 %1207, ptr %1209, align 4, !dbg !49
  %indvars.iv.next932 = add nuw nsw i64 %indvars.iv931, 1, !dbg !49
  %exitcond933.not = icmp eq i64 %indvars.iv.next932, 6, !dbg !49
  br i1 %exitcond933.not, label %1210, label %1203, !dbg !49, !llvm.loop !53

1210:                                             ; preds = %1203
  %1211 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i111, i64 24, !dbg !49
  store i32 %1208, ptr %1211, align 4, !dbg !49
  %1212 = sub nsw i32 6, %1202, !dbg !49
  %1213 = sext i32 %1212 to i64, !dbg !49
  %1214 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %1213, !dbg !49
  %1215 = load i32, ptr %1214, align 4, !dbg !49
  %1216 = sub nsw i32 5, %1202, !dbg !49
  %1217 = sext i32 %1216 to i64, !dbg !49
  %1218 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %1217, !dbg !49
  %1219 = load i32, ptr %1218, align 4, !dbg !49
  %1220 = freeze i32 %1219, !dbg !49
  %1221 = and i32 %85, 260046848, !dbg !49
  %.not20.i127 = icmp eq i32 %1221, 0, !dbg !49
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %1222, !dbg !49

1222:                                             ; preds = %1210
  %1223 = sub nsw i32 4, %1202, !dbg !49
  %1224 = sext i32 %1223 to i64, !dbg !49
  %1225 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %1224, !dbg !49
  %1226 = load i32, ptr %1225, align 4, !dbg !49
  %1227 = tail call i32 @llvm.fshl.i32(i32 %1220, i32 %1226, i32 %1197), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %1222, %1210
  %lo.i.i.i.0.i130 = phi i32 [ %1227, %1222 ], [ %1220, %1210 ], !dbg !49
  %1228 = tail call i32 @llvm.fshl.i32(i32 %1215, i32 %1220, i32 %1197), !dbg !49
  %1229 = lshr i32 %1228, 30, !dbg !49
  %1230 = tail call i32 @llvm.fshl.i32(i32 %1228, i32 %lo.i.i.i.0.i130, i32 2), !dbg !49
  %1231 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !49
  %1232 = lshr i32 %1230, 31, !dbg !49
  %1233 = add nuw nsw i32 %1232, %1229, !dbg !49
  %1234 = sub nsw i32 0, %1233, !dbg !49
  %.not2123.i131 = icmp slt i32 %85, 0, !dbg !49
  %spec.select.i132 = select i1 %.not2123.i131, i32 %1234, i32 %1233, !dbg !49
  %1235 = xor i32 %1230, %85, !dbg !49
  %.lobit.i133 = ashr i32 %1230, 31, !dbg !49
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %1230, !dbg !49
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %1231, !dbg !49
  %1236 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !49
  %1237 = shl nuw i64 %1236, 32, !dbg !49
  %1238 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !49
  %1239 = or disjoint i64 %1237, %1238, !dbg !49
  %1240 = sitofp i64 %1239 to double, !dbg !49
  %1241 = fmul double %1240, 0x3BF921FB54442D19, !dbg !49
  %1242 = fptrunc double %1241 to float, !dbg !49
  %1243 = fneg float %1242, !dbg !49
  %.not2526.i137 = icmp slt i32 %1235, 0, !dbg !49
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %1243, float %1242, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !49

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !49
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !49
  %1244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i142 = icmp eq i32 %1244, 0, !dbg !49
  %1245 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !49
  %1246 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #4, !dbg !49
  %.011.i143 = select i1 %.not28.i142, float %1246, float %1245, !dbg !49
  %1247 = and i32 %i.i.1.i140, 1, !dbg !49
  %.not29.i144 = icmp eq i32 %1247, 0, !dbg !49
  %1248 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !49
  %1249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i145 = icmp eq i32 %1249, 0, !dbg !49
  %1250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %1248, float 0.000000e+00) #4, !dbg !49
  %1251 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %1248, float 0.000000e+00) #4, !dbg !49
  %.012.i146 = select i1 %.not30.i145, float %1251, float %1250, !dbg !49
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !49

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %1252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i148 = icmp eq i32 %1252, 0, !dbg !49
  %1253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1254 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i149 = select i1 %.not31.i148, float %1254, float %1253, !dbg !49
  br label %__internal_fmad.exit2.i.i.i150, !dbg !49

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %1255 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !49
  %1256 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !49
  %1257 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !49
  %1258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i151 = icmp eq i32 %1258, 0, !dbg !49
  %1259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1257, float %.011.i143, float %1256) #4, !dbg !49
  %1260 = tail call float @llvm.nvvm.fma.rn.f(float %1257, float %.011.i143, float %1256) #4, !dbg !49
  %.010.i152 = select i1 %.not32.i151, float %1260, float %1259, !dbg !49
  %1261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i153 = icmp eq i32 %1261, 0, !dbg !49
  %1262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %1255) #4, !dbg !49
  %1263 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %1255) #4, !dbg !49
  %.09.i154 = select i1 %.not33.i153, float %1263, float %1262, !dbg !49
  %1264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i155 = icmp eq i32 %1264, 0, !dbg !49
  %1265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %1248) #4, !dbg !49
  %1266 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %1248) #4, !dbg !49
  %.05.i156 = select i1 %.not34.i155, float %1266, float %1265, !dbg !49
  %1267 = and i32 %i.i.1.i140, 2, !dbg !49
  %.not35.i157 = icmp eq i32 %1267, 0, !dbg !49
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !49

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %1268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i159 = icmp eq i32 %1268, 0, !dbg !49
  %1269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1270 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i160 = select i1 %.not36.i159, float %1270, float %1269, !dbg !49
  br label %__nv_sinf.exit165, !dbg !49

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !49
  %1271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i167 = icmp eq i32 %1271, 0, !dbg !49
  %.01.i168 = select i1 %.not.i167, i32 %494, i32 %493, !dbg !49
  %1272 = sitofp i32 %.01.i168 to float, !dbg !49
  %1273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i169 = icmp eq i32 %1273, 0, !dbg !49
  %1274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1272, float 0xBFF921FB40000000, float %88) #4, !dbg !49
  %1275 = tail call float @llvm.nvvm.fma.rn.f(float %1272, float 0xBFF921FB40000000, float %88) #4, !dbg !49
  %.02.i170 = select i1 %.not15.i169, float %1275, float %1274, !dbg !49
  %1276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i171 = icmp eq i32 %1276, 0, !dbg !49
  %1277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1272, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !49
  %1278 = tail call float @llvm.nvvm.fma.rn.f(float %1272, float 0xBE74442D00000000, float %.02.i170) #4, !dbg !49
  %.03.i172 = select i1 %.not16.i171, float %1278, float %1277, !dbg !49
  %1279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i173 = icmp eq i32 %1279, 0, !dbg !49
  %1280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1272, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !49
  %1281 = tail call float @llvm.nvvm.fma.rn.f(float %1272, float 0xBCF84698A0000000, float %.03.i172) #4, !dbg !49
  %.04.i174 = select i1 %.not17.i173, float %1281, float %1280, !dbg !49
  %1282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i175 = icmp eq i32 %1282, 0, !dbg !49
  %.06.i176 = select i1 %.not18.i175, float %507, float %506, !dbg !49
  %1283 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !49
  br i1 %1283, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !49

__nv_isinff.exit.i.i.i177:                        ; preds = %__nv_sinf.exit165
  %1284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i178 = icmp eq i32 %1284, 0, !dbg !49
  %.07.i179 = select i1 %.not19.i178, float %507, float %506, !dbg !49
  %1285 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !49
  br i1 %1285, label %__nv_fmul_rn.exit.i.i.i217, label %1289, !dbg !49

__nv_fmul_rn.exit.i.i.i217:                       ; preds = %__nv_isinff.exit.i.i.i177
  %1286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i218 = icmp eq i32 %1286, 0, !dbg !49
  %1287 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %88, float 0.000000e+00) #4, !dbg !49
  %1288 = tail call float @llvm.nvvm.mul.rn.f(float %88, float 0.000000e+00) #4, !dbg !49
  %.08.i219 = select i1 %.not27.i218, float %1288, float %1287, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !49

1289:                                             ; preds = %__nv_isinff.exit.i.i.i177
  %1290 = lshr i32 %87, 23, !dbg !49
  %1291 = and i32 %1290, 224, !dbg !49
  %1292 = add nsw i32 %1291, -128, !dbg !49
  %1293 = shl i32 %87, 8, !dbg !49
  %1294 = or i32 %1293, -2147483648, !dbg !49
  %1295 = lshr exact i32 %1292, 5, !dbg !49
  br label %1296, !dbg !49

1296:                                             ; preds = %1289, %1296
  %indvars.iv934 = phi i64 [ 0, %1289 ], [ %indvars.iv.next935, %1296 ]
  %hi.i.i.i.0.i180862 = phi i32 [ 0, %1289 ], [ %1301, %1296 ]
  %1297 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv934, !dbg !49
  %1298 = load i32, ptr addrspace(1) %1297, align 4, !dbg !49
  %1299 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1298, i32 %1294, i32 %hi.i.i.i.0.i180862) #5, !dbg !49, !srcloc !29
  %1300 = extractvalue { i32, i32 } %1299, 0, !dbg !49
  %1301 = extractvalue { i32, i32 } %1299, 1, !dbg !49
  %1302 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv934, !dbg !49
  store i32 %1300, ptr %1302, align 4, !dbg !49
  %indvars.iv.next935 = add nuw nsw i64 %indvars.iv934, 1, !dbg !49
  %exitcond936.not = icmp eq i64 %indvars.iv.next935, 6, !dbg !49
  br i1 %exitcond936.not, label %1303, label %1296, !dbg !49, !llvm.loop !54

1303:                                             ; preds = %1296
  %1304 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i166, i64 24, !dbg !49
  store i32 %1301, ptr %1304, align 4, !dbg !49
  %1305 = sub nsw i32 6, %1295, !dbg !49
  %1306 = sext i32 %1305 to i64, !dbg !49
  %1307 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %1306, !dbg !49
  %1308 = load i32, ptr %1307, align 4, !dbg !49
  %1309 = sub nsw i32 5, %1295, !dbg !49
  %1310 = sext i32 %1309 to i64, !dbg !49
  %1311 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %1310, !dbg !49
  %1312 = load i32, ptr %1311, align 4, !dbg !49
  %1313 = freeze i32 %1312, !dbg !49
  %1314 = and i32 %87, 260046848, !dbg !49
  %.not20.i182 = icmp eq i32 %1314, 0, !dbg !49
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %1315, !dbg !49

1315:                                             ; preds = %1303
  %1316 = sub nsw i32 4, %1295, !dbg !49
  %1317 = sext i32 %1316 to i64, !dbg !49
  %1318 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %1317, !dbg !49
  %1319 = load i32, ptr %1318, align 4, !dbg !49
  %1320 = tail call i32 @llvm.fshl.i32(i32 %1313, i32 %1319, i32 %1290), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %1315, %1303
  %lo.i.i.i.0.i185 = phi i32 [ %1320, %1315 ], [ %1313, %1303 ], !dbg !49
  %1321 = tail call i32 @llvm.fshl.i32(i32 %1308, i32 %1313, i32 %1290), !dbg !49
  %1322 = lshr i32 %1321, 30, !dbg !49
  %1323 = tail call i32 @llvm.fshl.i32(i32 %1321, i32 %lo.i.i.i.0.i185, i32 2), !dbg !49
  %1324 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !49
  %1325 = lshr i32 %1323, 31, !dbg !49
  %1326 = add nuw nsw i32 %1325, %1322, !dbg !49
  %1327 = sub nsw i32 0, %1326, !dbg !49
  %.not2123.i186 = icmp slt i32 %87, 0, !dbg !49
  %spec.select.i187 = select i1 %.not2123.i186, i32 %1327, i32 %1326, !dbg !49
  %1328 = xor i32 %1323, %87, !dbg !49
  %.lobit.i188 = ashr i32 %1323, 31, !dbg !49
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %1323, !dbg !49
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %1324, !dbg !49
  %1329 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !49
  %1330 = shl nuw i64 %1329, 32, !dbg !49
  %1331 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !49
  %1332 = or disjoint i64 %1330, %1331, !dbg !49
  %1333 = sitofp i64 %1332 to double, !dbg !49
  %1334 = fmul double %1333, 0x3BF921FB54442D19, !dbg !49
  %1335 = fptrunc double %1334 to float, !dbg !49
  %1336 = fneg float %1335, !dbg !49
  %.not2526.i192 = icmp slt i32 %1328, 0, !dbg !49
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %1336, float %1335, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !49

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i217, %__nv_sinf.exit165
  %i.i.1.i195 = phi i32 [ %.01.i168, %__nv_sinf.exit165 ], [ 0, %__nv_fmul_rn.exit.i.i.i217 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !49
  %t.i.i.1.i196 = phi float [ %.04.i174, %__nv_sinf.exit165 ], [ %.08.i219, %__nv_fmul_rn.exit.i.i.i217 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !49
  %1337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i197 = icmp eq i32 %1337, 0, !dbg !49
  %1338 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !49
  %1339 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #4, !dbg !49
  %.011.i198 = select i1 %.not28.i197, float %1339, float %1338, !dbg !49
  %1340 = and i32 %i.i.1.i195, 1, !dbg !49
  %.not29.i199 = icmp eq i32 %1340, 0, !dbg !49
  %1341 = select i1 %.not29.i199, float %t.i.i.1.i196, float 1.000000e+00, !dbg !49
  %1342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i200 = icmp eq i32 %1342, 0, !dbg !49
  %1343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %1341, float 0.000000e+00) #4, !dbg !49
  %1344 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %1341, float 0.000000e+00) #4, !dbg !49
  %.012.i201 = select i1 %.not30.i200, float %1344, float %1343, !dbg !49
  br i1 %.not29.i199, label %__internal_fmad.exit2.i.i.i205, label %__internal_fmad.exit1.i.i.i202, !dbg !49

__internal_fmad.exit1.i.i.i202:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %1345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i203 = icmp eq i32 %1345, 0, !dbg !49
  %1346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1347 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i204 = select i1 %.not31.i203, float %1347, float %1346, !dbg !49
  br label %__internal_fmad.exit2.i.i.i205, !dbg !49

__internal_fmad.exit2.i.i.i205:                   ; preds = %__internal_fmad.exit1.i.i.i202, %__internal_trig_reduction_kernel.exit.i.i194
  %1348 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i202 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !49
  %1349 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i202 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !49
  %1350 = phi float [ %.013.i204, %__internal_fmad.exit1.i.i.i202 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !49
  %1351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i206 = icmp eq i32 %1351, 0, !dbg !49
  %1352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1350, float %.011.i198, float %1349) #4, !dbg !49
  %1353 = tail call float @llvm.nvvm.fma.rn.f(float %1350, float %.011.i198, float %1349) #4, !dbg !49
  %.010.i207 = select i1 %.not32.i206, float %1353, float %1352, !dbg !49
  %1354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i208 = icmp eq i32 %1354, 0, !dbg !49
  %1355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i207, float %.011.i198, float %1348) #4, !dbg !49
  %1356 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i207, float %.011.i198, float %1348) #4, !dbg !49
  %.09.i209 = select i1 %.not33.i208, float %1356, float %1355, !dbg !49
  %1357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i210 = icmp eq i32 %1357, 0, !dbg !49
  %1358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i209, float %.012.i201, float %1341) #4, !dbg !49
  %1359 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i209, float %.012.i201, float %1341) #4, !dbg !49
  %.05.i211 = select i1 %.not34.i210, float %1359, float %1358, !dbg !49
  %1360 = and i32 %i.i.1.i195, 2, !dbg !49
  %.not35.i212 = icmp eq i32 %1360, 0, !dbg !49
  br i1 %.not35.i212, label %__nv_sinf.exit220, label %__internal_fmad.exit5.i.i.i213, !dbg !49

__internal_fmad.exit5.i.i.i213:                   ; preds = %__internal_fmad.exit2.i.i.i205
  %1361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i214 = icmp eq i32 %1361, 0, !dbg !49
  %1362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1363 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i215 = select i1 %.not36.i214, float %1363, float %1362, !dbg !49
  br label %__nv_sinf.exit220, !dbg !49

__nv_sinf.exit220:                                ; preds = %__internal_fmad.exit2.i.i.i205, %__internal_fmad.exit5.i.i.i213
  %z.i.i.0.i216 = phi float [ %.0.i215, %__internal_fmad.exit5.i.i.i213 ], [ %.05.i211, %__internal_fmad.exit2.i.i.i205 ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !49
  %1364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i222 = icmp eq i32 %1364, 0, !dbg !49
  %.01.i223 = select i1 %.not.i222, i32 %593, i32 %592, !dbg !49
  %1365 = sitofp i32 %.01.i223 to float, !dbg !49
  %1366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i224 = icmp eq i32 %1366, 0, !dbg !49
  %1367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float 0xBFF921FB40000000, float %90) #4, !dbg !49
  %1368 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float 0xBFF921FB40000000, float %90) #4, !dbg !49
  %.02.i225 = select i1 %.not15.i224, float %1368, float %1367, !dbg !49
  %1369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i226 = icmp eq i32 %1369, 0, !dbg !49
  %1370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float 0xBE74442D00000000, float %.02.i225) #4, !dbg !49
  %1371 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float 0xBE74442D00000000, float %.02.i225) #4, !dbg !49
  %.03.i227 = select i1 %.not16.i226, float %1371, float %1370, !dbg !49
  %1372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i228 = icmp eq i32 %1372, 0, !dbg !49
  %1373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1365, float 0xBCF84698A0000000, float %.03.i227) #4, !dbg !49
  %1374 = tail call float @llvm.nvvm.fma.rn.f(float %1365, float 0xBCF84698A0000000, float %.03.i227) #4, !dbg !49
  %.04.i229 = select i1 %.not17.i228, float %1374, float %1373, !dbg !49
  %1375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i230 = icmp eq i32 %1375, 0, !dbg !49
  %.06.i231 = select i1 %.not18.i230, float %606, float %605, !dbg !49
  %1376 = fcmp ult float %.06.i231, 1.056150e+05, !dbg !49
  br i1 %1376, label %__internal_trig_reduction_kernel.exit.i.i249, label %__nv_isinff.exit.i.i.i232, !dbg !49

__nv_isinff.exit.i.i.i232:                        ; preds = %__nv_sinf.exit220
  %1377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i233 = icmp eq i32 %1377, 0, !dbg !49
  %.07.i234 = select i1 %.not19.i233, float %606, float %605, !dbg !49
  %1378 = fcmp oeq float %.07.i234, 0x7FF0000000000000, !dbg !49
  br i1 %1378, label %__nv_fmul_rn.exit.i.i.i272, label %1382, !dbg !49

__nv_fmul_rn.exit.i.i.i272:                       ; preds = %__nv_isinff.exit.i.i.i232
  %1379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i273 = icmp eq i32 %1379, 0, !dbg !49
  %1380 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %90, float 0.000000e+00) #4, !dbg !49
  %1381 = tail call float @llvm.nvvm.mul.rn.f(float %90, float 0.000000e+00) #4, !dbg !49
  %.08.i274 = select i1 %.not27.i273, float %1381, float %1380, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !49

1382:                                             ; preds = %__nv_isinff.exit.i.i.i232
  %1383 = lshr i32 %89, 23, !dbg !49
  %1384 = and i32 %1383, 224, !dbg !49
  %1385 = add nsw i32 %1384, -128, !dbg !49
  %1386 = shl i32 %89, 8, !dbg !49
  %1387 = or i32 %1386, -2147483648, !dbg !49
  %1388 = lshr exact i32 %1385, 5, !dbg !49
  br label %1389, !dbg !49

1389:                                             ; preds = %1382, %1389
  %indvars.iv937 = phi i64 [ 0, %1382 ], [ %indvars.iv.next938, %1389 ]
  %hi.i.i.i.0.i235864 = phi i32 [ 0, %1382 ], [ %1394, %1389 ]
  %1390 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv937, !dbg !49
  %1391 = load i32, ptr addrspace(1) %1390, align 4, !dbg !49
  %1392 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1391, i32 %1387, i32 %hi.i.i.i.0.i235864) #5, !dbg !49, !srcloc !29
  %1393 = extractvalue { i32, i32 } %1392, 0, !dbg !49
  %1394 = extractvalue { i32, i32 } %1392, 1, !dbg !49
  %1395 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %indvars.iv937, !dbg !49
  store i32 %1393, ptr %1395, align 4, !dbg !49
  %indvars.iv.next938 = add nuw nsw i64 %indvars.iv937, 1, !dbg !49
  %exitcond939.not = icmp eq i64 %indvars.iv.next938, 6, !dbg !49
  br i1 %exitcond939.not, label %1396, label %1389, !dbg !49, !llvm.loop !55

1396:                                             ; preds = %1389
  %1397 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i221, i64 24, !dbg !49
  store i32 %1394, ptr %1397, align 4, !dbg !49
  %1398 = sub nsw i32 6, %1388, !dbg !49
  %1399 = sext i32 %1398 to i64, !dbg !49
  %1400 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1399, !dbg !49
  %1401 = load i32, ptr %1400, align 4, !dbg !49
  %1402 = sub nsw i32 5, %1388, !dbg !49
  %1403 = sext i32 %1402 to i64, !dbg !49
  %1404 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1403, !dbg !49
  %1405 = load i32, ptr %1404, align 4, !dbg !49
  %1406 = freeze i32 %1405, !dbg !49
  %1407 = and i32 %89, 260046848, !dbg !49
  %.not20.i237 = icmp eq i32 %1407, 0, !dbg !49
  br i1 %.not20.i237, label %__internal_trig_reduction_slowpath.exit.i.i.i238, label %1408, !dbg !49

1408:                                             ; preds = %1396
  %1409 = sub nsw i32 4, %1388, !dbg !49
  %1410 = sext i32 %1409 to i64, !dbg !49
  %1411 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %1410, !dbg !49
  %1412 = load i32, ptr %1411, align 4, !dbg !49
  %1413 = tail call i32 @llvm.fshl.i32(i32 %1406, i32 %1412, i32 %1383), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i238, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i238: ; preds = %1408, %1396
  %lo.i.i.i.0.i240 = phi i32 [ %1413, %1408 ], [ %1406, %1396 ], !dbg !49
  %1414 = tail call i32 @llvm.fshl.i32(i32 %1401, i32 %1406, i32 %1383), !dbg !49
  %1415 = lshr i32 %1414, 30, !dbg !49
  %1416 = tail call i32 @llvm.fshl.i32(i32 %1414, i32 %lo.i.i.i.0.i240, i32 2), !dbg !49
  %1417 = shl i32 %lo.i.i.i.0.i240, 2, !dbg !49
  %1418 = lshr i32 %1416, 31, !dbg !49
  %1419 = add nuw nsw i32 %1418, %1415, !dbg !49
  %1420 = sub nsw i32 0, %1419, !dbg !49
  %.not2123.i241 = icmp slt i32 %89, 0, !dbg !49
  %spec.select.i242 = select i1 %.not2123.i241, i32 %1420, i32 %1419, !dbg !49
  %1421 = xor i32 %1416, %89, !dbg !49
  %.lobit.i243 = ashr i32 %1416, 31, !dbg !49
  %hi.i.i.i.2.i244 = xor i32 %.lobit.i243, %1416, !dbg !49
  %lo.i.i.i.1.i246 = xor i32 %.lobit.i243, %1417, !dbg !49
  %1422 = zext i32 %hi.i.i.i.2.i244 to i64, !dbg !49
  %1423 = shl nuw i64 %1422, 32, !dbg !49
  %1424 = zext i32 %lo.i.i.i.1.i246 to i64, !dbg !49
  %1425 = or disjoint i64 %1423, %1424, !dbg !49
  %1426 = sitofp i64 %1425 to double, !dbg !49
  %1427 = fmul double %1426, 0x3BF921FB54442D19, !dbg !49
  %1428 = fptrunc double %1427 to float, !dbg !49
  %1429 = fneg float %1428, !dbg !49
  %.not2526.i247 = icmp slt i32 %1421, 0, !dbg !49
  %r.i.i.i.0.i248 = select i1 %.not2526.i247, float %1429, float %1428, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !49

__internal_trig_reduction_kernel.exit.i.i249:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i238, %__nv_fmul_rn.exit.i.i.i272, %__nv_sinf.exit220
  %i.i.1.i250 = phi i32 [ %.01.i223, %__nv_sinf.exit220 ], [ 0, %__nv_fmul_rn.exit.i.i.i272 ], [ %spec.select.i242, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !49
  %t.i.i.1.i251 = phi float [ %.04.i229, %__nv_sinf.exit220 ], [ %.08.i274, %__nv_fmul_rn.exit.i.i.i272 ], [ %r.i.i.i.0.i248, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !49
  %1430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i252 = icmp eq i32 %1430, 0, !dbg !49
  %1431 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #4, !dbg !49
  %1432 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #4, !dbg !49
  %.011.i253 = select i1 %.not28.i252, float %1432, float %1431, !dbg !49
  %1433 = and i32 %i.i.1.i250, 1, !dbg !49
  %.not29.i254 = icmp eq i32 %1433, 0, !dbg !49
  %1434 = select i1 %.not29.i254, float %t.i.i.1.i251, float 1.000000e+00, !dbg !49
  %1435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i255 = icmp eq i32 %1435, 0, !dbg !49
  %1436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i253, float %1434, float 0.000000e+00) #4, !dbg !49
  %1437 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i253, float %1434, float 0.000000e+00) #4, !dbg !49
  %.012.i256 = select i1 %.not30.i255, float %1437, float %1436, !dbg !49
  br i1 %.not29.i254, label %__internal_fmad.exit2.i.i.i260, label %__internal_fmad.exit1.i.i.i257, !dbg !49

__internal_fmad.exit1.i.i.i257:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i249
  %1438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i258 = icmp eq i32 %1438, 0, !dbg !49
  %1439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1440 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i259 = select i1 %.not31.i258, float %1440, float %1439, !dbg !49
  br label %__internal_fmad.exit2.i.i.i260, !dbg !49

__internal_fmad.exit2.i.i.i260:                   ; preds = %__internal_fmad.exit1.i.i.i257, %__internal_trig_reduction_kernel.exit.i.i249
  %1441 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i257 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !49
  %1442 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i257 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !49
  %1443 = phi float [ %.013.i259, %__internal_fmad.exit1.i.i.i257 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !49
  %1444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i261 = icmp eq i32 %1444, 0, !dbg !49
  %1445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1443, float %.011.i253, float %1442) #4, !dbg !49
  %1446 = tail call float @llvm.nvvm.fma.rn.f(float %1443, float %.011.i253, float %1442) #4, !dbg !49
  %.010.i262 = select i1 %.not32.i261, float %1446, float %1445, !dbg !49
  %1447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i263 = icmp eq i32 %1447, 0, !dbg !49
  %1448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i262, float %.011.i253, float %1441) #4, !dbg !49
  %1449 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i262, float %.011.i253, float %1441) #4, !dbg !49
  %.09.i264 = select i1 %.not33.i263, float %1449, float %1448, !dbg !49
  %1450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i265 = icmp eq i32 %1450, 0, !dbg !49
  %1451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i264, float %.012.i256, float %1434) #4, !dbg !49
  %1452 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i264, float %.012.i256, float %1434) #4, !dbg !49
  %.05.i266 = select i1 %.not34.i265, float %1452, float %1451, !dbg !49
  %1453 = and i32 %i.i.1.i250, 2, !dbg !49
  %.not35.i267 = icmp eq i32 %1453, 0, !dbg !49
  br i1 %.not35.i267, label %__nv_sinf.exit275, label %__internal_fmad.exit5.i.i.i268, !dbg !49

__internal_fmad.exit5.i.i.i268:                   ; preds = %__internal_fmad.exit2.i.i.i260
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i269 = icmp eq i32 %1454, 0, !dbg !49
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i270 = select i1 %.not36.i269, float %1456, float %1455, !dbg !49
  br label %__nv_sinf.exit275, !dbg !49

__nv_sinf.exit275:                                ; preds = %__internal_fmad.exit2.i.i.i260, %__internal_fmad.exit5.i.i.i268
  %z.i.i.0.i271 = phi float [ %.0.i270, %__internal_fmad.exit5.i.i.i268 ], [ %.05.i266, %__internal_fmad.exit2.i.i.i260 ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !49
  %1457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i277 = icmp eq i32 %1457, 0, !dbg !49
  %.01.i278 = select i1 %.not.i277, i32 %692, i32 %691, !dbg !49
  %1458 = sitofp i32 %.01.i278 to float, !dbg !49
  %1459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i279 = icmp eq i32 %1459, 0, !dbg !49
  %1460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1458, float 0xBFF921FB40000000, float %92) #4, !dbg !49
  %1461 = tail call float @llvm.nvvm.fma.rn.f(float %1458, float 0xBFF921FB40000000, float %92) #4, !dbg !49
  %.02.i280 = select i1 %.not15.i279, float %1461, float %1460, !dbg !49
  %1462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i281 = icmp eq i32 %1462, 0, !dbg !49
  %1463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1458, float 0xBE74442D00000000, float %.02.i280) #4, !dbg !49
  %1464 = tail call float @llvm.nvvm.fma.rn.f(float %1458, float 0xBE74442D00000000, float %.02.i280) #4, !dbg !49
  %.03.i282 = select i1 %.not16.i281, float %1464, float %1463, !dbg !49
  %1465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i283 = icmp eq i32 %1465, 0, !dbg !49
  %1466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1458, float 0xBCF84698A0000000, float %.03.i282) #4, !dbg !49
  %1467 = tail call float @llvm.nvvm.fma.rn.f(float %1458, float 0xBCF84698A0000000, float %.03.i282) #4, !dbg !49
  %.04.i284 = select i1 %.not17.i283, float %1467, float %1466, !dbg !49
  %1468 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i285 = icmp eq i32 %1468, 0, !dbg !49
  %.06.i286 = select i1 %.not18.i285, float %705, float %704, !dbg !49
  %1469 = fcmp ult float %.06.i286, 1.056150e+05, !dbg !49
  br i1 %1469, label %__internal_trig_reduction_kernel.exit.i.i304, label %__nv_isinff.exit.i.i.i287, !dbg !49

__nv_isinff.exit.i.i.i287:                        ; preds = %__nv_sinf.exit275
  %1470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i288 = icmp eq i32 %1470, 0, !dbg !49
  %.07.i289 = select i1 %.not19.i288, float %705, float %704, !dbg !49
  %1471 = fcmp oeq float %.07.i289, 0x7FF0000000000000, !dbg !49
  br i1 %1471, label %__nv_fmul_rn.exit.i.i.i327, label %1475, !dbg !49

__nv_fmul_rn.exit.i.i.i327:                       ; preds = %__nv_isinff.exit.i.i.i287
  %1472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i328 = icmp eq i32 %1472, 0, !dbg !49
  %1473 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %92, float 0.000000e+00) #4, !dbg !49
  %1474 = tail call float @llvm.nvvm.mul.rn.f(float %92, float 0.000000e+00) #4, !dbg !49
  %.08.i329 = select i1 %.not27.i328, float %1474, float %1473, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !49

1475:                                             ; preds = %__nv_isinff.exit.i.i.i287
  %1476 = lshr i32 %91, 23, !dbg !49
  %1477 = and i32 %1476, 224, !dbg !49
  %1478 = add nsw i32 %1477, -128, !dbg !49
  %1479 = shl i32 %91, 8, !dbg !49
  %1480 = or i32 %1479, -2147483648, !dbg !49
  %1481 = lshr exact i32 %1478, 5, !dbg !49
  br label %1482, !dbg !49

1482:                                             ; preds = %1475, %1482
  %indvars.iv940 = phi i64 [ 0, %1475 ], [ %indvars.iv.next941, %1482 ]
  %hi.i.i.i.0.i290866 = phi i32 [ 0, %1475 ], [ %1487, %1482 ]
  %1483 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv940, !dbg !49
  %1484 = load i32, ptr addrspace(1) %1483, align 4, !dbg !49
  %1485 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1484, i32 %1480, i32 %hi.i.i.i.0.i290866) #5, !dbg !49, !srcloc !29
  %1486 = extractvalue { i32, i32 } %1485, 0, !dbg !49
  %1487 = extractvalue { i32, i32 } %1485, 1, !dbg !49
  %1488 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %indvars.iv940, !dbg !49
  store i32 %1486, ptr %1488, align 4, !dbg !49
  %indvars.iv.next941 = add nuw nsw i64 %indvars.iv940, 1, !dbg !49
  %exitcond942.not = icmp eq i64 %indvars.iv.next941, 6, !dbg !49
  br i1 %exitcond942.not, label %1489, label %1482, !dbg !49, !llvm.loop !56

1489:                                             ; preds = %1482
  %1490 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i276, i64 24, !dbg !49
  store i32 %1487, ptr %1490, align 4, !dbg !49
  %1491 = sub nsw i32 6, %1481, !dbg !49
  %1492 = sext i32 %1491 to i64, !dbg !49
  %1493 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1492, !dbg !49
  %1494 = load i32, ptr %1493, align 4, !dbg !49
  %1495 = sub nsw i32 5, %1481, !dbg !49
  %1496 = sext i32 %1495 to i64, !dbg !49
  %1497 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1496, !dbg !49
  %1498 = load i32, ptr %1497, align 4, !dbg !49
  %1499 = freeze i32 %1498, !dbg !49
  %1500 = and i32 %91, 260046848, !dbg !49
  %.not20.i292 = icmp eq i32 %1500, 0, !dbg !49
  br i1 %.not20.i292, label %__internal_trig_reduction_slowpath.exit.i.i.i293, label %1501, !dbg !49

1501:                                             ; preds = %1489
  %1502 = sub nsw i32 4, %1481, !dbg !49
  %1503 = sext i32 %1502 to i64, !dbg !49
  %1504 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1503, !dbg !49
  %1505 = load i32, ptr %1504, align 4, !dbg !49
  %1506 = tail call i32 @llvm.fshl.i32(i32 %1499, i32 %1505, i32 %1476), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i293, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i293: ; preds = %1501, %1489
  %lo.i.i.i.0.i295 = phi i32 [ %1506, %1501 ], [ %1499, %1489 ], !dbg !49
  %1507 = tail call i32 @llvm.fshl.i32(i32 %1494, i32 %1499, i32 %1476), !dbg !49
  %1508 = lshr i32 %1507, 30, !dbg !49
  %1509 = tail call i32 @llvm.fshl.i32(i32 %1507, i32 %lo.i.i.i.0.i295, i32 2), !dbg !49
  %1510 = shl i32 %lo.i.i.i.0.i295, 2, !dbg !49
  %1511 = lshr i32 %1509, 31, !dbg !49
  %1512 = add nuw nsw i32 %1511, %1508, !dbg !49
  %1513 = sub nsw i32 0, %1512, !dbg !49
  %.not2123.i296 = icmp slt i32 %91, 0, !dbg !49
  %spec.select.i297 = select i1 %.not2123.i296, i32 %1513, i32 %1512, !dbg !49
  %1514 = xor i32 %1509, %91, !dbg !49
  %.lobit.i298 = ashr i32 %1509, 31, !dbg !49
  %hi.i.i.i.2.i299 = xor i32 %.lobit.i298, %1509, !dbg !49
  %lo.i.i.i.1.i301 = xor i32 %.lobit.i298, %1510, !dbg !49
  %1515 = zext i32 %hi.i.i.i.2.i299 to i64, !dbg !49
  %1516 = shl nuw i64 %1515, 32, !dbg !49
  %1517 = zext i32 %lo.i.i.i.1.i301 to i64, !dbg !49
  %1518 = or disjoint i64 %1516, %1517, !dbg !49
  %1519 = sitofp i64 %1518 to double, !dbg !49
  %1520 = fmul double %1519, 0x3BF921FB54442D19, !dbg !49
  %1521 = fptrunc double %1520 to float, !dbg !49
  %1522 = fneg float %1521, !dbg !49
  %.not2526.i302 = icmp slt i32 %1514, 0, !dbg !49
  %r.i.i.i.0.i303 = select i1 %.not2526.i302, float %1522, float %1521, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !49

__internal_trig_reduction_kernel.exit.i.i304:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i293, %__nv_fmul_rn.exit.i.i.i327, %__nv_sinf.exit275
  %i.i.1.i305 = phi i32 [ %.01.i278, %__nv_sinf.exit275 ], [ 0, %__nv_fmul_rn.exit.i.i.i327 ], [ %spec.select.i297, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !49
  %t.i.i.1.i306 = phi float [ %.04.i284, %__nv_sinf.exit275 ], [ %.08.i329, %__nv_fmul_rn.exit.i.i.i327 ], [ %r.i.i.i.0.i303, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !49
  %1523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i307 = icmp eq i32 %1523, 0, !dbg !49
  %1524 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #4, !dbg !49
  %1525 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #4, !dbg !49
  %.011.i308 = select i1 %.not28.i307, float %1525, float %1524, !dbg !49
  %1526 = and i32 %i.i.1.i305, 1, !dbg !49
  %.not29.i309 = icmp eq i32 %1526, 0, !dbg !49
  %1527 = select i1 %.not29.i309, float %t.i.i.1.i306, float 1.000000e+00, !dbg !49
  %1528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i310 = icmp eq i32 %1528, 0, !dbg !49
  %1529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i308, float %1527, float 0.000000e+00) #4, !dbg !49
  %1530 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i308, float %1527, float 0.000000e+00) #4, !dbg !49
  %.012.i311 = select i1 %.not30.i310, float %1530, float %1529, !dbg !49
  br i1 %.not29.i309, label %__internal_fmad.exit2.i.i.i315, label %__internal_fmad.exit1.i.i.i312, !dbg !49

__internal_fmad.exit1.i.i.i312:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i304
  %1531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i313 = icmp eq i32 %1531, 0, !dbg !49
  %1532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1533 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i314 = select i1 %.not31.i313, float %1533, float %1532, !dbg !49
  br label %__internal_fmad.exit2.i.i.i315, !dbg !49

__internal_fmad.exit2.i.i.i315:                   ; preds = %__internal_fmad.exit1.i.i.i312, %__internal_trig_reduction_kernel.exit.i.i304
  %1534 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i312 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !49
  %1535 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i312 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !49
  %1536 = phi float [ %.013.i314, %__internal_fmad.exit1.i.i.i312 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !49
  %1537 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i316 = icmp eq i32 %1537, 0, !dbg !49
  %1538 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1536, float %.011.i308, float %1535) #4, !dbg !49
  %1539 = tail call float @llvm.nvvm.fma.rn.f(float %1536, float %.011.i308, float %1535) #4, !dbg !49
  %.010.i317 = select i1 %.not32.i316, float %1539, float %1538, !dbg !49
  %1540 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i318 = icmp eq i32 %1540, 0, !dbg !49
  %1541 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i317, float %.011.i308, float %1534) #4, !dbg !49
  %1542 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i317, float %.011.i308, float %1534) #4, !dbg !49
  %.09.i319 = select i1 %.not33.i318, float %1542, float %1541, !dbg !49
  %1543 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i320 = icmp eq i32 %1543, 0, !dbg !49
  %1544 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i319, float %.012.i311, float %1527) #4, !dbg !49
  %1545 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i319, float %.012.i311, float %1527) #4, !dbg !49
  %.05.i321 = select i1 %.not34.i320, float %1545, float %1544, !dbg !49
  %1546 = and i32 %i.i.1.i305, 2, !dbg !49
  %.not35.i322 = icmp eq i32 %1546, 0, !dbg !49
  br i1 %.not35.i322, label %__nv_sinf.exit330, label %__internal_fmad.exit5.i.i.i323, !dbg !49

__internal_fmad.exit5.i.i.i323:                   ; preds = %__internal_fmad.exit2.i.i.i315
  %1547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i324 = icmp eq i32 %1547, 0, !dbg !49
  %1548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1549 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i325 = select i1 %.not36.i324, float %1549, float %1548, !dbg !49
  br label %__nv_sinf.exit330, !dbg !49

__nv_sinf.exit330:                                ; preds = %__internal_fmad.exit2.i.i.i315, %__internal_fmad.exit5.i.i.i323
  %z.i.i.0.i326 = phi float [ %.0.i325, %__internal_fmad.exit5.i.i.i323 ], [ %.05.i321, %__internal_fmad.exit2.i.i.i315 ], !dbg !49
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !49
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i332 = icmp eq i32 %1550, 0, !dbg !49
  %.01.i333 = select i1 %.not.i332, i32 %791, i32 %790, !dbg !49
  %1551 = sitofp i32 %.01.i333 to float, !dbg !49
  %1552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not15.i334 = icmp eq i32 %1552, 0, !dbg !49
  %1553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1551, float 0xBFF921FB40000000, float %94) #4, !dbg !49
  %1554 = tail call float @llvm.nvvm.fma.rn.f(float %1551, float 0xBFF921FB40000000, float %94) #4, !dbg !49
  %.02.i335 = select i1 %.not15.i334, float %1554, float %1553, !dbg !49
  %1555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not16.i336 = icmp eq i32 %1555, 0, !dbg !49
  %1556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1551, float 0xBE74442D00000000, float %.02.i335) #4, !dbg !49
  %1557 = tail call float @llvm.nvvm.fma.rn.f(float %1551, float 0xBE74442D00000000, float %.02.i335) #4, !dbg !49
  %.03.i337 = select i1 %.not16.i336, float %1557, float %1556, !dbg !49
  %1558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not17.i338 = icmp eq i32 %1558, 0, !dbg !49
  %1559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1551, float 0xBCF84698A0000000, float %.03.i337) #4, !dbg !49
  %1560 = tail call float @llvm.nvvm.fma.rn.f(float %1551, float 0xBCF84698A0000000, float %.03.i337) #4, !dbg !49
  %.04.i339 = select i1 %.not17.i338, float %1560, float %1559, !dbg !49
  %1561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not18.i340 = icmp eq i32 %1561, 0, !dbg !49
  %.06.i341 = select i1 %.not18.i340, float %804, float %803, !dbg !49
  %1562 = fcmp ult float %.06.i341, 1.056150e+05, !dbg !49
  br i1 %1562, label %__internal_trig_reduction_kernel.exit.i.i359, label %__nv_isinff.exit.i.i.i342, !dbg !49

__nv_isinff.exit.i.i.i342:                        ; preds = %__nv_sinf.exit330
  %1563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not19.i343 = icmp eq i32 %1563, 0, !dbg !49
  %.07.i344 = select i1 %.not19.i343, float %804, float %803, !dbg !49
  %1564 = fcmp oeq float %.07.i344, 0x7FF0000000000000, !dbg !49
  br i1 %1564, label %__nv_fmul_rn.exit.i.i.i382, label %1568, !dbg !49

__nv_fmul_rn.exit.i.i.i382:                       ; preds = %__nv_isinff.exit.i.i.i342
  %1565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not27.i383 = icmp eq i32 %1565, 0, !dbg !49
  %1566 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %94, float 0.000000e+00) #4, !dbg !49
  %1567 = tail call float @llvm.nvvm.mul.rn.f(float %94, float 0.000000e+00) #4, !dbg !49
  %.08.i384 = select i1 %.not27.i383, float %1567, float %1566, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !49

1568:                                             ; preds = %__nv_isinff.exit.i.i.i342
  %1569 = lshr i32 %93, 23, !dbg !49
  %1570 = and i32 %1569, 224, !dbg !49
  %1571 = add nsw i32 %1570, -128, !dbg !49
  %1572 = shl i32 %93, 8, !dbg !49
  %1573 = or i32 %1572, -2147483648, !dbg !49
  %1574 = lshr exact i32 %1571, 5, !dbg !49
  br label %1575, !dbg !49

1575:                                             ; preds = %1568, %1575
  %indvars.iv943 = phi i64 [ 0, %1568 ], [ %indvars.iv.next944, %1575 ]
  %hi.i.i.i.0.i345868 = phi i32 [ 0, %1568 ], [ %1580, %1575 ]
  %1576 = getelementptr inbounds nuw [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv943, !dbg !49
  %1577 = load i32, ptr addrspace(1) %1576, align 4, !dbg !49
  %1578 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1577, i32 %1573, i32 %hi.i.i.i.0.i345868) #5, !dbg !49, !srcloc !29
  %1579 = extractvalue { i32, i32 } %1578, 0, !dbg !49
  %1580 = extractvalue { i32, i32 } %1578, 1, !dbg !49
  %1581 = getelementptr inbounds nuw [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %indvars.iv943, !dbg !49
  store i32 %1579, ptr %1581, align 4, !dbg !49
  %indvars.iv.next944 = add nuw nsw i64 %indvars.iv943, 1, !dbg !49
  %exitcond945.not = icmp eq i64 %indvars.iv.next944, 6, !dbg !49
  br i1 %exitcond945.not, label %1582, label %1575, !dbg !49, !llvm.loop !57

1582:                                             ; preds = %1575
  %1583 = getelementptr inbounds nuw i8, ptr %result.i.i.i.i331, i64 24, !dbg !49
  store i32 %1580, ptr %1583, align 4, !dbg !49
  %1584 = sub nsw i32 6, %1574, !dbg !49
  %1585 = sext i32 %1584 to i64, !dbg !49
  %1586 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1585, !dbg !49
  %1587 = load i32, ptr %1586, align 4, !dbg !49
  %1588 = sub nsw i32 5, %1574, !dbg !49
  %1589 = sext i32 %1588 to i64, !dbg !49
  %1590 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1589, !dbg !49
  %1591 = load i32, ptr %1590, align 4, !dbg !49
  %1592 = freeze i32 %1591, !dbg !49
  %1593 = and i32 %93, 260046848, !dbg !49
  %.not20.i347 = icmp eq i32 %1593, 0, !dbg !49
  br i1 %.not20.i347, label %__internal_trig_reduction_slowpath.exit.i.i.i348, label %1594, !dbg !49

1594:                                             ; preds = %1582
  %1595 = sub nsw i32 4, %1574, !dbg !49
  %1596 = sext i32 %1595 to i64, !dbg !49
  %1597 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1596, !dbg !49
  %1598 = load i32, ptr %1597, align 4, !dbg !49
  %1599 = tail call i32 @llvm.fshl.i32(i32 %1592, i32 %1598, i32 %1569), !dbg !49
  br label %__internal_trig_reduction_slowpath.exit.i.i.i348, !dbg !49

__internal_trig_reduction_slowpath.exit.i.i.i348: ; preds = %1594, %1582
  %lo.i.i.i.0.i350 = phi i32 [ %1599, %1594 ], [ %1592, %1582 ], !dbg !49
  %1600 = tail call i32 @llvm.fshl.i32(i32 %1587, i32 %1592, i32 %1569), !dbg !49
  %1601 = lshr i32 %1600, 30, !dbg !49
  %1602 = tail call i32 @llvm.fshl.i32(i32 %1600, i32 %lo.i.i.i.0.i350, i32 2), !dbg !49
  %1603 = shl i32 %lo.i.i.i.0.i350, 2, !dbg !49
  %1604 = lshr i32 %1602, 31, !dbg !49
  %1605 = add nuw nsw i32 %1604, %1601, !dbg !49
  %1606 = sub nsw i32 0, %1605, !dbg !49
  %.not2123.i351 = icmp slt i32 %93, 0, !dbg !49
  %spec.select.i352 = select i1 %.not2123.i351, i32 %1606, i32 %1605, !dbg !49
  %1607 = xor i32 %1602, %93, !dbg !49
  %.lobit.i353 = ashr i32 %1602, 31, !dbg !49
  %hi.i.i.i.2.i354 = xor i32 %.lobit.i353, %1602, !dbg !49
  %lo.i.i.i.1.i356 = xor i32 %.lobit.i353, %1603, !dbg !49
  %1608 = zext i32 %hi.i.i.i.2.i354 to i64, !dbg !49
  %1609 = shl nuw i64 %1608, 32, !dbg !49
  %1610 = zext i32 %lo.i.i.i.1.i356 to i64, !dbg !49
  %1611 = or disjoint i64 %1609, %1610, !dbg !49
  %1612 = sitofp i64 %1611 to double, !dbg !49
  %1613 = fmul double %1612, 0x3BF921FB54442D19, !dbg !49
  %1614 = fptrunc double %1613 to float, !dbg !49
  %1615 = fneg float %1614, !dbg !49
  %.not2526.i357 = icmp slt i32 %1607, 0, !dbg !49
  %r.i.i.i.0.i358 = select i1 %.not2526.i357, float %1615, float %1614, !dbg !49
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !49

__internal_trig_reduction_kernel.exit.i.i359:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i348, %__nv_fmul_rn.exit.i.i.i382, %__nv_sinf.exit330
  %i.i.1.i360 = phi i32 [ %.01.i333, %__nv_sinf.exit330 ], [ 0, %__nv_fmul_rn.exit.i.i.i382 ], [ %spec.select.i352, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !49
  %t.i.i.1.i361 = phi float [ %.04.i339, %__nv_sinf.exit330 ], [ %.08.i384, %__nv_fmul_rn.exit.i.i.i382 ], [ %r.i.i.i.0.i358, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !49
  %1616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not28.i362 = icmp eq i32 %1616, 0, !dbg !49
  %1617 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #4, !dbg !49
  %1618 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #4, !dbg !49
  %.011.i363 = select i1 %.not28.i362, float %1618, float %1617, !dbg !49
  %1619 = and i32 %i.i.1.i360, 1, !dbg !49
  %.not29.i364 = icmp eq i32 %1619, 0, !dbg !49
  %1620 = select i1 %.not29.i364, float %t.i.i.1.i361, float 1.000000e+00, !dbg !49
  %1621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not30.i365 = icmp eq i32 %1621, 0, !dbg !49
  %1622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i363, float %1620, float 0.000000e+00) #4, !dbg !49
  %1623 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i363, float %1620, float 0.000000e+00) #4, !dbg !49
  %.012.i366 = select i1 %.not30.i365, float %1623, float %1622, !dbg !49
  br i1 %.not29.i364, label %__internal_fmad.exit2.i.i.i370, label %__internal_fmad.exit1.i.i.i367, !dbg !49

__internal_fmad.exit1.i.i.i367:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i359
  %1624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not31.i368 = icmp eq i32 %1624, 0, !dbg !49
  %1625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #4, !dbg !49
  %1626 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #4, !dbg !49
  %.013.i369 = select i1 %.not31.i368, float %1626, float %1625, !dbg !49
  br label %__internal_fmad.exit2.i.i.i370, !dbg !49

__internal_fmad.exit2.i.i.i370:                   ; preds = %__internal_fmad.exit1.i.i.i367, %__internal_trig_reduction_kernel.exit.i.i359
  %1627 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i367 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !49
  %1628 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i367 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !49
  %1629 = phi float [ %.013.i369, %__internal_fmad.exit1.i.i.i367 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !49
  %1630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not32.i371 = icmp eq i32 %1630, 0, !dbg !49
  %1631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1629, float %.011.i363, float %1628) #4, !dbg !49
  %1632 = tail call float @llvm.nvvm.fma.rn.f(float %1629, float %.011.i363, float %1628) #4, !dbg !49
  %.010.i372 = select i1 %.not32.i371, float %1632, float %1631, !dbg !49
  %1633 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not33.i373 = icmp eq i32 %1633, 0, !dbg !49
  %1634 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i372, float %.011.i363, float %1627) #4, !dbg !49
  %1635 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i372, float %.011.i363, float %1627) #4, !dbg !49
  %.09.i374 = select i1 %.not33.i373, float %1635, float %1634, !dbg !49
  %1636 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not34.i375 = icmp eq i32 %1636, 0, !dbg !49
  %1637 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i374, float %.012.i366, float %1620) #4, !dbg !49
  %1638 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i374, float %.012.i366, float %1620) #4, !dbg !49
  %.05.i376 = select i1 %.not34.i375, float %1638, float %1637, !dbg !49
  %1639 = and i32 %i.i.1.i360, 2, !dbg !49
  %.not35.i377 = icmp eq i32 %1639, 0, !dbg !49
  br i1 %.not35.i377, label %__nv_sinf.exit385, label %__internal_fmad.exit5.i.i.i378, !dbg !49

__internal_fmad.exit5.i.i.i378:                   ; preds = %__internal_fmad.exit2.i.i.i370
  %1640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not36.i379 = icmp eq i32 %1640, 0, !dbg !49
  %1641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %1642 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #4, !dbg !49
  %.0.i380 = select i1 %.not36.i379, float %1642, float %1641, !dbg !49
  br label %__nv_sinf.exit385, !dbg !49

__nv_sinf.exit385:                                ; preds = %__internal_fmad.exit2.i.i.i370, %__internal_fmad.exit5.i.i.i378
  %z.i.i.0.i381 = phi float [ %.0.i380, %__internal_fmad.exit5.i.i.i378 ], [ %.05.i376, %__internal_fmad.exit2.i.i.i370 ], !dbg !49
  %1643 = extractvalue { i32, i32, i32, i32 } %892, 3, !dbg !43
  %1644 = bitcast i32 %1643 to <2 x half>, !dbg !43
  %1645 = extractvalue { i32, i32, i32, i32 } %898, 3, !dbg !48
  %1646 = bitcast i32 %1645 to <2 x half>, !dbg !48
  %1647 = extractvalue { i32, i32, i32, i32 } %892, 2, !dbg !43
  %1648 = bitcast i32 %1647 to <2 x half>, !dbg !43
  %1649 = extractvalue { i32, i32, i32, i32 } %898, 2, !dbg !48
  %1650 = bitcast i32 %1649 to <2 x half>, !dbg !48
  %1651 = extractvalue { i32, i32, i32, i32 } %892, 1, !dbg !43
  %1652 = bitcast i32 %1651 to <2 x half>, !dbg !43
  %1653 = extractvalue { i32, i32, i32, i32 } %898, 1, !dbg !48
  %1654 = bitcast i32 %1653 to <2 x half>, !dbg !48
  %1655 = extractvalue { i32, i32, i32, i32 } %892, 0, !dbg !43
  %1656 = bitcast i32 %1655 to <2 x half>, !dbg !43
  %1657 = extractvalue { i32, i32, i32, i32 } %898, 0, !dbg !48
  %1658 = bitcast i32 %1657 to <2 x half>, !dbg !48
  %1659 = extractvalue { i32, i32, i32, i32 } %38, 3, !dbg !22
  %1660 = bitcast i32 %1659 to <2 x half>, !dbg !22
  %1661 = extractvalue { i32, i32, i32, i32 } %38, 2, !dbg !22
  %1662 = bitcast i32 %1661 to <2 x half>, !dbg !22
  %1663 = extractvalue { i32, i32, i32, i32 } %38, 1, !dbg !22
  %1664 = bitcast i32 %1663 to <2 x half>, !dbg !22
  %1665 = extractvalue { i32, i32, i32, i32 } %38, 0, !dbg !22
  %1666 = bitcast i32 %1665 to <2 x half>, !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !49
  %1667 = sext i32 %13 to i64, !dbg !58
  %1668 = getelementptr half, ptr addrspace(1) %2, i64 %1667, !dbg !58
  %1669 = fpext <2 x half> %1656 to <2 x float>, !dbg !59
  %1670 = fsub <2 x float> zeroinitializer, %1669, !dbg !60
  %1671 = fpext <2 x half> %1658 to <2 x float>, !dbg !61
  %1672 = insertelement <2 x i1> poison, i1 %887, i64 0, !dbg !62
  %1673 = shufflevector <2 x i1> %1672, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !62
  %1674 = select <2 x i1> %1673, <2 x float> %1670, <2 x float> %1671, !dbg !62
  %1675 = fpext <2 x half> %1666 to <2 x float>, !dbg !63
  %1676 = insertelement <2 x float> poison, float %z.i.i.0.i432, i64 0, !dbg !64
  %1677 = insertelement <2 x float> %1676, float %z.i.i.0.i486, i64 1, !dbg !64
  %1678 = fmul <2 x float> %1677, %1675, !dbg !64
  %1679 = insertelement <2 x float> poison, float %z.i.i.0.i, i64 0, !dbg !65
  %1680 = insertelement <2 x float> %1679, float %z.i.i.0.i51, i64 1, !dbg !65
  %1681 = fmul <2 x float> %1674, %1680, !dbg !65
  %1682 = fadd <2 x float> %1678, %1681, !dbg !66
  %1683 = fptrunc <2 x float> %1682 to <2 x half>, !dbg !67
  %1684 = fpext <2 x half> %1652 to <2 x float>, !dbg !59
  %1685 = fsub <2 x float> zeroinitializer, %1684, !dbg !60
  %1686 = fpext <2 x half> %1654 to <2 x float>, !dbg !61
  %1687 = select <2 x i1> %1673, <2 x float> %1685, <2 x float> %1686, !dbg !62
  %1688 = fpext <2 x half> %1664 to <2 x float>, !dbg !63
  %1689 = insertelement <2 x float> poison, float %z.i.i.0.i541, i64 0, !dbg !64
  %1690 = insertelement <2 x float> %1689, float %z.i.i.0.i596, i64 1, !dbg !64
  %1691 = fmul <2 x float> %1690, %1688, !dbg !64
  %1692 = insertelement <2 x float> poison, float %z.i.i.0.i106, i64 0, !dbg !65
  %1693 = insertelement <2 x float> %1692, float %z.i.i.0.i161, i64 1, !dbg !65
  %1694 = fmul <2 x float> %1687, %1693, !dbg !65
  %1695 = fadd <2 x float> %1691, %1694, !dbg !66
  %1696 = fptrunc <2 x float> %1695 to <2 x half>, !dbg !67
  %1697 = fpext <2 x half> %1648 to <2 x float>, !dbg !59
  %1698 = fsub <2 x float> zeroinitializer, %1697, !dbg !60
  %1699 = fpext <2 x half> %1650 to <2 x float>, !dbg !61
  %1700 = select <2 x i1> %1673, <2 x float> %1698, <2 x float> %1699, !dbg !62
  %1701 = fpext <2 x half> %1662 to <2 x float>, !dbg !63
  %1702 = insertelement <2 x float> poison, float %z.i.i.0.i651, i64 0, !dbg !64
  %1703 = insertelement <2 x float> %1702, float %z.i.i.0.i706, i64 1, !dbg !64
  %1704 = fmul <2 x float> %1703, %1701, !dbg !64
  %1705 = insertelement <2 x float> poison, float %z.i.i.0.i216, i64 0, !dbg !65
  %1706 = insertelement <2 x float> %1705, float %z.i.i.0.i271, i64 1, !dbg !65
  %1707 = fmul <2 x float> %1700, %1706, !dbg !65
  %1708 = fadd <2 x float> %1704, %1707, !dbg !66
  %1709 = fptrunc <2 x float> %1708 to <2 x half>, !dbg !67
  %1710 = fpext <2 x half> %1644 to <2 x float>, !dbg !59
  %1711 = fsub <2 x float> zeroinitializer, %1710, !dbg !60
  %1712 = fpext <2 x half> %1646 to <2 x float>, !dbg !61
  %1713 = select <2 x i1> %1673, <2 x float> %1711, <2 x float> %1712, !dbg !62
  %1714 = fpext <2 x half> %1660 to <2 x float>, !dbg !63
  %1715 = insertelement <2 x float> poison, float %z.i.i.0.i761, i64 0, !dbg !64
  %1716 = insertelement <2 x float> %1715, float %z.i.i.0.i816, i64 1, !dbg !64
  %1717 = fmul <2 x float> %1716, %1714, !dbg !64
  %1718 = insertelement <2 x float> poison, float %z.i.i.0.i326, i64 0, !dbg !65
  %1719 = insertelement <2 x float> %1718, float %z.i.i.0.i381, i64 1, !dbg !65
  %1720 = fmul <2 x float> %1713, %1719, !dbg !65
  %1721 = fadd <2 x float> %1717, %1720, !dbg !66
  %1722 = fptrunc <2 x float> %1721 to <2 x half>, !dbg !67
  %1723 = bitcast <2 x half> %1683 to i32, !dbg !67
  %1724 = bitcast <2 x half> %1696 to i32, !dbg !67
  %1725 = bitcast <2 x half> %1709 to i32, !dbg !67
  %1726 = bitcast <2 x half> %1722 to i32, !dbg !67
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %1723, i32 %1724, i32 %1725, i32 %1726, ptr addrspace(1) %1668) #4, !dbg !67
  ret void, !dbg !68
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr captures(none)) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr captures(none)) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqpsarify7zeusikjixpajqdipwbvtpp2go4p4nwgovgccmgcsc3.py", directory: "/tmp/torchinductor_root/qp")
!4 = !{ptr @triton_poi_fused_clone_2, !"reqntidx", i32 64}
!5 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!6 = distinct !DISubprogram(name: "triton_poi_fused_clone_2", linkageName: "triton_poi_fused_clone_2", scope: !3, file: !3, line: 18, type: !7, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 19, column: 28, scope: !6)
!10 = !DILocation(line: 19, column: 33, scope: !6)
!11 = !DILocation(line: 20, column: 36, scope: !6)
!12 = !DILocation(line: 20, column: 23, scope: !6)
!13 = !DILocation(line: 23, column: 21, scope: !6)
!14 = !DILocation(line: 22, column: 19, scope: !6)
!15 = !DILocation(line: 23, column: 28, scope: !6)
!16 = !DILocation(line: 24, column: 19, scope: !6)
!17 = !DILocation(line: 26, column: 39, scope: !6)
!18 = !DILocation(line: 26, column: 49, scope: !6)
!19 = !DILocation(line: 26, column: 35, scope: !6)
!20 = !DILocation(line: 26, column: 44, scope: !6)
!21 = !DILocation(line: 26, column: 30, scope: !6)
!22 = !DILocation(line: 26, column: 54, scope: !6)
!23 = !DILocation(line: 27, column: 46, scope: !6)
!24 = !DILocation(line: 27, column: 41, scope: !6)
!25 = !DILocation(line: 27, column: 35, scope: !6)
!26 = !DILocation(line: 27, column: 30, scope: !6)
!27 = !DILocation(line: 27, column: 53, scope: !6)
!28 = !DILocation(line: 28, column: 23, scope: !6)
!29 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.count", i32 1}
!32 = distinct !{!32, !31}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !31}
!35 = distinct !{!35, !31}
!36 = distinct !{!36, !31}
!37 = distinct !{!37, !31}
!38 = distinct !{!38, !31}
!39 = !DILocation(line: 37, column: 19, scope: !6)
!40 = !DILocation(line: 38, column: 45, scope: !6)
!41 = !DILocation(line: 38, column: 56, scope: !6)
!42 = !DILocation(line: 38, column: 31, scope: !6)
!43 = !DILocation(line: 38, column: 62, scope: !6)
!44 = !DILocation(line: 42, column: 20, scope: !6)
!45 = !DILocation(line: 45, column: 59, scope: !6)
!46 = !DILocation(line: 45, column: 51, scope: !6)
!47 = !DILocation(line: 45, column: 31, scope: !6)
!48 = !DILocation(line: 45, column: 65, scope: !6)
!49 = !DILocation(line: 47, column: 24, scope: !6)
!50 = distinct !{!50, !31}
!51 = distinct !{!51, !31}
!52 = distinct !{!52, !31}
!53 = distinct !{!53, !31}
!54 = distinct !{!54, !31}
!55 = distinct !{!55, !31}
!56 = distinct !{!56, !31}
!57 = distinct !{!57, !31}
!58 = !DILocation(line: 52, column: 25, scope: !6)
!59 = !DILocation(line: 38, column: 113, scope: !6)
!60 = !DILocation(line: 39, column: 13, scope: !6)
!61 = !DILocation(line: 45, column: 116, scope: !6)
!62 = !DILocation(line: 0, scope: !6)
!63 = !DILocation(line: 26, column: 93, scope: !6)
!64 = !DILocation(line: 32, column: 18, scope: !6)
!65 = !DILocation(line: 50, column: 20, scope: !6)
!66 = !DILocation(line: 51, column: 19, scope: !6)
!67 = !DILocation(line: 52, column: 37, scope: !6)
!68 = !DILocation(line: 52, column: 4, scope: !6)
