//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_mul_sum_14 // -- Begin function triton_red_fused__to_copy_add_mul_sum_14
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_mul_sum_14
.visible .entry triton_red_fused__to_copy_add_mul_sum_14(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_9,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_10,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_11,
	.param .u32 triton_red_fused__to_copy_add_mul_sum_14_param_12,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_mul_sum_14_param_13
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<57>;
	.reg .b16 	%rs<59>;
	.reg .b32 	%r<284>;
	.reg .f32 	%f<337>;
	.reg .b64 	%rd<40>;
	.loc	1 18 0                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:18:0
$L__func_begin0:
	.loc	1 18 0                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:18:0

// %bb.0:
	ld.param.u32 	%r10, [triton_red_fused__to_copy_add_mul_sum_14_param_12];
	ld.param.u64 	%rd11, [triton_red_fused__to_copy_add_mul_sum_14_param_10];
	ld.param.u64 	%rd10, [triton_red_fused__to_copy_add_mul_sum_14_param_9];
$L__tmp0:
	.loc	1 22 28                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:22:28
	mov.u32 	%r11, %ctaid.x;
	.loc	1 22 33                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:22:33
	shl.b32 	%r1, %r11, 6;
	.loc	1 23 44                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r12, %r2, 3;
	and.b32  	%r3, %r12, 56;
	.loc	1 30 40                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:30:40
	setp.lt.s32 	%p1, %r10, 1;
	mov.f32 	%f321, 0f00000000;
	mov.f32 	%f322, %f321;
	mov.f32 	%f323, %f321;
	mov.f32 	%f324, %f321;
	mov.f32 	%f325, %f321;
	mov.f32 	%f326, %f321;
	mov.f32 	%f327, %f321;
	mov.f32 	%f328, %f321;
	mov.f32 	%f329, %f321;
	mov.f32 	%f330, %f321;
	mov.f32 	%f331, %f321;
	mov.f32 	%f332, %f321;
	mov.f32 	%f333, %f321;
	mov.f32 	%f334, %f321;
	mov.f32 	%f335, %f321;
	mov.f32 	%f336, %f321;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 40                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:0:40
	ld.param.u64 	%rd9, [triton_red_fused__to_copy_add_mul_sum_14_param_8];
	ld.param.u64 	%rd8, [triton_red_fused__to_copy_add_mul_sum_14_param_7];
	ld.param.u64 	%rd7, [triton_red_fused__to_copy_add_mul_sum_14_param_6];
	ld.param.u64 	%rd6, [triton_red_fused__to_copy_add_mul_sum_14_param_5];
	ld.param.u64 	%rd5, [triton_red_fused__to_copy_add_mul_sum_14_param_4];
	ld.param.u64 	%rd4, [triton_red_fused__to_copy_add_mul_sum_14_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__to_copy_add_mul_sum_14_param_2];
	ld.param.u64 	%rd2, [triton_red_fused__to_copy_add_mul_sum_14_param_1];
	ld.param.u64 	%rd1, [triton_red_fused__to_copy_add_mul_sum_14_param_0];
	bfe.u32 	%r4, %r2, 3, 6;
	.loc	1 30 40                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:30:40
	shl.b32 	%r14, %r4, 12;
	add.s32 	%r15, %r14, %r1;
	add.s32 	%r282, %r15, %r3;
	mov.f32 	%f321, 0f00000000;
	mov.b32 	%r20, 0;
	mov.u32 	%r283, %r20;
	mov.f32 	%f322, %f321;
	mov.f32 	%f323, %f321;
	mov.f32 	%f324, %f321;
	mov.f32 	%f325, %f321;
	mov.f32 	%f326, %f321;
	mov.f32 	%f327, %f321;
	mov.f32 	%f328, %f321;
	mov.f32 	%f329, %f321;
	mov.f32 	%f330, %f321;
	mov.f32 	%f331, %f321;
	mov.f32 	%f332, %f321;
	mov.f32 	%f333, %f321;
	mov.f32 	%f334, %f321;
	mov.f32 	%f335, %f321;
	mov.f32 	%f336, %f321;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 32 29                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:32:29
	add.s32 	%r104, %r4, %r283;
	setp.lt.s32 	%p2, %r104, %r10;
	.loc	1 36 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:36:34
	mul.wide.s32 	%rd35, %r282, 2;
	add.s64 	%rd12, %rd1, %rd35;
	.loc	1 36 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:36:51
	// begin inline asm
	mov.u32 %r16, %r20;
	mov.u32 %r17, %r20;
	mov.u32 %r18, %r20;
	mov.u32 %r19, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:37:34
	add.s64 	%rd13, %rd2, %rd35;
	.loc	1 37 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:37:51
	// begin inline asm
	mov.u32 %r24, %r20;
	mov.u32 %r25, %r20;
	mov.u32 %r26, %r20;
	mov.u32 %r27, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 38 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:38:34
	add.s64 	%rd14, %rd3, %rd35;
	.loc	1 38 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:38:51
	// begin inline asm
	mov.u32 %r32, %r20;
	mov.u32 %r33, %r20;
	mov.u32 %r34, %r20;
	mov.u32 %r35, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 39 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:39:34
	add.s64 	%rd15, %rd4, %rd35;
	.loc	1 39 51                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:39:51
	// begin inline asm
	mov.u32 %r40, %r20;
	mov.u32 %r41, %r20;
	mov.u32 %r42, %r20;
	mov.u32 %r43, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 40 34                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:40:34
	mul.wide.s32 	%rd36, %r104, 4;
	add.s64 	%rd16, %rd5, %rd36;
	.loc	1 40 41                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:40:41
	// begin inline asm
	mov.u32 %r48, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r48 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r50 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r52 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r54 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r56 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r58, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r58 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r60 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r62 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 41 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:41:35
	add.s64 	%rd24, %rd6, %rd35;
	.loc	1 41 52                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:41:52
	// begin inline asm
	mov.u32 %r64, %r20;
	mov.u32 %r65, %r20;
	mov.u32 %r66, %r20;
	mov.u32 %r67, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 42 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:42:35
	add.s64 	%rd25, %rd7, %rd35;
	.loc	1 42 52                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:42:52
	// begin inline asm
	mov.u32 %r72, %r20;
	mov.u32 %r73, %r20;
	mov.u32 %r74, %r20;
	mov.u32 %r75, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r72, %r73, %r74, %r75 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 43 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:43:35
	add.s64 	%rd26, %rd8, %rd35;
	.loc	1 43 52                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:43:52
	// begin inline asm
	mov.u32 %r80, %r20;
	mov.u32 %r81, %r20;
	mov.u32 %r82, %r20;
	mov.u32 %r83, %r20;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r80, %r81, %r82, %r83 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 44 35                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:44:35
	add.s64 	%rd27, %rd9, %rd36;
	.loc	1 44 42                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:44:42
	// begin inline asm
	mov.u32 %r88, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r88 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r90, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r90 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r92, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r92 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r94, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r94 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r96, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r96 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r98, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r98 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r100, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r100 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r102, %r20;
	@%p2 ld.global.L1::evict_last.b32 { %r102 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 36 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:36:105
	mov.b32 	{%rs1, %rs2}, %r16;
	cvt.f32.f16 	%f81, %rs1;
	cvt.f32.f16 	%f82, %rs2;
	mov.b32 	{%rs3, %rs4}, %r17;
	cvt.f32.f16 	%f83, %rs3;
	cvt.f32.f16 	%f84, %rs4;
	mov.b32 	{%rs5, %rs6}, %r18;
	cvt.f32.f16 	%f85, %rs5;
	cvt.f32.f16 	%f86, %rs6;
	mov.b32 	{%rs7, %rs8}, %r19;
	cvt.f32.f16 	%f87, %rs7;
	cvt.f32.f16 	%f88, %rs8;
	.loc	1 38 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:38:105
	mov.b32 	{%rs9, %rs10}, %r35;
	cvt.f32.f16 	%f89, %rs10;
	cvt.f32.f16 	%f90, %rs9;
	mov.b32 	{%rs11, %rs12}, %r34;
	cvt.f32.f16 	%f91, %rs12;
	cvt.f32.f16 	%f92, %rs11;
	mov.b32 	{%rs13, %rs14}, %r33;
	cvt.f32.f16 	%f93, %rs14;
	cvt.f32.f16 	%f94, %rs13;
	mov.b32 	{%rs15, %rs16}, %r32;
	cvt.f32.f16 	%f95, %rs16;
	cvt.f32.f16 	%f96, %rs15;
	.loc	1 39 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:39:105
	mov.b32 	{%rs17, %rs18}, %r43;
	cvt.f32.f16 	%f97, %rs18;
	cvt.f32.f16 	%f98, %rs17;
	mov.b32 	{%rs19, %rs20}, %r42;
	cvt.f32.f16 	%f99, %rs20;
	cvt.f32.f16 	%f100, %rs19;
	mov.b32 	{%rs21, %rs22}, %r41;
	cvt.f32.f16 	%f101, %rs22;
	cvt.f32.f16 	%f102, %rs21;
	mov.b32 	{%rs23, %rs24}, %r40;
	cvt.f32.f16 	%f103, %rs24;
	cvt.f32.f16 	%f104, %rs23;
	.loc	1 41 106                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:41:106
	mov.b32 	{%rs25, %rs26}, %r67;
	cvt.f32.f16 	%f105, %rs26;
	cvt.f32.f16 	%f106, %rs25;
	mov.b32 	{%rs27, %rs28}, %r66;
	cvt.f32.f16 	%f107, %rs28;
	cvt.f32.f16 	%f108, %rs27;
	mov.b32 	{%rs29, %rs30}, %r65;
	cvt.f32.f16 	%f109, %rs30;
	cvt.f32.f16 	%f110, %rs29;
	mov.b32 	{%rs31, %rs32}, %r64;
	cvt.f32.f16 	%f111, %rs32;
	cvt.f32.f16 	%f112, %rs31;
	.loc	1 42 106                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:42:106
	mov.b32 	{%rs33, %rs34}, %r75;
	cvt.f32.f16 	%f113, %rs34;
	cvt.f32.f16 	%f114, %rs33;
	mov.b32 	{%rs35, %rs36}, %r74;
	cvt.f32.f16 	%f115, %rs36;
	cvt.f32.f16 	%f116, %rs35;
	mov.b32 	{%rs37, %rs38}, %r73;
	cvt.f32.f16 	%f117, %rs38;
	cvt.f32.f16 	%f118, %rs37;
	mov.b32 	{%rs39, %rs40}, %r72;
	cvt.f32.f16 	%f119, %rs40;
	cvt.f32.f16 	%f120, %rs39;
	.loc	1 37 105                        // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:37:105
	mov.b32 	{%rs41, %rs42}, %r80;
	cvt.f32.f16 	%f121, %rs41;
	cvt.f32.f16 	%f122, %rs42;
	mov.b32 	{%rs43, %rs44}, %r81;
	cvt.f32.f16 	%f123, %rs43;
	cvt.f32.f16 	%f124, %rs44;
	mov.b32 	{%rs45, %rs46}, %r82;
	cvt.f32.f16 	%f125, %rs45;
	cvt.f32.f16 	%f126, %rs46;
	mov.b32 	{%rs47, %rs48}, %r83;
	cvt.f32.f16 	%f127, %rs47;
	cvt.f32.f16 	%f128, %rs48;
	mov.b32 	{%rs49, %rs50}, %r24;
	cvt.f32.f16 	%f129, %rs49;
	cvt.f32.f16 	%f130, %rs50;
	mov.b32 	{%rs51, %rs52}, %r25;
	cvt.f32.f16 	%f131, %rs51;
	cvt.f32.f16 	%f132, %rs52;
	mov.b32 	{%rs53, %rs54}, %r26;
	cvt.f32.f16 	%f133, %rs53;
	cvt.f32.f16 	%f134, %rs54;
	mov.b32 	{%rs55, %rs56}, %r27;
	cvt.f32.f16 	%f135, %rs55;
	cvt.f32.f16 	%f136, %rs56;
	.loc	1 40 41                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:40:41
	mov.b32 	%f137, %r102;
	mov.b32 	%f138, %r62;
	.loc	1 46 22                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:46:22
	add.f32 	%f139, %f96, %f104;
	add.f32 	%f140, %f95, %f103;
	add.f32 	%f141, %f94, %f102;
	add.f32 	%f142, %f93, %f101;
	add.f32 	%f143, %f92, %f100;
	add.f32 	%f144, %f91, %f99;
	add.f32 	%f145, %f90, %f98;
	add.f32 	%f146, %f89, %f97;
	.loc	1 54 24                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:54:24
	add.f32 	%f147, %f112, %f120;
	add.f32 	%f148, %f111, %f119;
	add.f32 	%f149, %f110, %f118;
	add.f32 	%f150, %f109, %f117;
	add.f32 	%f151, %f108, %f116;
	add.f32 	%f152, %f107, %f115;
	add.f32 	%f153, %f106, %f114;
	add.f32 	%f154, %f105, %f113;
	.loc	1 45 22                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:45:22
	add.f32 	%f155, %f88, %f136;
	add.f32 	%f156, %f87, %f135;
	add.f32 	%f157, %f86, %f134;
	add.f32 	%f158, %f85, %f133;
	add.f32 	%f159, %f84, %f132;
	add.f32 	%f160, %f83, %f131;
	add.f32 	%f161, %f82, %f130;
	add.f32 	%f162, %f81, %f129;
	add.f32 	%f163, %f154, %f128;
	add.f32 	%f164, %f153, %f127;
	add.f32 	%f165, %f152, %f126;
	add.f32 	%f166, %f151, %f125;
	add.f32 	%f167, %f150, %f124;
	add.f32 	%f168, %f149, %f123;
	add.f32 	%f169, %f148, %f122;
	add.f32 	%f170, %f147, %f121;
	.loc	1 48 22                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:48:22
	mul.f32 	%f171, %f146, %f138;
	mul.f32 	%f172, %f145, %f138;
	mul.f32 	%f173, %f144, %f138;
	mul.f32 	%f174, %f143, %f138;
	mul.f32 	%f175, %f142, %f138;
	mul.f32 	%f176, %f141, %f138;
	mul.f32 	%f177, %f140, %f138;
	mul.f32 	%f178, %f139, %f138;
	mul.f32 	%f179, %f89, %f137;
	mul.f32 	%f180, %f90, %f137;
	mul.f32 	%f181, %f91, %f137;
	mul.f32 	%f182, %f92, %f137;
	mul.f32 	%f183, %f93, %f137;
	mul.f32 	%f184, %f94, %f137;
	mul.f32 	%f185, %f95, %f137;
	mul.f32 	%f186, %f96, %f137;
	.loc	1 52 25                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:52:25
	fma.rn.f32 	%f187, %f170, %f186, %f329;
	fma.rn.f32 	%f188, %f169, %f185, %f330;
	fma.rn.f32 	%f189, %f168, %f184, %f331;
	fma.rn.f32 	%f190, %f167, %f183, %f332;
	fma.rn.f32 	%f191, %f166, %f182, %f333;
	fma.rn.f32 	%f192, %f165, %f181, %f334;
	fma.rn.f32 	%f193, %f164, %f180, %f335;
	fma.rn.f32 	%f194, %f163, %f179, %f336;
	fma.rn.f32 	%f195, %f162, %f178, %f321;
	fma.rn.f32 	%f196, %f161, %f177, %f322;
	fma.rn.f32 	%f197, %f160, %f176, %f323;
	fma.rn.f32 	%f198, %f159, %f175, %f324;
	fma.rn.f32 	%f199, %f158, %f174, %f325;
	fma.rn.f32 	%f200, %f157, %f173, %f326;
	fma.rn.f32 	%f201, %f156, %f172, %f327;
	fma.rn.f32 	%f202, %f155, %f171, %f328;
	.loc	1 53 42                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:53:42
	selp.f32 	%f328, %f202, %f328, %p2;
	selp.f32 	%f327, %f201, %f327, %p2;
	selp.f32 	%f326, %f200, %f326, %p2;
	selp.f32 	%f325, %f199, %f325, %p2;
	selp.f32 	%f324, %f198, %f324, %p2;
	selp.f32 	%f323, %f197, %f323, %p2;
	selp.f32 	%f322, %f196, %f322, %p2;
	selp.f32 	%f321, %f195, %f321, %p2;
	selp.f32 	%f336, %f194, %f336, %p2;
	selp.f32 	%f335, %f193, %f335, %p2;
	selp.f32 	%f334, %f192, %f334, %p2;
	selp.f32 	%f333, %f191, %f333, %p2;
	selp.f32 	%f332, %f190, %f332, %p2;
	selp.f32 	%f331, %f189, %f331, %p2;
	selp.f32 	%f330, %f188, %f330, %p2;
	selp.f32 	%f329, %f187, %f329, %p2;
	.loc	1 30 40                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:30:40
	add.s32 	%r283, %r283, 64;
	add.s32 	%r282, %r282, 262144;
	setp.lt.s32 	%p25, %r283, %r10;
	@%p25 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 23 44                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:44
	and.b32  	%r173, %r2, 63;
	.loc	1 23 23                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:23
	or.b32  	%r174, %r1, %r173;
	.loc	1 23 44                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:23:44
	and.b32  	%r175, %r2, 24;
$L__tmp1:
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r176, %f321;
	shfl.sync.bfly.b32	%r177, %r176, 16, 31, -1;
	mov.b32 	%f203, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f204, %f321, %f203;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r178, %f204;
	shfl.sync.bfly.b32	%r179, %r178, 8, 31, -1;
	mov.b32 	%f205, %r179;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f206, %f204, %f205;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r180, %f322;
	shfl.sync.bfly.b32	%r181, %r180, 16, 31, -1;
	mov.b32 	%f207, %r181;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f208, %f322, %f207;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r182, %f208;
	shfl.sync.bfly.b32	%r183, %r182, 8, 31, -1;
	mov.b32 	%f209, %r183;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f210, %f208, %f209;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r184, %f323;
	shfl.sync.bfly.b32	%r185, %r184, 16, 31, -1;
	mov.b32 	%f211, %r185;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f212, %f323, %f211;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r186, %f212;
	shfl.sync.bfly.b32	%r187, %r186, 8, 31, -1;
	mov.b32 	%f213, %r187;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f214, %f212, %f213;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r188, %f324;
	shfl.sync.bfly.b32	%r189, %r188, 16, 31, -1;
	mov.b32 	%f215, %r189;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f216, %f324, %f215;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r190, %f216;
	shfl.sync.bfly.b32	%r191, %r190, 8, 31, -1;
	mov.b32 	%f217, %r191;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f218, %f216, %f217;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r192, %f325;
	shfl.sync.bfly.b32	%r193, %r192, 16, 31, -1;
	mov.b32 	%f219, %r193;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f220, %f325, %f219;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r194, %f220;
	shfl.sync.bfly.b32	%r195, %r194, 8, 31, -1;
	mov.b32 	%f221, %r195;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f222, %f220, %f221;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r196, %f326;
	shfl.sync.bfly.b32	%r197, %r196, 16, 31, -1;
	mov.b32 	%f223, %r197;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f224, %f326, %f223;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r198, %f224;
	shfl.sync.bfly.b32	%r199, %r198, 8, 31, -1;
	mov.b32 	%f225, %r199;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f226, %f224, %f225;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r200, %f327;
	shfl.sync.bfly.b32	%r201, %r200, 16, 31, -1;
	mov.b32 	%f227, %r201;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f228, %f327, %f227;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r202, %f228;
	shfl.sync.bfly.b32	%r203, %r202, 8, 31, -1;
	mov.b32 	%f229, %r203;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f230, %f228, %f229;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r204, %f328;
	shfl.sync.bfly.b32	%r205, %r204, 16, 31, -1;
	mov.b32 	%f231, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f232, %f328, %f231;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r206, %f232;
	shfl.sync.bfly.b32	%r207, %r206, 8, 31, -1;
	mov.b32 	%f233, %r207;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f234, %f232, %f233;
	.loc	2 286 36                        // standard.py:286:36
	setp.eq.s32 	%p26, %r175, 0;
	shr.u32 	%r208, %r2, 3;
	and.b32  	%r209, %r208, 60;
	shl.b32 	%r210, %r3, 6;
	or.b32  	%r211, %r210, %r209;
	mov.u32 	%r212, global_smem;
	add.s32 	%r105, %r212, %r211;
	mov.b32 	%r106, %f206;
	// begin inline asm
	@%p26 st.shared.b32 [ %r105 + 0 ], %r106;
	// end inline asm
	add.s32 	%r107, %r105, 64;
	mov.b32 	%r108, %f210;
	// begin inline asm
	@%p26 st.shared.b32 [ %r107 + 0 ], %r108;
	// end inline asm
	add.s32 	%r109, %r105, 128;
	mov.b32 	%r110, %f214;
	// begin inline asm
	@%p26 st.shared.b32 [ %r109 + 0 ], %r110;
	// end inline asm
	add.s32 	%r111, %r105, 192;
	mov.b32 	%r112, %f218;
	// begin inline asm
	@%p26 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	or.b32  	%r213, %r210, 256;
	or.b32  	%r214, %r213, %r209;
	add.s32 	%r113, %r212, %r214;
	mov.b32 	%r114, %f222;
	// begin inline asm
	@%p26 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	add.s32 	%r115, %r105, 320;
	mov.b32 	%r116, %f226;
	// begin inline asm
	@%p26 st.shared.b32 [ %r115 + 0 ], %r116;
	// end inline asm
	add.s32 	%r117, %r105, 384;
	mov.b32 	%r118, %f230;
	// begin inline asm
	@%p26 st.shared.b32 [ %r117 + 0 ], %r118;
	// end inline asm
	add.s32 	%r119, %r105, 448;
	mov.b32 	%r120, %f234;
	// begin inline asm
	@%p26 st.shared.b32 [ %r119 + 0 ], %r120;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p34, %r2, 1024;
	shl.b32 	%r215, %r2, 2;
	add.s32 	%r122, %r212, %r215;
	// begin inline asm
	@%p34 ld.shared.b32 %r121, [ %r122 + 0 ];
	// end inline asm
	mov.b32 	%f235, %r121;
	shfl.sync.bfly.b32	%r216, %r121, 8, 31, -1;
	mov.b32 	%f236, %r216;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f237, %f235, %f236;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r217, %f237;
	shfl.sync.bfly.b32	%r218, %r217, 4, 31, -1;
	mov.b32 	%f238, %r218;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f239, %f237, %f238;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r219, %f239;
	shfl.sync.bfly.b32	%r220, %r219, 2, 31, -1;
	mov.b32 	%f240, %r220;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f241, %f239, %f240;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r221, %f241;
	shfl.sync.bfly.b32	%r222, %r221, 1, 31, -1;
	mov.b32 	%f242, %r222;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f243, %f241, %f242;
	.loc	2 286 36                        // standard.py:286:36
	and.b32  	%r223, %r2, 15;
	setp.eq.s32 	%p56, %r223, 0;
	and.pred  	%p35, %p34, %p56;
	mov.b32 	%r124, %f243;
	// begin inline asm
	@%p35 st.shared.b32 [ %r122 + 0 ], %r124;
	// end inline asm
	add.s32 	%r126, %r122, 2048;
	// begin inline asm
	@%p34 ld.shared.b32 %r125, [ %r126 + 0 ];
	// end inline asm
	mov.b32 	%f244, %r125;
	shfl.sync.bfly.b32	%r224, %r125, 8, 31, -1;
	mov.b32 	%f245, %r224;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f246, %f244, %f245;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r225, %f246;
	shfl.sync.bfly.b32	%r226, %r225, 4, 31, -1;
	mov.b32 	%f247, %r226;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f248, %f246, %f247;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r227, %f248;
	shfl.sync.bfly.b32	%r228, %r227, 2, 31, -1;
	mov.b32 	%f249, %r228;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f250, %f248, %f249;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r229, %f250;
	shfl.sync.bfly.b32	%r230, %r229, 1, 31, -1;
	mov.b32 	%f251, %r230;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f252, %f250, %f251;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r128, %f252;
	// begin inline asm
	@%p35 st.shared.b32 [ %r126 + 0 ], %r128;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r231, %r212, %r210;
	ld.shared.u32 	%r130, [%r231];
	ld.shared.u32 	%r131, [%r231+64];
	ld.shared.u32 	%r132, [%r231+128];
	ld.shared.u32 	%r133, [%r231+192];
	add.s32 	%r232, %r212, %r213;
	ld.shared.u32 	%r135, [%r232];
	ld.shared.u32 	%r136, [%r231+320];
	ld.shared.u32 	%r137, [%r231+384];
	ld.shared.u32 	%r138, [%r231+448];
$L__tmp2:
	.loc	1 65 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:65:37
	bar.sync 	0;
	mad.lo.s32 	%r129, %r3, -60, %r231;
	mov.pred 	%p38, -1;
	// begin inline asm
	@%p38 st.shared.v4.b32 [ %r129 + 0 ], { %r130, %r131, %r132, %r133 };
	// end inline asm
	add.s32 	%r134, %r129, 16;
	// begin inline asm
	@%p38 st.shared.v4.b32 [ %r134 + 0 ], { %r135, %r136, %r137, %r138 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r233, %r173, 2;
	add.s32 	%r234, %r212, %r233;
	ld.shared.f32 	%f253, [%r234];
$L__tmp3:
	.loc	2 286 36                        // standard.py:286:36
	bar.sync 	0;
	mov.b32 	%r235, %f329;
	shfl.sync.bfly.b32	%r236, %r235, 16, 31, -1;
	mov.b32 	%f254, %r236;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f255, %f329, %f254;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r237, %f255;
	shfl.sync.bfly.b32	%r238, %r237, 8, 31, -1;
	mov.b32 	%f256, %r238;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f257, %f255, %f256;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r239, %f330;
	shfl.sync.bfly.b32	%r240, %r239, 16, 31, -1;
	mov.b32 	%f258, %r240;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f259, %f330, %f258;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r241, %f259;
	shfl.sync.bfly.b32	%r242, %r241, 8, 31, -1;
	mov.b32 	%f260, %r242;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f261, %f259, %f260;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r243, %f331;
	shfl.sync.bfly.b32	%r244, %r243, 16, 31, -1;
	mov.b32 	%f262, %r244;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f263, %f331, %f262;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r245, %f263;
	shfl.sync.bfly.b32	%r246, %r245, 8, 31, -1;
	mov.b32 	%f264, %r246;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f265, %f263, %f264;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r247, %f332;
	shfl.sync.bfly.b32	%r248, %r247, 16, 31, -1;
	mov.b32 	%f266, %r248;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f267, %f332, %f266;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r249, %f267;
	shfl.sync.bfly.b32	%r250, %r249, 8, 31, -1;
	mov.b32 	%f268, %r250;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f269, %f267, %f268;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r251, %f333;
	shfl.sync.bfly.b32	%r252, %r251, 16, 31, -1;
	mov.b32 	%f270, %r252;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f271, %f333, %f270;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r253, %f271;
	shfl.sync.bfly.b32	%r254, %r253, 8, 31, -1;
	mov.b32 	%f272, %r254;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f273, %f271, %f272;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r255, %f334;
	shfl.sync.bfly.b32	%r256, %r255, 16, 31, -1;
	mov.b32 	%f274, %r256;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f275, %f334, %f274;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r257, %f275;
	shfl.sync.bfly.b32	%r258, %r257, 8, 31, -1;
	mov.b32 	%f276, %r258;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f277, %f275, %f276;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r259, %f335;
	shfl.sync.bfly.b32	%r260, %r259, 16, 31, -1;
	mov.b32 	%f278, %r260;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f279, %f335, %f278;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r261, %f279;
	shfl.sync.bfly.b32	%r262, %r261, 8, 31, -1;
	mov.b32 	%f280, %r262;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f281, %f279, %f280;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r263, %f336;
	shfl.sync.bfly.b32	%r264, %r263, 16, 31, -1;
	mov.b32 	%f282, %r264;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f283, %f336, %f282;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r265, %f283;
	shfl.sync.bfly.b32	%r266, %r265, 8, 31, -1;
	mov.b32 	%f284, %r266;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f285, %f283, %f284;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r140, %f257;
	// begin inline asm
	@%p26 st.shared.b32 [ %r105 + 0 ], %r140;
	// end inline asm
	mov.b32 	%r142, %f261;
	// begin inline asm
	@%p26 st.shared.b32 [ %r107 + 0 ], %r142;
	// end inline asm
	mov.b32 	%r144, %f265;
	// begin inline asm
	@%p26 st.shared.b32 [ %r109 + 0 ], %r144;
	// end inline asm
	mov.b32 	%r146, %f269;
	// begin inline asm
	@%p26 st.shared.b32 [ %r111 + 0 ], %r146;
	// end inline asm
	mov.b32 	%r148, %f273;
	// begin inline asm
	@%p26 st.shared.b32 [ %r113 + 0 ], %r148;
	// end inline asm
	mov.b32 	%r150, %f277;
	// begin inline asm
	@%p26 st.shared.b32 [ %r115 + 0 ], %r150;
	// end inline asm
	mov.b32 	%r152, %f281;
	// begin inline asm
	@%p26 st.shared.b32 [ %r117 + 0 ], %r152;
	// end inline asm
	mov.b32 	%r154, %f285;
	// begin inline asm
	@%p26 st.shared.b32 [ %r119 + 0 ], %r154;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p34 ld.shared.b32 %r155, [ %r122 + 0 ];
	// end inline asm
	mov.b32 	%f286, %r155;
	shfl.sync.bfly.b32	%r267, %r155, 8, 31, -1;
	mov.b32 	%f287, %r267;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f288, %f286, %f287;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r268, %f288;
	shfl.sync.bfly.b32	%r269, %r268, 4, 31, -1;
	mov.b32 	%f289, %r269;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f290, %f288, %f289;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r270, %f290;
	shfl.sync.bfly.b32	%r271, %r270, 2, 31, -1;
	mov.b32 	%f291, %r271;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f292, %f290, %f291;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r272, %f292;
	shfl.sync.bfly.b32	%r273, %r272, 1, 31, -1;
	mov.b32 	%f293, %r273;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f294, %f292, %f293;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r158, %f294;
	// begin inline asm
	@%p35 st.shared.b32 [ %r122 + 0 ], %r158;
	// end inline asm
	// begin inline asm
	@%p34 ld.shared.b32 %r159, [ %r126 + 0 ];
	// end inline asm
	mov.b32 	%f295, %r159;
	shfl.sync.bfly.b32	%r274, %r159, 8, 31, -1;
	mov.b32 	%f296, %r274;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f297, %f295, %f296;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r275, %f297;
	shfl.sync.bfly.b32	%r276, %r275, 4, 31, -1;
	mov.b32 	%f298, %r276;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f299, %f297, %f298;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r277, %f299;
	shfl.sync.bfly.b32	%r278, %r277, 2, 31, -1;
	mov.b32 	%f300, %r278;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f301, %f299, %f300;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r279, %f301;
	shfl.sync.bfly.b32	%r280, %r279, 1, 31, -1;
	mov.b32 	%f302, %r280;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f303, %f301, %f302;
	.loc	2 286 36                        // standard.py:286:36
	mov.b32 	%r162, %f303;
	// begin inline asm
	@%p35 st.shared.b32 [ %r126 + 0 ], %r162;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r164, [%r231];
	ld.shared.u32 	%r165, [%r231+64];
	ld.shared.u32 	%r166, [%r231+128];
	ld.shared.u32 	%r167, [%r231+192];
	ld.shared.u32 	%r169, [%r232];
	ld.shared.u32 	%r170, [%r231+320];
	ld.shared.u32 	%r171, [%r231+384];
	ld.shared.u32 	%r172, [%r231+448];
$L__tmp4:
	.loc	1 66 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:37
	bar.sync 	0;
	// begin inline asm
	@%p38 st.shared.v4.b32 [ %r129 + 0 ], { %r164, %r165, %r166, %r167 };
	// end inline asm
	// begin inline asm
	@%p38 st.shared.v4.b32 [ %r134 + 0 ], { %r169, %r170, %r171, %r172 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f304, [%r234];
	.loc	1 65 25                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:65:25
	mul.wide.s32 	%rd39, %r174, 2;
	add.s64 	%rd37, %rd10, %rd39;
	.loc	1 65 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:65:37
	cvt.rn.f16.f32 	%rs57, %f253;
	and.b32  	%r281, %r2, 448;
	setp.eq.s32 	%p54, %r281, 0;
	// begin inline asm
	@%p54 st.global.b16 [ %rd37 + 0 ], { %rs57 };
	// end inline asm
	.loc	1 66 25                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:25
	add.s64 	%rd38, %rd11, %rd39;
	.loc	1 66 37                         // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:37
	cvt.rn.f16.f32 	%rs58, %f304;
	// begin inline asm
	@%p54 st.global.b16 [ %rd38 + 0 ], { %rs58 };
	// end inline asm
	.loc	1 66 4                          // cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/tmp/torchinductor_root/z4/cz4raaxbxby7dltdikbrpmyoxvbaywto5wc2t7rus6zhnzkqrtmy.py"
	.file	2 "/workspace/torch-compile-caching/.venv/lib/python3.11/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 52
.b8 114
.b8 97
.b8 97
.b8 120
.b8 98
.b8 120
.b8 98
.b8 121
.b8 55
.b8 100
.b8 108
.b8 116
.b8 100
.b8 105
.b8 107
.b8 98
.b8 114
.b8 112
.b8 109
.b8 121
.b8 111
.b8 120
.b8 118
.b8 98
.b8 97
.b8 121
.b8 119
.b8 116
.b8 111
.b8 53
.b8 119
.b8 99
.b8 50
.b8 116
.b8 55
.b8 114
.b8 117
.b8 115
.b8 54
.b8 122
.b8 104
.b8 110
.b8 122
.b8 107
.b8 113
.b8 114
.b8 116
.b8 109
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 122
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x6c:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 108                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 108                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
